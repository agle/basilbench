00034b5f: program
000343e8: sub __ctype_b_loc(__ctype_b_loc_result)
00034b60: __ctype_b_loc_result :: out u32 = low:32[R0]

00016e62:
0002ffcc: R16 := 0x430000
0002ffd3: R17 := mem[R16 + 0x1D8, el]:u64
0002ffd9: R16 := R16 + 0x1D8
0002ffde: call R17 with noreturn

000343e9: sub __ctype_tolower_loc(__ctype_tolower_loc_result)
00034b61: __ctype_tolower_loc_result :: out u32 = low:32[R0]

00010308:
0002fc72: R16 := 0x430000
0002fc79: R17 := mem[R16 + 0xA0, el]:u64
0002fc7f: R16 := R16 + 0xA0
0002fc84: call R17 with noreturn

000343ea: sub __ctype_toupper_loc(__ctype_toupper_loc_result)
00034b62: __ctype_toupper_loc_result :: out u32 = low:32[R0]

000103d1:
0002fe56: R16 := 0x430000
0002fe5d: R17 := mem[R16 + 0x150, el]:u64
0002fe63: R16 := R16 + 0x150
0002fe68: call R17 with noreturn

000343eb: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00034b63: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0002cc24:
0002cc28: #1397 := R31 - 0x20
0002cc2e: mem := mem with [#1397, el]:u64 <- R29
0002cc34: mem := mem with [#1397 + 8, el]:u64 <- R30
0002cc38: R31 := #1397
0002cc3e: R29 := R31
0002cc46: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002cc4b: R19 := 0x430000
0002cc52: R0 := pad:64[mem[R19 + 0x368]]
0002cc58: when 0:0[R0] goto %0002cc56
000343ec: goto %0002d2af

0002d2af:
0002d2b2: R30 := 0x404AEC
0002d2b4: call @deregister_tm_clones with return %0002d2b6

0002d2b6:
0002d2b9: R0 := 1
0002d2c1: mem := mem with [R19 + 0x368] <- 7:0[R0]
000343ed: goto %0002cc56

0002cc56:
0002cc60: R19 := mem[R31 + 0x10, el]:u64
0002cc67: R29 := mem[R31, el]:u64
0002cc6c: R30 := mem[R31 + 8, el]:u64
0002cc70: R31 := R31 + 0x20
0002cc75: call R30 with noreturn

000343ee: sub __errno_location(__errno_location_result)
00034b64: __errno_location_result :: out u64 = R0

00010a48:
00030260: R16 := 0x430000
00030267: R17 := mem[R16 + 0x2C8, el]:u64
0003026d: R16 := R16 + 0x2C8
00030272: call R17 with noreturn

000343ef: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00034b65: __libc_start_main_main :: in u64 = R0
00034b66: __libc_start_main_arg2 :: in u32 = low:32[R1]
00034b67: __libc_start_main_arg3 :: in out u64 = R2
00034b68: __libc_start_main_auxv :: in out u64 = R3
00034b69: __libc_start_main_result :: out u32 = low:32[R0]

0002cb70:
0002fb6a: R16 := 0x430000
0002fb71: R17 := mem[R16 + 0x40, el]:u64
0002fb77: R16 := R16 + 0x40
0002fb7c: call R17 with noreturn

000343f0: sub __posix_getopt(__posix_getopt_result)
00034b6a: __posix_getopt_result :: out u32 = low:32[R0]

0002b3c4:
0002fdbc: R16 := 0x430000
0002fdc3: R17 := mem[R16 + 0x118, el]:u64
0002fdc9: R16 := R16 + 0x118
0002fdce: call R17 with noreturn

000343f1: sub _dl_relocate_static_pie(_dl_relocate_static_pie_result)
00034b6b: _dl_relocate_static_pie_result :: out u32 = low:32[R0]

0002cb84:
0002cb87: call R30 with noreturn

000343f2: sub _fini(_fini_result)
00034b6c: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

000343f3: sub _init(_init_result)
00034b6d: _init_result :: out u32 = low:32[R0]

00030354:
0003035a: #1454 := R31 - 0x10
00030360: mem := mem with [#1454, el]:u64 <- R29
00030366: mem := mem with [#1454 + 8, el]:u64 <- R30
0003036a: R31 := #1454
00030370: R29 := R31
00030375: R30 := 0x402070
00030377: call @call_weak_fn with return %00030379

00030379:
0003037e: R29 := mem[R31, el]:u64
00030383: R30 := mem[R31 + 8, el]:u64
00030387: R31 := R31 + 0x10
0003038c: call R30 with noreturn

000343f4: sub _start(_start_result)
00034b6e: _start_result :: out u32 = low:32[R0]

0002cb32:
0002cb37: R29 := 0
0002cb3c: R30 := 0
0002cb42: R5 := R0
0002cb49: R1 := mem[R31, el]:u64
0002cb4f: R2 := R31 + 8
0002cb55: R6 := R31
0002cb5a: R0 := 0x404000
0002cb60: R0 := R0 + 0xA34
0002cb65: R3 := 0
0002cb6a: R4 := 0
0002cb6f: R30 := 0x404A30
0002cb72: call @__libc_start_main with return %0002cb74

0002cb74:
0002cb77: R30 := 0x404A34
0002cb7a: call @abort with return %0002cb7c

0002cb7c:
0002cb80: call @main with noreturn

000343f5: sub abort()


0002cb78:
0002ff06: R16 := 0x430000
0002ff0d: R17 := mem[R16 + 0x190, el]:u64
0002ff13: R16 := R16 + 0x190
0002ff18: call R17 with noreturn

000343f6: sub accept(accept_fd, accept_addr, accept_len_ptr, accept_result)
00034b6f: accept_fd :: in u32 = low:32[R0]
00034b70: accept_addr :: in u64 = R1
00034b71: accept_len_ptr :: in out u64 = R2
00034b72: accept_result :: out u32 = low:32[R0]

0002d6ae:
0002fdd2: R16 := 0x430000
0002fdd9: R17 := mem[R16 + 0x120, el]:u64
0002fddf: R16 := R16 + 0x120
0002fde4: call R17 with noreturn

000343f7: sub acl_add(acl_add_result)
00034b73: acl_add_result :: out u32 = low:32[R0]

0002cc81:
0002cc85: #1398 := R31 - 0x50
0002cc8b: mem := mem with [#1398, el]:u64 <- R29
0002cc91: mem := mem with [#1398 + 8, el]:u64 <- R30
0002cc95: R31 := #1398
0002cc9b: R29 := R31
0002cca1: #1399 := R31 + 0x10
0002cca7: mem := mem with [#1399, el]:u64 <- R19
0002ccad: mem := mem with [#1399 + 8, el]:u64 <- R20
0002ccb3: R20 := R0
0002ccba: mem := mem with [R31 + 0x40, el]:u64 <- 0
0002ccc0: when R0 = 0 goto %0002ccbe
000343f8: goto %0002d209

0002d209:
0002d20d: R0 := R1
0002d213: #1416 := R31 + 0x20
0002d219: mem := mem with [#1416, el]:u64 <- R21
0002d21f: mem := mem with [#1416 + 8, el]:u64 <- R22
0002d225: R22 := pad:64[31:0[R2]]
0002d22b: #1417 := R31 + 0x30
0002d231: mem := mem with [#1417, el]:u64 <- R23
0002d237: mem := mem with [#1417 + 8, el]:u64 <- R24
0002d23c: R30 := 0x404B3C
0002d23e: call @strdup with return %0002d240

0002d240:
0002d244: R19 := R0
0002d249: R0 := 8
0002d24e: R30 := 0x404B48
0002d250: call @zmalloc with return %0002d252

0002d252:
0002d255: R1 := 0x412000
0002d25b: R1 := R1 + 0x888
0002d261: R21 := R0
0002d267: R0 := R19
0002d26c: R30 := 0x404B5C
0002d26e: call @strcspn with return %0002d270

0002d270:
0002d274: R23 := R0
0002d279: R24 := 0x20
0002d27f: R0 := R19
0002d284: R30 := 0x404B6C
0002d286: call @strlen with return %0002d288

0002d288:
0002d28c: #1418 := ~R23
0002d291: #1419 := R0 + ~R23
0002d297: VF := extend:128[#1419 + 1] <> extend:128[R0] + extend:128[#1418] +
          1
0002d29d: CF := pad:128[#1419 + 1] <> pad:128[R0] + pad:128[#1418] + 1
0002d2a1: ZF := #1419 + 1 = 0
0002d2a5: NF := 63:63[#1419 + 1]
0002d2ab: when CF & ~ZF goto %0002d0d6
000343f9: goto %0002d199

0002d0d6:
0002d0dc: mem := mem with [R19 + R23] <- 0
0002d0e2: R24 := R23 + 1
0002d0e9: R0 := R19 + R24
0002d0ef: R1 := R31 + 0x48
0002d0f4: R2 := 0xA
0002d0f9: R30 := 0x404CA0
0002d0fb: call @strtol with return %0002d0fd

0002d0fd:
0002d101: #1412 := 31:0[R0] - 0x20
0002d106: VF := extend:64[#1412] <> extend:64[31:0[R0]] - 0x20
0002d10b: CF := pad:64[#1412] <> pad:64[31:0[R0]] + 0xFFFFFFE0
0002d10f: ZF := #1412 = 0
0002d113: NF := 31:31[#1412]
0002d11a: when CF & ~ZF goto %0002d118
000343fa: goto %0002d174

0002d174:
0002d17a: R1 := pad:64[mem[R19 + R24]]
0002d17f: when 31:0[R1] = 0 goto %0002d118
000343fb: goto %0002d183

0002d183:
0002d188: R1 := mem[R31 + 0x48, el]:u64
0002d18e: R24 := pad:64[31:0[R0]]
0002d195: R1 := pad:64[mem[R1]]
0002d19b: when 31:0[R1] = 0 goto %0002d199
000343fc: goto %0002d118

0002d118:
0002d120: R1 := 0x412000
0002d126: R2 := R19
0002d12c: R1 := R1 + 0x890
000343fd: goto %0002d12e

0002d199:
0002d1a3: R0 := pad:64[mem[R19]]
0002d1a9: #1415 := 31:0[R0] - 0x2A
0002d1ae: VF := extend:64[#1415] <> extend:64[31:0[R0]] - 0x2A
0002d1b3: CF := pad:64[#1415] <> pad:64[31:0[R0]] + 0xFFFFFFD6
0002d1b7: ZF := #1415 = 0
0002d1bb: NF := 31:31[#1415]
0002d1c0: when ZF <> 1 goto %0002cdbc
000343fe: goto %0002d1c4

0002d1c4:
0002d1c9: R1 := pad:64[mem[R19 + 1]]
0002d1cf: R3 := pad:64[~31:0[R1] + 1]
0002d1d4: when 31:0[R1] <> 0 goto %0002cdbc
000343ff: goto %0002d1d8

0002cdbc:
0002cdc0: #1404 := 31:0[R0] - 0x30
0002cdc5: VF := extend:64[#1404] <> extend:64[31:0[R0]] - 0x30
0002cdca: CF := pad:64[#1404] <> pad:64[31:0[R0]] + 0xFFFFFFD0
0002cdce: ZF := #1404 = 0
0002cdd2: NF := 31:31[#1404]
0002cdd8: when ZF <> 1 goto %0002cdd6
00034400: goto %0002d1f4

0002d1f4:
0002d1f9: R0 := pad:64[mem[R19 + 1]]
0002d1fe: when 31:0[R0] <> 0 goto %0002cdd6
00034401: goto %0002d202

0002cdd6:
0002cddf: R1 := R19
0002cde5: R0 := R31 + 0x40
0002cdea: R2 := 0
0002cdef: R30 := 0x404D18
0002cdf1: call @so_resolv with return %0002cdf3

0002cdf3:
0002cdf7: when 31:0[R0] <> 0 goto %0002cdf5
00034402: goto %0002d1df

0002d1df:
0002d1e2: R1 := 0x412000
0002d1e8: R2 := R19
0002d1ee: R1 := R1 + 0x8B0
0002d1f2: goto %0002d12e

0002d12e:
0002d131: R0 := 3
0002d136: R30 := 0x404CD4
0002d138: call @syslog with return %0002d13a

0002d13a:
0002d13e: R0 := R21
0002d143: R30 := 0x404CDC
0002d145: call @free with return %0002d147

0002d147:
0002d14b: R0 := R19
0002d150: R30 := 0x404CE4
0002d152: call @free with return %0002d154

0002d154:
0002d158: #1413 := R31 + 0x20
0002d15d: R21 := mem[#1413, el]:u64
0002d162: R22 := mem[#1413 + 8, el]:u64
0002d168: #1414 := R31 + 0x30
0002d16d: R23 := mem[#1414, el]:u64
0002d172: R24 := mem[#1414 + 8, el]:u64
00034403: goto %0002ccbe

0002ccbe:
0002ccc6: R0 := 0
00034404: goto %0002ccc8

0002d202:
0002d207: mem := mem with [R21, el]:u32 <- 0
00034405: goto %0002cdf5

0002cdf5:
0002cdfe: R3 := pad:64[31:0[R24]]
0002ce03: goto %0002ce01

0002d1d8:
0002d1dd: mem := mem with [R21, el]:u32 <- 0
00034406: goto %0002ce01

0002ce01:
0002ce09: R1 := mem[R31 + 0x40, el]:u64
0002ce0f: when R1 <> 0 goto %0002ce0d
00034407: goto %0002d031

0002ce0d:
0002ce17: R4 := pad:64[mem[R1 + 4, el]:u32]
0002ce1d: #1405 := 31:0[R4] - 2
0002ce22: VF := extend:64[#1405] <> extend:64[31:0[R4]] - 2
0002ce27: CF := pad:64[#1405] <> pad:64[31:0[R4]] + 0xFFFFFFFE
0002ce2b: ZF := #1405 = 0
0002ce2f: NF := 31:31[#1405]
0002ce35: when ZF <> 1 goto %0002ce33
00034408: goto %0002cf86

0002cf86:
0002cf8b: R24 := mem[R1 + 0x18, el]:u64
0002cf90: when R24 = 0 goto %0002ce41
00034409: goto %0002cf94

0002cf94:
0002cf97: R1 := 0x20
0002cf9e: R1 := pad:64[31:0[R1] + ~31:0[R3] + 1]
0002cfa3: R0 := 1
0002cfaa: R2 := pad:64[mem[R24 + 4, el]:u32]
0002cfb1: R0 := R0 << pad:12[5:0[R1]]
0002cfb7: R0 := pad:64[~31:0[R0] + 1]
0002cfc0: R0 := pad:64[7:0[R0].15:8[R0].23:16[R0].31:24[R0]]
0002cfc8: mem := mem with [R21, el]:u32 <- 31:0[R2]
0002cfce: mem := mem with [R21 + 4, el]:u32 <- 31:0[R3]
0002cfd4: #1410 := ~31:0[R0]
0002cfd7: VF := 0
0002cfda: CF := 0
0002cfdf: ZF := (31:0[R2] & #1410) = 0
0002cfe4: NF := 31:31[R2] & 31:31[#1410]
0002cfea: when ZF goto %0002cfe8
0003440a: goto %0002cfff

0002cfff:
0002d004: R0 := pad:64[mem[R24 + 4, el]:u32]
0002d009: R30 := 0x404BE8
0002d00b: call @inet_ntoa with return %0002d00d

0002d00d:
0002d011: R2 := R0
0002d018: R3 := pad:64[mem[R21 + 4, el]:u32]
0002d01d: R1 := 0x412000
0002d022: R0 := 4
0002d028: R1 := R1 + 0x910
0002d02d: R30 := 0x404C00
0002d02f: call @syslog with return %0002cfe8

0002cfe8:
0002cff0: when 31:0[R22] <> 0 goto %0002cced
0003440b: goto %0002cff4

0002cced:
0002ccf0: R23 := 0x412000
0002ccf6: R23 := R23 + 0x880
0002ccfb: goto %0002ccf9

0002cff4:
0002cff7: R23 := 0x412000
0002cffd: R23 := R23 + 0x878
0003440c: goto %0002ccf9

0002ccf9:
0002cd01: R0 := pad:64[mem[R24 + 4, el]:u32]
0002cd06: R30 := 0x404C14
0002cd09: call @inet_ntoa with return %0002cd0b

0002cd0b:
0002cd0f: R3 := R0
0003440d: goto %0002cd11

0002ce33:
0002ce3d: R1 := mem[R1 + 0x28, el]:u64
0002ce43: when R1 = 0 goto %0002ce41
0003440e: goto %0002ce0d

0002ce41:
0002ce4a: R2 := R19
0002ce4f: R1 := 0x412000
0002ce55: R1 := R1 + 0x8D8
0002ce5a: R0 := 3
0002ce5f: R30 := 0x404DA0
0002ce61: call @syslog with return %0002ce63

0002ce63:
0002ce67: R0 := R21
0002ce6c: R30 := 0x404DA8
0002ce6e: call @free with return %0002ce70

0002ce70:
0002ce74: R0 := R19
0002ce79: R30 := 0x404DB0
0002ce7b: call @free with return %0002ce7d

0002ce7d:
0002ce82: R0 := mem[R31 + 0x40, el]:u64
0002ce87: R30 := 0x404DB8
0002ce89: call @freeaddrinfo with return %0002ce8b

0002ce8b:
0002ce8f: #1406 := R31 + 0x20
0002ce94: R21 := mem[#1406, el]:u64
0002ce99: R22 := mem[#1406 + 8, el]:u64
0002ce9e: R0 := 0
0002cea4: #1407 := R31 + 0x30
0002cea9: R23 := mem[#1407, el]:u64
0002ceae: R24 := mem[#1407 + 8, el]:u64
0002ceb2: goto %0002ccc8

0002ccc8:
0002cccc: #1400 := R31 + 0x10
0002ccd1: R19 := mem[#1400, el]:u64
0002ccd6: R20 := mem[#1400 + 8, el]:u64
0002ccdd: R29 := mem[R31, el]:u64
0002cce2: R30 := mem[R31 + 8, el]:u64
0002cce6: R31 := R31 + 0x50
0002cceb: call R30 with noreturn

0002d031:
0002d034: goto %0002d032

0002d032:
0002d038: R1 := 0x20
0002d03f: R1 := pad:64[31:0[R1] + ~31:0[R3] + 1]
0002d044: R0 := 1
0002d04b: R2 := pad:64[mem[R21, el]:u32]
0002d052: R0 := R0 << pad:12[5:0[R1]]
0002d058: R0 := pad:64[~31:0[R0] + 1]
0002d061: R0 := pad:64[7:0[R0].15:8[R0].23:16[R0].31:24[R0]]
0002d069: mem := mem with [R21 + 4, el]:u32 <- 31:0[R3]
0002d06f: #1411 := ~31:0[R0]
0002d072: VF := 0
0002d075: CF := 0
0002d07a: ZF := (31:0[R2] & #1411) = 0
0002d07f: NF := 31:31[R2] & 31:31[#1411]
0002d085: when ZF goto %0002d083
0003440f: goto %0002d0b9

0002d0b9:
0002d0bc: R1 := 0x412000
0002d0c2: R2 := R19
0002d0c8: R1 := R1 + 0x910
0002d0cd: R0 := 4
0002d0d2: R30 := 0x404D68
0002d0d4: call @syslog with return %0002d083

0002d083:
0002d08c: when 31:0[R22] <> 0 goto %0002d08a
00034410: goto %0002d0a4

0002d08a:
0002d092: R23 := 0x412000
0002d098: R3 := R19
0002d09e: R23 := R23 + 0x880
0002d0a2: goto %0002cd11

0002d0a4:
0002d0a7: R23 := 0x412000
0002d0ad: R3 := R19
0002d0b3: R23 := R23 + 0x878
0002d0b7: goto %0002cd11

0002cd11:
0002cd16: R4 := pad:64[mem[R21 + 4, el]:u32]
0002cd1c: R2 := R23
0002cd21: R0 := 6
0002cd26: R1 := 0x412000
0002cd2c: R1 := R1 + 0x940
0002cd31: R30 := 0x404C30
0002cd33: call @syslog with return %0002cd35

0002cd35:
0002cd3a: R0 := mem[R20, el]:u64
0002cd40: R2 := R21
0002cd46: R1 := pad:64[31:0[R22]]
0002cd4b: R30 := 0x404C40
0002cd4d: call @plist_add with return %0002cd4f

0002cd4f:
0002cd55: mem := mem with [R20, el]:u64 <- R0
0002cd5b: R0 := R19
0002cd60: R30 := 0x404C4C
0002cd62: call @free with return %0002cd64

0002cd64:
0002cd69: R0 := mem[R31 + 0x40, el]:u64
0002cd6e: R30 := 0x404C54
0002cd70: call @freeaddrinfo with return %0002cd72

0002cd72:
0002cd76: #1401 := R31 + 0x10
0002cd7b: R19 := mem[#1401, el]:u64
0002cd80: R20 := mem[#1401 + 8, el]:u64
0002cd85: R0 := 1
0002cd8b: #1402 := R31 + 0x20
0002cd90: R21 := mem[#1402, el]:u64
0002cd95: R22 := mem[#1402 + 8, el]:u64
0002cd9b: #1403 := R31 + 0x30
0002cda0: R23 := mem[#1403, el]:u64
0002cda5: R24 := mem[#1403 + 8, el]:u64
0002cdac: R29 := mem[R31, el]:u64
0002cdb1: R30 := mem[R31 + 8, el]:u64
0002cdb5: R31 := R31 + 0x50
0002cdba: call R30 with noreturn

00034411: sub acl_check(acl_check_result)
00034b74: acl_check_result :: out u32 = low:32[R0]

0002ceb8:
0002cebc: R2 := R0
0002cec2: when R0 = 0 goto %0002cec0
00034412: goto %0002ced3

0002ced3:
0002ced8: R3 := pad:64[mem[R1, el]:u16]
0002cedd: R0 := 0
0002cee3: #1408 := 31:0[R3] - 2
0002cee8: VF := extend:64[#1408] <> extend:64[31:0[R3]] - 2
0002ceed: CF := pad:64[#1408] <> pad:64[31:0[R3]] + 0xFFFFFFFE
0002cef1: ZF := #1408 = 0
0002cef5: NF := 31:31[#1408]
0002cefb: when ZF goto %0002cef9
00034413: goto %0002cf81

0002cef9:
0002cf03: R5 := pad:64[mem[R1 + 4, el]:u32]
0002cf08: R4 := 0x20
0002cf0d: R3 := 1
0002cf12: goto %0002cf10

0002cf10:
0002cf18: R0 := mem[R2 + 8, el]:u64
0002cf1f: #1409 := mem[R0 + 4, el]:u32
0002cf24: R0 := pad:64[mem[R0, el]:u32]
0002cf28: R1 := pad:64[#1409]
0002cf2f: R1 := pad:64[31:0[R4] + ~31:0[R1] + 1]
0002cf36: R0 := pad:64[31:0[R5] ^ 31:0[R0]]
0002cf3d: R1 := R3 << pad:12[5:0[R1]]
0002cf43: R1 := pad:64[~31:0[R1] + 1]
0002cf4c: R1 := pad:64[7:0[R1].15:8[R1].23:16[R1].31:24[R1]]
0002cf51: VF := 0
0002cf54: CF := 0
0002cf59: ZF := (31:0[R0] & 31:0[R1]) = 0
0002cf5e: NF := 31:31[R0] & 31:31[R1]
0002cf64: when ZF <> 1 goto %0002cf62
00034414: goto %0002cf75

0002cf75:
0002cf7a: R0 := pad:64[mem[R2, el]:u32]
0002cf7f: call R30 with noreturn

0002cf62:
0002cf6c: R2 := mem[R2 + 0x10, el]:u64
0002cf71: when R2 = 0 goto %0002cec0
00034415: goto %0002cf10

0002cec0:
0002cec8: R0 := 0
0002cecd: call R30 with noreturn

0002cf81:
0002cf84: call R30 with noreturn

00034416: sub bind(bind_fd, bind_addr, bind_len, bind_result)
00034b75: bind_fd :: in u32 = low:32[R0]
00034b76: bind_addr :: in u64 = R1
00034b77: bind_len :: in u64 = R2
00034b78: bind_result :: out u32 = low:32[R0]

0001a93b:
0002fbee: R16 := 0x430000
0002fbf5: R17 := mem[R16 + 0x70, el]:u64
0002fbfb: R16 := R16 + 0x70
0002fc00: call R17 with noreturn

00034417: sub call_weak_fn(call_weak_fn_result)
00034b79: call_weak_fn_result :: out u32 = low:32[R0]

0002cb89:
0002cb8c: R0 := 0x42F000
0002cb93: R0 := mem[R0 + 0xFD8, el]:u64
0002cb99: when R0 = 0 goto %0002cb97
00034418: goto %0002d2ff

0002cb97:
0002cb9f: call R30 with noreturn

0002d2ff:
0002d302: goto @__gmon_start__

0002d300:
0002feda: R16 := 0x430000
0002fee1: R17 := mem[R16 + 0x180, el]:u64
0002fee7: R16 := R16 + 0x180
0002feec: call R17 with noreturn

00034419: sub calloc(calloc_nmemb, calloc_size, calloc_result)
00034b7a: calloc_nmemb :: in u64 = R0
00034b7b: calloc_size :: in u64 = R1
00034b7c: calloc_result :: out u64 = R0

0001028d:
0002fe14: R16 := 0x430000
0002fe1b: R17 := mem[R16 + 0x138, el]:u64
0002fe21: R16 := R16 + 0x138
0002fe26: call R17 with noreturn

0003441a: sub chdir(chdir_arg1, chdir_result)
00034b7d: chdir_arg1 :: in u64 = R0
00034b7e: chdir_result :: out u32 = low:32[R0]

0002dfc8:
00030024: R16 := 0x430000
0003002b: R17 := mem[R16 + 0x1F8, el]:u64
00030031: R16 := R16 + 0x1F8
00030036: call R17 with noreturn

0003441b: sub chunked_data_send(chunked_data_send_result)
00034b7f: chunked_data_send_result :: out u32 = low:32[R0]

0001eb64:
0001eb68: #843 := R31 - 0x70
0001eb6e: mem := mem with [#843, el]:u64 <- R29
0001eb74: mem := mem with [#843 + 8, el]:u64 <- R30
0001eb78: R31 := #843
0001eb7e: R29 := R31
0001eb84: #844 := R31 + 0x10
0001eb8a: mem := mem with [#844, el]:u64 <- R19
0001eb90: mem := mem with [#844 + 8, el]:u64 <- R20
0001eb96: R20 := pad:64[31:0[R1]]
0001eb9b: R1 := 0x1000
0001eba1: #845 := R31 + 0x20
0001eba7: mem := mem with [#845, el]:u64 <- R21
0001ebad: mem := mem with [#845 + 8, el]:u64 <- R22
0001ebb3: R21 := pad:64[31:0[R0]]
0001ebb8: R0 := 0x1000
0001ebbe: #846 := R31 + 0x30
0001ebc4: mem := mem with [#846, el]:u64 <- R23
0001ebca: mem := mem with [#846 + 8, el]:u64 <- R24
0001ebd0: R22 := R31 + 0x60
0001ebd6: R23 := R31 + 0x5C
0001ebdc: #847 := R31 + 0x40
0001ebe2: mem := mem with [#847, el]:u64 <- R25
0001ebe8: mem := mem with [#847 + 8, el]:u64 <- R26
0001ebf0: mem := mem with [R31 + 0x5C, el]:u32 <- 31:0[R1]
0001ebf7: mem := mem with [R31 + 0x68, el]:u64 <- 0
0001ebfc: R30 := 0x408E70
0001ebfe: call @zmalloc with return %0001ec00

0001ec00:
0001ec06: mem := mem with [R31 + 0x60, el]:u64 <- R0
0001ec0c: when ~31:31[R21] goto %0001ec0a
0003441c: goto %0001f3bc

0001ec0a:
0001ec13: R2 := R23
0001ec19: R1 := R22
0001ec1f: R0 := pad:64[31:0[R20]]
0001ec24: R30 := 0x408FA8
0001ec26: call @so_recvln with return %0001ec28

0001ec28:
0001ec2c: R1 := R31 + 0x68
0001ec31: R2 := 0x10
0001ec36: VF := 0
0001ec39: CF := 1
0001ec3d: ZF := 31:0[R0] = 0
0001ec41: NF := 31:31[R0]
0001ec49: when ~(NF = VF & ~ZF) goto %0001ec47
0003441d: goto %0001f0a8

0001f0a8:
0001f0ad: R0 := mem[R31 + 0x60, el]:u64
0001f0b2: R30 := 0x408FC0
0001f0b4: call @strtol with return %0001f0b6

0001f0b6:
0001f0ba: R19 := R0
0001f0bf: R30 := 0x408FC8
0001f0c1: call @__ctype_b_loc with return %0001f0c3

0001f0c3:
0001f0c8: R1 := mem[R31 + 0x68, el]:u64
0001f0cf: R0 := mem[R0, el]:u64
0001f0d6: R1 := pad:64[mem[R1]]
0001f0dc: #872 := 31:0[R1] - 0x3B
0001f0e1: VF := extend:64[#872] <> extend:64[31:0[R1]] - 0x3B
0001f0e6: CF := pad:64[#872] <> pad:64[31:0[R1]] + 0xFFFFFFC5
0001f0ea: ZF := #872 = 0
0001f0ee: NF := 31:31[#872]
0001f0f4: R1 := pad:64[7:0[R1].0]
0001f0fc: R0 := pad:64[mem[R0 + R1, el]:u16]
0001f102: R0 := pad:64[13:13[R0].0]
0001f108: #873 := ZF <> 1
0001f10b: VF := 0
0001f10f: CF := #873
0001f114: ZF := #873 & 31:0[R0] = 0
0001f119: NF := #873 & 31:31[R0]
0001f11e: when ZF goto %0001ecdd
0003441e: goto %0001f122

0001f122:
0001f127: R24 := mem[R31 + 0x60, el]:u64
0001f12d: R0 := R24
0001f132: R30 := 0x408FF8
0001f134: call @strlen with return %0001f136

0001f136:
0001f13a: R1 := R24
0001f140: R2 := R0
0001f146: R0 := pad:64[31:0[R21]]
0001f14b: R30 := 0x409008
0001f14d: call @write_wrapper with return %0001f14f

0001f14f:
0001f153: when 31:0[R19] = 0 goto %0001f151
0003441f: goto %0001f397

0001f397:
0001f399: goto %0001f27e

0001f27e:
0001f282: R2 := pad:64[31:0[R19] + 2]
0001f288: R1 := pad:64[31:0[R20]]
0001f28e: R0 := pad:64[31:0[R21]]
0001f294: R2 := extend:64[31:0[R2]]
0001f299: R30 := 0x408F94
0001f29b: call @data_send with return %0001f29d

0001f29d:
0001f2a1: when 31:0[R0] = 0 goto %0001f29f
00034420: goto %0001ec0a

0001f3bc:
0001f3c5: R2 := R23
0001f3cb: R1 := R22
0001f3d1: R0 := pad:64[31:0[R20]]
0001f3d6: R30 := 0x408E88
0001f3d8: call @so_recvln with return %0001f3da

0001f3da:
0001f3de: R1 := R31 + 0x68
0001f3e3: R2 := 0x10
0001f3e8: VF := 0
0001f3eb: CF := 1
0001f3ef: ZF := 31:0[R0] = 0
0001f3f3: NF := 31:31[R0]
0001f3fa: when ~(NF = VF & ~ZF) goto %0001ec47
00034421: goto %0001f3fe

0001ec47:
0001ec4f: R0 := 0x430000
0001ec56: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001ec5c: when 31:0[R0] <> 0 goto %0001ec5a
00034422: goto %0001ec72

0001ec5a:
0001ec62: R0 := 0x413000
0001ec68: R0 := R0 + 0x7E8
0001ec6d: R30 := 0x40909C
0001ec6f: call @puts with return %0001ec71

0001ec71:
0001ec74: goto %0001ec72

0001f3fe:
0001f403: R0 := mem[R31 + 0x60, el]:u64
0001f408: R30 := 0x408EA0
0001f40a: call @strtol with return %0001f40c

0001f40c:
0001f410: R19 := R0
0001f415: R30 := 0x408EA8
0001f417: call @__ctype_b_loc with return %0001f419

0001f419:
0001f41e: R1 := mem[R31 + 0x68, el]:u64
0001f425: R0 := mem[R0, el]:u64
0001f42c: R3 := pad:64[mem[R1]]
0001f432: #888 := 31:0[R3] - 0x3B
0001f437: VF := extend:64[#888] <> extend:64[31:0[R3]] - 0x3B
0001f43c: CF := pad:64[#888] <> pad:64[31:0[R3]] + 0xFFFFFFC5
0001f440: ZF := #888 = 0
0001f444: NF := 31:31[#888]
0001f44a: R3 := pad:64[7:0[R3].0]
0001f452: R0 := pad:64[mem[R0 + R3, el]:u16]
0001f458: R0 := pad:64[13:13[R0].0]
0001f45e: #889 := ZF <> 1
0001f461: VF := 0
0001f465: CF := #889
0001f46a: ZF := #889 & 31:0[R0] = 0
0001f46f: NF := #889 & 31:31[R0]
0001f474: when ZF goto %0001ecdd
00034423: goto %0001f478

0001ecdd:
0001ece0: R0 := 0x430000
0001ece7: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001ecec: when 31:0[R0] = 0 goto %0001ec72
00034424: goto %0001ecf0

0001ecf0:
0001ecf3: R0 := 0x413000
0001ecf9: R0 := R0 + 0x810
0001ecfe: R30 := 0x40908C
0001ed00: call @puts with return %0001ed02

0001ed02:
0001ed04: goto %0001ec72

0001f478:
0001f47b: when 31:0[R19] <> 0 goto %0001f39b
00034425: goto %0001f151

0001f39b:
0001f39f: R2 := pad:64[31:0[R19] + 2]
0001f3a5: R1 := pad:64[31:0[R20]]
0001f3ab: R0 := pad:64[31:0[R21]]
0001f3b1: R2 := extend:64[31:0[R2]]
0001f3b6: R30 := 0x409024
0001f3b8: call @data_send with return %0001f3ba

0001f3ba:
0001f3be: when 31:0[R0] <> 0 goto %0001f3bc
00034426: goto %0001f29f

0001f29f:
0001f2a7: R0 := 0x430000
0001f2ae: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001f2b3: when 31:0[R0] = 0 goto %0001ec72
00034427: goto %0001f2b7

0001f2b7:
0001f2ba: R0 := 0x413000
0001f2c0: R0 := R0 + 0x848
0001f2c5: R30 := 0x409040
0001f2c7: call @puts with return %0001f2c9

0001f2c9:
0001f2cb: goto %0001ec72

0001ec72:
0001ec7a: R0 := mem[R31 + 0x60, el]:u64
0001ec7f: R30 := 0x409058
0001ec81: call @free with return %0001ec83

0001ec83:
0001ec87: #848 := R31 + 0x10
0001ec8c: R19 := mem[#848, el]:u64
0001ec91: R20 := mem[#848 + 8, el]:u64
0001ec96: R0 := 0
0001ec9c: #849 := R31 + 0x20
0001eca1: R21 := mem[#849, el]:u64
0001eca6: R22 := mem[#849 + 8, el]:u64
0001ecac: #850 := R31 + 0x30
0001ecb1: R23 := mem[#850, el]:u64
0001ecb6: R24 := mem[#850 + 8, el]:u64
0001ecbc: #851 := R31 + 0x40
0001ecc1: R25 := mem[#851, el]:u64
0001ecc6: R26 := mem[#851 + 8, el]:u64
0001eccd: R29 := mem[R31, el]:u64
0001ecd2: R30 := mem[R31 + 8, el]:u64
0001ecd6: R31 := R31 + 0x70
0001ecdb: call R30 with noreturn

0001f151:
0001f15a: R2 := pad:64[~31:0[R21]]
0001f15f: R24 := 0
0001f164: R25 := 0
0001f16a: R19 := pad:64[31:31[R2]]
0001f16f: goto %0001f16d

0001f16d:
0001f174: R2 := R23
0001f17a: R1 := R22
0001f180: R0 := pad:64[31:0[R20]]
0001f185: R30 := 0x408F14
0001f187: call @so_recvln with return %0001f189

0001f189:
0001f18c: VF := 0
0001f18f: CF := 1
0001f193: ZF := 31:0[R0] = 0
0001f197: NF := 31:31[R0]
0001f1a5: when ~(NF = VF & ~ZF) goto %0001f19e
0001f1a6: goto %0001f1a1

0001f1a1:
0001f1a2: R26 := 1
0001f1a8: goto %0001f1a4

0001f19e:
0001f19f: R26 := 0
0001f1a7: goto %0001f1a4

0001f1a4:
0001f1ad: VF := 0
0001f1b0: CF := 1
0001f1b4: ZF := 31:0[R26] = 0
0001f1b8: NF := 31:31[R26]
0001f1be: #874 := ZF <> 1
0001f1c1: VF := 0
0001f1c5: CF := #874
0001f1ca: ZF := 31:0[R19] = 0 | ~#874
0001f1cf: NF := #874 & 31:31[R19]
0001f1d5: when ZF goto %0001f1d3
00034428: goto %0001f313

0001f313:
0001f318: R24 := mem[R31 + 0x60, el]:u64
0001f31e: R0 := R24
0001f323: R30 := 0x408F34
0001f325: call @strlen with return %0001f327

0001f327:
0001f32b: R2 := R0
0001f331: R1 := R24
0001f337: R25 := pad:64[31:0[R2]]
0001f33d: R0 := pad:64[31:0[R21]]
0001f343: R2 := extend:64[31:0[R2]]
0001f348: R30 := 0x408F4C
0001f34a: call @write_wrapper with return %0001f34c

0001f34c:
0001f34f: VF := 0
0001f352: CF := 1
0001f356: ZF := 31:0[R26] = 0
0001f35a: NF := 31:31[R26]
0001f360: R24 := pad:64[31:0[R0]]
0001f367: R0 := mem[R31 + 0x60, el]:u64
0001f36d: #885 := ~31:0[R24]
0001f372: #886 := 31:0[R25] + ~31:0[R24]
0001f376: #887 := ZF <> 1
0001f37d: VF := #887 & extend:64[#886 + 1] <> extend:64[31:0[R25]] +
          extend:64[#885] + 1
0001f384: CF := #887 & pad:64[#886 + 1] <> pad:64[31:0[R25]] + pad:64[#885] +
          1
0001f389: ZF := #887 & #886 + 1 = 0
0001f38e: NF := #887 & 31:31[#886 + 1]
0001f393: when ZF goto %0001f2cd
00034429: goto %0001f218

0001f1d3:
0001f1db: VF := 0
0001f1de: CF := 1
0001f1e2: ZF := 31:0[R26] = 0
0001f1e6: NF := 31:31[R26]
0001f1ed: R0 := mem[R31 + 0x60, el]:u64
0001f1f3: #875 := ~31:0[R24]
0001f1f8: #876 := 31:0[R25] + ~31:0[R24]
0001f1fc: #877 := ZF <> 1
0001f203: VF := #877 & extend:64[#876 + 1] <> extend:64[31:0[R25]] +
          extend:64[#875] + 1
0001f20a: CF := #877 & pad:64[#876 + 1] <> pad:64[31:0[R25]] + pad:64[#875] +
          1
0001f20f: ZF := #877 & #876 + 1 = 0
0001f214: NF := #877 & 31:31[#876 + 1]
0001f21a: when ZF <> 1 goto %0001f218
0003442a: goto %0001f2cd

0001f2cd:
0001f2d2: R1 := pad:64[mem[R0]]
0001f2d8: #882 := 31:0[R1] - 0xA
0001f2dd: VF := extend:64[#882] <> extend:64[31:0[R1]] - 0xA
0001f2e2: CF := pad:64[#882] <> pad:64[31:0[R1]] + 0xFFFFFFF6
0001f2e6: ZF := #882 = 0
0001f2ea: NF := 31:31[#882]
0001f2f0: #883 := 31:0[R1] - 0xD
0001f2f4: #884 := ZF <> 1
0001f2fa: VF := #884 & extend:64[#883] <> extend:64[31:0[R1]] - 0xD
0001f300: CF := #884 & pad:64[#883] <> pad:64[31:0[R1]] + 0xFFFFFFF3
0001f305: ZF := #883 = 0 | ~#884
0001f30a: NF := #884 & 31:31[#883]
0001f30f: when ZF goto %0001f218
0003442b: goto %0001f16d

0001f218:
0001f220: R30 := 0x408F64
0001f222: call @free with return %0001f224

0001f224:
0001f228: #878 := R31 + 0x10
0001f22d: R19 := mem[#878, el]:u64
0001f232: R20 := mem[#878 + 8, el]:u64
0001f237: R0 := 1
0001f23d: #879 := R31 + 0x20
0001f242: R21 := mem[#879, el]:u64
0001f247: R22 := mem[#879 + 8, el]:u64
0001f24d: #880 := R31 + 0x30
0001f252: R23 := mem[#880, el]:u64
0001f257: R24 := mem[#880 + 8, el]:u64
0001f25d: #881 := R31 + 0x40
0001f262: R25 := mem[#881, el]:u64
0001f267: R26 := mem[#881 + 8, el]:u64
0001f26e: R29 := mem[R31, el]:u64
0001f273: R30 := mem[R31 + 8, el]:u64
0001f277: R31 := R31 + 0x70
0001f27c: call R30 with noreturn

0003442c: sub close(close_fd, close_result)
00034b80: close_fd :: in u32 = low:32[R0]
00034b81: close_result :: out u32 = low:32[R0]

00019942:
0002fe98: R16 := 0x430000
0002fe9f: R17 := mem[R16 + 0x168, el]:u64
0002fea5: R16 := R16 + 0x168
0002feaa: call R17 with noreturn

0003442d: sub config_close(config_close_result)
00034b82: config_close_result :: out u32 = low:32[R0]

000195d5:
000195d9: when R0 = 0 goto %000195d7
0003442e: goto %0002ab99

000195d7:
000195df: call R30 with noreturn

0002ab99:
0002ab9d: #1375 := R31 - 0x20
0002aba3: mem := mem with [#1375, el]:u64 <- R29
0002aba9: mem := mem with [#1375 + 8, el]:u64 <- R30
0002abad: R31 := #1375
0002abb3: R29 := R31
0002abbb: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002abc1: R19 := R0
0002abc8: R0 := mem[R0, el]:u64
0002abcd: R30 := 0x40575C
0002abcf: call @hlist_free with return %0002abd1

0002abd1:
0002abd5: R0 := R19
0002abdc: R19 := mem[R31 + 0x10, el]:u64
0002abe3: R29 := mem[R31, el]:u64
0002abe8: R30 := mem[R31 + 8, el]:u64
0002abec: R31 := R31 + 0x20
0002abf0: call @free with noreturn

0003442f: sub config_count(config_count_result)
00034b83: config_count_result :: out u32 = low:32[R0]

000195c8:
000195cd: R0 := mem[R0, el]:u64
000195d1: call @hlist_count with noreturn

00034430: sub config_open(config_open_result)
00034b84: config_open_result :: out u32 = low:32[R0]

00017325:
00017328: R2 := 0x6C67
0001732e: #384 := R31 - 0x90
00017334: mem := mem with [#384, el]:u64 <- R29
0001733a: mem := mem with [#384 + 8, el]:u64 <- R30
0001733e: R31 := #384
00017345: R2 := 63:32[R2].0x626F.15:0[R2]
0001734c: R2 := 63:48[R2].0x6C61.31:0[R2]
00017351: R3 := 0
00017357: R29 := R31
0001735c: R1 := 0x412000
00017362: R1 := R1 + 0xA40
00017368: #385 := R31 + 0x20
0001736e: mem := mem with [#385, el]:u64 <- R21
00017374: mem := mem with [#385 + 8, el]:u64 <- R22
0001737a: #386 := R31 + 0x58
00017380: mem := mem with [#386, el]:u64 <- R2
00017386: mem := mem with [#386 + 8, el]:u64 <- R3
0001738c: #387 := R31 + 0x68
00017391: mem := mem with [#387, el]:u64 <- 0
00017396: mem := mem with [#387 + 8, el]:u64 <- 0
0001739c: #388 := R31 + 0x78
000173a1: mem := mem with [#388, el]:u64 <- 0
000173a6: mem := mem with [#388 + 8, el]:u64 <- 0
000173ad: mem := mem with [R31 + 0x88, el]:u16 <- 0
000173b2: R30 := 0x405328
000173b4: call @fopen with return %000173b6

000173b6:
000173ba: when R0 = 0 goto %000173b8
00034431: goto %0002ac1b

000173b8:
000173c0: R21 := 0
000173c5: goto %000173c3

0002ac1b:
0002ac1f: #1376 := R31 + 0x10
0002ac25: mem := mem with [#1376, el]:u64 <- R19
0002ac2b: mem := mem with [#1376 + 8, el]:u64 <- R20
0002ac31: R20 := R0
0002ac36: R0 := 0x1000
0002ac3c: #1377 := R31 + 0x30
0002ac42: mem := mem with [#1377, el]:u64 <- R23
0002ac48: mem := mem with [#1377 + 8, el]:u64 <- R24
0002ac4d: R22 := 0x23
0002ac55: mem := mem with [R31 + 0x40, el]:u64 <- R25
0002ac5a: R30 := 0x405348
0002ac5c: call @zmalloc with return %0002ac5e

0002ac5e:
0002ac62: R19 := R0
0002ac67: R0 := 8
0002ac6c: R30 := 0x405354
0002ac6e: call @zmalloc with return %0002ac70

0002ac70:
0002ac74: R21 := R0
0002ac7b: mem := mem with [R0, el]:u64 <- 0
00034432: goto %00017400

00017400:
00017409: R0 := R20
0001740e: R30 := 0x405368
00017410: call @feof with return %00017412

00017412:
00017416: when 31:0[R0] <> 0 goto %00017414
00034433: goto %0001745a

0001745a:
0001745e: R2 := R20
00017464: R0 := R19
00017469: R1 := 0x1000
0001746e: R30 := 0x40537C
00017471: call @fgets with return %00017473

00017473:
00017476: when R0 = 0 goto %00017414
00034434: goto %0001747a

0001747a:
0001747e: R0 := R19
00017483: R30 := 0x405388
00017485: call @strlen with return %00017487

00017487:
0001748b: #392 := R0 - 0x1000
00017490: VF := extend:128[#392] <> extend:128[R0] - 0x1000
00017495: CF := pad:128[#392] <> pad:128[R0] + 0xFFFFFFFFFFFFF000
00017499: ZF := #392 = 0
0001749d: NF := 63:63[#392]
000174a3: when CF & ~ZF goto %000173f1
00034435: goto %000174a7

000173f1:
000173f5: R0 := R20
000173fa: R30 := 0x40552C
000173fc: call @feof with return %000173fe

000173fe:
00017402: when 31:0[R0] <> 0 goto %00017400
00034436: goto %000194c9

000194c9:
000194cc: R23 := 0x1000
000194d0: goto %000174c8

000174a7:
000174ab: R23 := pad:64[31:0[R0]]
000174b0: when 31:0[R0] = 0 goto %00017400
00034437: goto %000174b4

000174b4:
000174b8: R0 := R20
000174bd: R30 := 0x4053A0
000174bf: call @feof with return %000174c1

000174c1:
000174c4: when 31:0[R0] <> 0 goto %00017400
00034438: goto %000174c8

000174c8:
000174cb: R30 := 0x4053A8
000174cd: call @__ctype_b_loc with return %000174cf

000174cf:
000174d3: R25 := R0
000174da: R3 := mem[R0, el]:u64
000174e0: R5 := extend:64[31:0[R23]]
000174e5: R1 := 0
000174ea: goto %000174e8

000174e8:
000174f1: R2 := pad:64[mem[R19 + R1]]
000174f7: R4 := pad:64[31:0[R1]]
000174ff: R2 := pad:64[mem[R3 + (62:0[R2].0), el]:u16]
00017505: when 13:13[R2] goto %00017503
00034439: goto %0001753b

00017503:
0001750c: R1 := R1 + 1
00017512: #393 := ~R5
00017517: #394 := R1 + ~R5
0001751d: VF := extend:128[#394 + 1] <> extend:128[R1] + extend:128[#393] + 1
00017523: CF := pad:128[#394 + 1] <> pad:128[R1] + pad:128[#393] + 1
00017527: ZF := #394 + 1 = 0
0001752b: NF := 63:63[#394 + 1]
00017531: when ZF goto %0001752f
0003443a: goto %000174e8

0001752f:
00017538: R1 := pad:64[31:0[R4] + 1]
0001753d: goto %0001753b

0001753b:
00017542: #395 := ~31:0[R1]
00017547: #396 := 31:0[R23] + ~31:0[R1]
0001754d: VF := extend:64[#396 + 1] <> extend:64[31:0[R23]] + extend:64[#395]
          + 1
00017553: CF := pad:64[#396 + 1] <> pad:64[31:0[R23]] + pad:64[#395] + 1
00017557: ZF := #396 + 1 = 0
0001755b: NF := 31:31[#396 + 1]
00017562: when ~(NF = VF & ~ZF) goto %00017400
0003443b: goto %00017566

00017566:
0001756c: R0 := pad:64[mem[R19 + extend:64[31:0[R1]]]]
00017572: R2 := extend:64[31:0[R1]]
00017578: #397 := 31:0[R0] - 0x3B
0001757d: VF := extend:64[#397] <> extend:64[31:0[R0]] - 0x3B
00017582: CF := pad:64[#397] <> pad:64[31:0[R0]] + 0xFFFFFFC5
00017586: ZF := #397 = 0
0001758a: NF := 31:31[#397]
00017590: #398 := ~31:0[R22]
00017595: #399 := 31:0[R0] + ~31:0[R22]
00017599: #400 := ZF <> 1
000175a0: VF := #400 & extend:64[#399 + 1] <> extend:64[31:0[R0]] +
          extend:64[#398] + 1
000175a7: CF := #400 & pad:64[#399 + 1] <> pad:64[31:0[R0]] + pad:64[#398] +
          1
000175ac: ZF := #399 + 1 = 0 | ~#400
000175b1: NF := #400 & 31:31[#399 + 1]
000175b6: when ZF goto %00017400
0003443c: goto %000175ba

000175ba:
000175bd: goto %000175bb

000175bb:
000175c4: R4 := pad:64[mem[R19 + R2]]
000175ca: R0 := pad:64[31:0[R2]]
000175d2: R4 := pad:64[mem[R3 + (62:0[R4].0), el]:u16]
000175d8: when 3:3[R4] goto %000175d6
0003443d: goto %00017610

000175d6:
000175df: R2 := R2 + 1
000175e5: #401 := ~31:0[R2]
000175ea: #402 := 31:0[R23] + ~31:0[R2]
000175f0: VF := extend:64[#402 + 1] <> extend:64[31:0[R23]] + extend:64[#401]
          + 1
000175f6: CF := pad:64[#402 + 1] <> pad:64[31:0[R23]] + pad:64[#401] + 1
000175fa: ZF := #402 + 1 = 0
000175fe: NF := 31:31[#402 + 1]
00017606: when ~(NF = VF & ~ZF) goto %00017604
0003443e: goto %000175bb

00017604:
0001760d: R2 := pad:64[31:0[R0] + 1]
00017612: goto %00017610

00017610:
00017617: #403 := ~31:0[R2]
0001761c: #404 := 31:0[R23] + ~31:0[R2]
00017622: VF := extend:64[#404 + 1] <> extend:64[31:0[R23]] + extend:64[#403]
          + 1
00017628: CF := pad:64[#404 + 1] <> pad:64[31:0[R23]] + pad:64[#403] + 1
0001762c: ZF := #404 + 1 = 0
00017630: NF := 31:31[#404 + 1]
00017637: when ~(NF = VF & ~ZF) goto %00017400
0003443f: goto %0001763b

0001763b:
00017641: R0 := pad:64[mem[R19 + extend:64[31:0[R2]]]]
00017647: R24 := extend:64[31:0[R2]]
0001764d: #405 := 31:0[R0] - 0x5B
00017652: VF := extend:64[#405] <> extend:64[31:0[R0]] - 0x5B
00017657: CF := pad:64[#405] <> pad:64[31:0[R0]] + 0xFFFFFFA5
0001765b: ZF := #405 = 0
0001765f: NF := 31:31[#405]
00017665: when ZF goto %00017663
00034440: goto %00019459

00017663:
0001766c: R2 := pad:64[31:0[R2] + 1]
00017672: #406 := ~31:0[R2]
00017677: #407 := 31:0[R23] + ~31:0[R2]
0001767d: VF := extend:64[#407 + 1] <> extend:64[31:0[R23]] + extend:64[#406]
          + 1
00017683: CF := pad:64[#407 + 1] <> pad:64[31:0[R23]] + pad:64[#406] + 1
00017687: ZF := #407 + 1 = 0
0001768b: NF := 31:31[#407 + 1]
00017692: when ~(NF = VF & ~ZF) goto %00017400
00034441: goto %00017696

00017696:
0001769a: R1 := extend:64[31:0[R2]]
0001769f: goto %0001769d

0001769d:
000176a6: R0 := pad:64[mem[R19 + R1]]
000176ac: R2 := pad:64[31:0[R1]]
000176b4: R0 := pad:64[mem[R3 + (62:0[R0].0), el]:u16]
000176ba: when 13:13[R0] goto %000176b8
00034442: goto %000176f2

000176b8:
000176c1: R1 := R1 + 1
000176c7: #408 := ~31:0[R1]
000176cc: #409 := 31:0[R23] + ~31:0[R1]
000176d2: VF := extend:64[#409 + 1] <> extend:64[31:0[R23]] + extend:64[#408]
          + 1
000176d8: CF := pad:64[#409 + 1] <> pad:64[31:0[R23]] + pad:64[#408] + 1
000176dc: ZF := #409 + 1 = 0
000176e0: NF := 31:31[#409 + 1]
000176e8: when ~(NF = VF & ~ZF) goto %000176e6
00034443: goto %0001769d

000176e6:
000176ef: R1 := pad:64[31:0[R2] + 1]
000176f4: goto %000176f2

000176f2:
000176f9: #410 := ~31:0[R1]
000176fe: #411 := 31:0[R23] + ~31:0[R1]
00017704: VF := extend:64[#411 + 1] <> extend:64[31:0[R23]] + extend:64[#410]
          + 1
0001770a: CF := pad:64[#411 + 1] <> pad:64[31:0[R23]] + pad:64[#410] + 1
0001770e: ZF := #411 + 1 = 0
00017712: NF := 31:31[#411 + 1]
00017719: when ~(NF = VF & ~ZF) goto %00017400
00034444: goto %0001771d

0001771d:
00017721: R6 := extend:64[31:0[R1]]
00017728: R23 := pad:64[31:0[R23] + ~31:0[R1] + 1]
0001772e: R2 := R6
00017733: R4 := 1
00017738: goto %00017736

00017736:
0001773f: R0 := pad:64[mem[R19 + R2]]
00017745: R5 := pad:64[31:0[R2]]
0001774b: #412 := 31:0[R0] - 0x5D
00017750: VF := extend:64[#412] <> extend:64[31:0[R0]] - 0x5D
00017755: CF := pad:64[#412] <> pad:64[31:0[R0]] + 0xFFFFFFA3
00017759: ZF := #412 = 0
0001775d: NF := 31:31[#412]
00017763: when ZF <> 1 goto %00017761
00034445: goto %00017827

00017827:
0001782c: R1 := pad:64[31:0[R2] + ~31:0[R1] + 1]
00034446: goto %00017789

00017761:
0001776a: R0 := pad:64[7:0[R0].0]
00017770: R2 := R2 + 1
00017778: R0 := pad:64[mem[R3 + R0, el]:u16]
0001777e: when 13:13[R0] goto %0001777c
00034447: goto %000177dc

0001777c:
00017786: R1 := pad:64[31:0[R5] + ~31:0[R1] + 1]
0001778b: goto %00017789

000177dc:
000177e0: #413 := ~31:0[R23]
000177e5: #414 := 31:0[R4] + ~31:0[R23]
000177eb: VF := extend:64[#414 + 1] <> extend:64[31:0[R4]] + extend:64[#413]
          + 1
000177f1: CF := pad:64[#414 + 1] <> pad:64[31:0[R4]] + pad:64[#413] + 1
000177f5: ZF := #414 + 1 = 0
000177f9: NF := 31:31[#414 + 1]
000177fe: when ZF goto %000177d2
00034448: goto %00017802

000177d2:
000177d6: R1 := pad:64[31:0[R4]]
000177da: goto %00017789

00017789:
0001778f: VF := 0
00017792: CF := 1
00017796: ZF := 31:0[R1] = 0
0001779a: NF := 31:31[R1]
000177a1: when ~(NF = VF & ~ZF) goto %00017400
00034449: goto %000177a5

00017802:
00017806: R4 := pad:64[31:0[R4] + 1]
0001780c: #415 := 31:0[R4] - 0x32
00017811: VF := extend:64[#415] <> extend:64[31:0[R4]] - 0x32
00017816: CF := pad:64[#415] <> pad:64[31:0[R4]] + 0xFFFFFFCE
0001781a: ZF := #415 = 0
0001781e: NF := 31:31[#415]
00017823: when ZF goto %000177c9
0003444a: goto %00017736

000177c9:
000177cc: R1 := 0x31
000177d0: goto %000177a5

000177a5:
000177a9: R2 := pad:64[31:0[R1] + 1]
000177af: R0 := R31 + 0x58
000177b6: R1 := R19 + R6
000177bc: R2 := extend:64[31:0[R2]]
000177c1: R30 := 0x4055E0
000177c3: call @strlcpy with return %000177c5

000177c5:
000177c7: goto %00017400

00019459:
0001945e: R2 := pad:64[31:0[R2] + ~31:0[R1] + 1]
00019464: R0 := R19
00019469: R30 := 0x405438
0001946b: call @substr with return %0001946d

0001946d:
00019472: R2 := mem[R25, el]:u64
00019478: R25 := R0
0001947d: goto %0001947b

0001947b:
00019484: R1 := pad:64[mem[R19 + R24]]
0001948a: R3 := pad:64[31:0[R24]]
00019492: R1 := pad:64[mem[R2 + (62:0[R1].0), el]:u16]
00019498: when 13:13[R1] goto %00019496
0003444b: goto %00019260

00019496:
0001949f: R24 := R24 + 1
000194a5: #532 := ~31:0[R24]
000194aa: #533 := 31:0[R23] + ~31:0[R24]
000194b0: VF := extend:64[#533 + 1] <> extend:64[31:0[R23]] + extend:64[#532]
          + 1
000194b6: CF := pad:64[#533 + 1] <> pad:64[31:0[R23]] + pad:64[#532] + 1
000194ba: ZF := #533 + 1 = 0
000194be: NF := 31:31[#533 + 1]
000194c5: when ~(NF = VF & ~ZF) goto %00019259
0003444c: goto %0001947b

00019259:
0001925d: R24 := pad:64[31:0[R3] + 1]
00019262: goto %00019260

00019260:
00019267: #517 := ~31:0[R24]
0001926c: #518 := 31:0[R23] + ~31:0[R24]
00019272: VF := extend:64[#518 + 1] <> extend:64[31:0[R23]] + extend:64[#517]
          + 1
00019278: CF := pad:64[#518 + 1] <> pad:64[31:0[R23]] + pad:64[#517] + 1
0001927c: ZF := #518 + 1 = 0
00019280: NF := 31:31[#518 + 1]
00019288: when ~(NF = VF & ~ZF) goto %00019286
0003444d: goto %00019366

00019366:
0001936c: R0 := pad:64[mem[R19 + extend:64[31:0[R24]]]]
00019371: R1 := 0x23
00019377: #525 := 31:0[R0] - 0x3B
0001937c: VF := extend:64[#525] <> extend:64[31:0[R0]] - 0x3B
00019381: CF := pad:64[#525] <> pad:64[31:0[R0]] + 0xFFFFFFC5
00019385: ZF := #525 = 0
00019389: NF := 31:31[#525]
0001938f: #526 := ~31:0[R1]
00019394: #527 := 31:0[R0] + ~31:0[R1]
00019398: #528 := ZF <> 1
0001939f: VF := #528 & extend:64[#527 + 1] <> extend:64[31:0[R0]] +
          extend:64[#526] + 1
000193a6: CF := #528 & pad:64[#527 + 1] <> pad:64[31:0[R0]] + pad:64[#526] +
          1
000193ab: ZF := #527 + 1 = 0 | ~#528
000193b0: NF := #528 & 31:31[#527 + 1]
000193b5: when ZF goto %00019286
0003444e: goto %000193b9

000193b9:
000193bd: #529 := 31:0[R0] - 0x22
000193c2: VF := extend:64[#529] <> extend:64[31:0[R0]] - 0x22
000193c7: CF := pad:64[#529] <> pad:64[31:0[R0]] + 0xFFFFFFDE
000193cb: ZF := #529 = 0
000193cf: NF := 31:31[#529]
000193d4: when ZF goto %0001929c
0003444f: goto %000193d8

0001929c:
000192a0: R1 := pad:64[31:0[R24] + 1]
000192a6: #519 := ~31:0[R1]
000192ab: #520 := 31:0[R23] + ~31:0[R1]
000192b1: VF := extend:64[#520 + 1] <> extend:64[31:0[R23]] + extend:64[#519]
          + 1
000192b7: CF := pad:64[#520 + 1] <> pad:64[31:0[R23]] + pad:64[#519] + 1
000192bb: ZF := #520 + 1 = 0
000192bf: NF := 31:31[#520 + 1]
000192c6: when ~(NF = VF & ~ZF) goto %00019286
00034450: goto %000192ca

000192ca:
000192d0: R0 := pad:64[mem[R19 + extend:64[31:0[R1]]]]
000192d6: #521 := 31:0[R0] - 0x22
000192db: VF := extend:64[#521] <> extend:64[31:0[R0]] - 0x22
000192e0: CF := pad:64[#521] <> pad:64[31:0[R0]] + 0xFFFFFFDE
000192e4: ZF := #521 = 0
000192e8: NF := 31:31[#521]
000192ed: when ZF goto %0001921e
00034451: goto %000192f1

0001921e:
00019222: R2 := pad:64[31:0[R1]]
00019227: goto %00019225

000192f1:
000192f5: R24 := pad:64[31:0[R24] + 2]
000192fb: R4 := R19 - 1
00019301: R2 := extend:64[31:0[R24]]
00034452: goto %00019305

00019305:
00019309: R3 := R2
0001930f: R2 := R2 + 1
00019317: R0 := pad:64[mem[R4 + R2]]
0001931d: #522 := 31:0[R0] - 0x22
00019322: VF := extend:64[#522] <> extend:64[31:0[R0]] - 0x22
00019327: CF := pad:64[#522] <> pad:64[31:0[R0]] + 0xFFFFFFDE
0001932b: ZF := #522 = 0
0001932f: NF := 31:31[#522]
00019334: when ZF <> 1 goto %00019305
00034453: goto %00019338

00019338:
0001933c: R2 := pad:64[31:0[R3]]
00019342: #523 := ~31:0[R3]
00019347: #524 := 31:0[R23] + ~31:0[R3]
0001934d: VF := extend:64[#524 + 1] <> extend:64[31:0[R23]] + extend:64[#523]
          + 1
00019353: CF := pad:64[#524 + 1] <> pad:64[31:0[R23]] + pad:64[#523] + 1
00019357: ZF := #524 + 1 = 0
0001935b: NF := 31:31[#524 + 1]
00019362: when ~(NF = VF & ~ZF) goto %00019286
00034454: goto %00019225

00019225:
0001922d: R2 := pad:64[31:0[R2] + ~31:0[R1] + 1]
00019233: R0 := R19
00019238: R30 := 0x40564C
0001923a: call @substr with return %0001923c

0001923c:
00019240: R23 := R0
00019245: goto %00019243

00019286:
0001928f: R0 := R25
00019294: R30 := 0x4055F4
00019296: call @free with return %00019298

00019298:
0001929a: goto %00017400

000193d8:
000193dd: R2 := pad:64[31:0[R23] + ~31:0[R24] + 1]
000193e3: R1 := pad:64[31:0[R24]]
000193e9: R0 := R19
000193ee: R30 := 0x405494
000193f0: call @substr with return %000193f2

000193f2:
000193f5: R1 := 0x412000
000193fb: R1 := R1 + 0xA60
00019401: R23 := R0
00019406: R30 := 0x4054A4
00019409: call @strcspn with return %0001940b

0001940b:
0001940f: R24 := R0
00019415: R0 := R23
0001941a: R30 := 0x4054B0
0001941c: call @strlen with return %0001941e

0001941e:
00019422: #530 := ~31:0[R0]
00019427: #531 := 31:0[R24] + ~31:0[R0]
0001942d: VF := extend:64[#531 + 1] <> extend:64[31:0[R24]] + extend:64[#530]
          + 1
00019433: CF := pad:64[#531 + 1] <> pad:64[31:0[R24]] + pad:64[#530] + 1
00019437: ZF := #531 + 1 = 0
0001943b: NF := 31:31[#531 + 1]
00019441: when ZF goto %0001943f
00034455: goto %00019451

00019451:
00019457: mem := mem with [R23 + extend:64[31:0[R24]]] <- 0
00034456: goto %0001943f

0001943f:
00019448: R0 := R23
0001944d: R30 := 0x4054C4
0001944f: call @trimr with return %00019243

00019243:
00019249: R0 := 0x430000
00019250: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00019255: when 31:0[R0] <> 0 goto %0001782e
00034457: goto %00017853

0001782e:
00017832: R3 := R23
00017838: R2 := R25
0001783e: R1 := R31 + 0x58
00017843: R0 := 0x412000
00017849: R0 := R0 + 0xA48
0001784e: R30 := 0x40567C
00017850: call @printf with return %00017852

00017852:
00017855: goto %00017853

00017853:
0001785b: R0 := mem[R21, el]:u64
00017861: R2 := R23
00017867: R1 := R25
0001786c: R4 := 0
00017871: R3 := 0
00017876: R30 := 0x4054E8
00017879: call @hlist_add with return %00019202

00019202:
00019208: mem := mem with [R21, el]:u64 <- R0
0001920e: R0 := R20
00019213: R30 := 0x4054F4
00019215: call @feof with return %00019217

00019217:
0001921a: when 31:0[R0] = 0 goto %0001745a
00034458: goto %00017414

00017414:
0001741d: R0 := R19
00017422: R30 := 0x405500
00017424: call @free with return %00017426

00017426:
0001742a: R0 := R20
0001742f: R30 := 0x405508
00017431: call @fclose with return %00017433

00017433:
00017437: #390 := R31 + 0x10
0001743c: R19 := mem[#390, el]:u64
00017441: R20 := mem[#390 + 8, el]:u64
00017447: #391 := R31 + 0x30
0001744c: R23 := mem[#391, el]:u64
00017451: R24 := mem[#391 + 8, el]:u64
00017458: R25 := mem[R31 + 0x40, el]:u64
00034459: goto %000173c3

000173c3:
000173ca: R0 := R21
000173d0: #389 := R31 + 0x20
000173d5: R21 := mem[#389, el]:u64
000173da: R22 := mem[#389 + 8, el]:u64
000173e1: R29 := mem[R31, el]:u64
000173e6: R30 := mem[R31 + 8, el]:u64
000173ea: R31 := R31 + 0x90
000173ef: call R30 with noreturn

0003445a: sub config_pop(config_pop_result)
00034b85: config_pop_result :: out u32 = low:32[R0]

00019539:
0001953d: #535 := R31 - 0x30
00019543: mem := mem with [#535, el]:u64 <- R29
00019549: mem := mem with [#535 + 8, el]:u64 <- R30
0001954d: R31 := #535
00019553: R29 := R31
00019559: #536 := R31 + 0x10
0001955f: mem := mem with [#536, el]:u64 <- R19
00019565: mem := mem with [#536 + 8, el]:u64 <- R20
0001956b: R20 := R0
00019572: R0 := mem[R0, el]:u64
0001957a: mem := mem with [R31 + 0x20, el]:u64 <- R21
00019580: R21 := R1
00019585: R30 := 0x405700
00019587: call @hlist_get with return %00019589

00019589:
0001958d: R19 := R0
00019593: when R0 = 0 goto %00019591
0003445b: goto %0002abf2

0002abf2:
0002abf5: R30 := 0x40570C
0002abf7: call @strdup with return %0002abf9

0002abf9:
0002abfd: R19 := R0
0002ac04: R0 := mem[R20, el]:u64
0002ac0a: R1 := R21
0002ac0f: R30 := 0x40571C
0002ac11: call @hlist_del with return %0002ac13

0002ac13:
0002ac19: mem := mem with [R20, el]:u64 <- R0
0003445c: goto %00019591

00019591:
0001959b: R21 := mem[R31 + 0x20, el]:u64
000195a1: R0 := R19
000195a7: #537 := R31 + 0x10
000195ac: R19 := mem[#537, el]:u64
000195b1: R20 := mem[#537 + 8, el]:u64
000195b8: R29 := mem[R31, el]:u64
000195bd: R30 := mem[R31 + 8, el]:u64
000195c1: R31 := R31 + 0x30
000195c6: call R30 with noreturn

0003445d: sub config_set(config_set_result)
00034b86: config_set_result :: out u32 = low:32[R0]

000194d6:
000194da: #534 := R31 - 0x20
000194e0: mem := mem with [#534, el]:u64 <- R29
000194e6: mem := mem with [#534 + 8, el]:u64 <- R30
000194ea: R31 := #534
000194ef: R3 := 1
000194f5: R29 := R31
000194fd: mem := mem with [R31 + 0x10, el]:u64 <- R19
00019503: R19 := R0
0001950a: R0 := mem[R0, el]:u64
0001950f: R30 := 0x4056CC
00019511: call @hlist_mod with return %00019513

00019513:
00019519: mem := mem with [R19, el]:u64 <- R0
00019520: R19 := mem[R31 + 0x10, el]:u64
00019527: R29 := mem[R31, el]:u64
0001952c: R30 := mem[R31 + 8, el]:u64
00019530: R31 := R31 + 0x20
00019535: call R30 with noreturn

0003445e: sub connect(connect_fd, connect_addr, connect_len, connect_result)
00034b87: connect_fd :: in u32 = low:32[R0]
00034b88: connect_addr :: in u64 = R1
00034b89: connect_len :: in u64 = R2
00034b8a: connect_result :: out u32 = low:32[R0]

000199e5:
00030092: R16 := 0x430000
00030099: R17 := mem[R16 + 0x220, el]:u64
0003009f: R16 := R16 + 0x220
000300a4: call R17 with noreturn

0003445f: sub copy_auth(copy_auth_result)
00034b8b: copy_auth_result :: out u32 = low:32[R0]

00016fea:
00016fee: #374 := R31 - 0x30
00016ff4: mem := mem with [#374, el]:u64 <- R29
00016ffa: mem := mem with [#374 + 8, el]:u64 <- R30
00016ffe: R31 := #374
00017004: R4 := R1 + 0x200
0001700a: R3 := R0 + 0x200
00017010: R29 := R31
00017017: V0 := pad:128[mem[R4 - 0xD4, el]:u64]
0001701d: #375 := R31 + 0x10
00017023: mem := mem with [#375, el]:u64 <- R19
00017029: mem := mem with [#375 + 8, el]:u64 <- R20
0001702f: R20 := R1
00017035: R19 := R0
0001703d: mem := mem with [R31 + 0x20, el]:u64 <- R21
00017043: R1 := R1 + 0x32
00017049: R21 := pad:64[31:0[R2]]
0001704f: R0 := R0 + 0x32
00017057: mem := mem with [R3 - 0xD4, el]:u64 <- 63:0[V0]
0001705c: R2 := 0x32
00017063: R4 := pad:64[mem[R20 + 0x134, el]:u32]
0001706a: R3 := pad:64[mem[R20 + 0x138, el]:u32]
00017072: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
0001707a: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
0001707f: R30 := 0x404F1C
00017082: call @strlcpy with return %00017084

00017084:
00017088: R1 := R20 + 0x64
0001708e: R0 := R19 + 0x64
00017093: R2 := 0x32
00017098: R30 := 0x404F2C
0001709a: call @strlcpy with return %0001709c

0001709c:
000170a0: when 31:0[R21] = 0 goto %0001709e
00034460: goto %0002b024

0001709e:
000170a6: V0 := 0
000170ac: R2 := R19 + 0xFA
000170b2: R1 := R19 + 0xC8
000170b9: mem := mem with [R19 + 0x30, el]:u16 <- 0
000170c0: mem := mem with [R19 + 0x12A, el]:u16 <- 0
000170c6: R0 := R19 + 0x96
000170ce: mem := mem with [R19, el]:u128 <- V0
000170d4: mem := mem with [R19 + 0x10, el]:u128 <- V0
000170dc: mem := mem with [R19 + 0x20, el]:u128 <- V0
000170e4: mem := mem with [R2, el]:u128 <- V0
000170ea: mem := mem with [R2 + 0x10, el]:u128 <- V0
000170f2: mem := mem with [R2 + 0x20, el]:u128 <- V0
000170fa: mem := mem with [R1, el]:u128 <- V0
00017100: mem := mem with [R1 + 0x10, el]:u128 <- V0
00017108: mem := mem with [R1 + 0x20, el]:u128 <- V0
0001710f: mem := mem with [R1 + 0x30, el]:u16 <- 0
00017116: mem := mem with [R19 + 0xC6, el]:u16 <- 0
0001711e: mem := mem with [R0, el]:u128 <- V0
00017124: mem := mem with [R0 + 0x10, el]:u128 <- V0
0001712c: mem := mem with [R0 + 0x20, el]:u128 <- V0
00017132: R0 := R19
00017138: #376 := R31 + 0x10
0001713d: R19 := mem[#376, el]:u64
00017142: R20 := mem[#376 + 8, el]:u64
00017149: R21 := mem[R31 + 0x20, el]:u64
00017150: R29 := mem[R31, el]:u64
00017155: R30 := mem[R31 + 8, el]:u64
00017159: R31 := R31 + 0x30
0001715e: call R30 with noreturn

0002b024:
0002b028: R1 := R20
0002b02d: R2 := 0x32
0002b033: R0 := R19
0002b038: R30 := 0x404F40
0002b03a: call @strlcpy with return %0002b03c

0002b03c:
0002b040: R4 := R20 + 0xFA
0002b046: R3 := R19 + 0xFA
0002b04c: R2 := R20 + 0xC8
0002b052: R1 := R19 + 0xC8
0002b058: R20 := R20 + 0x96
0002b05e: R0 := R19 + 0x96
0002b065: V0 := mem[R4, el]:u128
0002b06a: V1 := mem[R4 + 0x10, el]:u128
0002b072: mem := mem with [R3, el]:u128 <- V0
0002b078: mem := mem with [R3 + 0x10, el]:u128 <- V1
0002b07f: V0 := mem[R4 + 0x20, el]:u128
0002b087: mem := mem with [R3 + 0x20, el]:u128 <- V0
0002b08e: R4 := pad:64[mem[R4 + 0x30, el]:u16]
0002b096: mem := mem with [R3 + 0x30, el]:u16 <- 15:0[R4]
0002b09d: V0 := mem[R2, el]:u128
0002b0a2: V1 := mem[R2 + 0x10, el]:u128
0002b0aa: mem := mem with [R1, el]:u128 <- V0
0002b0b0: mem := mem with [R1 + 0x10, el]:u128 <- V1
0002b0b7: V0 := mem[R2 + 0x20, el]:u128
0002b0bf: mem := mem with [R1 + 0x20, el]:u128 <- V0
0002b0c6: R2 := pad:64[mem[R2 + 0x30, el]:u16]
0002b0ce: mem := mem with [R1 + 0x30, el]:u16 <- 15:0[R2]
0002b0d5: V0 := mem[R20, el]:u128
0002b0da: V1 := mem[R20 + 0x10, el]:u128
0002b0e2: mem := mem with [R0, el]:u128 <- V0
0002b0e8: mem := mem with [R0 + 0x10, el]:u128 <- V1
0002b0ef: V0 := mem[R20 + 0x20, el]:u128
0002b0f7: mem := mem with [R0 + 0x20, el]:u128 <- V0
0002b0fe: R1 := pad:64[mem[R20 + 0x30, el]:u16]
0002b106: mem := mem with [R0 + 0x30, el]:u16 <- 15:0[R1]
0002b10c: R0 := R19
0002b112: #1380 := R31 + 0x10
0002b117: R19 := mem[#1380, el]:u64
0002b11c: R20 := mem[#1380 + 8, el]:u64
0002b123: R21 := mem[R31 + 0x20, el]:u64
0002b12a: R29 := mem[R31, el]:u64
0002b12f: R30 := mem[R31 + 8, el]:u64
0002b133: R31 := R31 + 0x30
0002b138: call R30 with noreturn

00034461: sub copy_rr_data(copy_rr_data_result)
00034b8c: copy_rr_data_result :: out u32 = low:32[R0]

0001814c:
00018150: #463 := R31 - 0x50
00018156: mem := mem with [#463, el]:u64 <- R29
0001815c: mem := mem with [#463 + 8, el]:u64 <- R30
00018160: R31 := #463
00018166: R29 := R31
0001816c: when R0 = 0 goto %0001816a
00034462: goto %000187ec

0001816a:
00018172: R1 := 0x430000
00018177: R0 := 0x416000
0001817c: R2 := 0x34
00018182: R0 := R0 + 0x98
00018189: R3 := mem[R1 + 0x330, el]:u64
0001818e: R1 := 1
00018193: R30 := 0x40F0D4
00018195: call @fwrite with return %00018197

00018197:
0001819a: R0 := 0
0001819f: goto %0001819d

000187ec:
000187f0: #481 := R31 + 0x20
000187f6: mem := mem with [#481, el]:u64 <- R21
000187fc: mem := mem with [#481 + 8, el]:u64 <- R22
00018802: R21 := R1
00018807: when R1 = 0 goto %000183d9
00034463: goto %0001880b

000183d9:
000183dc: R1 := 0x430000
000183e1: R0 := 0x416000
000183e6: R2 := 0x34
000183ec: R0 := R0 + 0xD0
000183f3: R3 := mem[R1 + 0x330, el]:u64
000183f8: R1 := 1
000183fd: R30 := 0x40F0AC
000183ff: call @fwrite with return %00018401

00018401:
00018405: #468 := R31 + 0x20
0001840a: R21 := mem[#468, el]:u64
0001840f: R22 := mem[#468 + 8, el]:u64
00018414: R0 := 0
00018418: goto %0001819d

0001880b:
0001880f: R22 := R0
00018815: #482 := R31 + 0x10
0001881b: mem := mem with [#482, el]:u64 <- R19
00018821: mem := mem with [#482 + 8, el]:u64 <- R20
00018826: R30 := 0x40EF44
00018828: call @reset_rr_data with return %0001882a

0001882a:
0001882f: R0 := pad:64[mem[R21, el]:u32]
00018836: R19 := mem[R21 + 8, el]:u64
0001883e: mem := mem with [R22, el]:u32 <- 31:0[R0]
00018845: V0 := mem[R21 + 0x10, el]:u128
0001884d: mem := mem with [R22 + 0x10, el]:u128 <- V0
00018854: V0 := pad:128[mem[R21 + 0x20, el]:u64]
0001885c: mem := mem with [R22 + 0x20, el]:u64 <- 63:0[V0]
00018861: when R19 = 0 goto %000182fd
00034464: goto %00018865

00018865:
00018869: #483 := R31 + 0x30
0001886f: mem := mem with [#483, el]:u64 <- R23
00018875: mem := mem with [#483 + 8, el]:u64 <- R24
0001887d: mem := mem with [R31 + 0x40, el]:u64 <- R25
00018882: R25 := 0
00034465: goto %00018226

00018226:
00018230: R24 := mem[R19, el]:u64
00018235: R23 := mem[R19 + 8, el]:u64
0001823a: VF := 0
0001823d: CF := 1
00018241: ZF := R24 = 0
00018245: NF := 63:63[R24]
0001824b: #466 := ZF <> 1
0001824e: VF := 0
00018252: CF := #466
00018257: ZF := R23 = 0 | ~#466
0001825c: NF := #466 & 63:63[R23]
00018261: when ZF goto %0001821a
00034466: goto %00018265

00018265:
00018268: R0 := 0x20
0001826d: R30 := 0x40EF88
0001826f: call @malloc with return %00018271

00018271:
00018275: R20 := R0
0001827b: R0 := R24
00018280: R30 := 0x40EF94
00018282: call @strdup with return %00018284

00018284:
00018288: R1 := R0
0001828e: R0 := R23
00018296: mem := mem with [R20, el]:u64 <- R1
0001829b: R30 := 0x40EFA4
0001829d: call @strdup with return %0001829f

0001829f:
000182a5: mem := mem with [R20 + 8, el]:u64 <- R0
000182ac: mem := mem with [R20 + 0x10, el]:u32 <- 0
000182b3: mem := mem with [R20 + 0x18, el]:u64 <- 0
000182b8: when R25 = 0 goto %00018213
00034467: goto %000182bc

00018213:
00018217: R25 := R20
0001821c: goto %0001821a

000182bc:
000182c0: R2 := R25
00034468: goto %000182c2

000182c2:
000182c6: R3 := R2
000182cd: R2 := mem[R2 + 0x18, el]:u64
000182d2: when R2 <> 0 goto %000182c2
00034469: goto %000182d6

000182d6:
000182dc: mem := mem with [R3 + 0x18, el]:u64 <- R20
0003446a: goto %0001821a

0001821a:
00018222: R19 := mem[R19 + 0x18, el]:u64
00018228: when R19 <> 0 goto %00018226
0003446b: goto %000182de

000182de:
000182e2: #467 := R31 + 0x30
000182e7: R23 := mem[#467, el]:u64
000182ec: R24 := mem[#467 + 8, el]:u64
000182f4: mem := mem with [R22 + 8, el]:u64 <- R25
000182fb: R25 := mem[R31 + 0x40, el]:u64
0003446c: goto %000182fd

000182fd:
00018302: R0 := mem[R21 + 0x28, el]:u64
00018308: when R0 = 0 goto %00018306
0003446d: goto %000183ca

000183ca:
000183cd: R30 := 0x40EFE8
000183cf: call @strdup with return %000183d1

000183d1:
000183d7: mem := mem with [R22 + 0x28, el]:u64 <- R0
0003446e: goto %00018306

00018306:
00018310: R0 := mem[R21 + 0x30, el]:u64
00018316: when R0 = 0 goto %00018314
0003446f: goto %000183bb

000183bb:
000183be: R30 := 0x40EFF8
000183c0: call @strdup with return %000183c2

000183c2:
000183c8: mem := mem with [R22 + 0x30, el]:u64 <- R0
00034470: goto %00018314

00018314:
0001831e: R0 := mem[R21 + 0x38, el]:u64
00018324: when R0 = 0 goto %00018322
00034471: goto %000183ac

000183ac:
000183af: R30 := 0x40F008
000183b1: call @strdup with return %000183b3

000183b3:
000183b9: mem := mem with [R22 + 0x38, el]:u64 <- R0
00034472: goto %00018322

00018322:
0001832c: R0 := mem[R21 + 0x40, el]:u64
00018332: when R0 = 0 goto %00018330
00034473: goto %0001839d

0001839d:
000183a0: R30 := 0x40F018
000183a2: call @strdup with return %000183a4

000183a4:
000183aa: mem := mem with [R22 + 0x40, el]:u64 <- R0
00034474: goto %00018330

00018330:
0001833a: R0 := mem[R21 + 0x48, el]:u64
00018340: when R0 = 0 goto %0001833e
00034475: goto %0001838e

0001838e:
00018391: R30 := 0x40F028
00018393: call @strdup with return %00018395

00018395:
0001839b: mem := mem with [R22 + 0x48, el]:u64 <- R0
00034476: goto %0001833e

0001833e:
00018348: R0 := mem[R21 + 0x50, el]:u64
0001834e: when R0 = 0 goto %0001834c
00034477: goto %0001837f

0001837f:
00018382: R30 := 0x40F038
00018384: call @strdup with return %00018386

00018386:
0001838c: mem := mem with [R22 + 0x50, el]:u64 <- R0
00034478: goto %0001834c

0001834c:
00018356: R0 := mem[R21 + 0x58, el]:u64
0001835b: when R0 = 0 goto %000181ea
00034479: goto %0001835f

0001835f:
00018364: R0 := pad:64[mem[R21 + 0x18, el]:u32]
00018369: VF := 0
0001836c: CF := 1
00018370: ZF := 31:0[R0] = 0
00018374: NF := 31:31[R0]
0001837b: when NF = VF & ~ZF goto %000181b5
0003447a: goto %000181ea

000181b5:
000181b9: R19 := extend:64[31:0[R0]]
000181be: R0 := 1
000181c4: R1 := R19
000181c9: R30 := 0x40F074
000181cb: call @calloc with return %000181cd

000181cd:
000181d3: mem := mem with [R22 + 0x58, el]:u64 <- R0
000181d9: R2 := R19
000181e0: R1 := mem[R21 + 0x58, el]:u64
000181e5: R30 := 0x40F084
000181e7: call @memcpy with return %000181e9

000181e9:
000181ec: goto %000181ea

000181ea:
000181f1: #464 := R31 + 0x10
000181f6: R19 := mem[#464, el]:u64
000181fb: R20 := mem[#464 + 8, el]:u64
00018201: R0 := R22
00018207: #465 := R31 + 0x20
0001820c: R21 := mem[#465, el]:u64
00018211: R22 := mem[#465 + 8, el]:u64
0003447b: goto %0001819d

0001819d:
000181a5: R29 := mem[R31, el]:u64
000181aa: R30 := mem[R31 + 8, el]:u64
000181ae: R31 := R31 + 0x50
000181b3: call R30 with noreturn

0003447c: sub croak(croak_result)
00034b8d: croak_result :: out u32 = low:32[R0]

00019dd9:
00019ddd: #575 := R31 - 0x10
00019de3: mem := mem with [#575, el]:u64 <- R29
00019de9: mem := mem with [#575 + 8, el]:u64 <- R30
00019ded: R31 := #575
00019df3: R29 := R31
00019df9: when 31:0[R1] = 0 goto %00019df7
0003447d: goto %0001a4b5

0001a4b5:
0001a4b9: R1 := R0
0001a4be: R0 := 0x413000
0001a4c4: R0 := R0 + 0x9C0
0001a4c9: R30 := 0x40E38C
0001a4cb: call @printf with return %00019e1a

00019e1a:
00019e20: R0 := 1
00019e25: R30 := 0x40E394
00019e27: call @myexit with return %00019df7

00019df7:
00019e00: R2 := R0
00019e05: R1 := 0x413000
00019e0a: R0 := 3
00019e10: R1 := R1 + 0x9C0
00019e15: R30 := 0x40E3A8
00019e17: call @syslog with return %00019e19

00019e19:
00019e1c: goto %00019e1a

0003447e: sub data_send(data_send_result)
00034b8e: data_send_result :: out u32 = low:32[R0]

0001e626:
0001e62d: when R2 <> 0 goto %0001e62b
0003447f: goto %0001f721

0001e62b:
0001e634: #827 := R31 - 0x80
0001e63a: mem := mem with [#827, el]:u64 <- R29
0001e640: mem := mem with [#827 + 8, el]:u64 <- R30
0001e644: R31 := #827
0001e64a: R29 := R31
0001e650: #828 := R31 + 0x10
0001e656: mem := mem with [#828, el]:u64 <- R19
0001e65c: mem := mem with [#828 + 8, el]:u64 <- R20
0001e662: R20 := R2
0001e668: #829 := R31 + 0x20
0001e66e: mem := mem with [#829, el]:u64 <- R21
0001e674: mem := mem with [#829 + 8, el]:u64 <- R22
0001e67a: R21 := pad:64[31:0[R0]]
0001e67f: R0 := 0x800
0001e685: #830 := R31 + 0x30
0001e68b: mem := mem with [#830, el]:u64 <- R23
0001e691: mem := mem with [#830 + 8, el]:u64 <- R24
0001e697: R23 := pad:64[31:0[R1]]
0001e69d: #831 := R31 + 0x40
0001e6a3: mem := mem with [#831, el]:u64 <- R25
0001e6a9: mem := mem with [#831 + 8, el]:u64 <- R26
0001e6af: #832 := R31 + 0x50
0001e6b5: mem := mem with [#832, el]:u64 <- R27
0001e6bb: mem := mem with [#832 + 8, el]:u64 <- R28
0001e6c0: R30 := 0x408A9C
0001e6c2: call @zmalloc with return %0001e6c4

0001e6c4:
0001e6c8: R22 := R0
0001e6ce: #833 := R20 + 1
0001e6d3: VF := extend:128[#833] <> extend:128[R20] + 1
0001e6d8: CF := pad:128[#833] <> pad:128[R20] + 1
0001e6dc: ZF := #833 = 0
0001e6e0: NF := 63:63[#833]
0001e6e6: when ZF goto %0001e6e4
00034480: goto %0001f6e0

0001e6e4:
0001e6ed: when 31:31[R21] goto %0001e6eb
00034481: goto %0001f540

0001f540:
0001f543: R28 := 0x413000
0001f548: R25 := 0x413000
0001f54e: R0 := R28 + 0x750
0001f554: R27 := R25 + 0x778
0001f559: R19 := 0
0001f55e: R28 := 0x430000
0001f566: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001f56b: R0 := 1
0001f573: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00034482: goto %0001f575

0001f575:
0001f579: R1 := R22
0001f57f: R0 := pad:64[31:0[R23]]
0001f584: R2 := 0x800
0001f58a: R26 := R28 + 0x374
0001f58f: R30 := 0x408D3C
0001f591: call @read with return %0001f593

0001f593:
0001f597: R25 := R0
0001f59d: R24 := pad:64[31:0[R0]]
0001f5a2: VF := 0
0001f5a5: CF := 1
0001f5a9: ZF := 31:0[R0] = 0
0001f5ad: NF := 31:31[R0]
0001f5b5: when ~(NF = VF & ~ZF) goto %0001f5b3
00034483: goto %0001f5e2

0001f5b3:
0001f5bd: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0001f5c2: when 31:0[R0] = 0 goto %0001ea76
00034484: goto %0001f5c6

0001f5c6:
0001f5c9: when 31:0[R25] = 0 goto %0001e895
00034485: goto %0001f5cd

0001e895:
0001e898: R0 := 0x413000
0001e89e: R0 := R0 + 0x750
0001e8a3: goto %0001e8a1

0001f5cd:
0001f5d0: R30 := 0x408DE4
0001f5d2: call @__errno_location with return %0001f5d4

0001f5d4:
0001f5d9: R0 := pad:64[mem[R0, el]:u32]
0001f5de: R30 := 0x408DEC
0001f5e0: call @strerror with return %0001e8a1

0001e8a1:
0001e8a8: R5 := R0
0001e8ae: R1 := pad:64[31:0[R25]]
0001e8b4: R3 := pad:64[31:0[R19]]
0001e8b9: R4 := 0xFFFFFFFFFFFFFFFF
0001e8be: R2 := 0x800
0001e8c3: R0 := 0x413000
0001e8c9: R0 := R0 + 0x778
0001e8ce: R30 := 0x408E0C
0001e8d0: call @printf with return %0001e8d2

0001e8d2:
0001e8d6: R0 := pad:64[31:0[R21]]
0001e8db: R30 := 0x408E14
0001e8dd: call @so_closed with return %0001e8df

0001e8df:
0001e8e3: when 31:0[R0] = 0 goto %0001e8e1
00034486: goto %0001e87a

0001f5e2:
0001f5e7: R8 := pad:64[mem[R28 + 0x374, el]:u32]
0001f5ee: R19 := pad:64[31:0[R19] + 31:0[R25]]
0001f5f5: R5 := mem[R31 + 0x70, el]:u64
0001f5fb: R1 := pad:64[31:0[R0]]
0001f601: R3 := pad:64[31:0[R19]]
0001f607: R0 := R27
0001f60c: R4 := 0xFFFFFFFFFFFFFFFF
0001f611: R2 := 0x800
0001f617: when 31:0[R8] = 0 goto %0001f615
00034487: goto %0001f6d9

0001f6d9:
0001f6dc: R30 := 0x408D74
0001f6de: call @printf with return %0001f615

0001f615:
0001f61e: R0 := pad:64[31:0[R21]]
0001f623: R30 := 0x408D7C
0001f625: call @so_closed with return %0001f627

0001f627:
0001f62a: when 31:0[R0] <> 0 goto %0001e87a
00034488: goto %0001f62e

0001f62e:
0001f632: R2 := extend:64[31:0[R25]]
0001f638: R1 := R22
0001f63e: R0 := pad:64[31:0[R21]]
0001f643: R30 := 0x408D90
0001f645: call @write_wrapper with return %0001f647

0001f647:
0001f64c: R2 := pad:64[mem[R26, el]:u32]
0001f651: VF := 0
0001f654: CF := 1
0001f658: ZF := 31:0[R0] = 0
0001f65c: NF := 31:31[R0]
0001f664: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0001f66a: R26 := R0
0001f678: when ~(NF = VF & ~ZF) goto %0001f671
0001f679: goto %0001f674

0001f674:
0001f675: R1 := 1
0001f67b: goto %0001f677

0001f671:
0001f672: R1 := 0
0001f67a: goto %0001f677

0001f677:
0001f681: when 31:0[R2] <> 0 goto %0001f67f
00034489: goto %0001f6ce

0001f67f:
0001f688: R1 := pad:64[31:0[R26]]
0001f68e: R2 := pad:64[31:0[R25]]
0001f693: R0 := 0x413000
0001f699: R0 := R0 + 0x758
0001f69e: R30 := 0x408DC4
0001f6a0: call @printf with return %0001f6a2

0001f6a2:
0001f6a5: VF := 0
0001f6a8: CF := 1
0001f6ac: ZF := 31:0[R26] = 0
0001f6b0: NF := 31:31[R26]
0001f6be: when ~(NF = VF & ~ZF) goto %0001f6b7
0001f6bf: goto %0001f6ba

0001f6ba:
0001f6bb: R1 := 1
0001f6c1: goto %0001f6bd

0001f6b7:
0001f6b8: R1 := 0
0001f6c0: goto %0001f6bd

0001f6bd:
0001f6c6: when 31:0[R1] <> 0 goto %0001f575
0003448a: goto %0001f6ca

0001f6ca:
0001f6cc: goto %0001e8e1

0001f6ce:
0001f6d1: when 31:0[R1] <> 0 goto %0001f575
0003448b: goto %0001f6d5

0001f6d5:
0001f6d7: goto %0001e8e1

0001e6eb:
0001e6f3: R19 := 0
0001e6f8: goto %0001e6f6

0001e6f6:
0001e6fd: R1 := R22
0001e703: R0 := pad:64[31:0[R23]]
0001e708: R2 := 0x800
0001e70d: R30 := 0x408C44
0001e70f: call @read with return %0001e711

0001e711:
0001e715: R24 := pad:64[31:0[R0]]
0001e71a: VF := 0
0001e71d: CF := 1
0001e721: ZF := 31:0[R0] = 0
0001e725: NF := 31:31[R0]
0001e72d: when NF = VF & ~ZF goto %0001e72b
0003448c: goto %0001e737

0001e737:
0001e73a: R0 := 1
0001e742: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0003448d: goto %0001e744

0001e72b:
0001e735: R19 := pad:64[31:0[R19] + 31:0[R0]]
0003448e: goto %0001e6f6

0001f6e0:
0001f6e3: R0 := 0x413000
0001f6e9: R0 := R0 + 0x758
0001f6ee: R28 := 0x413000
0001f6f6: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001f6fc: R0 := R28 + 0x778
0001f704: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001f709: R0 := 1
0001f70e: R19 := 0
0001f716: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0001f71b: R0 := 0
0001f71f: goto %0001e9ee

0001e9ee:
0001e9f3: R0 := R20 + ~R0 + 1
0001e9f9: #842 := R0 - 0x800
0001e9fe: VF := extend:128[#842] <> extend:128[R0] - 0x800
0001ea03: CF := pad:128[#842] <> pad:128[R0] + 0xFFFFFFFFFFFFF800
0001ea07: ZF := #842 = 0
0001ea0b: NF := 63:63[#842]
0001ea13: when ~(NF = VF & ~ZF) goto %0001ea11
0003448f: goto %0001eb21

0001eb21:
0001eb24: R2 := 0x800
0001eb2a: R1 := R22
0001eb30: R25 := pad:64[31:0[R2]]
0001eb36: R0 := pad:64[31:0[R23]]
0001eb3b: R30 := 0x408B74
0001eb3d: call @read with return %0001eb3f

0001eb3f:
0001eb43: R27 := R0
0001eb49: R24 := pad:64[31:0[R0]]
0001eb4e: VF := 0
0001eb51: CF := 1
0001eb55: ZF := 31:0[R0] = 0
0001eb59: NF := 31:31[R0]
0001eb60: when NF = VF & ~ZF goto %0001eab1
00034490: goto %0001ea56

0001ea11:
0001ea1b: R25 := pad:64[31:0[R20] + ~31:0[R19] + 1]
0001ea21: R1 := R22
0001ea27: R0 := pad:64[31:0[R23]]
0001ea2d: R2 := extend:64[31:0[R25]]
0001ea32: R30 := 0x408AE8
0001ea34: call @read with return %0001ea36

0001ea36:
0001ea3a: R27 := R0
0001ea40: R24 := pad:64[31:0[R0]]
0001ea45: VF := 0
0001ea48: CF := 1
0001ea4c: ZF := 31:0[R0] = 0
0001ea50: NF := 31:31[R0]
0001ea58: when ~(NF = VF & ~ZF) goto %0001ea56
00034491: goto %0001eab1

0001ea56:
0001ea5e: when 31:31[R21] goto %0001e744
00034492: goto %0001ea62

0001e744:
0001e748: R0 := R22
0001e74d: R30 := 0x408C60
0001e74f: call @free with return %0001e751

0001ea62:
0001ea65: R28 := 0x430000
0001ea6b: R26 := R28 + 0x374
0001ea72: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0001ea78: when 31:0[R0] = 0 goto %0001ea76
00034493: goto %0001ea8f

0001ea76:
0001ea7f: R0 := pad:64[31:0[R21]]
0001ea84: R30 := 0x408CAC
0001ea86: call @so_closed with return %0001ea88

0001ea88:
0001ea8b: when 31:0[R0] <> 0 goto %0001e87a
00034494: goto %0001e8e1

0001ea8f:
0001ea92: when 31:0[R27] = 0 goto %0001e836
00034495: goto %0001ea96

0001ea96:
0001ea99: R30 := 0x408BA0
0001ea9b: call @__errno_location with return %0001ea9d

0001ea9d:
0001eaa2: R0 := pad:64[mem[R0, el]:u32]
0001eaa7: R30 := 0x408BA8
0001eaa9: call @strerror with return %0001eaab

0001eaab:
0001eaaf: R5 := R0
00034496: goto %0001e842

0001eab1:
0001eab6: R19 := pad:64[31:0[R19] + 31:0[R0]]
0001eabb: when 31:31[R21] goto %0001e999
00034497: goto %0001eabf

0001eabf:
0001eac2: R28 := 0x430000
0001eac8: R26 := R28 + 0x374
0001eacf: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0001ead4: when 31:0[R0] <> 0 goto %0001e836
00034498: goto %0001ead8

0001e836:
0001e839: R5 := 0x413000
0001e83f: R5 := R5 + 0x750
0001e844: goto %0001e842

0001e842:
0001e84a: R0 := mem[R31 + 0x70, el]:u64
0001e850: R2 := pad:64[31:0[R25]]
0001e856: R4 := R20
0001e85c: R3 := pad:64[31:0[R19]]
0001e862: R1 := pad:64[31:0[R27]]
0001e867: R30 := 0x408BC4
0001e869: call @printf with return %0001e86b

0001e86b:
0001e86f: R0 := pad:64[31:0[R21]]
0001e874: R30 := 0x408BCC
0001e876: call @so_closed with return %0001e878

0001e878:
0001e87c: when 31:0[R0] <> 0 goto %0001e87a
00034499: goto %0001f47f

0001f47f:
0001f482: VF := 0
0001f485: CF := 1
0001f489: ZF := 31:0[R21] = 0
0001f48d: NF := 31:31[R21]
0001f494: #890 := NF = VF
0001f497: VF := 0
0001f49b: CF := #890
0001f4a0: ZF := 31:0[R27] = 0 | ~#890
0001f4a5: NF := #890 & 31:31[R27]
0001f4ac: when NF = VF & ~ZF goto %0001eaec
0003449a: goto %0001f4b0

0001f4b0:
0001f4b3: VF := 0
0001f4b6: CF := 1
0001f4ba: ZF := 31:0[R27] = 0
0001f4be: NF := 31:31[R27]
0001f4c5: when ~(NF = VF & ~ZF) goto %0001e8e1
0003449b: goto %0001f4c9

0001f4c9:
0001f4cd: R0 := extend:64[31:0[R19]]
0001f4d3: #891 := ~R20
0001f4d8: #892 := R0 + ~R20
0001f4de: VF := extend:128[#892 + 1] <> extend:128[R0] + extend:128[#891] + 1
0001f4e4: CF := pad:128[#892 + 1] <> pad:128[R0] + pad:128[#891] + 1
0001f4e8: ZF := #892 + 1 = 0
0001f4ec: NF := 63:63[#892 + 1]
0001f4f2: when NF <> VF goto %0001e9ee
0003449c: goto %0001e9c1

0001ead8:
0001eadc: R0 := pad:64[31:0[R21]]
0001eae1: R30 := 0x408B18
0001eae3: call @so_closed with return %0001eae5

0001eae5:
0001eae8: when 31:0[R0] <> 0 goto %0001e87a
0003449d: goto %0001eaec

0001e87a:
0001e883: R0 := R22
0001e888: R24 := 0xFFFFFC19
0001e88d: R30 := 0x408E24
0001e88f: call @free with return %0001e891

0001e891:
0001e893: goto %0001e78d

0001eaec:
0001eaf0: R1 := R22
0001eaf6: R2 := extend:64[31:0[R27]]
0001eafc: R0 := pad:64[31:0[R21]]
0001eb01: R30 := 0x408B2C
0001eb03: call @write_wrapper with return %0001eb05

0001eb05:
0001eb0a: R1 := pad:64[mem[R26, el]:u32]
0001eb10: R25 := R0
0001eb18: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0001eb1d: when 31:0[R1] <> 0 goto %0001e953
0003449e: goto %0001e96e

0001e953:
0001e957: R1 := pad:64[31:0[R0]]
0001e95d: R2 := pad:64[31:0[R27]]
0001e964: R0 := mem[R31 + 0x78, el]:u64
0001e969: R30 := 0x408CDC
0001e96b: call @printf with return %0001e96d

0001e96d:
0001e970: goto %0001e96e

0001e96e:
0001e974: VF := 0
0001e977: CF := 1
0001e97b: ZF := 31:0[R25] = 0
0001e97f: NF := 31:31[R25]
0001e98d: when ~(NF = VF & ~ZF) goto %0001e986
0001e98e: goto %0001e989

0001e989:
0001e98a: R0 := 1
0001e990: goto %0001e98c

0001e986:
0001e987: R0 := 0
0001e98f: goto %0001e98c

0001e98c:
0001e995: when 31:0[R0] = 0 goto %0001e8e1
0003449f: goto %0001e999

0001e8e1:
0001e8eb: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0001e8f0: VF := 0
0001e8f3: CF := 1
0001e8f7: ZF := 31:0[R24] = 0
0001e8fb: NF := 31:31[R24]
0001e909: when NF = VF & ~ZF goto %0001e902
0001e90a: goto %0001e905

0001e905:
0001e906: R25 := 1
0001e90c: goto %0001e908

0001e902:
0001e903: R25 := 0
0001e90b: goto %0001e908

0001e908:
0001e911: VF := 0
0001e914: CF := 1
0001e918: ZF := 31:0[R0] = 0
0001e91c: NF := 31:31[R0]
0001e92a: when NF = VF & ~ZF goto %0001e923
0001e92b: goto %0001e926

0001e926:
0001e927: R0 := 1
0001e92d: goto %0001e929

0001e923:
0001e924: R0 := 0
0001e92c: goto %0001e929

0001e929:
0001e934: R25 := pad:64[31:0[R25] | 31:0[R0]]
0001e939: goto %0001e937

0001e999:
0001e99d: R0 := extend:64[31:0[R19]]
0001e9a3: #840 := ~R20
0001e9a8: #841 := R0 + ~R20
0001e9ae: VF := extend:128[#841 + 1] <> extend:128[R0] + extend:128[#840] + 1
0001e9b4: CF := pad:128[#841 + 1] <> pad:128[R0] + pad:128[#840] + 1
0001e9b8: ZF := #841 + 1 = 0
0001e9bc: NF := 63:63[#841 + 1]
0001e9c3: when NF = VF goto %0001e9c1
000344a0: goto %0001e9ee

0001e9c1:
0001e9cb: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0001e9d0: VF := 0
0001e9d3: CF := 1
0001e9d7: ZF := 31:0[R0] = 0
0001e9db: NF := 31:31[R0]
0001e9e9: when NF = VF & ~ZF goto %0001e9e2
0001e9ea: goto %0001e9e5

0001e9e5:
0001e9e6: R25 := 1
0001e9ec: goto %0001e9e8

0001e9e2:
0001e9e3: R25 := 0
0001e9eb: goto %0001e9e8

0001e9e8:
000344a1: goto %0001e937

0001e937:
0001e93e: R0 := R22
0001e943: R30 := 0x408C04
0001e945: call @free with return %0001e947

0001e947:
0001e94a: when 31:0[R25] <> 0 goto %0001e751
000344a2: goto %0001e94e

0001e751:
0001e756: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0001e75b: VF := 0
0001e75e: CF := 1
0001e762: ZF := 31:0[R24] = 0
0001e766: NF := 31:31[R24]
0001e76c: #834 := ZF
0001e76f: VF := 0
0001e773: CF := #834
0001e778: ZF := 31:0[R0] = 0 | ~#834
0001e77d: NF := #834 & 31:31[R0]
0001e785: when ~(NF = VF & ~ZF) goto %0001e783
000344a3: goto %0001f4f6

0001f4f6:
0001f4fa: #893 := R20 + 1
0001f4ff: VF := extend:128[#893] <> extend:128[R20] + 1
0001f504: CF := pad:128[#893] <> pad:128[R20] + 1
0001f508: ZF := #893 = 0
0001f50c: NF := 63:63[#893]
0001f511: when ZF goto %0001e94e
000344a4: goto %0001f515

0001f515:
0001f519: #894 := extend:64[31:0[R19]]
0001f51e: #895 := R20 + ~extend:64[31:0[R19]]
0001f524: VF := extend:128[#895 + 1] <> extend:128[R20] + extend:128[~#894] +
          1
0001f52a: CF := pad:128[#895 + 1] <> pad:128[R20] + pad:128[~#894] + 1
0001f52e: ZF := #895 + 1 = 0
0001f532: NF := 63:63[#895 + 1]
0001f537: when ZF goto %0001e94e
000344a5: goto %0001f53b

0001f53b:
0001f53e: R24 := 0
000344a6: goto %0001e783

0001e783:
0001e78b: R28 := 0x430000
000344a7: goto %0001e78d

0001e78d:
0001e792: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0001e798: when 31:0[R0] <> 0 goto %0001e796
000344a8: goto %0001e82d

0001e796:
0001e79f: R3 := pad:64[31:0[R24]]
0001e7a5: R2 := pad:64[31:0[R23]]
0001e7ab: R1 := pad:64[31:0[R21]]
0001e7b0: R0 := 0x413000
0001e7b6: R0 := R0 + 0x7B0
0001e7bb: R30 := 0x408CF8
0001e7bd: call @printf with return %0001e7bf

0001e7bf:
0001e7c2: R0 := 0
0001e7c7: goto %0001e7c5

0001e82d:
0001e830: R0 := 0
0001e834: goto %0001e7c5

0001e94e:
0001e951: R0 := 1
000344a9: goto %0001e7c5

0001e7c5:
0001e7cc: #835 := R31 + 0x10
0001e7d1: R19 := mem[#835, el]:u64
0001e7d6: R20 := mem[#835 + 8, el]:u64
0001e7dc: #836 := R31 + 0x20
0001e7e1: R21 := mem[#836, el]:u64
0001e7e6: R22 := mem[#836 + 8, el]:u64
0001e7ec: #837 := R31 + 0x30
0001e7f1: R23 := mem[#837, el]:u64
0001e7f6: R24 := mem[#837 + 8, el]:u64
0001e7fc: #838 := R31 + 0x40
0001e801: R25 := mem[#838, el]:u64
0001e806: R26 := mem[#838 + 8, el]:u64
0001e80c: #839 := R31 + 0x50
0001e811: R27 := mem[#839, el]:u64
0001e816: R28 := mem[#839 + 8, el]:u64
0001e81d: R29 := mem[R31, el]:u64
0001e822: R30 := mem[R31 + 8, el]:u64
0001e826: R31 := R31 + 0x80
0001e82b: call R30 with noreturn

0001f721:
0001f724: R0 := 1
0001f729: call R30 with noreturn

000344aa: sub deregister_tm_clones(deregister_tm_clones_result)
00034b8f: deregister_tm_clones_result :: out u32 = low:32[R0]

0002cba5:
0002cba8: R0 := 0x430000
0002cbae: R0 := R0 + 0x328
0002cbb3: R1 := 0x430000
0002cbb9: R1 := R1 + 0x328
0002cbbf: #1395 := ~R0
0002cbc4: #1396 := R1 + ~R0
0002cbca: VF := extend:128[#1396 + 1] <> extend:128[R1] + extend:128[#1395] +
          1
0002cbd0: CF := pad:128[#1396 + 1] <> pad:128[R1] + pad:128[#1395] + 1
0002cbd4: ZF := #1396 + 1 = 0
0002cbd8: NF := 63:63[#1396 + 1]
0002cbde: when ZF goto %0002cbdc
000344ab: goto %0002d2e1

0002d2e1:
0002d2e4: R1 := 0x42F000
0002d2eb: R1 := mem[R1 + 0xFD0, el]:u64
0002d2f0: when R1 = 0 goto %0002cbdc
000344ac: goto %0002d2f4

0002cbdc:
0002cbe4: call R30 with noreturn

0002d2f4:
0002d2f8: R16 := R1
0002d2fd: call R16 with noreturn

000344ad: sub des_key_schedule(des_key_schedule_result)
00034b90: des_key_schedule_result :: out u32 = low:32[R0]

00010c2d:
00010c31: #66 := R31 - 0x30
00010c37: mem := mem with [#66, el]:u64 <- R29
00010c3d: mem := mem with [#66 + 8, el]:u64 <- R30
00010c41: R31 := #66
00010c46: R3 := 0x416000
00010c4c: R3 := R3 + 0x810
00010c52: R29 := R31
00010c58: #67 := R31 + 0x10
00010c5e: mem := mem with [#67, el]:u64 <- R19
00010c64: mem := mem with [#67 + 8, el]:u64 <- R20
00010c6a: R4 := R3 + 0x40
00010c70: R5 := R3 + 0x80
00010c76: #68 := R31 + 0x20
00010c7c: mem := mem with [#68, el]:u64 <- R21
00010c82: mem := mem with [#68 + 8, el]:u64 <- R22
00010c88: R11 := R3 + 0x90
00010c8d: R10 := 0x1C
00010c94: R2 := pad:64[mem[R0, el]:u32]
00010c99: R12 := pad:64[mem[R0 + 4, el]:u32]
00010c9e: R9 := 0x2080000
00010ca3: R8 := 0x24000000
00010ca8: R7 := 0x808
00010cb1: R12 := pad:64[7:0[R12].15:8[R12].23:16[R12].31:24[R12]]
00010cba: R2 := pad:64[7:0[R2].15:8[R2].23:16[R2].31:24[R2]]
00010cbf: R6 := 0x11
00010cc6: R0 := pad:64[31:0[R2] ^ pad:32[31:4[R12]]]
00010ccc: R0 := pad:64[31:0[R0] & 0xF0F0F0F]
00010cd3: R2 := pad:64[31:0[R2] ^ 31:0[R0]]
00010cda: R0 := pad:64[31:0[R12] ^ (27:0[R0].0)]
00010ce1: R12 := pad:64[31:0[R2] ^ 31:0[R0]]
00010ce7: R12 := pad:64[31:0[R12] & 0x10101010]
00010cee: R2 := pad:64[31:0[R2] ^ 31:0[R12]]
00010cf5: R0 := pad:64[31:0[R0] ^ 31:0[R12]]
00010cfb: R21 := pad:64[3:0[R2]]
00010d01: R15 := pad:64[19:16[R2]]
00010d07: R13 := pad:64[11:8[R2]]
00010d0d: R30 := pad:64[27:24[R2]]
00010d13: R14 := pad:64[12:9[R0]]
00010d1b: R21 := pad:64[mem[R3 + (61:0[R21].0), el]:u32]
00010d21: R12 := pad:64[4:1[R0]]
00010d29: R15 := pad:64[mem[R3 + (61:0[R15].0), el]:u32]
00010d2f: R20 := pad:64[16:13[R2]]
00010d37: R30 := pad:64[mem[R3 + (61:0[R30].0), el]:u32]
00010d3d: R19 := pad:64[31:28[R0]]
00010d45: R13 := pad:64[mem[R3 + (61:0[R13].0), el]:u32]
00010d4b: R22 := pad:64[28:25[R0]]
00010d53: R14 := pad:64[mem[R4 + (61:0[R14].0), el]:u32]
00010d59: R18 := pad:64[7:4[R0]]
00010d5f: R15 := pad:64[30:0[R15].0]
00010d67: R12 := pad:64[mem[R4 + (61:0[R12].0), el]:u32]
00010d6e: R13 := pad:64[31:0[R15] | (29:0[R13].0)]
00010d74: R17 := pad:64[8:5[R2]]
00010d7a: R16 := pad:64[31:29[R2]]
00010d81: R21 := pad:64[31:0[R30] | (28:0[R21].0)]
00010d87: R15 := pad:64[20:17[R0]]
00010d8d: R30 := pad:64[23:20[R0]]
00010d93: R2 := pad:64[24:21[R2]]
00010d99: R0 := pad:64[15:12[R0]]
00010da1: R20 := pad:64[mem[R3 + (61:0[R20].0), el]:u32]
00010da7: R14 := pad:64[29:0[R14].0]
00010daf: R19 := pad:64[mem[R4 + (61:0[R19].0), el]:u32]
00010db6: R12 := pad:64[31:0[R14] | (28:0[R12].0)]
00010dbe: R22 := pad:64[mem[R4 + (61:0[R22].0), el]:u32]
00010dc6: R18 := pad:64[mem[R4 + (61:0[R18].0), el]:u32]
00010dcc: R20 := pad:64[25:0[R20].0]
00010dd4: R17 := pad:64[mem[R3 + (61:0[R17].0), el]:u32]
00010ddc: R16 := pad:64[mem[R3 + (61:0[R16].0), el]:u32]
00010de3: R19 := pad:64[31:0[R22] | (27:0[R19].0)]
00010deb: R15 := pad:64[mem[R4 + (61:0[R15].0), el]:u32]
00010df1: R18 := pad:64[24:0[R18].0]
00010df9: R14 := pad:64[mem[R4 + (61:0[R30].0), el]:u32]
00010e00: R17 := pad:64[31:0[R20] | (24:0[R17].0)]
00010e08: R2 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
00010e0e: R16 := pad:64[27:0[R16].0]
00010e16: R0 := pad:64[mem[R4 + (61:0[R0].0), el]:u32]
00010e1d: R3 := pad:64[31:0[R12] | 31:0[R19]]
00010e24: R4 := pad:64[31:0[R13] | 31:0[R21]]
00010e2a: R12 := pad:64[26:0[R14].0]
00010e31: R13 := pad:64[31:0[R18] | (30:0[R15].0)]
00010e38: R4 := pad:64[31:0[R4] | 31:0[R17]]
00010e3f: R2 := pad:64[31:0[R16] | (26:0[R2].0)]
00010e46: R3 := pad:64[31:0[R3] | 31:0[R13]]
00010e4d: R0 := pad:64[31:0[R12] | (25:0[R0].0)]
00010e54: R2 := pad:64[31:0[R2] | 31:0[R4]]
00010e5b: R0 := pad:64[31:0[R0] | 31:0[R3]]
00010e61: R2 := pad:64[27:0[R2]]
00010e67: R0 := pad:64[27:0[R0]]
000344ae: goto %00010e6b

00010e6b:
00010e70: R13 := pad:64[mem[R5]]
00010e74: R5 := R5 + 1
00010e7b: R3 := pad:64[31:0[R10] + ~31:0[R13] + 1]
00010e82: R4 := pad:64[31:0[R2] << pad:10[4:0[R13]]]
00010e89: R2 := pad:64[31:0[R2] >> pad:10[4:0[R3]]]
00010e90: R2 := pad:64[31:0[R4] | 31:0[R2]]
00010e97: R3 := pad:64[31:0[R0] >> pad:10[4:0[R3]]]
00010e9d: R19 := pad:64[21:21[R2].0]
00010ea3: R4 := pad:64[17:0[R2].0]
00010eaa: R15 := pad:64[31:0[R9] & (13:0[R2].0)]
00010eb0: R14 := pad:64[0:0[R2].0]
00010eb7: R17 := pad:64[31:0[R8] & (27:0[R2].0)]
00010ebd: R12 := pad:64[25:0[R2].0]
00010ec3: R16 := pad:64[22:0[R2].0]
00010ec9: R4 := pad:64[27:27[R4].0]
00010ed0: R17 := pad:64[31:0[R17] | 31:0[R14]]
00010ed7: R4 := pad:64[31:0[R4] | 31:0[R15]]
00010edd: R16 := pad:64[21:21[R16].0]
00010ee3: R15 := pad:64[16:0[R2].0]
00010ee9: R14 := pad:64[14:0[R2].0]
00010ef0: R0 := pad:64[31:0[R0] << pad:10[4:0[R13]]]
00010ef6: R12 := pad:64[24:24[R12].0]
00010efd: R0 := pad:64[31:0[R0] | 31:0[R3]]
00010f03: R13 := pad:64[9:0[R2].0]
00010f09: R3 := pad:64[21:0[R2].0]
00010f10: R12 := pad:64[31:0[R12] | 31:0[R16]]
00010f16: R20 := pad:64[18:18[R3].0]
00010f1c: R22 := pad:64[29:29[R15].0]
00010f22: R16 := pad:64[27:27[R2].0]
00010f29: R4 := pad:64[31:0[R4] | 31:0[R17]]
00010f2f: R3 := pad:64[27:27[R3].0]
00010f35: R17 := pad:64[27:0[R2].0]
00010f3b: R18 := pad:64[27:0[R2].0]
00010f41: R21 := pad:64[26:26[R2].0]
00010f47: R13 := pad:64[26:26[R13].0]
00010f4d: R14 := pad:64[28:28[R14].0]
00010f54: R19 := pad:64[31:0[R20] | pad:32[31:1[R19]]]
00010f5b: R13 := pad:64[31:0[R13] | 31:0[R3]]
00010f62: R4 := pad:64[31:0[R4] | 31:0[R12]]
00010f68: R18 := pad:64[17:17[R18].0]
00010f6e: R20 := pad:64[27:4[R0]]
00010f74: R30 := pad:64[26:26[R0].0]
00010f7b: R14 := pad:64[31:0[R14] | 31:0[R22]]
00010f81: R3 := pad:64[24:24[R17].0]
00010f87: R12 := pad:64[15:0[R2].0]
00010f8d: R17 := pad:64[20:0[R2].0]
00010f94: R21 := pad:64[31:0[R18] | pad:32[31:10[R21]]]
00010f9b: R14 := pad:64[31:0[R14] | 31:0[R13]]
00010fa2: R4 := pad:64[31:0[R4] | 31:0[R19]]
00010fa8: R13 := pad:64[27:0[R2].0]
00010fae: R20 := pad:64[12:12[R20].0]
00010fb4: R19 := pad:64[25:0[R0].0]
00010fba: R18 := pad:64[11:11[R0].0]
00010fc1: R3 := pad:64[31:0[R3] | pad:32[31:2[R16]]]
00010fc7: R17 := pad:64[20:20[R17].0]
00010fcd: R16 := pad:64[24:24[R2].0]
00010fd3: R12 := pad:64[21:21[R12].0]
00010fda: R30 := pad:64[31:0[R20] | pad:32[31:13[R30]]]
00010fe1: R12 := pad:64[31:0[R12] | 31:0[R17]]
00010fe8: R4 := pad:64[31:0[R4] | 31:0[R21]]
00010fee: R17 := pad:64[20:20[R2].0]
00010ff4: R21 := pad:64[27:14[R0]]
00010ffa: R19 := pad:64[11:11[R19].0]
00011000: R20 := pad:64[10:10[R0].0]
00011007: R3 := pad:64[31:0[R14] | 31:0[R3]]
0001100d: R14 := pad:64[19:19[R13].0]
00011014: R18 := pad:64[31:0[R19] | pad:32[31:1[R18]]]
0001101a: R13 := pad:64[27:3[R0]]
00011021: R4 := pad:64[31:0[R4] | 31:0[R30]]
00011027: R22 := pad:64[9:9[R21].0]
0001102d: R19 := pad:64[14:14[R0].0]
00011034: R3 := pad:64[31:0[R3] | 31:0[R12]]
0001103a: R30 := pad:64[15:15[R0].0]
00011041: R12 := pad:64[31:0[R14] | pad:32[31:6[R16]]]
00011047: R15 := pad:64[17:17[R15].0]
0001104d: R14 := pad:64[23:0[R0].0]
00011054: R15 := pad:64[31:0[R15] | pad:32[31:4[R17]]]
0001105b: R4 := pad:64[31:0[R4] | 31:0[R18]]
00011062: R20 := pad:64[31:0[R22] | pad:32[31:5[R20]]]
00011068: R16 := pad:64[27:26[R0]]
0001106e: R22 := pad:64[3:3[R13].0]
00011074: R18 := pad:64[20:20[R0].0]
0001107b: R3 := pad:64[31:0[R3] | 31:0[R12]]
00011081: R14 := pad:64[12:12[R14].0]
00011087: R17 := pad:64[19:19[R0].0]
0001108e: R12 := pad:64[31:0[R21] & 31:0[R7]]
00011095: R19 := pad:64[31:0[R22] | pad:32[31:10[R19]]]
0001109b: R16 := pad:64[1:1[R16].0]
000110a2: R3 := pad:64[31:0[R3] | 31:0[R15]]
000110a9: R30 := pad:64[31:0[R14] | pad:32[31:2[R30]]]
000110af: R15 := pad:64[12:12[R0].0]
000110b5: R14 := pad:64[24:0[R0].0]
000110bc: R4 := pad:64[31:0[R4] | 31:0[R20]]
000110c3: R18 := pad:64[31:0[R16] | pad:32[31:18[R18]]]
000110ca: R4 := pad:64[31:0[R4] | 31:0[R19]]
000110d0: R16 := pad:64[24:24[R0]]
000110d6: R19 := pad:64[8:8[R0].0]
000110dd: R17 := pad:64[31:0[R12] | pad:32[31:9[R17]]]
000110e4: R3 := pad:64[31:0[R3] | 31:0[R30]]
000110ea: R12 := pad:64[8:8[R14].0]
000110f1: R15 := pad:64[31:0[R12] | pad:32[31:7[R15]]]
000110f7: R14 := pad:64[0:0[R0].0]
000110fd: R12 := pad:64[22:22[R0].0]
00011104: R13 := pad:64[31:0[R13] & 31:0[R6]]
0001110b: R4 := pad:64[31:0[R4] | 31:0[R18]]
00011112: R16 := pad:64[31:0[R16] | 31:0[R19]]
00011119: R3 := pad:64[31:0[R3] | 31:0[R17]]
00011120: R4 := pad:64[31:0[R4] | 31:0[R16]]
00011127: R13 := pad:64[31:0[R14] | 31:0[R13]]
0001112e: R3 := pad:64[31:0[R3] | 31:0[R15]]
00011134: R14 := pad:64[9:9[R0].0]
0001113c: mem := mem with [R1, el]:u32 <- 31:0[R4]
00011140: R1 := R1 + 8
00011147: R3 := pad:64[31:0[R3] | 31:0[R13]]
0001114e: R4 := pad:64[31:0[R14] | pad:32[31:21[R12]]]
00011155: R3 := pad:64[31:0[R3] | 31:0[R4]]
0001115d: mem := mem with [R1 - 4, el]:u32 <- 31:0[R3]
00011163: R2 := pad:64[27:0[R2]]
00011169: R0 := pad:64[27:0[R0]]
0001116f: #69 := ~R11
00011174: #70 := R5 + ~R11
0001117a: VF := extend:128[#70 + 1] <> extend:128[R5] + extend:128[#69] + 1
00011180: CF := pad:128[#70 + 1] <> pad:128[R5] + pad:128[#69] + 1
00011184: ZF := #70 + 1 = 0
00011188: NF := 63:63[#70 + 1]
0001118d: when ZF <> 1 goto %00010e6b
000344af: goto %00011191

00011191:
00011195: #71 := R31 + 0x10
0001119a: R19 := mem[#71, el]:u64
0001119f: R20 := mem[#71 + 8, el]:u64
000111a5: #72 := R31 + 0x20
000111aa: R21 := mem[#72, el]:u64
000111af: R22 := mem[#72 + 8, el]:u64
000111b6: R29 := mem[R31, el]:u64
000111bb: R30 := mem[R31 + 8, el]:u64
000111bf: R31 := R31 + 0x30
000111c4: call R30 with noreturn

000344b0: sub direct_request(direct_request_result)
00034b91: direct_request_result :: out u32 = low:32[R0]

00021697:
0002169e: #1002 := R31 - 0x110
000216a4: mem := mem with [#1002, el]:u64 <- R29
000216aa: mem := mem with [#1002 + 8, el]:u64 <- R30
000216ae: R31 := #1002
000216b4: R3 := R0
000216ba: R4 := R0 + 0x14
000216c0: R29 := R31
000216c6: #1003 := R31 + 0x10
000216cc: mem := mem with [#1003, el]:u64 <- R19
000216d2: mem := mem with [#1003 + 8, el]:u64 <- R20
000216d8: R5 := R0 + 0x18
000216de: R19 := R1
000216e4: #1004 := R31 + 0x20
000216ea: mem := mem with [#1004, el]:u64 <- R21
000216f0: mem := mem with [#1004 + 8, el]:u64 <- R22
000216f6: R2 := R31 + 0xE0
000216fd: R1 := pad:64[mem[R3, el]:u32]
00021702: V0 := 0
00021709: R0 := pad:64[mem[R0 + 0x10, el]:u16]
0002170e: R3 := 0x2E
00021716: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0002171c: #1005 := 31:0[R0] - 2
00021721: VF := extend:64[#1005] <> extend:64[31:0[R0]] - 2
00021726: CF := pad:64[#1005] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0002172a: ZF := #1005 = 0
0002172e: NF := 31:31[#1005]
00021736: mem := mem with [R31 + 0xA4, el]:u32 <- 31:0[R1]
00021744: when ZF <> 1 goto %0002173c
00021745: goto %00021740

00021740:
00021741: R1 := R4
00021747: goto %00021743

0002173c:
0002173d: R1 := R5
00021746: goto %00021743

00021743:
0002174d: #1006 := R31 + 0xB0
00021752: mem := mem with [#1006, el]:u64 <- 0
00021757: mem := mem with [#1006 + 8, el]:u64 <- 0
0002175d: #1007 := R31 + 0xE0
00021763: mem := mem with [#1007, el]:u128 <- V0
00021769: mem := mem with [#1007 + 0x10, el]:u128 <- V0
00021771: mem := mem with [R31 + 0xFE, el]:u128 <- V0
00021776: R30 := 0x405C18
00021778: call @inet_ntop with return %0002177a

0002177a:
0002177d: R0 := 0x430000
00021784: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0002178a: when 31:0[R0] <> 0 goto %00021788
000344b1: goto %000217a0

00021788:
00021790: R0 := 0x412000
00021796: R0 := R0 + 0xC58
0002179b: R30 := 0x4062AC
0002179d: call @puts with return %0002179f

0002179f:
000217a2: goto %000217a0

000217a0:
000217a6: R30 := 0x405C28
000217a8: call @__errno_location with return %000217aa

000217aa:
000217ae: R3 := R0
000217b5: R20 := mem[R19 + 0x40, el]:u64
000217bb: R0 := R31 + 0xD0
000217c2: R21 := pad:64[mem[R19 + 0x20, el]:u32]
000217c9: mem := mem with [R3, el]:u32 <- 0
000217cf: R1 := R20
000217d5: R2 := pad:64[31:0[R21]]
000217dd: mem := mem with [R31 + 0x70, el]:u64 <- R3
000217e2: R30 := 0x405C4C
000217e4: call @so_resolv with return %000217e6

000217e6:
000217ea: when 31:0[R0] = 0 goto %000217e8
000344b2: goto %0002751b

0002751b:
00027520: R0 := mem[R31 + 0xD0, el]:u64
00027525: R30 := 0x405C58
00027527: call @so_connect with return %00027529

00027529:
0002752d: R20 := pad:64[31:0[R0]]
00027534: R0 := mem[R31 + 0xD0, el]:u64
00027539: R30 := 0x405C64
0002753b: call @freeaddrinfo with return %0002753d

0002753d:
00027543: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R20]
00027548: when 31:31[R20] goto %000217e8
000344b3: goto %0002754c

000217e8:
000217f2: R22 := mem[R31 + 0x70, el]:u64
000217f9: R20 := mem[R19 + 0x40, el]:u64
00021800: R0 := pad:64[mem[R22, el]:u32]
00021807: R21 := pad:64[mem[R19 + 0x20, el]:u32]
0002180c: R30 := 0x406380
0002180e: call @strerror with return %00021810

00021810:
00021814: R4 := R0
0002181a: R3 := pad:64[31:0[R21]]
00021820: R2 := R20
00021825: R0 := 4
0002182a: R1 := 0x412000
00021830: R1 := R1 + 0xC78
00021835: R30 := 0x40639C
00021837: call @syslog with return %00021839

00021839:
0002183e: R0 := pad:64[mem[R22, el]:u32]
00021845: R19 := mem[R19 + 0x48, el]:u64
0002184a: R30 := 0x4063A8
0002184c: call @strerror with return %0002184e

0002184e:
00021852: R1 := R0
00021858: R0 := R19
0002185d: R30 := 0x4063B4
0002185f: call @gen_502_page with return %00021861

00021861:
00021865: R19 := R0
0002186a: R30 := 0x4063BC
0002186c: call @strlen with return %0002186e

0002186e:
00021872: R2 := R0
00021879: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0002187f: R1 := R19
00021884: R30 := 0x4063CC
00021886: call @write_wrapper with return %00021888

00021888:
0002188c: R0 := R19
00021891: R30 := 0x4063D4
00021893: call @free with return %00021895

0002754c:
0002754f: R0 := 0x430000
00027554: R1 := 1
0002755b: R0 := mem[R0 + 0x3C8, el]:u64
00027560: R30 := 0x405C7C
00027562: call @dup_auth with return %00027564

00027564:
0002756a: mem := mem with [R31 + 0x78, el]:u64 <- R0
00027571: R1 := mem[R19 + 0x40, el]:u64
00027576: when R1 = 0 goto %00021b93
000344b4: goto %0002757a

00021b93:
00021b98: R0 := mem[R19 + 0x48, el]:u64
00021b9d: R1 := 0x412000
00021ba3: R1 := R1 + 0xCA0
00021ba8: R30 := 0x40631C
00021baa: call @gen_502_page with return %00021bac

00021bac:
00021bb0: R19 := R0
00021bb5: R30 := 0x406324
00021bb7: call @strlen with return %00021bb9

00021bb9:
00021bbd: R2 := R0
00021bc4: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00021bca: R1 := R19
00021bcf: R30 := 0x406334
00021bd1: call @write_wrapper with return %00021bd3

00021bd3:
00021bd7: R0 := R19
00021bdc: R30 := 0x40633C
00021bde: call @free with return %00021be0

00021be0:
00021be5: R0 := mem[R31 + 0x78, el]:u64
00021beb: when R0 = 0 goto %00021be9
000344b5: goto %00021bfb

00021bfb:
00021bfe: R30 := 0x406348
00021c00: call @free with return %00021be9

00021be9:
00021bf1: R0 := 0xFFFFFFFFFFFFFFFF
00021bf9: mem := mem with [R31 + 0x68, el]:u64 <- R0
000344b6: goto %00021b09

0002757a:
0002757e: R0 := R1
00027584: #1219 := R31 + 0x30
0002758a: mem := mem with [#1219, el]:u64 <- R23
00027590: mem := mem with [#1219 + 8, el]:u64 <- R24
00027596: #1220 := R31 + 0x40
0002759c: mem := mem with [#1220, el]:u64 <- R25
000275a2: mem := mem with [#1220 + 8, el]:u64 <- R26
000275a8: #1221 := R31 + 0x50
000275ae: mem := mem with [#1221, el]:u64 <- R27
000275b4: mem := mem with [#1221 + 8, el]:u64 <- R28
000275b9: R30 := 0x405C9C
000275bb: call @strdup with return %000275bd

000275bd:
000275c2: R1 := pad:64[mem[R19, el]:u32]
000275c9: R2 := pad:64[mem[R19 + 0x20, el]:u32]
000275cf: R23 := R0
000275d7: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R2]
000275dd: when 31:0[R1] = 0 goto %000275db
000344b7: goto %0002765c

0002765c:
00027661: R1 := mem[R19 + 0x28, el]:u64
00027666: R0 := 0x412000
0002766c: R0 := R0 + 0xCB8
00027671: R30 := 0x405CC0
00027673: call @strcasecmp with return %00027675

00027675:
00027679: R21 := pad:64[31:0[R0]]
0002767e: when 31:0[R0] = 0 goto %00027611
000344b8: goto %000275db

000275db:
000275e4: R0 := R19
000275e9: R1 := 0
000275ee: R30 := 0x405CD4
000275f0: call @http_has_body with return %000275f2

000275f2:
000275f5: VF := 0
000275f8: CF := 1
000275fc: ZF := R0 = 0
00027600: NF := 63:63[R0]
0002760c: when ZF goto %00027605
0002760d: goto %00027608

00027608:
00027609: R21 := 1
0002760f: goto %0002760b

00027605:
00027606: R21 := 0
0002760e: goto %0002760b

0002760b:
000344b9: goto %00027611

00027611:
00027615: R0 := R19
0002761a: R30 := 0x405CE4
0002761c: call @dup_rr_data with return %0002761e

0002761e:
00027621: R19 := 0x430000
00027626: R1 := 0x412000
0002762c: R22 := R31 + 0xB0
00027632: R1 := R1 + 0xCC0
00027638: R19 := R19 + 0x374
0002763f: mem := mem with [R31 + 0x68, el]:u64 <- 0
00027647: mem := mem with [R31 + 0x90, el]:u64 <- R1
0002764c: R1 := 0x412000
00027652: R1 := R1 + 0xCE8
0002765a: mem := mem with [R31 + 0x98, el]:u64 <- R1
000344ba: goto %00027388

00027388:
00027391: mem := mem with [R31 + 0xB0, el]:u64 <- R0
00027396: R30 := 0x405D14
00027398: call @new_rr_data with return %0002739a

0002739a:
000273a0: mem := mem with [R31 + 0xB8, el]:u64 <- R0
000273a6: R0 := R31 + 0xA4
000273ac: R25 := R31 + 0xC0
000273b4: mem := mem with [R31 + 0xC0, el]:u64 <- R0
000273ba: R0 := R31 + 0xA0
000273bf: R27 := 0
000273c6: mem := mem with [R31 + 0x8C, el]:u32 <- 0
000273cc: #1218 := R31 + 0xC8
000273d2: mem := mem with [#1218, el]:u64 <- R0
000273d8: mem := mem with [#1218 + 8, el]:u64 <- R0
000273de: R0 := R31 + 0xA4
000273e6: mem := mem with [R31 + 0xD8, el]:u64 <- R0
000344bb: goto %00021c70

00021c70:
00021c79: R28 := extend:64[31:0[R27]]
00021c80: R2 := pad:64[mem[R19, el]:u32]
00021c86: R20 := extend:64[31:0[R27].0]
00021c8e: R1 := mem[R22 + (60:0[R28].0), el]:u64
00021c95: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
00021c9b: when 31:0[R0] = 0 goto %00021c99
000344bc: goto %0002729a

0002729a:
0002729e: when 31:0[R2] <> 0 goto %0002729c
000344bd: goto %00027306

0002729c:
000272a6: R0 := mem[R31 + 0x90, el]:u64
000272ac: R1 := pad:64[31:0[R27] + 1]
000272b3: R2 := pad:64[mem[R31 + 0x88, el]:u32]
000272ba: R3 := pad:64[mem[R31 + 0xA0, el]:u32]
000272bf: R30 := 0x40608C
000272c1: call @printf with return %000272c3

000272c3:
000272c9: R1 := mem[R25 + R20, el]:u64
000272d0: R0 := mem[R31 + 0x98, el]:u64
000272d7: R24 := pad:64[mem[R1, el]:u32]
000272dd: R1 := pad:64[31:0[R24]]
000272e2: R30 := 0x4060A0
000272e4: call @printf with return %000272e6

000272e6:
000272ec: R1 := mem[R22 + R20, el]:u64
000272f1: goto %000272ef

00027306:
0002730c: R0 := mem[R25 + R20, el]:u64
00027313: R24 := pad:64[mem[R0, el]:u32]
000344be: goto %000272ef

000272ef:
000272f6: R0 := pad:64[31:0[R24]]
000272fb: R30 := 0x405D6C
000272fd: call @headers_recv with return %000272ff

000272ff:
00027302: when 31:0[R0] = 0 goto %00021a8f
000344bf: goto %00021c99

00021c99:
00021ca1: VF := 0
00021ca4: CF := 1
00021ca8: ZF := 31:0[R27] = 0
00021cac: NF := 31:31[R27]
00021cb3: R26 := pad:64[mem[R19, el]:u32]
00021cbf: when ZF <> 1 goto %00021cb8
00021cc0: goto %00021cbb

00021cbb:
00021cbc: R24 := 1
00021cc2: goto %00021cbe

00021cb8:
00021cb9: R24 := 0
00021cc1: goto %00021cbe

00021cbe:
00021cc7: VF := 0
00021cca: CF := 1
00021cce: ZF := R23 = 0
00021cd2: NF := 63:63[R23]
00021cde: when ZF goto %00021cd7
00021cdf: goto %00021cda

00021cda:
00021cdb: R0 := 1
00021ce1: goto %00021cdd

00021cd7:
00021cd8: R0 := 0
00021ce0: goto %00021cdd

00021cdd:
00021ce8: #1020 := 31:0[R24] & 31:0[R0]
00021ceb: VF := 0
00021cee: CF := 0
00021cf2: ZF := #1020 = 0
00021cf7: NF := 31:31[R24] & 31:31[R0]
00021cfb: R24 := pad:64[#1020]
00021d01: when ZF goto %00021cff
000344c0: goto %00027213

00021cff:
00021d08: when 31:0[R26] <> 0 goto %00021d06
000344c1: goto %00021d22

00021d06:
00021d11: R0 := mem[R22 + (60:0[R28].0), el]:u64
00021d18: R0 := mem[R0 + 8, el]:u64
00021d1d: R30 := 0x405FF4
00021d1f: call @hlist_dump with return %00021d21

00021d21:
00021d24: goto %00021d22

00021d22:
00021d29: when 31:0[R27] = 0 goto %00021d27
000344c2: goto %000271aa

00021d27:
00021d31: R20 := mem[R31 + 0xB0, el]:u64
00021d36: goto %00021d34

000271aa:
000271ae: #1214 := 31:0[R27] - 1
000271b3: VF := extend:64[#1214] <> extend:64[31:0[R27]] - 1
000271b8: CF := pad:64[#1214] <> pad:64[31:0[R27]] + 0xFFFFFFFF
000271bc: ZF := #1214 = 0
000271c0: NF := 31:31[#1214]
000271c5: when ZF <> 1 goto %00021faf
000344c3: goto %000271c9

000271c9:
000271ce: R0 := mem[R31 + 0xB8, el]:u64
000271d5: R1 := pad:64[mem[R0 + 0x10, el]:u32]
000271db: #1215 := 31:0[R1] - 0x191
000271e0: VF := extend:64[#1215] <> extend:64[31:0[R1]] - 0x191
000271e5: CF := pad:64[#1215] <> pad:64[31:0[R1]] + 0xFFFFFE6F
000271e9: ZF := #1215 = 0
000271ed: NF := 31:31[#1215]
000271f2: when ZF goto %00021ff1
000344c4: goto %000271f6

00021ff1:
00021ff6: R0 := mem[R0 + 8, el]:u64
00021ffb: R2 := 0x412000
00022000: R1 := 0x412000
00022006: R2 := R2 + 0xDA8
0002200c: R1 := R1 + 0xB10
00022011: R30 := 0x406250
00022013: call @hlist_subcmp_all with return %00022015

00022015:
00022019: when 31:0[R0] <> 0 goto %00022017
000344c5: goto %000223bb

00022017:
00022021: R0 := mem[R31 + 0xB8, el]:u64
00022026: R1 := 0x412000
0002202b: R24 := 0x412000
00022031: R26 := R1 + 0xA80
00022037: R24 := R24 + 0xDB0
0002203d: R1 := R26
00022044: R0 := mem[R0 + 8, el]:u64
0002204a: R2 := R24
0002204f: R30 := 0x40643C
00022051: call @hlist_subcmp with return %00022053

00022053:
00022058: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
0002205e: when 31:0[R0] = 0 goto %0002205c
000344c6: goto %00022212

00022212:
00022217: R0 := pad:64[mem[R19, el]:u32]
0002221d: when 31:0[R0] <> 0 goto %0002221b
000344c7: goto %00022233

0002221b:
00022223: R0 := 0x412000
00022229: R0 := R0 + 0xDB8
0002222e: R30 := 0x406650
00022230: call @puts with return %00022232

00022232:
00022235: goto %00022233

00022233:
0002223a: R0 := pad:64[31:0[R20]]
0002223f: R30 := 0x406454
00022241: call @close with return %00022243

00022243:
00022248: R20 := mem[R31 + 0xB8, el]:u64
0002224d: R3 := 1
00022252: R2 := 0x412000
00022257: R1 := 0x412000
0002225d: R2 := R2 + 0xAA0
00022263: R1 := R1 + 0xAA8
0002226a: R0 := mem[R20 + 8, el]:u64
0002226f: R30 := 0x406474
00022271: call @hlist_mod with return %00022273

00022273:
00022278: R2 := mem[R31 + 0xB0, el]:u64
0002227f: R3 := mem[R31 + 0x70, el]:u64
00022286: R1 := mem[R2 + 0x40, el]:u64
0002228d: R2 := pad:64[mem[R2 + 0x20, el]:u32]
00022295: mem := mem with [R20 + 8, el]:u64 <- R0
0002229b: R0 := R31 + 0xA8
000222a2: mem := mem with [R3, el]:u32 <- 0
000222a7: R30 := 0x406494
000222a9: call @so_resolv with return %000222ab

000222ab:
000222af: when 31:0[R0] = 0 goto %000222ad
000344c8: goto %00022389

000222ad:
000222b5: R0 := 0xFFFFFFFF
000222bb: R20 := pad:64[31:0[R0]]
000222c3: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
000344c9: goto %000222c5

00022389:
0002238e: R0 := mem[R31 + 0xA8, el]:u64
00022393: R30 := 0x4064A0
00022395: call @so_connect with return %00022397

00022397:
0002239b: R20 := pad:64[31:0[R0]]
000223a2: R0 := mem[R31 + 0xA8, el]:u64
000223a7: R30 := 0x4064AC
000223aa: call @freeaddrinfo with return %000223ac

000223ac:
000223b2: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R20]
000223b7: when 31:31[R20] goto %000222c5
000344ca: goto %0002205c

000222c5:
000222ca: R0 := mem[R31 + 0xB0, el]:u64
000222cf: R1 := 0x412000
000222d5: R1 := R1 + 0xDD8
000344cb: goto %000222d7

0002205c:
00022065: #1023 := R31 + 0xB0
0002206a: R2 := mem[#1023, el]:u64
0002206f: R3 := mem[#1023 + 8, el]:u64
00022075: R5 := pad:64[31:0[R21]]
0002207c: R4 := mem[R31 + 0x78, el]:u64
00022082: R0 := pad:64[31:0[R20]]
00022089: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0002208e: R30 := 0x4064CC
00022090: call @www_authenticate with return %00022092

00022092:
00022095: when 31:0[R0] = 0 goto %00021df5
000344cc: goto %00022099

00021df5:
00021df8: R0 := 0x430000
00021dff: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00021e05: when 31:0[R0] <> 0 goto %00021e03
000344cd: goto %00021e1b

00021e03:
00021e0b: R0 := 0x412000
00021e11: R0 := R0 + 0xE00
00021e16: R30 := 0x4066CC
00021e18: call @puts with return %00021e1a

00021e1a:
00021e1d: goto %00021e1b

00021e1b:
00021e23: R2 := mem[R31 + 0xB8, el]:u64
00021e28: R1 := 0x412000
00021e2e: R1 := R1 + 0xC38
00021e35: R0 := mem[R2 + 0x48, el]:u64
00021e3c: R2 := mem[R2 + 0x60, el]:u64
00021e41: VF := 0
00021e44: CF := 1
00021e48: ZF := R2 = 0
00021e4c: NF := 63:63[R2]
00021e5a: when ZF goto %00021e52
00021e5b: goto %00021e56

00021e56:
00021e57: R1 := R2
00021e5d: goto %00021e59

00021e52:
00021e53: R1 := R1
00021e5c: goto %00021e59

00021e59:
00021e62: R30 := 0x4066BC
00021e64: call @gen_502_page with return %00021e66

00021e66:
00021e69: goto %00021e67

00022099:
0002209e: R0 := mem[R31 + 0xB8, el]:u64
000220a5: R1 := pad:64[mem[R0 + 0x10, el]:u32]
000220ab: #1024 := 31:0[R1] - 0x191
000220b0: VF := extend:64[#1024] <> extend:64[31:0[R1]] - 0x191
000220b5: CF := pad:64[#1024] <> pad:64[31:0[R1]] + 0xFFFFFE6F
000220b9: ZF := #1024 = 0
000220bd: NF := 31:31[#1024]
000220c3: when ZF <> 1 goto %000220c1
000344ce: goto %000221ef

000221ef:
000221f4: R1 := mem[R31 + 0xB0, el]:u64
000221fb: R0 := mem[R0 + 0x48, el]:u64
00022202: R2 := pad:64[mem[R1 + 0x20, el]:u32]
00022209: R1 := mem[R1 + 0x40, el]:u64
0002220e: R30 := 0x4064F4
00022210: call @gen_401_page with return %00021e67

00021e67:
00021e6e: R19 := R0
00021e73: R30 := 0x4064FC
00021e75: call @strlen with return %00021e77

00021e77:
00021e7b: R2 := R0
00021e82: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00021e88: R1 := R19
00021e8d: R30 := 0x40650C
00021e8f: call @write_wrapper with return %00021e91

00021e91:
00021e95: R0 := R19
00021e9a: R30 := 0x406514
00021e9c: call @free with return %00021e9e

00021e9e:
00021ea2: R0 := R22
00021ea7: R30 := 0x40651C
00021ea9: call @free_rr_data with return %00021eab

00021eab:
00021eaf: R0 := R31 + 0xB8
00021eb4: R30 := 0x406524
00021eb6: call @free_rr_data with return %00021eb8

00021eb8:
00021ebb: R0 := 0xFFFFFFFFFFFFFFFF
00021ec3: mem := mem with [R31 + 0x68, el]:u64 <- R0
00021ec7: goto %00021ac2

000223bb:
000223bf: when 31:0[R21] <> 0 goto %000223bd
000344cf: goto %000224d7

000224d7:
000224dc: R0 := mem[R31 + 0xB8, el]:u64
000224e1: R26 := 0x412000
000224e6: R24 := 0x412000
000224ec: R26 := R26 + 0xA80
000224f2: R24 := R24 + 0xDB0
000224f6: goto %000220c1

000271f6:
000271f9: when 31:0[R21] <> 0 goto %000223bd
000344d0: goto %000271fd

000223bd:
000223c7: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
000223cd: R0 := pad:64[31:0[R20]]
000223d2: R30 := 0x406004
000223d4: call @so_closed with return %000223d6

000223d6:
000223da: when 31:0[R0] = 0 goto %000223d8
000344d1: goto %00022422

00022422:
00022426: R0 := pad:64[31:0[R20]]
0002242b: R30 := 0x406010
0002242d: call @close with return %0002242f

0002242f:
00022434: R2 := mem[R31 + 0xB0, el]:u64
0002243a: R0 := R31 + 0xA8
00022441: R3 := mem[R31 + 0x70, el]:u64
00022448: R1 := mem[R2 + 0x40, el]:u64
0002244f: R2 := pad:64[mem[R2 + 0x20, el]:u32]
00022456: mem := mem with [R3, el]:u32 <- 0
0002245b: R30 := 0x40602C
0002245d: call @so_resolv with return %0002245f

0002245f:
00022463: when 31:0[R0] = 0 goto %00022461
000344d2: goto %0002248f

00022461:
00022469: R0 := 0xFFFFFFFF
0002246f: R20 := pad:64[31:0[R0]]
00022477: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
000344d3: goto %00022479

0002248f:
00022494: R0 := mem[R31 + 0xA8, el]:u64
00022499: R30 := 0x406038
0002249b: call @so_connect with return %0002249d

0002249d:
000224a1: R20 := pad:64[31:0[R0]]
000224a8: R0 := mem[R31 + 0xA8, el]:u64
000224ad: R30 := 0x406044
000224af: call @freeaddrinfo with return %000224b1

000224b1:
000224b7: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R20]
000224bc: when 31:31[R20] goto %00022479
000344d4: goto %000224c0

00022479:
0002247e: R0 := mem[R31 + 0xB0, el]:u64
00022483: R1 := 0x412000
00022489: R1 := R1 + 0xE20
0002248d: goto %000222d7

000222d7:
000222dc: R0 := mem[R0 + 0x48, el]:u64
000222e1: R30 := 0x4065F0
000222e3: call @gen_502_page with return %000222e5

000222e5:
000222e9: R19 := R0
000222ee: R30 := 0x4065F8
000222f0: call @strlen with return %000222f2

000222f2:
000222f6: R2 := R0
000222fd: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00022303: R1 := R19
00022308: R30 := 0x406608
0002230a: call @write_wrapper with return %0002230c

0002230c:
00022310: R0 := R19
00022315: R30 := 0x406610
00022317: call @free with return %00022319

00022319:
0002231d: R0 := R22
00022322: R30 := 0x406618
00022324: call @free_rr_data with return %00022326

00022326:
0002232a: R0 := R31 + 0xB8
0002232f: R30 := 0x406620
00022331: call @free_rr_data with return %00022333

00022333:
00022336: R0 := 0xFFFFFFFFFFFFFFFF
0002233e: mem := mem with [R31 + 0x68, el]:u64 <- R0
00022345: R0 := mem[R31 + 0x78, el]:u64
0002234a: when R0 <> 0 goto %00021c0f
000344d5: goto %0002234e

0002234e:
00022351: when R23 <> 0 goto %00021c02
000344d6: goto %00022355

00022355:
00022359: #1029 := R31 + 0x30
0002235e: R23 := mem[#1029, el]:u64
00022363: R24 := mem[#1029 + 8, el]:u64
00022369: #1030 := R31 + 0x40
0002236e: R25 := mem[#1030, el]:u64
00022373: R26 := mem[#1030 + 8, el]:u64
00022379: #1031 := R31 + 0x50
0002237e: R27 := mem[#1031, el]:u64
00022383: R28 := mem[#1031 + 8, el]:u64
00022387: goto %00021895

00021895:
00021898: R0 := 0xFFFFFFFFFFFFFFFF
000218a0: mem := mem with [R31 + 0x68, el]:u64 <- R0
000218a6: #1008 := R31 + 0x10
000218ab: R19 := mem[#1008, el]:u64
000218b0: R20 := mem[#1008 + 8, el]:u64
000218b6: #1009 := R31 + 0x20
000218bb: R21 := mem[#1009, el]:u64
000218c0: R22 := mem[#1009 + 8, el]:u64
000218c7: R0 := mem[R31 + 0x68, el]:u64
000218ce: R29 := mem[R31, el]:u64
000218d3: R30 := mem[R31 + 8, el]:u64
000218d7: R31 := R31 + 0x110
000218dc: call R30 with noreturn

000224c0:
000224c3: R1 := 0x412000
000224c8: R0 := 7
000224ce: R1 := R1 + 0xE48
000224d3: R30 := 0x40605C
000224d5: call @syslog with return %000223d8

000223d8:
000223e2: R0 := mem[R31 + 0xB8, el]:u64
000223e7: R30 := 0x406064
000223e9: call @reset_rr_data with return %000223eb

000223eb:
000223f0: R21 := pad:64[mem[R19, el]:u32]
000223f6: when 31:0[R21] <> 0 goto %000223f4
000344d7: goto %00021a50

000223f4:
000223fe: R1 := mem[R31 + 0xD0, el]:u64
00022403: R0 := 0x412000
00022408: R21 := 0
0002240e: R0 := R0 + 0xE80
00022415: R1 := pad:64[mem[R1, el]:u32]
0002241a: R30 := 0x40620C
0002241c: call @printf with return %0002241e

0002241e:
00022420: goto %00021a05

000271fd:
00027200: R26 := 0x412000
00027205: R24 := 0x412000
0002720b: R26 := R26 + 0xA80
00027211: R24 := R24 + 0xDB0
000344d8: goto %000220c1

000220c1:
000220cb: R0 := mem[R0 + 8, el]:u64
000220d1: R2 := R24
000220d7: R1 := R26
000220dc: R30 := 0x405EDC
000220de: call @hlist_subcmp with return %000220e0

000220e0:
000220e4: R21 := pad:64[31:0[R0]]
000220ea: when 31:0[R0] <> 0 goto %000220e8
000344d9: goto %0002217a

0002217a:
0002217e: #1025 := R31 + 0xB0
00022183: R0 := mem[#1025, el]:u64
00022188: R1 := mem[#1025 + 8, el]:u64
0002218d: R30 := 0x405EEC
0002218f: call @http_has_body with return %00022191

00022191:
00022195: #1026 := R0 + 1
0002219a: VF := extend:128[#1026] <> extend:128[R0] + 1
0002219f: CF := pad:128[#1026] <> pad:128[R0] + 1
000221a3: ZF := #1026 = 0
000221a7: NF := 63:63[#1026]
000221ac: when ZF goto %000220e8
000344da: goto %000221b0

000220e8:
000220f2: R20 := mem[R31 + 0xB8, el]:u64
000220f7: goto %000220f5

000221b0:
000221b4: #1027 := R31 + 0xB0
000221b9: R0 := mem[#1027, el]:u64
000221be: R20 := mem[#1027 + 8, el]:u64
000221c5: R1 := pad:64[mem[R0 + 0x24, el]:u32]
000221cc: R0 := mem[R20 + 8, el]:u64
000221d2: #1028 := 31:0[R1] - 0xA
000221d7: VF := extend:64[#1028] <> extend:64[31:0[R1]] - 0xA
000221dc: CF := pad:64[#1028] <> pad:64[31:0[R1]] + 0xFFFFFFF6
000221e0: ZF := #1028 = 0
000221e4: NF := 31:31[#1028]
000221eb: when NF = VF & ~ZF goto %00021f43
000344db: goto %000220f5

00021f43:
00021f46: R24 := 0x412000
00021f4c: R24 := R24 + 0xA70
00021f52: R2 := R24
00021f57: R3 := 1
00021f5c: R1 := 0x412000
00021f62: R1 := R1 + 0xE68
00021f67: R30 := 0x406580
00021f69: call @hlist_mod with return %00021f6b

00021f6b:
00021f71: mem := mem with [R20 + 8, el]:u64 <- R0
00021f78: R20 := mem[R31 + 0xB8, el]:u64
00021f7e: R1 := R26
00021f84: R2 := R24
00021f89: R3 := 1
00021f90: R0 := mem[R20 + 8, el]:u64
00021f95: R30 := 0x40659C
00021f97: call @hlist_mod with return %00021f99

00021f99:
00021f9f: mem := mem with [R20 + 8, el]:u64 <- R0
00021fa4: R1 := 1
00021fac: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R1]
00021fb1: goto %00021faf

000220f5:
000220fd: R0 := mem[R20 + 8, el]:u64
00022103: R2 := R24
00022108: R3 := 1
0002210d: R1 := 0x412000
00022113: R1 := R1 + 0xE68
00022118: R21 := 0
0002211d: R30 := 0x405F24
0002211f: call @hlist_mod with return %00022121

00022121:
00022126: R4 := mem[R31 + 0xB8, el]:u64
0002212e: mem := mem with [R20 + 8, el]:u64 <- R0
00022134: R1 := R26
0002213a: R2 := R24
0002213f: R3 := 1
00022147: mem := mem with [R31 + 0x80, el]:u64 <- R4
0002214e: R0 := mem[R4 + 8, el]:u64
00022153: R30 := 0x405F44
00022155: call @hlist_mod with return %00022157

00022157:
0002215c: mem := mem with [R31 + 0x8C, el]:u32 <- 0
00022163: R4 := mem[R31 + 0x80, el]:u64
00022168: R1 := 0xFFFFFFFFFFFFFFFF
00022170: mem := mem with [R31 + 0x68, el]:u64 <- R1
00022178: mem := mem with [R4 + 8, el]:u64 <- R0
000344dc: goto %00021faf

00021faf:
00021fb7: R0 := pad:64[mem[R19, el]:u32]
00021fbd: when 31:0[R0] <> 0 goto %00021fbb
000344dd: goto %00021a60

00021fbb:
00021fc4: R0 := R31 + 0xD0
00021fcc: R1 := mem[R0 + (60:0[R28].0), el]:u64
00021fd1: R0 := 0x412000
00021fd7: R0 := R0 + 0xE80
00021fde: R20 := pad:64[mem[R1, el]:u32]
00021fe4: R1 := pad:64[31:0[R20]]
00021fe9: R30 := 0x406234
00021feb: call @printf with return %00021fed

00021fed:
00021fef: goto %00021a78

00027213:
00027218: R20 := mem[R31 + 0xB0, el]:u64
0002721f: R1 := mem[R20 + 0x40, el]:u64
00027225: when R1 = 0 goto %00027223
000344de: goto %00027252

00027252:
00027256: R0 := R23
0002725b: R30 := 0x405DA0
0002725d: call @strcasecmp with return %0002725f

0002725f:
00027262: when 31:0[R0] <> 0 goto %00021ec9
000344df: goto %00027266

00027266:
0002726b: R0 := pad:64[mem[R20 + 0x20, el]:u32]
00027272: R1 := pad:64[mem[R31 + 0x64, el]:u32]
00027278: #1216 := ~31:0[R1]
0002727d: #1217 := 31:0[R0] + ~31:0[R1]
00027283: VF := extend:64[#1217 + 1] <> extend:64[31:0[R0]] +
          extend:64[#1216] + 1
00027289: CF := pad:64[#1217 + 1] <> pad:64[31:0[R0]] + pad:64[#1216] + 1
0002728d: ZF := #1217 + 1 = 0
00027291: NF := 31:31[#1217 + 1]
00027296: when ZF <> 1 goto %00021ec9
000344e0: goto %00027223

00021ec9:
00021ecd: when 31:0[R26] <> 0 goto %00021ecb
000344e1: goto %00021ef1

00021ecb:
00021ed5: R1 := mem[R20 + 0x30, el]:u64
00021eda: R0 := 0x412000
00021ee0: R0 := R0 + 0xD08
00021ee5: R30 := 0x406664
00021ee7: call @printf with return %00021ee9

00021ee9:
00021eee: R20 := mem[R31 + 0xB0, el]:u64
00021ef3: goto %00021ef1

00021ef1:
00021ef8: R0 := R20
00021efd: R30 := 0x40653C
00021eff: call @dup_rr_data with return %00021f01

00021f01:
00021f07: mem := mem with [R31 + 0x68, el]:u64 <- R0
00021f0d: R0 := R22
00021f12: R30 := 0x406548
00021f14: call @free_rr_data with return %00021f16

00021f16:
00021f1a: R0 := R31 + 0xB8
00021f1f: R30 := 0x406550
00021f21: call @free_rr_data with return %00021f23

00021f23:
00021f28: R0 := mem[R31 + 0x78, el]:u64
00021f2f: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
00021f34: when R0 = 0 goto %00021c02
000344e2: goto %00021f38

00021f38:
00021f3b: R30 := 0x406560
00021f3d: call @free with return %00021f3f

00021f3f:
00021f41: goto %00021c02

00027223:
0002722c: when 31:0[R26] <> 0 goto %0002722a
000344e3: goto %00021d34

0002722a:
00027234: R0 := mem[R20 + 8, el]:u64
00027239: R30 := 0x4060B0
0002723b: call @hlist_dump with return %0002723d

0002723d:
00027242: R20 := mem[R31 + 0xB0, el]:u64
00027249: R0 := pad:64[mem[R20, el]:u32]
0002724e: when 31:0[R0] = 0 goto %00021dee
000344e4: goto %00021d40

00021d34:
00021d3c: R0 := pad:64[mem[R20, el]:u32]
00021d42: when 31:0[R0] <> 0 goto %00021d40
000344e5: goto %00021dee

00021d40:
00021d49: #1021 := R20 + 0x28
00021d4e: R3 := mem[#1021, el]:u64
00021d53: R4 := mem[#1021 + 8, el]:u64
00021d58: R0 := 7
00021d5e: R2 := R31 + 0xE0
00021d63: R1 := 0x412000
00021d69: R1 := R1 + 0xD28
00021d6e: R30 := 0x4060D4
00021d70: call @syslog with return %00021d72

00021d72:
00021d77: R26 := mem[R31 + 0xB0, el]:u64
00021d7e: R0 := mem[R26 + 0x38, el]:u64
00021d84: when R0 = 0 goto %00021d82
000344e6: goto %00021daf

00021daf:
00021db4: R1 := mem[R26 + 0x30, el]:u64
00021dba: when R1 = 0 goto %00021db8
000344e7: goto %00021dd3

00021dd3:
00021dd7: R0 := R1
00021ddc: R30 := 0x4060F0
00021dde: call @free with return %00021de0

00021de0:
00021de5: R26 := mem[R31 + 0xB0, el]:u64
00021dec: R0 := mem[R26 + 0x38, el]:u64
000344e8: goto %00021db8

00021db8:
00021dc0: R30 := 0x4060FC
00021dc2: call @strdup with return %00021dc4

00021dc4:
00021dca: mem := mem with [R26 + 0x30, el]:u64 <- R0
00021dd1: R26 := mem[R31 + 0xB0, el]:u64
000344e9: goto %00021d82

00021d82:
00021d8c: R0 := pad:64[mem[R26 + 0x24, el]:u32]
00021d92: #1022 := 31:0[R0] - 0xA
00021d97: VF := extend:64[#1022] <> extend:64[31:0[R0]] - 0xA
00021d9c: CF := pad:64[#1022] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00021da0: ZF := #1022 = 0
00021da4: NF := 31:31[#1022]
00021dab: when NF = VF & ~ZF goto %000218de
000344ea: goto %00021917

000218de:
000218e3: R0 := mem[R26 + 8, el]:u64
000218e8: R2 := 0x412000
000218ed: R1 := 0x412000
000218f3: R2 := R2 + 0xA70
000218f9: R1 := R1 + 0xA80
000218fe: R3 := 1
00021903: R30 := 0x40640C
00021905: call @hlist_mod with return %00021907

00021907:
0002190d: mem := mem with [R26 + 8, el]:u64 <- R0
00021914: R26 := mem[R31 + 0xB0, el]:u64
00021919: goto %00021917

00021917:
0002191d: R20 := 0x412000
00021923: R20 := R20 + 0xD38
00021928: goto %00021926

00021926:
0002192d: R1 := R20
00021934: R0 := mem[R26 + 8, el]:u64
00021939: R30 := 0x406140
0002193b: call @hlist_get with return %0002193d

0002193d:
00021941: when R0 <> 0 goto %0002193f
000344eb: goto %0002196e

0002196e:
00021973: R0 := mem[R31 + 0xB0, el]:u64
00021978: R1 := 0x412000
0002197f: R2 := mem[R31 + 0x78, el]:u64
00021985: R1 := R1 + 0xA90
0002198c: R0 := mem[R0 + 8, el]:u64
00021991: R30 := 0x40615C
00021993: call @http_parse_basic with return %00021995

00021995:
00021998: VF := 0
0002199b: CF := 1
0002199f: ZF := 31:0[R0] = 0
000219a3: NF := 31:31[R0]
000219ab: when ~(NF = VF & ~ZF) goto %000219a9
000344ec: goto %000274ff

000274ff:
00027504: R0 := pad:64[mem[R19, el]:u32]
00027509: when 31:0[R0] <> 0 goto %000224f8
000344ed: goto %0002750d

000224f8:
000224fd: R1 := mem[R31 + 0x78, el]:u64
00022502: R0 := 0x412000
00022508: R0 := R0 + 0xD50
0002250e: R3 := R1 + 0x64
00022514: R2 := R1
0002251a: R1 := R1 + 0x32
0002251f: R30 := 0x40628C
00022521: call @printf with return %000219a9

000219a9:
000219b3: R0 := mem[R31 + 0xB0, el]:u64
000219ba: R20 := pad:64[mem[R19, el]:u32]
000219c0: when R0 <> 0 goto %000219be
000344ee: goto %000274f4

000274f4:
000274f7: when 31:0[R20] = 0 goto %000274c7
000344ef: goto %000274fb

000274fb:
000274fd: goto %000219da

0002750d:
00027512: R0 := mem[R31 + 0xB0, el]:u64
00027517: when R0 = 0 goto %000274c7
000344f0: goto %000219be

000219be:
000219c8: R1 := pad:64[mem[R0, el]:u32]
000219cf: R20 := pad:64[mem[R19, el]:u32]
000219d5: when 31:0[R1] = 0 goto %000219d3
000344f1: goto %000274cd

000274cd:
000274d2: R1 := mem[R0 + 0x28, el]:u64
000274d7: R0 := 0x412000
000274dd: R0 := R0 + 0xCB8
000274e2: R30 := 0x406190
000274e4: call @strcasecmp with return %000274e6

000274e6:
000274e9: when 31:0[R0] <> 0 goto %000219d3
000344f2: goto %000274ed

000274ed:
000274f0: when 31:0[R20] <> 0 goto %0002255b
000344f3: goto %0002256e

0002255b:
0002255e: R0 := 0x412000
00022564: R0 := R0 + 0xD80
00022569: R30 := 0x4066DC
0002256b: call @puts with return %0002256d

0002256d:
00022570: goto %0002256e

0002256e:
00022576: R19 := mem[R31 + 0xB8, el]:u64
0002257b: R1 := 0xC8
00022580: R0 := 0x412000
00022586: R0 := R0 + 0xD90
0002258d: mem := mem with [R19, el]:u32 <- 0
00022595: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
0002259c: mem := mem with [R19 + 0x1C, el]:u32 <- 0
000225a1: R30 := 0x4061B8
000225a3: call @strdup with return %000225a5

000225a5:
000225ab: mem := mem with [R19 + 0x50, el]:u64 <- R0
000225b2: R1 := mem[R31 + 0xB0, el]:u64
000225b9: R19 := mem[R31 + 0xB8, el]:u64
000225c0: R0 := mem[R1 + 0x48, el]:u64
000225c5: R30 := 0x4061CC
000225c7: call @strdup with return %000225c9

000225c9:
000225cf: mem := mem with [R19 + 0x48, el]:u64 <- R0
000225d6: R1 := mem[R31 + 0xB8, el]:u64
000225dd: R0 := pad:64[mem[R31 + 0x88, el]:u32]
000225e2: R30 := 0x4061DC
000225e4: call @headers_send with return %000225e6

000225e6:
000225eb: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
000225f0: when 31:0[R0] = 0 goto %00022530
000344f4: goto %000225f4

000225f4:
000225f9: R0 := pad:64[mem[R31 + 0x88, el]:u32]
000225ff: R1 := pad:64[31:0[R20]]
00022604: R30 := 0x4061F0
00022606: call @tunnel with return %00022608

00022608:
0002260a: goto %00022530

0002193f:
00021949: R24 := mem[R31 + 0xB0, el]:u64
0002194f: R1 := R20
00021956: R0 := mem[R24 + 8, el]:u64
0002195b: R30 := 0x40612C
0002195d: call @hlist_del with return %0002195f

0002195f:
00021965: mem := mem with [R24 + 8, el]:u64 <- R0
0002196c: R26 := mem[R31 + 0xB0, el]:u64
000344f5: goto %00021926

00021dee:
00021df3: R20 := pad:64[mem[R19, el]:u32]
000344f6: goto %000219d3

000219d3:
000219dc: when 31:0[R20] <> 0 goto %000219da
000344f7: goto %000274c7

000219da:
000219e4: R1 := mem[R31 + 0xD0, el]:u64
000219e9: R0 := 0x412000
000219ef: R24 := pad:64[0:0[R21]]
000219f5: R0 := R0 + 0xE80
000219fc: R1 := pad:64[mem[R1, el]:u32]
00021a01: R30 := 0x405E70
00021a03: call @printf with return %00021a05

00021a05:
00021a0a: R3 := mem[R31 + 0xB0, el]:u64
00021a0f: R0 := 0x412000
00021a15: R0 := R0 + 0xEA0
00021a1b: #1010 := R3 + 0x28
00021a20: R1 := mem[#1010, el]:u64
00021a25: R2 := mem[#1010 + 8, el]:u64
00021a2c: R3 := mem[R3 + 0x48, el]:u64
00021a31: R30 := 0x405E88
00021a33: call @printf with return %00021a35

00021a35:
00021a3a: R0 := mem[R31 + 0xB0, el]:u64
00021a41: R0 := mem[R0 + 8, el]:u64
00021a46: R30 := 0x405E94
00021a48: call @hlist_dump with return %00021a4a

00021a4a:
00021a4d: goto %00021a4b

000274c7:
000274cb: R24 := pad:64[0:0[R21]]
000344f8: goto %00021a4b

00021a4b:
00021a52: when 31:0[R24] = 0 goto %00021a50
000344f9: goto %000273ea

00021a50:
00021a58: R27 := 0
00021a5d: R28 := 0
00021a62: goto %00021a60

00021a60:
00021a67: R0 := R31 + 0xD0
00021a6f: R0 := mem[R0 + (60:0[R28].0), el]:u64
00021a76: R20 := pad:64[mem[R0, el]:u32]
000344fa: goto %00021a78

00021a78:
00021a7e: R1 := mem[R22 + (60:0[R28].0), el]:u64
00021a84: R0 := pad:64[31:0[R20]]
00021a89: R30 := 0x405F78
00021a8b: call @headers_send with return %00021a8d

00021a8d:
00021a91: when 31:0[R0] = 0 goto %00021a8f
000344fb: goto %00021c1d

00021c1d:
00021c23: R1 := mem[R25 + (60:0[R28].0), el]:u64
00021c29: R0 := pad:64[31:0[R20]]
00021c2f: #1018 := R31 + 0xB0
00021c34: R2 := mem[#1018, el]:u64
00021c39: R3 := mem[#1018 + 8, el]:u64
00021c40: R1 := pad:64[mem[R1, el]:u32]
00021c45: R30 := 0x405F90
00021c47: call @http_body_send with return %00021c49

00021c49:
00021c4c: when 31:0[R0] = 0 goto %00021a8f
000344fc: goto %00021c50

00021a8f:
00021a98: R0 := R22
00021a9d: R30 := 0x4062B8
00021a9f: call @free_rr_data with return %00021aa1

00021aa1:
00021aa5: R0 := R31 + 0xB8
00021aaa: R30 := 0x4062C0
00021aac: call @free_rr_data with return %00021aae

00021aae:
00021ab3: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
00021ab8: R0 := 0xFFFFFFFFFFFFFFFF
00021ac0: mem := mem with [R31 + 0x68, el]:u64 <- R0
000344fd: goto %00021ac2

00021c50:
00021c54: R27 := pad:64[31:0[R27] + 1]
00021c5a: #1019 := 31:0[R27] - 2
00021c5f: VF := extend:64[#1019] <> extend:64[31:0[R27]] - 2
00021c64: CF := pad:64[#1019] <> pad:64[31:0[R27]] + 0xFFFFFFFE
00021c68: ZF := #1019 = 0
00021c6c: NF := 31:31[#1019]
00021c72: when ZF <> 1 goto %00021c70
000344fe: goto %00027315

00027315:
00027319: R0 := R22
0002731e: R30 := 0x405FA8
00027320: call @free_rr_data with return %00027322

00027322:
00027326: R0 := R31 + 0xB8
0002732b: R30 := 0x405FB0
0002732d: call @free_rr_data with return %0002732f

0002732f:
00027334: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0002733b: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
00027340: when 31:0[R0] = 0 goto %00021ac2
000344ff: goto %00027344

00027344:
00027348: R0 := pad:64[31:0[R20]]
0002734d: R30 := 0x405FC4
0002734f: call @so_closed with return %00027351

00027351:
00027354: when 31:0[R0] <> 0 goto %00021ac2
00034500: goto %00027358

00027358:
0002735d: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00027362: R30 := 0x405FD0
00027364: call @so_closed with return %00027366

00027366:
00027369: R1 := 0x430000
00027370: R1 := pad:64[mem[R1 + 0x380, el]:u32]
00027377: R0 := pad:64[31:0[R0] | 31:0[R1]]
0002737c: when 31:0[R0] <> 0 goto %00021ac2
00034501: goto %00027380

00027380:
00027383: R30 := 0x405FE4
00027385: call @new_rr_data with return %00027387

00027387:
0002738a: goto %00027388

000273ea:
000273ef: R0 := mem[R31 + 0xB0, el]:u64
000273f4: R30 := 0x405DD8
000273f6: call @dup_rr_data with return %000273f8

000273f8:
000273fe: mem := mem with [R31 + 0xA8, el]:u64 <- R0
00027405: R0 := mem[R0 + 0x28, el]:u64
0002740a: R30 := 0x405DE4
0002740c: call @free with return %0002740e

0002740e:
00027413: R20 := mem[R31 + 0xA8, el]:u64
00027418: R0 := 0x412000
0002741e: R0 := R0 + 0xEB0
00027423: R30 := 0x405DF4
00027425: call @strdup with return %00027427

00027427:
0002742c: R24 := mem[R31 + 0xA8, el]:u64
00027434: mem := mem with [R20 + 0x28, el]:u64 <- R0
00027439: R3 := 1
0002743e: R2 := 0x412000
00027443: R1 := 0x412000
00027449: R2 := R2 + 0xAA0
00027450: R0 := mem[R24 + 8, el]:u64
00027456: R1 := R1 + 0xAA8
0002745b: R30 := 0x405E18
0002745d: call @hlist_mod with return %0002745f

0002745f:
00027464: R20 := mem[R31 + 0xA8, el]:u64
0002746c: mem := mem with [R24 + 8, el]:u64 <- R0
00027471: R1 := 0x412000
00027477: R1 := R1 + 0xAB8
0002747e: R0 := mem[R20 + 8, el]:u64
00027483: R30 := 0x405E30
00027485: call @hlist_del with return %00027487

00027487:
0002748c: R1 := mem[R31 + 0xA8, el]:u64
00027494: mem := mem with [R20 + 8, el]:u64 <- R0
0002749b: R20 := pad:64[mem[R31 + 0xA0, el]:u32]
000274a1: R0 := pad:64[31:0[R20]]
000274a6: R30 := 0x405E44
000274a8: call @headers_send with return %000274aa

000274aa:
000274ad: when 31:0[R0] = 0 goto %00022523
00034502: goto %000274b1

00022523:
00022527: R0 := R31 + 0xA8
0002252c: R30 := 0x4065B4
0002252e: call @free_rr_data with return %00022530

00022530:
00022534: R0 := R22
00022539: R30 := 0x4065BC
0002253b: call @free_rr_data with return %0002253d

0002253d:
00022541: R0 := R31 + 0xB8
00022546: R30 := 0x4065C4
00022548: call @free_rr_data with return %0002254a

0002254a:
0002254d: R0 := 0xFFFFFFFFFFFFFFFF
00022555: mem := mem with [R31 + 0x68, el]:u64 <- R0
00022559: goto %00021ac2

00021ac2:
00021ac7: R0 := mem[R31 + 0x78, el]:u64
00021acd: when R0 = 0 goto %00021acb
00034503: goto %00021c0f

00021c0f:
00021c14: R0 := mem[R31 + 0x78, el]:u64
00021c19: R30 := 0x4062DC
00021c1b: call @free with return %00021acb

00021acb:
00021ad4: when R23 = 0 goto %00021ad2
00034504: goto %00021c02

00021c02:
00021c06: R0 := R23
00021c0b: R30 := 0x4062E8
00021c0d: call @free with return %00021ad2

00021ad2:
00021adb: #1011 := R31 + 0x30
00021ae0: R23 := mem[#1011, el]:u64
00021ae5: R24 := mem[#1011 + 8, el]:u64
00021aeb: #1012 := R31 + 0x40
00021af0: R25 := mem[#1012, el]:u64
00021af5: R26 := mem[#1012 + 8, el]:u64
00021afb: #1013 := R31 + 0x50
00021b00: R27 := mem[#1013, el]:u64
00021b05: R28 := mem[#1013 + 8, el]:u64
00021b0b: when ~31:31[R20] goto %00021b09
00034505: goto %00021b57

00021b09:
00021b12: R0 := pad:64[31:0[R20]]
00021b17: R30 := 0x406358
00021b19: call @close with return %00021b1b

00021b1b:
00021b1f: #1014 := R31 + 0x10
00021b24: R19 := mem[#1014, el]:u64
00021b29: R20 := mem[#1014 + 8, el]:u64
00021b2f: #1015 := R31 + 0x20
00021b34: R21 := mem[#1015, el]:u64
00021b39: R22 := mem[#1015 + 8, el]:u64
00021b40: R0 := mem[R31 + 0x68, el]:u64
00021b47: R29 := mem[R31, el]:u64
00021b4c: R30 := mem[R31 + 8, el]:u64
00021b50: R31 := R31 + 0x110
00021b55: call R30 with noreturn

00021b57:
00021b5b: #1016 := R31 + 0x10
00021b60: R19 := mem[#1016, el]:u64
00021b65: R20 := mem[#1016 + 8, el]:u64
00021b6b: #1017 := R31 + 0x20
00021b70: R21 := mem[#1017, el]:u64
00021b75: R22 := mem[#1017 + 8, el]:u64
00021b7c: R0 := mem[R31 + 0x68, el]:u64
00021b83: R29 := mem[R31, el]:u64
00021b88: R30 := mem[R31 + 8, el]:u64
00021b8c: R31 := R31 + 0x110
00021b91: call R30 with noreturn

000274b1:
000274b5: R0 := R31 + 0xA8
000274ba: R27 := 1
000274bf: R30 := 0x405E54
000274c1: call @free_rr_data with return %000274c3

000274c3:
000274c5: goto %00021c70

00034506: sub direct_tunnel(direct_tunnel_result)
00034b92: direct_tunnel_result :: out u32 = low:32[R0]

0002260c:
00022610: #1032 := R31 - 0x70
00022616: mem := mem with [#1032, el]:u64 <- R29
0002261c: mem := mem with [#1032 + 8, el]:u64 <- R30
00022620: R31 := #1032
00022626: R4 := R0
0002262c: R5 := R0 + 0x18
00022632: R29 := R31
00022638: #1033 := R31 + 0x10
0002263e: mem := mem with [#1033, el]:u64 <- R19
00022644: mem := mem with [#1033 + 8, el]:u64 <- R20
0002264a: R1 := R0 + 0x14
00022650: R2 := R31 + 0x40
00022656: #1034 := R31 + 0x20
0002265c: mem := mem with [#1034, el]:u64 <- R21
00022662: mem := mem with [#1034 + 8, el]:u64 <- R22
00022667: R3 := 0x2E
0002266e: R21 := pad:64[mem[R4, el]:u32]
00022673: V0 := 0
0002267a: R0 := pad:64[mem[R0 + 0x10, el]:u16]
00022681: R22 := mem[R4 + 8, el]:u64
00022687: #1035 := 31:0[R0] - 2
0002268c: VF := extend:64[#1035] <> extend:64[31:0[R0]] - 2
00022691: CF := pad:64[#1035] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00022695: ZF := #1035 = 0
00022699: NF := 31:31[#1035]
000226a7: when ZF <> 1 goto %0002269f
000226a8: goto %000226a3

000226a3:
000226a4: R1 := R1
000226aa: goto %000226a6

0002269f:
000226a0: R1 := R5
000226a9: goto %000226a6

000226a6:
000226af: R19 := 0
000226b5: #1036 := R31 + 0x40
000226bb: mem := mem with [#1036, el]:u128 <- V0
000226c1: mem := mem with [#1036 + 0x10, el]:u128 <- V0
000226c9: mem := mem with [R31 + 0x5E, el]:u128 <- V0
000226ce: R30 := 0x40672C
000226d0: call @inet_ntop with return %000226d2

000226d2:
000226d6: R0 := R22
000226db: R30 := 0x406734
000226dd: call @strdup with return %000226df

000226df:
000226e3: R20 := R0
000226e8: R1 := 0x3A
000226ed: R30 := 0x406740
000226ef: call @strchr with return %000226f1

000226f1:
000226f5: when R0 = 0 goto %000226f3
00034507: goto %00027188

00027188:
0002718d: mem := mem with [R0] <- 0
00027191: R0 := R0 + 1
00027196: R2 := 0xA
0002719b: R1 := 0
000271a0: R30 := 0x406754
000271a2: call @strtol with return %000271a4

000271a4:
000271a8: R19 := pad:64[31:0[R0]]
00034508: goto %000226f3

000226f3:
000226fb: R30 := 0x40675C
000226fd: call @__errno_location with return %000226ff

000226ff:
00022703: R3 := R0
00022709: R2 := pad:64[31:0[R19]]
0002270f: R1 := R20
00022715: R0 := R31 + 0x38
0002271c: mem := mem with [R3, el]:u32 <- 0
00022721: R30 := 0x406774
00022723: call @so_resolv with return %00022725

00022725:
00022729: when 31:0[R0] = 0 goto %00022727
00034509: goto %00027117

00022727:
00022730: R0 := R20
00022735: R30 := 0x406830
00022737: call @free with return %00022739

00022739:
0002273c: goto %0002273a

00027117:
0002711c: R0 := mem[R31 + 0x38, el]:u64
00027121: R30 := 0x406780
00027123: call @so_connect with return %00027125

00027125:
00027129: R19 := pad:64[31:0[R0]]
00027130: R0 := mem[R31 + 0x38, el]:u64
00027135: R30 := 0x40678C
00027137: call @freeaddrinfo with return %00027139

00027139:
0002713c: VF := 0
0002713f: CF := 1
00027143: ZF := 31:0[R19] = 0
00027147: NF := 31:31[R19]
0002714e: when ~(NF = VF & ~ZF) goto %0002277f
0003450a: goto %00027152

0002277f:
00022783: R0 := R20
00022788: R30 := 0x4067F4
0002278a: call @free with return %0002278c

0002278c:
00022790: when 31:0[R19] = 0 goto %0002278e
0003450b: goto %000227a0

000227a0:
000227a4: R0 := pad:64[31:0[R21]]
000227a9: R30 := 0x406800
000227ab: call @close with return %000227ad

000227ad:
000227b1: #1039 := R31 + 0x10
000227b6: R19 := mem[#1039, el]:u64
000227bb: R20 := mem[#1039 + 8, el]:u64
000227c1: #1040 := R31 + 0x20
000227c6: R21 := mem[#1040, el]:u64
000227cb: R22 := mem[#1040 + 8, el]:u64
000227d2: R29 := mem[R31, el]:u64
000227d7: R30 := mem[R31 + 8, el]:u64
000227db: R31 := R31 + 0x70
000227e0: call R30 with noreturn

00027152:
00027155: R0 := 7
0002715b: R2 := R31 + 0x40
00027161: R3 := R22
00027166: R1 := 0x412000
0002716c: R1 := R1 + 0xEB8
00027171: R30 := 0x4067AC
00027173: call @syslog with return %00027175

00027175:
00027178: R0 := 0x430000
0002717f: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00027184: when 31:0[R0] <> 0 goto %000227e2
0003450c: goto %00022801

000227e2:
000227e6: R1 := R22
000227ec: R2 := pad:64[31:0[R21]]
000227f1: R0 := 0x412000
000227f7: R0 := R0 + 0xEC8
000227fc: R30 := 0x406824
000227fe: call @printf with return %00022800

00022800:
00022803: goto %00022801

00022801:
00022808: R1 := pad:64[31:0[R19]]
0002280e: R0 := pad:64[31:0[R21]]
00022813: R30 := 0x4067C4
00022815: call @tunnel with return %00022817

00022817:
0002281b: R0 := R20
00022820: R30 := 0x4067CC
00022822: call @free with return %0002278e

0002278e:
00022797: R0 := pad:64[31:0[R19]]
0002279c: R30 := 0x4067D4
0002279e: call @close with return %0002273a

0002273a:
00022741: R0 := pad:64[31:0[R21]]
00022746: R30 := 0x4067DC
00022748: call @close with return %0002274a

0002274a:
0002274e: #1037 := R31 + 0x10
00022753: R19 := mem[#1037, el]:u64
00022758: R20 := mem[#1037 + 8, el]:u64
0002275e: #1038 := R31 + 0x20
00022763: R21 := mem[#1038, el]:u64
00022768: R22 := mem[#1038 + 8, el]:u64
0002276f: R29 := mem[R31, el]:u64
00022774: R30 := mem[R31 + 8, el]:u64
00022778: R31 := R31 + 0x70
0002277d: call R30 with noreturn

0003450d: sub dump_auth(dump_auth_result)
00034b93: dump_auth_result :: out u32 = low:32[R0]

000172a9:
000172ad: #381 := R31 - 0x20
000172b3: mem := mem with [#381, el]:u64 <- R29
000172b9: mem := mem with [#381 + 8, el]:u64 <- R30
000172bd: R31 := #381
000172c2: R1 := 0x412000
000172c8: R29 := R31
000172ce: #382 := R31 + 0x10
000172d4: mem := mem with [#382, el]:u64 <- R19
000172da: mem := mem with [#382 + 8, el]:u64 <- R20
000172e0: R19 := R0
000172e6: R0 := R1 + 0x958
000172eb: R30 := 0x40516C
000172ed: call @puts with return %000172ef

000172ef:
000172f3: when R19 = 0 goto %000172f1
0003450e: goto %0002ac7f

000172f1:
000172fa: #383 := R31 + 0x10
000172ff: R19 := mem[#383, el]:u64
00017304: R20 := mem[#383 + 8, el]:u64
00017309: R0 := 0x412000
00017310: R29 := mem[R31, el]:u64
00017315: R30 := mem[R31 + 8, el]:u64
00017319: R31 := R31 + 0x20
0001731f: R0 := R0 + 0x978
00017323: call @puts with noreturn

0002ac7f:
0002ac83: R1 := R19
0002ac88: R0 := 0x412000
0002ac8e: R0 := R0 + 0x998
0002ac93: R30 := 0x405180
0002ac95: call @printf with return %0002ac97

0002ac97:
0002ac9b: R1 := R19 + 0x32
0002aca0: R0 := 0x412000
0002aca6: R0 := R0 + 0x9A8
0002acab: R30 := 0x405190
0002acad: call @printf with return %0002acaf

0002acaf:
0002acb3: R1 := R19 + 0x64
0002acb8: R0 := 0x412000
0002acbe: R0 := R0 + 0x9B8
0002acc3: R30 := 0x4051A0
0002acc5: call @printf with return %0002acc7

0002acc7:
0002accc: R1 := pad:64[mem[R19 + 0x12C, el]:u32]
0002acd1: R0 := 0x412000
0002acd7: R0 := R0 + 0x9C8
0002acdd: R20 := R19 + 0xFA
0002ace2: R30 := 0x4051B4
0002ace4: call @printf with return %0002ace6

0002ace6:
0002aceb: R1 := pad:64[mem[R19 + 0x130, el]:u32]
0002acf0: R0 := 0x412000
0002acf6: R0 := R0 + 0x9D8
0002acfb: R30 := 0x4051C4
0002acfd: call @printf with return %0002acff

0002acff:
0002ad04: R1 := pad:64[mem[R19 + 0x134, el]:u32]
0002ad09: R0 := 0x412000
0002ad0f: R0 := R0 + 0x9E8
0002ad14: R30 := 0x4051D4
0002ad16: call @printf with return %0002ad18

0002ad18:
0002ad1d: R1 := pad:64[mem[R19 + 0x138, el]:u32]
0002ad22: R0 := 0x412000
0002ad28: R0 := R0 + 0x9F8
0002ad2d: R30 := 0x4051E4
0002ad2f: call @printf with return %0002ad31

0002ad31:
0002ad35: R0 := R20
0002ad3a: R1 := 0x32
0002ad3f: R30 := 0x4051F0
0002ad41: call @is_memory_all_zero with return %0002ad43

0002ad43:
0002ad47: when 31:0[R0] = 0 goto %0002ad45
0003450f: goto %0002aeaf

0002ad45:
0002ad4d: R2 := 8
0002ad53: R0 := R20
0002ad58: R1 := 0x10
0002ad5d: R30 := 0x405238
0002ad5f: call @printmem with return %0002ad61

0002ad61:
0002ad64: R1 := 0x412000
0002ad6a: R20 := R0
0002ad70: R0 := R1 + 0xA08
0002ad76: R1 := R20
0002ad7b: R30 := 0x40524C
0002ad7d: call @printf with return %0002ad7f

0002ad7f:
0002ad83: R0 := R20
0002ad89: R20 := R19 + 0xC8
0002ad8e: R30 := 0x405258
0002ad90: call @free with return %0002ad92

0002ad92:
0002ad96: R0 := R20
0002ad9b: R1 := 0x32
0002ada0: R30 := 0x405264
0002ada2: call @is_memory_all_zero with return %0002ada4

0002ada4:
0002ada8: when 31:0[R0] <> 0 goto %0002ada6
00034510: goto %0002ae4e

0002aeaf:
0002aeb3: R20 := R19 + 0xC8
0002aeb8: R1 := 0x32
0002aebe: R0 := R20
0002aec3: R30 := 0x405204
0002aec5: call @is_memory_all_zero with return %0002aec7

0002aec7:
0002aeca: when 31:0[R0] = 0 goto %0002ae4e
00034511: goto %0002ada6

0002ae4e:
0002ae51: R2 := 8
0002ae57: R0 := R20
0002ae5c: R1 := 0x10
0002ae61: R30 := 0x405278
0002ae63: call @printmem with return %0002ae65

0002ae65:
0002ae68: R1 := 0x412000
0002ae6e: R20 := R0
0002ae74: R0 := R1 + 0xA18
0002ae7a: R1 := R20
0002ae7f: R30 := 0x40528C
0002ae81: call @printf with return %0002ae83

0002ae83:
0002ae87: R19 := R19 + 0x96
0002ae8d: R0 := R20
0002ae92: R30 := 0x405298
0002ae94: call @free with return %0002ae96

0002ae96:
0002ae9a: R0 := R19
0002ae9f: R1 := 0x32
0002aea4: R30 := 0x4052A4
0002aea6: call @is_memory_all_zero with return %0002aea8

0002aea8:
0002aeab: when 31:0[R0] <> 0 goto %0002ae29
00034512: goto %0002adc5

0002ada6:
0002adaf: R19 := R19 + 0x96
0002adb4: R1 := 0x32
0002adba: R0 := R19
0002adbf: R30 := 0x405218
0002adc1: call @is_memory_all_zero with return %0002adc3

0002adc3:
0002adc7: when 31:0[R0] = 0 goto %0002adc5
00034513: goto %0002ae29

0002adc5:
0002adcd: R2 := 8
0002add3: R0 := R19
0002add8: R1 := 0x10
0002addd: R30 := 0x4052B8
0002addf: call @printmem with return %0002ade1

0002ade1:
0002ade4: R1 := 0x412000
0002adea: R19 := R0
0002adf0: R0 := R1 + 0xA28
0002adf6: R1 := R19
0002adfb: R30 := 0x4052CC
0002adfd: call @printf with return %0002adff

0002adff:
0002ae03: R0 := R19
0002ae09: #1378 := R31 + 0x10
0002ae0e: R19 := mem[#1378, el]:u64
0002ae13: R20 := mem[#1378 + 8, el]:u64
0002ae1a: R29 := mem[R31, el]:u64
0002ae1f: R30 := mem[R31 + 8, el]:u64
0002ae23: R31 := R31 + 0x20
0002ae27: call @free with noreturn

0002ae29:
0002ae2d: #1379 := R31 + 0x10
0002ae32: R19 := mem[#1379, el]:u64
0002ae37: R20 := mem[#1379 + 8, el]:u64
0002ae3e: R29 := mem[R31, el]:u64
0002ae43: R30 := mem[R31 + 8, el]:u64
0002ae47: R31 := R31 + 0x20
0002ae4c: call R30 with noreturn

00034514: sub dup2(dup2_fd, dup2_fd2, dup2_result)
00034b94: dup2_fd :: in u32 = low:32[R0]
00034b95: dup2_fd2 :: in u32 = low:32[R1]
00034b96: dup2_result :: out u32 = low:32[R0]

0002c5da:
000301dc: R16 := 0x430000
000301e3: R17 := mem[R16 + 0x298, el]:u64
000301e9: R16 := R16 + 0x298
000301ee: call R17 with noreturn

00034515: sub dup_auth(dup_auth_result)
00034b97: dup_auth_result :: out u32 = low:32[R0]

00017164:
00017168: #377 := R31 - 0x30
0001716e: mem := mem with [#377, el]:u64 <- R29
00017174: mem := mem with [#377 + 8, el]:u64 <- R30
00017178: R31 := #377
0001717e: R29 := R31
00017184: #378 := R31 + 0x10
0001718a: mem := mem with [#378, el]:u64 <- R19
00017190: mem := mem with [#378 + 8, el]:u64 <- R20
00017196: R20 := R0
0001719e: mem := mem with [R31 + 0x20, el]:u64 <- R21
000171a4: R21 := pad:64[31:0[R1]]
000171a9: R30 := 0x40502C
000171ab: call @new_auth with return %000171ad

000171ad:
000171b1: R19 := R0
000171b7: when R0 = 0 goto %000171b5
00034516: goto %0002aece

0002aece:
0002aed2: R3 := R20 + 0x200
0002aed8: R4 := R0 + 0x200
0002aedd: R2 := 0x32
0002aee4: R1 := R20 + R2
0002aeeb: R0 := R0 + R2
0002aef2: V0 := pad:128[mem[R3 - 0xD4, el]:u64]
0002aefa: mem := mem with [R4 - 0xD4, el]:u64 <- 63:0[V0]
0002af01: R4 := pad:64[mem[R20 + 0x134, el]:u32]
0002af08: R3 := pad:64[mem[R20 + 0x138, el]:u32]
0002af10: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
0002af18: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
0002af1d: R30 := 0x405064
0002af1f: call @strlcpy with return %0002af21

0002af21:
0002af25: R1 := R20 + 0x64
0002af2b: R0 := R19 + 0x64
0002af30: R2 := 0x32
0002af35: R30 := 0x405074
0002af37: call @strlcpy with return %0002af39

0002af39:
0002af3c: when 31:0[R21] = 0 goto %000171ec
00034517: goto %0002af40

000171ec:
000171ef: V0 := 0
000171f5: R2 := R19 + 0xFA
000171fb: R1 := R19 + 0xC8
00017202: mem := mem with [R19 + 0x30, el]:u16 <- 0
00017209: mem := mem with [R19 + 0x12A, el]:u16 <- 0
0001720f: R0 := R19 + 0x96
00017217: mem := mem with [R19, el]:u128 <- V0
0001721d: mem := mem with [R19 + 0x10, el]:u128 <- V0
00017225: mem := mem with [R19 + 0x20, el]:u128 <- V0
0001722d: mem := mem with [R2, el]:u128 <- V0
00017233: mem := mem with [R2 + 0x10, el]:u128 <- V0
0001723b: mem := mem with [R2 + 0x20, el]:u128 <- V0
00017243: mem := mem with [R1, el]:u128 <- V0
00017249: mem := mem with [R1 + 0x10, el]:u128 <- V0
00017251: mem := mem with [R1 + 0x20, el]:u128 <- V0
00017258: mem := mem with [R1 + 0x30, el]:u16 <- 0
0001725f: mem := mem with [R19 + 0xC6, el]:u16 <- 0
00017267: mem := mem with [R0, el]:u128 <- V0
0001726d: mem := mem with [R0 + 0x10, el]:u128 <- V0
00017275: mem := mem with [R0 + 0x20, el]:u128 <- V0
0001727b: R0 := R19
00017281: #380 := R31 + 0x10
00017286: R19 := mem[#380, el]:u64
0001728b: R20 := mem[#380 + 8, el]:u64
00017292: R21 := mem[R31 + 0x20, el]:u64
00017299: R29 := mem[R31, el]:u64
0001729e: R30 := mem[R31 + 8, el]:u64
000172a2: R31 := R31 + 0x30
000172a7: call R30 with noreturn

0002af40:
0002af44: R1 := R20
0002af49: R2 := 0x32
0002af4f: R0 := R19
0002af54: R30 := 0x405088
0002af56: call @strlcpy with return %0002af58

0002af58:
0002af5c: R4 := R20 + 0xFA
0002af62: R3 := R19 + 0xFA
0002af68: R2 := R20 + 0xC8
0002af6e: R1 := R19 + 0xC8
0002af74: R20 := R20 + 0x96
0002af7a: R0 := R19 + 0x96
0002af81: V0 := mem[R4, el]:u128
0002af86: V1 := mem[R4 + 0x10, el]:u128
0002af8e: mem := mem with [R3, el]:u128 <- V0
0002af94: mem := mem with [R3 + 0x10, el]:u128 <- V1
0002af9b: V0 := mem[R4 + 0x20, el]:u128
0002afa3: mem := mem with [R3 + 0x20, el]:u128 <- V0
0002afaa: R4 := pad:64[mem[R4 + 0x30, el]:u16]
0002afb2: mem := mem with [R3 + 0x30, el]:u16 <- 15:0[R4]
0002afb9: V0 := mem[R2, el]:u128
0002afbe: V1 := mem[R2 + 0x10, el]:u128
0002afc6: mem := mem with [R1, el]:u128 <- V0
0002afcc: mem := mem with [R1 + 0x10, el]:u128 <- V1
0002afd3: V0 := mem[R2 + 0x20, el]:u128
0002afdb: mem := mem with [R1 + 0x20, el]:u128 <- V0
0002afe2: R2 := pad:64[mem[R2 + 0x30, el]:u16]
0002afea: mem := mem with [R1 + 0x30, el]:u16 <- 15:0[R2]
0002aff1: V0 := mem[R20, el]:u128
0002aff6: V1 := mem[R20 + 0x10, el]:u128
0002affe: mem := mem with [R0, el]:u128 <- V0
0002b004: mem := mem with [R0 + 0x10, el]:u128 <- V1
0002b00b: V0 := mem[R20 + 0x20, el]:u128
0002b013: mem := mem with [R0 + 0x20, el]:u128 <- V0
0002b01a: R1 := pad:64[mem[R20 + 0x30, el]:u16]
0002b022: mem := mem with [R0 + 0x30, el]:u16 <- 15:0[R1]
00034518: goto %000171b5

000171b5:
000171bf: R21 := mem[R31 + 0x20, el]:u64
000171c5: R0 := R19
000171cb: #379 := R31 + 0x10
000171d0: R19 := mem[#379, el]:u64
000171d5: R20 := mem[#379 + 8, el]:u64
000171dc: R29 := mem[R31, el]:u64
000171e1: R30 := mem[R31 + 8, el]:u64
000171e5: R31 := R31 + 0x30
000171ea: call R30 with noreturn

00034519: sub dup_rr_data(dup_rr_data_result)
00034b98: dup_rr_data_result :: out u32 = low:32[R0]

0001841c:
00018420: #469 := R31 - 0x20
00018426: mem := mem with [#469, el]:u64 <- R29
0001842c: mem := mem with [#469 + 8, el]:u64 <- R30
00018430: R31 := #469
00018436: R29 := R31
0001843c: when R0 = 0 goto %0001843a
0003451a: goto %00018757

0001843a:
00018442: R1 := 0x430000
00018447: R2 := 0x34
0001844c: R0 := 0x416000
00018452: R0 := R0 + 0x108
00018459: R3 := mem[R1 + 0x330, el]:u64
0001845e: R1 := 1
00018463: R30 := 0x40F154
00018465: call @fwrite with return %00018467

00018467:
0001846a: R0 := 0
00018471: R29 := mem[R31, el]:u64
00018476: R30 := mem[R31 + 8, el]:u64
0001847a: R31 := R31 + 0x20
0001847f: call R30 with noreturn

00018757:
0001875d: mem := mem with [R31 + 0x10, el]:u64 <- R19
00018763: R19 := R0
00018768: R0 := 0x68
0001876d: R30 := 0x40F0FC
0001876f: call @malloc with return %00018771

00018771:
00018774: R1 := 0x416000
00018779: V1 := 0xFFFFFFFF00000000
0001877e: V0 := 0
00018784: R3 := R0 + 0x28
0001878b: V2 := mem[R1 + 0x390, el]:u128
00018791: R1 := R19
00018798: R19 := mem[R31 + 0x10, el]:u64
0001879f: mem := mem with [R0, el]:u32 <- 0
000187a6: mem := mem with [R0 + 8, el]:u64 <- 0
000187ae: mem := mem with [R0 + 0x10, el]:u128 <- V2
000187b6: mem := mem with [R0 + 0x20, el]:u64 <- 63:0[V1]
000187be: mem := mem with [R3, el]:u128 <- V0
000187c4: mem := mem with [R3 + 0x10, el]:u128 <- V0
000187ca: #480 := R3 + 0x20
000187d0: mem := mem with [#480, el]:u128 <- V0
000187d6: mem := mem with [#480 + 0x10, el]:u128 <- V0
000187dd: R29 := mem[R31, el]:u64
000187e2: R30 := mem[R31 + 8, el]:u64
000187e6: R31 := R31 + 0x20
000187ea: call @copy_rr_data with noreturn

0003451b: sub exit(exit_code)
00034b99: exit_code :: in u32 = low:32[R0]

00019dd3:
0002fb54: R16 := 0x430000
0002fb5b: R17 := mem[R16 + 0x38, el]:u64
0002fb61: R16 := R16 + 0x38
0002fb66: call R17 with noreturn

0003451c: sub fclose(fclose_fp, fclose_result)
00034b9a: fclose_fp :: in out u64 = R0
00034b9b: fclose_result :: out u32 = low:32[R0]

00010a82:
0002fcca: R16 := 0x430000
0002fcd1: R17 := mem[R16 + 0xC0, el]:u64
0002fcd7: R16 := R16 + 0xC0
0002fcdc: call R17 with noreturn

0003451d: sub fcntl(fcntl_result)
00034b9c: fcntl_result :: out u32 = low:32[R0]

000199bc:
00030100: R16 := 0x430000
00030107: R17 := mem[R16 + 0x248, el]:u64
0003010d: R16 := R16 + 0x248
00030112: call R17 with noreturn

0003451e: sub feof(feof_stream, feof_result)
00034b9d: feof_stream :: in out u64 = R0
00034b9e: feof_result :: out u32 = low:32[R0]

00014246:
0002ff48: R16 := 0x430000
0002ff4f: R17 := mem[R16 + 0x1A8, el]:u64
0002ff55: R16 := R16 + 0x1A8
0002ff5a: call R17 with noreturn

0003451f: sub ferror(ferror_stream, ferror_result)
00034b9f: ferror_stream :: in out u64 = R0
00034ba0: ferror_result :: out u32 = low:32[R0]

00012c4c:
00030310: R16 := 0x430000
00030317: R17 := mem[R16 + 0x308, el]:u64
0003031d: R16 := R16 + 0x308
00030322: call R17 with noreturn

00034520: sub fgets(fgets_s, fgets_size, fgets_stream, fgets_result)
00034ba1: fgets_s :: in out u64 = R0
00034ba2: fgets_size :: in u32 = low:32[R1]
00034ba3: fgets_stream :: in out u64 = R2
00034ba4: fgets_result :: out u64 = R0

0001746f:
000302e4: R16 := 0x430000
000302eb: R17 := mem[R16 + 0x2F8, el]:u64
000302f1: R16 := R16 + 0x2F8
000302f6: call R17 with noreturn

00034521: sub fnmatch(fnmatch_result)
00034ba5: fnmatch_result :: out u32 = low:32[R0]

0002027d:
000300ea: R16 := 0x430000
000300f1: R17 := mem[R16 + 0x240, el]:u64
000300f7: R16 := R16 + 0x240
000300fc: call R17 with noreturn

00034522: sub fopen(fopen_path, fopen_mode, fopen_result)
00034ba6: fopen_path :: in u64 = R0
00034ba7: fopen_mode :: in u64 = R1
00034ba8: fopen_result :: out u64 = R0

000109ee:
0002fd0c: R16 := 0x430000
0002fd13: R17 := mem[R16 + 0xD8, el]:u64
0002fd19: R16 := R16 + 0xD8
0002fd1e: call R17 with noreturn

00034523: sub fork(fork_result)
00034ba9: fork_result :: out u32 = low:32[R0]

0002df6f:
0002fc5c: R16 := 0x430000
0002fc63: R17 := mem[R16 + 0x98, el]:u64
0002fc69: R16 := R16 + 0x98
0002fc6e: call R17 with noreturn

00034524: sub forward_request(forward_request_result)
00034baa: forward_request_result :: out u32 = low:32[R0]

0002282a:
0002282e: #1041 := R31 - 0x100
00022834: mem := mem with [#1041, el]:u64 <- R29
0002283a: mem := mem with [#1041 + 8, el]:u64 <- R30
0002283e: R31 := #1041
00022844: R3 := R0
0002284a: R5 := R0 + 0x14
00022850: R29 := R31
00022856: #1042 := R31 + 0x10
0002285c: mem := mem with [#1042, el]:u64 <- R19
00022862: mem := mem with [#1042 + 8, el]:u64 <- R20
00022868: R6 := R0 + 0x18
0002286f: R4 := pad:64[mem[R3, el]:u32]
00022875: #1043 := R31 + 0x20
0002287b: mem := mem with [#1043, el]:u64 <- R21
00022881: mem := mem with [#1043 + 8, el]:u64 <- R22
00022887: R2 := R31 + 0xD0
0002288c: R3 := 0x2E
00022892: #1044 := R31 + 0x30
00022898: mem := mem with [#1044, el]:u64 <- R23
0002289e: mem := mem with [#1044 + 8, el]:u64 <- R24
000228a3: R19 := 0x412000
000228a8: R23 := 0x412000
000228ae: #1045 := R31 + 0x40
000228b4: mem := mem with [#1045, el]:u64 <- R25
000228ba: mem := mem with [#1045 + 8, el]:u64 <- R26
000228c0: R23 := R23 + 0xD28
000228c6: R19 := R19 + 0xD38
000228cc: #1046 := R31 + 0x50
000228d2: mem := mem with [#1046, el]:u64 <- R27
000228d8: mem := mem with [#1046 + 8, el]:u64 <- R28
000228de: R28 := R1
000228e3: R26 := 0x430000
000228e8: V0 := 0
000228ef: R0 := pad:64[mem[R0 + 0x10, el]:u16]
000228f7: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
000228fc: R24 := 0
00022902: #1047 := 31:0[R0] - 2
00022907: VF := extend:64[#1047] <> extend:64[31:0[R0]] - 2
0002290c: CF := pad:64[#1047] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00022910: ZF := #1047 = 0
00022914: NF := 31:31[#1047]
0002291b: mem := mem with [R31 + 0x98, el]:u64 <- 0
00022929: when ZF <> 1 goto %00022921
0002292a: goto %00022925

00022925:
00022926: R1 := R5
0002292c: goto %00022928

00022921:
00022922: R1 := R6
0002292b: goto %00022928

00022928:
00022932: #1048 := R31 + 0xA0
00022937: mem := mem with [#1048, el]:u64 <- 0
0002293c: mem := mem with [#1048 + 8, el]:u64 <- 0
00022941: R21 := 0
00022947: #1049 := R31 + 0xD0
0002294d: mem := mem with [#1049, el]:u128 <- V0
00022953: mem := mem with [#1049 + 0x10, el]:u128 <- V0
0002295b: mem := mem with [R31 + 0xEE, el]:u128 <- V0
00022960: R30 := 0x4068BC
00022962: call @inet_ntop with return %00022964

00022964:
00022967: R0 := 0x430000
0002296d: R20 := R0 + 0x374
00022973: R0 := R26 + 0x3F0
0002297b: mem := mem with [R31 + 0x78, el]:u64 <- R0
00034525: goto %0002297d

0002297d:
00022981: R1 := R31 + 0x94
00022988: R0 := pad:64[mem[R20, el]:u32]
00022990: mem := mem with [R31 + 0xB0, el]:u64 <- R1
00022996: R1 := R31 + 0x90
0002299d: mem := mem with [R31 + 0x90, el]:u32 <- 0
000229a3: #1050 := R31 + 0xB8
000229a9: mem := mem with [#1050, el]:u64 <- R1
000229af: mem := mem with [#1050 + 8, el]:u64 <- R1
000229b5: R1 := R31 + 0x94
000229bd: mem := mem with [R31 + 0xC8, el]:u64 <- R1
000229c3: when 31:0[R0] = 0 goto %000229c1
00034526: goto %00027094

00027094:
00027097: VF := 0
0002709a: CF := 1
0002709e: ZF := 31:0[R21] = 0
000270a2: NF := 31:31[R21]
000270a7: R2 := 0x412000
000270ad: R2 := R2 + 0xA38
000270b2: R1 := 0x412000
000270b8: R1 := R1 + 0xEF0
000270bd: R0 := 0x412000
000270cb: when ZF goto %000270c3
000270cc: goto %000270c7

000270c7:
000270c8: R1 := R1
000270ce: goto %000270ca

000270c3:
000270c4: R1 := R2
000270cd: goto %000270ca

000270ca:
000270d4: R0 := R0 + 0xF00
000270d9: R30 := 0x406914
000270db: call @printf with return %000270dd

000270dd:
000270e2: R22 := mem[R31 + 0x78, el]:u64
000270e8: R0 := R22
000270ed: R30 := 0x406920
000270ef: call @pthread_mutex_lock with return %000270f1

000270f1:
000270f4: R0 := 0x430000
000270fa: R0 := R0 + 0x420
00027101: R0 := mem[R0, el]:u64
00027106: R30 := 0x406930
00027108: call @plist_dump with return %0002710a

0002710a:
0002710e: R0 := R22
00027113: R30 := 0x406938
00027115: call @pthread_mutex_unlock with return %000229c1

000229c1:
000229cb: R25 := mem[R31 + 0x78, el]:u64
000229d1: R0 := R25
000229d6: R30 := 0x406944
000229d8: call @pthread_mutex_lock with return %000229da

000229da:
000229de: R1 := R31 + 0x98
000229e3: R0 := 0x430000
000229e9: R0 := R0 + 0x420
000229ee: R30 := 0x406954
000229f0: call @plist_pop with return %000229f2

000229f2:
000229f6: R22 := pad:64[31:0[R0]]
000229fc: R0 := R25
00022a01: R30 := 0x406960
00022a03: call @pthread_mutex_unlock with return %00022a05

00022a05:
00022a09: when 31:0[R22] = 0 goto %00022a07
00034527: goto %00027077

00022a07:
00022a0f: R30 := 0x407094
00022a11: call @new_auth with return %00022a13

00022a13:
00022a19: mem := mem with [R31 + 0x98, el]:u64 <- R0
00022a20: R1 := mem[R28 + 0x30, el]:u64
00022a27: R2 := mem[R28 + 0x40, el]:u64
00022a2c: R30 := 0x4070A4
00022a2e: call @proxy_connect with return %00022a30

00022a30:
00022a36: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
00022a3c: #1051 := 31:0[R0] + 2
00022a41: VF := extend:64[#1051] <> extend:64[31:0[R0]] + 2
00022a46: CF := pad:64[#1051] <> pad:64[31:0[R0]] + 2
00022a4a: ZF := #1051 = 0
00022a4e: NF := 31:31[#1051]
00022a54: when ZF goto %00022a52
00034528: goto %00027065

00022a52:
00022a5a: R20 := 0
00022a5f: R26 := 0
00022a64: R19 := 0xFFFFFFFFFFFFFFFE
00022a69: goto %00022a67

00027065:
00027068: when 31:31[R0] goto %00027005
00034529: goto %0002706c

00027005:
0002700a: R0 := mem[R28 + 0x48, el]:u64
0002700f: R1 := 0x412000
00027015: R1 := R1 + 0xF40
0002701a: R20 := 0
0002701f: R26 := 0
00027024: R30 := 0x407378
00027026: call @gen_502_page with return %00027028

00027028:
0002702c: R19 := R0
00027031: R30 := 0x407380
00027033: call @strlen with return %00027035

00027035:
00027039: R2 := R0
00027040: R0 := pad:64[mem[R31 + 0x94, el]:u32]
00027046: R1 := R19
0002704b: R30 := 0x407390
0002704d: call @write_wrapper with return %0002704f

0002704f:
00027053: R0 := R19
00027058: R19 := 0xFFFFFFFFFFFFFFFF
0002705d: R30 := 0x40739C
0002705f: call @free with return %00027061

00027061:
00027063: goto %00022a67

0002706c:
0002706f: when R24 <> 0 goto %00025551
0003452a: goto %00027073

00027073:
00027075: goto %000255b1

00027077:
0002707c: R0 := pad:64[mem[R20, el]:u32]
00027081: when 31:0[R0] <> 0 goto %000254ba
0003452b: goto %00027085

000254ba:
000254be: R1 := pad:64[31:0[R22]]
000254c3: R0 := 0x412000
000254c9: R0 := R0 + 0xF18
000254ce: R30 := 0x406A6C
000254d0: call @printf with return %000254d2

000254d2:
000254d8: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R22]
000254de: when R24 <> 0 goto %000254dc
0003452c: goto %000255ac

00027085:
0002708b: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R22]
00027090: when R24 = 0 goto %000255ac
0003452d: goto %000254dc

000255ac:
000255af: R22 := 1
0003452e: goto %000255b1

000255b1:
000255b6: R24 := mem[R28 + 0x40, el]:u64
000255bb: when R24 = 0 goto %00025551
0003452f: goto %000255bf

000255bf:
000255c3: R0 := R24
000255c8: R30 := 0x406A88
000255ca: call @strdup with return %000255cc

000255cc:
000255d0: R24 := R0
000255d5: when 31:0[R21] <> 0 goto %0002558b
00034530: goto %00025553

000254dc:
000254e5: when R28 = 0 goto %000254e3
00034531: goto %0002554c

000254e3:
000254eb: R0 := 1
000254f1: R25 := R31 + 0xA0
000254f7: R22 := pad:64[31:0[R0]]
000254fc: R21 := 0
00025504: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0002550a: R0 := R31 + 0xA8
00025512: mem := mem with [R31 + 0x70, el]:u64 <- R0
00025517: goto %00025515

0002554c:
0002554f: R22 := 1
00034532: goto %00025551

00025551:
00025555: when 31:0[R21] = 0 goto %00025553
00034533: goto %0002558b

00025553:
0002555c: R0 := R28
00025561: R30 := 0x406A98
00025563: call @dup_rr_data with return %00025565

00025565:
00025569: R25 := R31 + 0xA0
0002556f: R28 := R0
00025575: R0 := R31 + 0xA8
0002557d: mem := mem with [R31 + 0x70, el]:u64 <- R0
00025585: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R22]
00025589: goto %00025526

0002558b:
0002558f: R25 := R31 + 0xA0
00025595: R0 := R31 + 0xA8
0002559a: R21 := 0
000255a2: mem := mem with [R31 + 0x70, el]:u64 <- R0
000255aa: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R22]
00034534: goto %00025526

00025526:
0002552c: R27 := 0
00025534: mem := mem with [R31 + 0xA0, el]:u64 <- R28
00025539: R30 := 0x4069A0
0002553b: call @new_rr_data with return %0002553d

0002553d:
00025542: mem := mem with [R31 + 0x80, el]:u32 <- 0
0002554a: mem := mem with [R31 + 0xA8, el]:u64 <- R0
00034535: goto %0002316a

0002316a:
00023171: R7 := extend:64[31:0[R27]]
00023178: R2 := pad:64[mem[R20, el]:u32]
0002317e: R28 := extend:64[31:0[R27].0]
00023186: R1 := mem[R25 + (60:0[R7].0), el]:u64
0002318d: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
00023193: when 31:0[R0] = 0 goto %00023191
00034536: goto %0002540b

0002540b:
0002540f: when 31:0[R2] <> 0 goto %0002540d
00034537: goto %000254ac

0002540d:
00025416: #1130 := R31 + 0x90
0002541b: R3 := pad:64[mem[#1130, el]:u32]
00025420: R2 := pad:64[mem[#1130 + 4, el]:u32]
00025426: R5 := pad:64[31:0[R21]]
0002542c: R4 := pad:64[31:0[R22]]
00025432: R1 := pad:64[31:0[R27] + 1]
00025437: R0 := 0x412000
0002543d: R0 := R0 + 0xF60
00025445: mem := mem with [R31 + 0x68, el]:u64 <- R7
0002544a: R30 := 0x406FFC
0002544c: call @printf with return %0002544e

0002544e:
00025452: R1 := R31 + 0xB0
00025457: R0 := 0x412000
0002545d: R0 := R0 + 0xCE8
00025465: R26 := mem[R1 + R28, el]:u64
0002546c: R1 := pad:64[mem[R26, el]:u32]
00025471: R30 := 0x407014
00025473: call @printf with return %00025475

00025475:
0002547b: R1 := mem[R25 + R28, el]:u64
00025482: R7 := mem[R31 + 0x68, el]:u64
00025487: goto %00025485

000254ac:
000254b0: R0 := R31 + 0xB0
000254b8: R26 := mem[R0 + R28, el]:u64
00034538: goto %00025485

00025485:
0002548e: mem := mem with [R31 + 0x68, el]:u64 <- R7
00025495: R0 := pad:64[mem[R26, el]:u32]
0002549a: R30 := 0x4069D8
0002549c: call @headers_recv with return %0002549e

0002549e:
000254a3: R7 := mem[R31 + 0x68, el]:u64
000254a8: when 31:0[R0] = 0 goto %00022d2e
00034539: goto %00023191

00023191:
00023199: VF := 0
0002319c: CF := 1
000231a0: ZF := 31:0[R27] = 0
000231a4: NF := 31:31[R27]
000231ab: R26 := pad:64[mem[R20, el]:u32]
000231b1: #1065 := ZF
000231b4: VF := 0
000231b8: CF := #1065
000231bd: ZF := R24 = 0 | ~#1065
000231c2: NF := #1065 & 63:63[R24]
000231c8: when ZF goto %000231c6
0003453a: goto %00025321

000231c6:
000231cf: when 31:0[R26] <> 0 goto %000231cd
0003453b: goto %0002531a

000231cd:
000231d8: R0 := mem[R25 + (60:0[R7].0), el]:u64
000231e0: mem := mem with [R31 + 0x68, el]:u64 <- R7
000231e7: R0 := mem[R0 + 8, el]:u64
000231ec: R30 := 0x406F24
000231ee: call @hlist_dump with return %000231f0

000231f0:
000231f5: R7 := mem[R31 + 0x68, el]:u64
000231fb: when 31:0[R27] <> 0 goto %000231f9
0003453c: goto %00025259

0002531a:
0002531d: when 31:0[R27] = 0 goto %00025259
0003453d: goto %000231f9

00025259:
0002525e: R28 := mem[R31 + 0xA0, el]:u64
00025263: goto %00025261

000231f9:
00023201: R28 := 0x7FFF
00023207: #1066 := 31:0[R27] - 1
0002320c: VF := extend:64[#1066] <> extend:64[31:0[R27]] - 1
00023211: CF := pad:64[#1066] <> pad:64[31:0[R27]] + 0xFFFFFFFF
00023215: ZF := #1066 = 0
00023219: NF := 31:31[#1066]
0002321f: when ZF goto %0002321d
0003453e: goto %00024e7b

0002321d:
00023227: R0 := mem[R31 + 0xA8, el]:u64
0002322e: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00023233: goto %00023231

00025321:
00025326: R28 := mem[R31 + 0xA0, el]:u64
0002532d: R1 := mem[R28 + 0x40, el]:u64
00025333: when R1 = 0 goto %00025331
0003453f: goto %00025356

00025356:
0002535a: R0 := R24
0002535f: R30 := 0x406A04
00025361: call @strcasecmp with return %00025363

00025363:
00025367: when 31:0[R0] <> 0 goto %00025365
00034540: goto %00025331

00025365:
0002536e: when 31:0[R26] <> 0 goto %0002536c
00034541: goto %00025392

0002536c:
00025376: R1 := mem[R28 + 0x30, el]:u64
0002537b: R0 := 0x412000
00025381: R0 := R0 + 0xFA0
00025386: R30 := 0x407348
00025388: call @printf with return %0002538a

0002538a:
0002538f: R28 := mem[R31 + 0xA0, el]:u64
00025394: goto %00025392

00025392:
00025398: R26 := 0
0002539d: when 31:0[R22] = 0 goto %00022f2e
00034542: goto %000253a1

000253a1:
000253a6: R0 := pad:64[mem[R28 + 0x24, el]:u32]
000253ac: #1129 := 31:0[R0] - 0xA
000253b1: VF := extend:64[#1129] <> extend:64[31:0[R0]] - 0xA
000253b6: CF := pad:64[#1129] <> pad:64[31:0[R0]] + 0xFFFFFFF6
000253ba: ZF := #1129 = 0
000253be: NF := 31:31[#1129]
000253c6: when NF = VF & ~ZF goto %000253c4
00034543: goto %00022f2e

000253c4:
000253ce: R0 := mem[R28 + 8, el]:u64
000253d3: R19 := 0x412000
000253d9: R19 := R19 + 0xA70
000253de: R1 := 0x412000
000253e4: R2 := R19
000253ea: R1 := R1 + 0xE68
000253ef: R30 := 0x4073BC
000253f1: call @hlist_subcmp with return %000253f3

000253f3:
000253f6: when 31:0[R0] = 0 goto %00022ee1
00034544: goto %000253fa

00022ee1:
00022ee6: R0 := mem[R31 + 0xA0, el]:u64
00022eec: R2 := R19
00022ef1: R1 := 0x412000
00022ef7: R1 := R1 + 0xA80
00022efe: R0 := mem[R0 + 8, el]:u64
00022f03: R30 := 0x407418
00022f05: call @hlist_subcmp with return %00022f07

00022f07:
00022f0a: VF := 0
00022f0d: CF := 1
00022f11: ZF := 31:0[R0] = 0
00022f15: NF := 31:31[R0]
00022f1c: R28 := mem[R31 + 0xA0, el]:u64
00022f28: when ZF goto %00022f21
00022f29: goto %00022f24

00022f24:
00022f25: R26 := 1
00022f2b: goto %00022f27

00022f21:
00022f22: R26 := 0
00022f2a: goto %00022f27

00022f27:
00022f30: goto %00022f2e

000253fa:
000253ff: R28 := mem[R31 + 0xA0, el]:u64
00025405: R26 := pad:64[31:0[R22]]
00025409: goto %00022f2e

00022f2e:
00022f35: R0 := R28
00022f3a: R30 := 0x4072F8
00022f3c: call @dup_rr_data with return %00022f3e

00022f3e:
00022f42: R19 := R0
00022f48: R0 := R25
00022f4d: R30 := 0x407304
00022f4f: call @free_rr_data with return %00022f51

00022f51:
00022f55: R20 := pad:64[31:0[R26]]
00022f5c: R0 := mem[R31 + 0x70, el]:u64
00022f61: R30 := 0x407310
00022f63: call @free_rr_data with return %00022f65

00022f65:
00022f68: goto %00022f66

00025331:
0002533a: when 31:0[R26] <> 0 goto %00025338
00034545: goto %00025261

00025338:
00025342: R0 := mem[R28 + 8, el]:u64
00025347: R30 := 0x407028
00025349: call @hlist_dump with return %0002534b

0002534b:
00025350: R28 := mem[R31 + 0xA0, el]:u64
00025354: goto %00025261

00025261:
00025269: R0 := pad:64[mem[R28, el]:u32]
0002526f: when 31:0[R0] <> 0 goto %0002526d
00034546: goto %00023085

0002526d:
00025276: #1128 := R28 + 0x28
0002527b: R3 := mem[#1128, el]:u64
00025280: R4 := mem[#1128 + 8, el]:u64
00025286: R1 := R23
0002528b: R0 := 7
00025291: R2 := R31 + 0xD0
00025296: R30 := 0x406AC4
00025298: call @syslog with return %0002529a

0002529a:
0002529f: R0 := mem[R31 + 0xA0, el]:u64
000252a6: R1 := pad:64[mem[R0, el]:u32]
000252ab: when 31:0[R1] = 0 goto %00023085
00034547: goto %000252af

000252af:
000252b4: R0 := mem[R0 + 8, el]:u64
000252ba: R1 := R19
000252c1: R2 := mem[R31 + 0x98, el]:u64
000252c6: R30 := 0x406AE0
000252c8: call @http_parse_basic with return %000252ca

000252ca:
000252cd: VF := 0
000252d0: CF := 1
000252d4: ZF := 31:0[R0] = 0
000252d8: NF := 31:31[R0]
000252df: when ~(NF = VF & ~ZF) goto %0002519c
00034548: goto %000252e3

0002519c:
0002519f: R0 := 0x430000
000251a6: R0 := pad:64[mem[R0 + 0x3D0, el]:u32]
000251ac: when 31:0[R0] = 0 goto %000251aa
00034549: goto %00025233

00025233:
00025236: R0 := 0x430000
0002523d: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00025242: when 31:0[R0] <> 0 goto %00022f76
0003454a: goto %00022f89

00022f76:
00022f79: R0 := 0x412000
00022f7f: R0 := R0 + 0xFC0
00022f84: R30 := 0x407320
00022f86: call @puts with return %00022f88

00022f88:
00022f8b: goto %00022f89

00022f89:
00022f91: R0 := mem[R31 + 0xA0, el]:u64
00022f98: R0 := mem[R0 + 0x48, el]:u64
00022f9d: R30 := 0x406E38
00022f9f: call @gen_407_page with return %00022fa1

00022fa1:
00022fa5: R19 := R0
00022faa: R30 := 0x406E40
00022fac: call @strlen with return %00022fae

00022fae:
00022fb2: R2 := R0
00022fb9: R0 := pad:64[mem[R31 + 0x94, el]:u32]
00022fbf: R1 := R19
00022fc4: R30 := 0x406E50
00022fc6: call @write_wrapper with return %00022fc8

00022fc8:
00022fcc: R0 := R19
00022fd1: R30 := 0x406E58
00022fd3: call @free with return %00022fd5

00022fd5:
00022fd9: R0 := R25
00022fde: R30 := 0x406E60
00022fe0: call @free_rr_data with return %00022fe2

00022fe2:
00022fe7: R0 := mem[R31 + 0x70, el]:u64
00022fec: R30 := 0x406E68
00022fee: call @free_rr_data with return %00022ff0

00022ff0:
00022ff2: goto %00022d4e

000252e3:
000252e8: R0 := pad:64[mem[R20, el]:u32]
000252ee: when 31:0[R0] <> 0 goto %000252ec
0003454b: goto %000251aa

000252ec:
000252f6: R2 := mem[R31 + 0x98, el]:u64
000252fb: R0 := 0x412000
00025301: R0 := R0 + 0xD50
00025307: R3 := R2 + 0x64
0002530d: R1 := R2 + 0x32
00025312: R30 := 0x406EAC
00025314: call @printf with return %00025316

00025316:
00025318: goto %000251aa

000251aa:
000251b2: R0 := 0x430000
000251b9: R28 := mem[R0 + 0x3E8, el]:u64
000251bf: when R28 = 0 goto %000251bd
0003454c: goto %000251f5

000251f5:
0003454d: goto %000251f7

000251f7:
000251fc: R26 := mem[R31 + 0xA0, el]:u64
00025201: R3 := 1
00025208: R1 := mem[R28, el]:u64
0002520d: R2 := mem[R28 + 8, el]:u64
00025214: R0 := mem[R26 + 8, el]:u64
00025219: R30 := 0x406B14
0002521b: call @hlist_mod with return %0002521d

0002521d:
00025222: R28 := mem[R28 + 0x18, el]:u64
0002522a: mem := mem with [R26 + 8, el]:u64 <- R0
0002522f: when R28 <> 0 goto %000251f7
0003454e: goto %000251bd

000251bd:
000251c7: R26 := mem[R31 + 0xA0, el]:u64
000251ce: R0 := pad:64[mem[R26 + 0x24, el]:u32]
000251d4: #1127 := 31:0[R0] - 0xA
000251d9: VF := extend:64[#1127] <> extend:64[31:0[R0]] - 0xA
000251de: CF := pad:64[#1127] <> pad:64[31:0[R0]] + 0xFFFFFFF6
000251e2: ZF := #1127 = 0
000251e6: NF := 31:31[#1127]
000251ed: when ~(NF = VF & ~ZF) goto %0002302d
0003454f: goto %000251f1

000251f1:
000251f3: goto %00022ff4

00022ff4:
00022ff9: R0 := mem[R26 + 8, el]:u64
00022ffe: R2 := 0x412000
00023003: R1 := 0x412000
00023009: R2 := R2 + 0xA70
0002300f: R1 := R1 + 0xE68
00023014: R3 := 1
00023019: R30 := 0x406E88
0002301b: call @hlist_mod with return %0002301d

0002301d:
00023023: mem := mem with [R26 + 8, el]:u64 <- R0
0002302a: R26 := mem[R31 + 0xA0, el]:u64
0002302f: goto %0002302d

0002302d:
00023034: R1 := R19
0002303b: R0 := mem[R26 + 8, el]:u64
00023040: R30 := 0x406B54
00023042: call @hlist_get with return %00023044

00023044:
00023048: R1 := R19
0002304e: when R0 <> 0 goto %0002304c
00034550: goto %00023075

00023075:
0002307a: R1 := mem[R31 + 0xA0, el]:u64
00023081: R0 := pad:64[mem[R1, el]:u32]
00023087: when 31:0[R0] = 0 goto %00023085
00034551: goto %000255dd

000255dd:
000255e2: R0 := pad:64[31:0[R21] | 31:0[R22]]
000255e7: when 31:0[R0] <> 0 goto %00023085
00034552: goto %000255eb

000255eb:
000255f0: R3 := mem[R31 + 0x98, el]:u64
000255f6: R0 := R31 + 0x90
000255fd: R2 := mem[R31 + 0xA8, el]:u64
00025602: R30 := 0x406B80
00025604: call @proxy_authenticate with return %00025606

00025606:
0002560a: R26 := pad:64[31:0[R0]]
0002560f: when 31:0[R0] = 0 goto %00025246
00034553: goto %00025613

00025246:
00025249: R0 := 0x430000
00025250: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00025255: when 31:0[R0] <> 0 goto %00025053
00034554: goto %00025066

00025053:
00025056: R0 := 0x412000
0002505c: R0 := R0 + 0xFF0
00025061: R30 := 0x4070D0
00025063: call @puts with return %00025065

00025065:
00025068: goto %00025066

00025066:
0002506d: R0 := R25
00025072: R30 := 0x406F60
00025074: call @free_rr_data with return %00025076

00025076:
0002507b: R0 := mem[R31 + 0x70, el]:u64
00025080: R20 := 0
00025085: R22 := 0
0002508a: R19 := 0xFFFFFFFFFFFFFFFF
0002508f: R30 := 0x406F74
00025091: call @free_rr_data with return %00025093

00025093:
00025095: goto %00022a67

00025613:
00025618: R0 := mem[R31 + 0xA8, el]:u64
0002561f: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00025625: #1131 := 31:0[R1] - 0x197
0002562a: VF := extend:64[#1131] <> extend:64[31:0[R1]] - 0x197
0002562f: CF := pad:64[#1131] <> pad:64[31:0[R1]] + 0xFFFFFE69
00025633: ZF := #1131 = 0
00025637: NF := 31:31[#1131]
0002563c: when ZF goto %00025097
00034555: goto %00025640

00025097:
0002509a: R30 := 0x406F7C
0002509c: call @reset_rr_data with return %0002509e

0002509e:
000250a1: R21 := 0
000250a8: R26 := mem[R31 + 0xC0, el]:u64
000250ad: R22 := 0
000250b4: R1 := pad:64[mem[R20, el]:u32]
000250bb: R0 := pad:64[mem[R26, el]:u32]
000250c1: when 31:0[R1] = 0 goto %000250bf
00034556: goto %000230a1

00025640:
00025645: R2 := pad:64[mem[R20, el]:u32]
0002564b: when 31:0[R2] <> 0 goto %00025649
00034557: goto %00025697

00025649:
00025651: R0 := 0x413000
00025657: R0 := R0 + 0x10
0002565c: R30 := 0x406DF4
0002565e: call @puts with return %00025660

00025660:
00025665: R0 := mem[R31 + 0xA8, el]:u64
0002566c: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00025672: #1132 := 31:0[R1] - 0x18F
00025677: VF := extend:64[#1132] <> extend:64[31:0[R1]] - 0x18F
0002567c: CF := pad:64[#1132] <> pad:64[31:0[R1]] + 0xFFFFFE71
00025680: ZF := #1132 = 0
00025684: NF := 31:31[#1132]
00025692: when NF = VF & ~ZF goto %0002568b
00025693: goto %0002568e

0002568e:
0002568f: R21 := 1
00025695: goto %00025691

0002568b:
0002568c: R21 := 0
00025694: goto %00025691

00025691:
00034558: goto %00023231

00023231:
00023238: #1067 := 31:0[R1] - 0x197
0002323d: VF := extend:64[#1067] <> extend:64[31:0[R1]] - 0x197
00023242: CF := pad:64[#1067] <> pad:64[31:0[R1]] + 0xFFFFFE69
00023246: ZF := #1067 = 0
0002324a: NF := 31:31[#1067]
00023250: when ZF goto %0002324e
00034559: goto %0002516a

0002324e:
00023258: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0002325f: R26 := pad:64[31:0[R1] | 31:0[R21]]
00023265: when 31:0[R26] = 0 goto %00023263
0003455a: goto %000250fe

000250fe:
00025103: R0 := pad:64[mem[R20, el]:u32]
00025109: when 31:0[R0] <> 0 goto %00025107
0003455b: goto %00025125

00025107:
00025110: R2 := pad:64[31:0[R21]]
00025115: R0 := 0x413000
0002511b: R0 := R0 + 0x40
00025120: R30 := 0x4073DC
00025122: call @printf with return %00025124

00025124:
00025127: goto %00025125

00025125:
0002512d: R0 := mem[R31 + 0x98, el]:u64
00025133: when R0 = 0 goto %00025131
0003455c: goto %00025163

00025163:
00025166: R30 := 0x407050
00025168: call @free with return %00025131

00025131:
0002513b: R0 := mem[R31 + 0x70, el]:u64
00025141: R21 := pad:64[31:0[R26]]
00025148: R28 := mem[R31 + 0xA0, el]:u64
0002514d: R30 := 0x407060
0002514f: call @free_rr_data with return %00025151

00025151:
00025156: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0002515b: R30 := 0x407068
0002515d: call @close with return %0002515f

0002515f:
00025161: goto %0002297d

0002516a:
0002516e: R26 := pad:64[31:0[R21]]
00025173: goto %00025171

00025697:
0002569b: #1133 := 31:0[R1] - 0x18F
000256a0: VF := extend:64[#1133] <> extend:64[31:0[R1]] - 0x18F
000256a5: CF := pad:64[#1133] <> pad:64[31:0[R1]] + 0xFFFFFE71
000256a9: ZF := #1133 = 0
000256ad: NF := 31:31[#1133]
000256bb: when NF = VF & ~ZF goto %000256b4
000256bc: goto %000256b7

000256b7:
000256b8: R26 := 1
000256be: goto %000256ba

000256b4:
000256b5: R26 := 0
000256bd: goto %000256ba

000256ba:
0003455d: goto %00025171

00025171:
00025178: #1126 := 31:0[R26] - 1
0002517d: VF := extend:64[#1126] <> extend:64[31:0[R26]] - 1
00025182: CF := pad:64[#1126] <> pad:64[31:0[R26]] + 0xFFFFFFFF
00025186: ZF := #1126 = 0
0002518a: NF := 31:31[#1126]
00025197: when ZF goto %00025190
00025198: goto %00025193

00025193:
00025194: R22 := 1
0002519a: goto %00025196

00025190:
00025191: R22 := pad:64[31:0[R22]]
00025199: goto %00025196

00025196:
0003455e: goto %00023263

00023263:
0002326b: R1 := 0x430000
00023270: R2 := 1
00023278: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R2]
0002327d: R28 := 0x7FFF
00023284: R1 := pad:64[mem[R1 + 0x3D4, el]:u32]
0002328a: when 31:0[R1] <> 0 goto %00023288
0003455f: goto %00024d94

00023288:
00023291: R1 := R0
00023296: R5 := 0x430000
0002329c: #1068 := R31 + 0x98
000232a1: R2 := mem[#1068, el]:u64
000232a6: R0 := mem[#1068 + 8, el]:u64
000232ac: R4 := R31 + 0x90
000232b3: R5 := mem[R5 + 0x3D8, el]:u64
000232ba: R3 := pad:64[mem[R31 + 0x94, el]:u32]
000232bf: R30 := 0x407200
000232c2: call @scanner_hook with return %00024d78

00024d78:
00024d7c: R1 := pad:64[0:0[R0]]
00024d82: R28 := pad:64[31:0[R0]]
00024d8a: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R1]
00024d91: R0 := mem[R31 + 0xA8, el]:u64
00024d96: goto %00024d94

00024d94:
00024d9c: R0 := mem[R0 + 8, el]:u64
00024da1: R1 := 0x412000
00024da7: R21 := R1 + 0xA80
00024dac: R2 := 0x412000
00024db2: R1 := R21
00024db8: R2 := R2 + 0xA70
00024dbd: R30 := 0x406BE4
00024dbf: call @hlist_subcmp with return %00024dc1

00024dc1:
00024dc7: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
00024dcd: when 31:0[R0] <> 0 goto %00024dcb
00034560: goto %000250d9

00024dcb:
00024dd5: R4 := mem[R31 + 0xA8, el]:u64
00024dda: goto %00024dd8

000250d9:
000250dd: #1125 := R31 + 0xA0
000250e2: R0 := mem[#1125, el]:u64
000250e7: R4 := mem[#1125 + 8, el]:u64
000250ec: when R0 = 0 goto %00024fe2
00034561: goto %000250f0

000250f0:
000250f5: R1 := pad:64[mem[R0, el]:u32]
000250fa: when 31:0[R1] <> 0 goto %00024fb8
00034562: goto %00024fe2

00024fb8:
00024fbd: R1 := mem[R0 + 0x28, el]:u64
00024fc2: R0 := 0x412000
00024fc8: R0 := R0 + 0xCB8
00024fd0: mem := mem with [R31 + 0x88, el]:u64 <- R4
00024fd5: R30 := 0x4071CC
00024fd7: call @strcasecmp with return %00024fd9

00024fd9:
00024fde: R4 := mem[R31 + 0x88, el]:u64
00024fe4: when 31:0[R0] <> 0 goto %00024fe2
00034563: goto %00025029

00025029:
0002502e: R0 := pad:64[mem[R4 + 0x10, el]:u32]
00025034: #1124 := 31:0[R0] - 0xC8
00025039: VF := extend:64[#1124] <> extend:64[31:0[R0]] - 0xC8
0002503e: CF := pad:64[#1124] <> pad:64[31:0[R0]] + 0xFFFFFF38
00025042: ZF := #1124 = 0
00025046: NF := 31:31[#1124]
0002504b: when ZF <> 1 goto %00024fe2
00034564: goto %0002504f

0002504f:
00025051: goto %00024dd8

00024fe2:
00024fec: R0 := mem[R4 + 8, el]:u64
00024ff2: R1 := R21
00024ff7: R2 := 0x412000
00024ffc: R3 := 1
00025002: R2 := R2 + 0xDB0
0002500a: mem := mem with [R31 + 0x88, el]:u64 <- R4
0002500f: R30 := 0x406C18
00025011: call @hlist_mod with return %00025013

00025013:
00025018: R4 := mem[R31 + 0x88, el]:u64
00025020: mem := mem with [R4 + 8, el]:u64 <- R0
00025027: R4 := mem[R31 + 0xA8, el]:u64
00034565: goto %00024dd8

00024dd8:
00024dde: R21 := 0x413000
00024de4: R21 := R21 + 0x78
00024de9: goto %00024de7

00024de7:
00024def: R0 := mem[R4 + 8, el]:u64
00024df5: R1 := R21
00024dfa: R30 := 0x406C54
00024dfc: call @hlist_get with return %00024dfe

00024dfe:
00024e02: when R0 <> 0 goto %00024e00
00034566: goto %00024e2f

00024e2f:
00024e34: R4 := mem[R31 + 0xA8, el]:u64
00024e3b: R0 := pad:64[mem[R4 + 0x10, el]:u32]
00024e41: #1120 := 31:0[R0] - 0x197
00024e46: VF := extend:64[#1120] <> extend:64[31:0[R0]] - 0x197
00024e4b: CF := pad:64[#1120] <> pad:64[31:0[R0]] + 0xFFFFFE69
00024e4f: ZF := #1120 = 0
00024e53: NF := 31:31[#1120]
00024e58: when ZF goto %00022c94
00034567: goto %00024e5c

00022c94:
00022c99: R0 := mem[R4 + 8, el]:u64
00022c9f: R1 := R21
00022ca4: R2 := 0x413000
00022ca9: R3 := 1
00022caf: R2 := R2 + 0x90
00022cb7: mem := mem with [R31 + 0x88, el]:u64 <- R4
00022cbc: R30 := 0x40715C
00022cbe: call @hlist_mod with return %00022cc0

00022cc0:
00022cc5: R4 := mem[R31 + 0x88, el]:u64
00022ccd: mem := mem with [R4 + 8, el]:u64 <- R0
00022cd4: R0 := pad:64[mem[R31 + 0x68, el]:u32]
00022cda: when 31:0[R0] = 0 goto %00022cd8
00034568: goto %00024e65

00022cd8:
00022ce2: R4 := mem[R31 + 0xA8, el]:u64
00022ce7: goto %00022ce5

00024e5c:
00024e61: R0 := pad:64[mem[R31 + 0x68, el]:u32]
00024e67: when 31:0[R0] <> 0 goto %00024e65
00034569: goto %00022ce5

00024e65:
00024e6e: R21 := pad:64[31:0[R26]]
00024e73: R27 := 1
00024e78: R7 := 1
00024e7d: goto %00024e7b

00024e7b:
00024e83: R0 := pad:64[mem[R20, el]:u32]
00024e89: R1 := R31 + 0xC0
00024e91: R26 := mem[R1 + (60:0[R7].0), el]:u64
00024e97: when 31:0[R0] = 0 goto %00024e95
0003456a: goto %00024f01

00024f01:
00024f06: R1 := pad:64[mem[R26, el]:u32]
00024f0b: R0 := 0x412000
00024f11: R0 := R0 + 0xE80
00024f19: mem := mem with [R31 + 0x68, el]:u64 <- R7
00024f1e: R30 := 0x406EE8
00024f20: call @printf with return %00024f22

00024f22:
00024f27: R7 := mem[R31 + 0x68, el]:u64
0003456b: goto %00024e95

00024e95:
00024ea0: mem := mem with [R31 + 0x68, el]:u64 <- R7
00024ea8: R1 := mem[R25 + (60:0[R7].0), el]:u64
00024eaf: R0 := pad:64[mem[R26, el]:u32]
00024eb4: R30 := 0x406EFC
00024eb6: call @headers_send with return %00024eb8

00024eb8:
00024ebd: R7 := mem[R31 + 0x68, el]:u64
00024ec2: when 31:0[R0] = 0 goto %00022d2e
0003456c: goto %00024ec6

00024ec6:
00024eca: #1121 := 31:0[R27] - 1
00024ecf: VF := extend:64[#1121] <> extend:64[31:0[R27]] - 1
00024ed4: CF := pad:64[#1121] <> pad:64[31:0[R27]] + 0xFFFFFFFF
00024ed8: ZF := #1121 = 0
00024edc: NF := 31:31[#1121]
00024ee2: when ZF <> 1 goto %00024ee0
0003456d: goto %00024ef6

00024ee0:
00024ee8: when 1:1[R28] goto %00023129
0003456e: goto %00024eec

00024eec:
00024ef0: R27 := pad:64[31:0[R27] + 1]
00024ef4: goto %0002316a

00024ef6:
00024efb: R4 := mem[R31 + 0xA8, el]:u64
00024eff: goto %00022cee

00022ce5:
00022cec: R21 := pad:64[31:0[R26]]
0003456f: goto %00022cee

00022cee:
00022cf3: R2 := mem[R31 + 0xA0, el]:u64
00022cf9: when R2 = 0 goto %00022cf7
00034570: goto %00026fb3

00026fb3:
00026fb8: R0 := pad:64[mem[R2, el]:u32]
00026fbd: when 31:0[R0] = 0 goto %00022cf7
00034571: goto %00026fc1

00026fc1:
00026fc6: R1 := mem[R2 + 0x28, el]:u64
00026fcb: R0 := 0x412000
00026fd1: R0 := R0 + 0xCB8
00026fd9: mem := mem with [R31 + 0x68, el]:u64 <- R2
00026fe1: mem := mem with [R31 + 0x88, el]:u64 <- R4
00026fe6: R30 := 0x406C9C
00026fe8: call @strcasecmp with return %00026fea

00026fea:
00026fee: R26 := pad:64[31:0[R0]]
00026ff5: R2 := mem[R31 + 0x68, el]:u64
00026ffc: R4 := mem[R31 + 0x88, el]:u64
00027001: when 31:0[R0] = 0 goto %00024f29
00034572: goto %00022cf7

00024f29:
00024f2e: R0 := pad:64[mem[R4 + 0x10, el]:u32]
00024f34: #1122 := 31:0[R0] - 0xC8
00024f39: VF := extend:64[#1122] <> extend:64[31:0[R0]] - 0xC8
00024f3e: CF := pad:64[#1122] <> pad:64[31:0[R0]] + 0xFFFFFF38
00024f42: ZF := #1122 = 0
00024f46: NF := 31:31[#1122]
00024f4b: when ZF <> 1 goto %00022cf7
00034573: goto %00024f4f

00024f4f:
00024f52: R0 := 0x430000
00024f59: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00024f5f: when 31:0[R0] <> 0 goto %00024f5d
00034574: goto %00024f75

00024f5d:
00024f65: R0 := 0x413000
00024f6b: R0 := R0 + 0xD0
00024f70: R30 := 0x4073EC
00024f72: call @puts with return %00024f74

00024f74:
00024f77: goto %00024f75

00024f75:
00024f7c: #1123 := R31 + 0x90
00024f81: R1 := pad:64[mem[#1123, el]:u32]
00024f86: R0 := pad:64[mem[#1123 + 4, el]:u32]
00024f8b: R20 := 0
00024f90: R19 := 0xFFFFFFFFFFFFFFFF
00024f95: R30 := 0x4071A4
00024f97: call @tunnel with return %00024f99

00024f99:
00024f9d: R0 := R25
00024fa2: R30 := 0x4071AC
00024fa4: call @free_rr_data with return %00024fa6

00024fa6:
00024fab: R0 := mem[R31 + 0x70, el]:u64
00024fb0: R30 := 0x4071B4
00024fb2: call @free_rr_data with return %00024fb4

00024fb4:
00024fb6: goto %00022a67

00022cf7:
00022d00: when 1:1[R28] goto %00022cfe
00034575: goto %00022d65

00022cfe:
00022d08: R1 := mem[R31 + 0xB8, el]:u64
00022d0e: R3 := R4
00022d15: R0 := mem[R31 + 0xC8, el]:u64
00022d1c: R1 := pad:64[mem[R1, el]:u32]
00022d23: R0 := pad:64[mem[R0, el]:u32]
00022d28: R30 := 0x407084
00022d2a: call @http_body_send with return %00022d2c

00022d2c:
00022d30: when 31:0[R0] = 0 goto %00022d2e
00034576: goto %00022d5d

00022d5d:
00022d62: R4 := mem[R31 + 0xA8, el]:u64
00022d67: goto %00022d65

00022d65:
00022d6d: R0 := mem[R4 + 8, el]:u64
00022d72: R1 := 0x412000
00022d77: R28 := 0x412000
00022d7d: R26 := R1 + 0xE68
00022d83: R28 := R28 + 0xA70
00022d89: R1 := R26
00022d8f: R2 := R28
00022d94: R30 := 0x406CD0
00022d96: call @hlist_subcmp with return %00022d98

00022d98:
00022d9c: when 31:0[R0] = 0 goto %00022d9a
00034577: goto %00026f84

00026f84:
00026f89: R0 := mem[R31 + 0xA0, el]:u64
00026f90: R0 := pad:64[mem[R0 + 0x24, el]:u32]
00026f96: #1213 := 31:0[R0] - 0xA
00026f9b: VF := extend:64[#1213] <> extend:64[31:0[R0]] - 0xA
00026fa0: CF := pad:64[#1213] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00026fa4: ZF := #1213 = 0
00026fa8: NF := 31:31[#1213]
00026faf: when NF = VF & ~ZF goto %00022e34
00034578: goto %00022d9a

00022e34:
00022e39: R5 := mem[R31 + 0xA8, el]:u64
00022e3f: R1 := R26
00022e45: R2 := R28
00022e4a: R3 := 1
00022e52: mem := mem with [R31 + 0x68, el]:u64 <- R5
00022e59: R0 := mem[R5 + 8, el]:u64
00022e5e: R30 := 0x407240
00022e60: call @hlist_mod with return %00022e62

00022e62:
00022e67: R5 := mem[R31 + 0x68, el]:u64
00022e6d: R2 := R28
00022e74: R26 := mem[R31 + 0xA8, el]:u64
00022e79: R1 := 0x412000
00022e81: mem := mem with [R5 + 8, el]:u64 <- R0
00022e87: R1 := R1 + 0xA80
00022e8c: R3 := 1
00022e93: R0 := mem[R26 + 8, el]:u64
00022e98: R30 := 0x407264
00022e9a: call @hlist_mod with return %00022e9c

00022e9c:
00022ea2: mem := mem with [R26 + 8, el]:u64 <- R0
00022ea8: R0 := R25
00022ead: R30 := 0x407270
00022eaf: call @free_rr_data with return %00022eb1

00022eb1:
00022eb6: R0 := mem[R31 + 0x70, el]:u64
00022ebb: R30 := 0x407278
00022ebd: call @free_rr_data with return %00022ebf

00022ebf:
00022ec4: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00022eca: when 31:0[R0] = 0 goto %00022ec8
00034579: goto %00026f47

00026f47:
00026f4c: R0 := pad:64[mem[R31 + 0x90, el]:u32]
00026f51: R30 := 0x407288
00026f53: call @so_closed with return %00026f55

00026f55:
00026f58: when 31:0[R0] <> 0 goto %00022ec8
0003457a: goto %00026f5c

00026f5c:
00026f61: R0 := pad:64[mem[R31 + 0x94, el]:u32]
00026f66: R30 := 0x407294
00026f68: call @so_closed with return %00026f6a

00026f6a:
00026f6d: R1 := 0x430000
00026f74: R1 := pad:64[mem[R1 + 0x380, el]:u32]
00026f7b: R0 := pad:64[31:0[R0] | 31:0[R1]]
00026f80: when 31:0[R0] <> 0 goto %00022ec8
0003457b: goto %00025515

00022ec8:
00022ed1: R20 := pad:64[31:0[R22]]
00022ed6: R26 := 1
00022edb: R19 := 0
00022edf: goto %00022a67

00025515:
0002551b: R30 := 0x4072A8
0002551d: call @new_rr_data with return %0002551f

0002551f:
00025523: R28 := R0
00025528: goto %00025526

00022d9a:
00022da4: R21 := mem[R31 + 0xA8, el]:u64
00022da9: R19 := 0x412000
00022daf: R19 := R19 + 0xDB0
00022db5: R1 := R26
00022dbb: R2 := R19
00022dc0: R3 := 1
00022dc7: R0 := mem[R21 + 8, el]:u64
00022dcc: R30 := 0x406D04
00022dce: call @hlist_mod with return %00022dd0

00022dd0:
00022dd5: R20 := mem[R31 + 0xA8, el]:u64
00022ddd: mem := mem with [R21 + 8, el]:u64 <- R0
00022de3: R2 := R19
00022de8: R1 := 0x412000
00022ded: R3 := 1
00022df3: R1 := R1 + 0xA80
00022dfa: R0 := mem[R20 + 8, el]:u64
00022dff: R30 := 0x406D24
00022e01: call @hlist_mod with return %00022e03

00022e03:
00022e09: mem := mem with [R20 + 8, el]:u64 <- R0
00022e0e: R1 := 0x430000
00022e15: R1 := pad:64[mem[R1 + 0x374, el]:u32]
00022e1b: when 31:0[R1] <> 0 goto %00022e19
0003457c: goto %00022d2e

00022e19:
00022e21: R0 := 0x413000
00022e27: R0 := R0 + 0xF8
00022e2c: R30 := 0x407220
00022e2e: call @puts with return %00022e30

00022e30:
00022e32: goto %00022d2e

00024e00:
00024e0a: R27 := mem[R31 + 0xA8, el]:u64
00024e10: R1 := R21
00024e17: R0 := mem[R27 + 8, el]:u64
00024e1c: R30 := 0x406C40
00024e1e: call @hlist_del with return %00024e20

00024e20:
00024e25: R4 := mem[R31 + 0xA8, el]:u64
00024e2d: mem := mem with [R27 + 8, el]:u64 <- R0
0003457d: goto %00024de7

0002304c:
00023056: R28 := mem[R31 + 0xA0, el]:u64
0002305d: R0 := mem[R28 + 8, el]:u64
00023062: R30 := 0x406B40
00023064: call @hlist_del with return %00023066

00023066:
0002306c: mem := mem with [R28 + 8, el]:u64 <- R0
00023073: R26 := mem[R31 + 0xA0, el]:u64
0003457e: goto %0002302d

00023085:
0002308f: R26 := mem[R31 + 0xC0, el]:u64
00023096: R1 := pad:64[mem[R20, el]:u32]
0002309d: R0 := pad:64[mem[R26, el]:u32]
000230a3: when 31:0[R1] <> 0 goto %000230a1
0003457f: goto %000250bf

000230a1:
000230aa: R1 := pad:64[31:0[R0]]
000230af: R0 := 0x412000
000230b5: R0 := R0 + 0xE80
000230ba: R30 := 0x406FA4
000230bc: call @printf with return %000230be

000230be:
000230c3: R3 := mem[R31 + 0xA0, el]:u64
000230c8: R0 := 0x412000
000230ce: R0 := R0 + 0xEA0
000230d4: #1063 := R3 + 0x28
000230d9: R1 := mem[#1063, el]:u64
000230de: R2 := mem[#1063 + 8, el]:u64
000230e5: R3 := mem[R3 + 0x48, el]:u64
000230ea: R30 := 0x406FBC
000230ec: call @printf with return %000230ee

000230ee:
000230f3: R0 := mem[R31 + 0xA0, el]:u64
000230fa: R0 := mem[R0 + 8, el]:u64
000230ff: R30 := 0x406FC8
00023101: call @hlist_dump with return %00023103

00023103:
00023108: R1 := mem[R31 + 0xA0, el]:u64
0002310f: R0 := pad:64[mem[R26, el]:u32]
00023114: R30 := 0x406FD4
00023116: call @headers_send with return %00023118

00023118:
0002311c: when 31:0[R0] <> 0 goto %0002311a
00034580: goto %000255d9

000255d9:
000255db: goto %00022d2e

000250bf:
000250c9: R1 := mem[R31 + 0xA0, el]:u64
000250ce: R30 := 0x406A2C
000250d0: call @headers_send with return %000250d2

000250d2:
000250d5: when 31:0[R0] = 0 goto %00022d2e
00034581: goto %0002311a

0002311a:
00023122: R27 := 0
00023127: R7 := 0
00034582: goto %00023129

00023129:
0002312d: R1 := R31 + 0xB0
00023134: R0 := pad:64[mem[R26, el]:u32]
0002313a: #1064 := R31 + 0xA0
0002313f: R2 := mem[#1064, el]:u64
00023144: R3 := mem[#1064 + 8, el]:u64
0002314c: R1 := mem[R1 + (60:0[R7].0), el]:u64
00023153: R1 := pad:64[mem[R1, el]:u32]
00023158: R30 := 0x406A50
0002315a: call @http_body_send with return %0002315c

0002315c:
0002315f: when 31:0[R0] = 0 goto %00022d2e
00034583: goto %00023163

00022d2e:
00022d37: R0 := R25
00022d3c: R30 := 0x406D3C
00022d3e: call @free_rr_data with return %00022d40

00022d40:
00022d45: R0 := mem[R31 + 0x70, el]:u64
00022d4a: R30 := 0x406D44
00022d4c: call @free_rr_data with return %00022d4e

00022d4e:
00022d51: R20 := 0
00022d56: R26 := 0
00022d5b: R19 := 0xFFFFFFFFFFFFFFFF
00034584: goto %00022a67

00022a67:
00022a6e: when R24 = 0 goto %00022a6c
00034585: goto %00022f66

00022f66:
00022f6d: R0 := R24
00022f72: R30 := 0x406D5C
00022f74: call @free with return %00022a6c

00022a6c:
00022a74: R0 := 0x430000
00022a7b: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00022a81: when 31:0[R0] <> 0 goto %00022a7f
00034586: goto %00022adb

00022a7f:
00022a89: R0 := pad:64[mem[R31 + 0x90, el]:u32]
00022a8e: R1 := 0x430000
00022a95: R21 := pad:64[mem[R1 + 0x3D0, el]:u32]
00022a9a: R30 := 0x406DBC
00022a9c: call @so_closed with return %00022a9e

00022a9e:
00022aa2: R4 := pad:64[31:0[R0]]
00022aa8: R3 := pad:64[31:0[R21]]
00022aae: R2 := pad:64[31:0[R22]]
00022ab4: R1 := pad:64[31:0[R26]]
00022ab9: R0 := 0x413000
00022abf: R0 := R0 + 0x118
00022ac4: R30 := 0x406DD8
00022ac6: call @printf with return %00022ac8

00022ac8:
00022acb: R0 := 0x413000
00022ad1: R0 := R0 + 0x158
00022ad6: R30 := 0x406DE4
00022ad8: call @puts with return %00022ada

00022ada:
00022add: goto %00022adb

00022adb:
00022ae2: when 31:0[R20] = 0 goto %00022ae0
00034587: goto %00022b73

00022b73:
00022b76: R0 := 0x430000
00022b7d: R0 := pad:64[mem[R0 + 0x3D0, el]:u32]
00022b83: when 31:0[R0] = 0 goto %00022b81
00034588: goto %00022ae0

00022b81:
00022b8b: R0 := pad:64[mem[R31 + 0x90, el]:u32]
00022b90: R30 := 0x4070DC
00022b92: call @so_closed with return %00022b94

00022b94:
00022b97: when 31:0[R0] <> 0 goto %00022ae0
00034589: goto %00022b9b

00022b9b:
00022b9e: R0 := 0x430000
00022ba5: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00022bab: when 31:0[R0] <> 0 goto %00022ba9
0003458a: goto %00022bd1

00022ba9:
00022bb2: #1057 := R31 + 0x90
00022bb7: R2 := pad:64[mem[#1057, el]:u32]
00022bbc: R1 := pad:64[mem[#1057 + 4, el]:u32]
00022bc1: R0 := 0x413000
00022bc7: R0 := R0 + 0x170
00022bcc: R30 := 0x407334
00022bce: call @printf with return %00022bd0

00022bd0:
00022bd3: goto %00022bd1

00022bd1:
00022bd9: R20 := mem[R31 + 0x78, el]:u64
00022bdf: R0 := R20
00022be4: R30 := 0x4070F8
00022be6: call @pthread_mutex_lock with return %00022be8

00022be8:
00022beb: R0 := 0x430000
00022bf2: R1 := extend:64[mem[R31 + 0x90, el]:u32]
00022bf9: R2 := mem[R31 + 0x98, el]:u64
00022c00: R0 := mem[R0 + 0x420, el]:u64
00022c05: R30 := 0x40710C
00022c07: call @plist_add with return %00022c09

00022c09:
00022c0d: R1 := R0
00022c12: R2 := 0x430000
00022c18: R0 := R20
00022c20: mem := mem with [R2 + 0x420, el]:u64 <- R1
00022c25: R30 := 0x407120
00022c27: call @pthread_mutex_unlock with return %00022c29

00022c29:
00022c2d: #1058 := R31 + 0x20
00022c32: R21 := mem[#1058, el]:u64
00022c37: R22 := mem[#1058 + 8, el]:u64
00022c3d: R0 := R19
00022c43: #1059 := R31 + 0x10
00022c48: R19 := mem[#1059, el]:u64
00022c4d: R20 := mem[#1059 + 8, el]:u64
00022c53: #1060 := R31 + 0x30
00022c58: R23 := mem[#1060, el]:u64
00022c5d: R24 := mem[#1060 + 8, el]:u64
00022c63: #1061 := R31 + 0x40
00022c68: R25 := mem[#1061, el]:u64
00022c6d: R26 := mem[#1061 + 8, el]:u64
00022c73: #1062 := R31 + 0x50
00022c78: R27 := mem[#1062, el]:u64
00022c7d: R28 := mem[#1062 + 8, el]:u64
00022c84: R29 := mem[R31, el]:u64
00022c89: R30 := mem[R31 + 8, el]:u64
00022c8d: R31 := R31 + 0x100
00022c92: call R30 with noreturn

00022ae0:
00022aea: R0 := mem[R31 + 0x98, el]:u64
00022aef: R30 := 0x406D80
00022af1: call @free with return %00022af3

00022af3:
00022af8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
00022afe: when 31:31[R0] goto %00022afc
0003458b: goto %00022b6c

00022b6c:
00022b6f: R30 := 0x406D8C
00022b71: call @close with return %00022afc

00022afc:
00022b05: #1052 := R31 + 0x20
00022b0a: R21 := mem[#1052, el]:u64
00022b0f: R22 := mem[#1052 + 8, el]:u64
00022b15: R0 := R19
00022b1b: #1053 := R31 + 0x10
00022b20: R19 := mem[#1053, el]:u64
00022b25: R20 := mem[#1053 + 8, el]:u64
00022b2b: #1054 := R31 + 0x30
00022b30: R23 := mem[#1054, el]:u64
00022b35: R24 := mem[#1054 + 8, el]:u64
00022b3b: #1055 := R31 + 0x40
00022b40: R25 := mem[#1055, el]:u64
00022b45: R26 := mem[#1055 + 8, el]:u64
00022b4b: #1056 := R31 + 0x50
00022b50: R27 := mem[#1056, el]:u64
00022b55: R28 := mem[#1056 + 8, el]:u64
00022b5c: R29 := mem[R31, el]:u64
00022b61: R30 := mem[R31 + 8, el]:u64
00022b65: R31 := R31 + 0x100
00022b6a: call R30 with noreturn

00023163:
00023167: R27 := pad:64[31:0[R27] + 1]
0002316c: goto %0002316a

0003458c: sub forward_tunnel(forward_tunnel_result)
00034bab: forward_tunnel_result :: out u32 = low:32[R0]

0002599b:
0002599f: #1141 := R31 - 0x70
000259a5: mem := mem with [#1141, el]:u64 <- R29
000259ab: mem := mem with [#1141 + 8, el]:u64 <- R30
000259af: R31 := #1141
000259b5: R29 := R31
000259bb: #1142 := R31 + 0x20
000259c1: mem := mem with [#1142, el]:u64 <- R21
000259c7: mem := mem with [#1142 + 8, el]:u64 <- R22
000259ce: R22 := mem[R0 + 8, el]:u64
000259d4: #1143 := R31 + 0x10
000259da: mem := mem with [#1143, el]:u64 <- R19
000259e0: mem := mem with [#1143 + 8, el]:u64 <- R20
000259e6: R19 := R0
000259ee: mem := mem with [R31 + 0x30, el]:u64 <- R23
000259f5: R23 := pad:64[mem[R0, el]:u32]
000259fb: R0 := R22
00025a00: R30 := 0x407718
00025a02: call @strdup with return %00025a04

00025a04:
00025a08: R20 := R0
00025a0d: V0 := 0
00025a14: R0 := pad:64[mem[R19 + 0x10, el]:u16]
00025a1a: R1 := R19 + 0x14
00025a20: R19 := R19 + 0x18
00025a26: #1144 := 31:0[R0] - 2
00025a2b: VF := extend:64[#1144] <> extend:64[31:0[R0]] - 2
00025a30: CF := pad:64[#1144] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00025a34: ZF := #1144 = 0
00025a38: NF := 31:31[#1144]
00025a3e: R2 := R31 + 0x40
00025a4c: when ZF <> 1 goto %00025a44
00025a4d: goto %00025a48

00025a48:
00025a49: R1 := R1
00025a4f: goto %00025a4b

00025a44:
00025a45: R1 := R19
00025a4e: goto %00025a4b

00025a4b:
00025a54: R3 := 0x2E
00025a5a: #1145 := R31 + 0x40
00025a60: mem := mem with [#1145, el]:u128 <- V0
00025a66: mem := mem with [#1145 + 0x10, el]:u128 <- V0
00025a6e: mem := mem with [R31 + 0x5E, el]:u128 <- V0
00025a73: R30 := 0x407748
00025a75: call @inet_ntop with return %00025a77

00025a77:
00025a7a: R30 := 0x40774C
00025a7c: call @new_auth with return %00025a7e

00025a7e:
00025a81: R1 := 0x3A
00025a87: R21 := R0
00025a8d: R0 := R20
00025a92: R30 := 0x40775C
00025a94: call @strchr with return %00025a96

00025a96:
00025a9a: when R0 = 0 goto %00025a98
0003458d: goto %00026cd4

00026cd4:
00026cd9: mem := mem with [R0] <- 0
0003458e: goto %00025a98

00025a98:
00025aa1: R2 := R20
00025aa7: R1 := R22
00025aad: R0 := R21
00025ab2: R30 := 0x407774
00025ab4: call @proxy_connect with return %00025ab6

00025ab6:
00025aba: R19 := pad:64[31:0[R0]]
00025ac0: when 31:31[R0] goto %00025abe
0003458f: goto %00026c7e

00025abe:
00025ac7: #1146 := 31:0[R0] + 2
00025acc: VF := extend:64[#1146] <> extend:64[31:0[R0]] + 2
00025ad1: CF := pad:64[#1146] <> pad:64[31:0[R0]] + 2
00025ad5: ZF := #1146 = 0
00025ad9: NF := 31:31[#1146]
00025adf: when ZF goto %00025add
00034590: goto %00025b3e

00025b3e:
00025b41: goto %00025b3f

00026c7e:
00026c81: R0 := 7
00026c87: R2 := R31 + 0x40
00026c8d: R3 := R22
00026c92: R1 := 0x413000
00026c98: R1 := R1 + 0x2A8
00026c9d: R30 := 0x407794
00026c9f: call @syslog with return %00026ca1

00026ca1:
00026ca4: R0 := 0x430000
00026cab: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00026cb0: when 31:0[R0] <> 0 goto %00025b73
00034591: goto %00026cb4

00025b73:
00025b77: R2 := pad:64[31:0[R23]]
00025b7d: R1 := R22
00025b82: R0 := 0x413000
00025b88: R0 := R0 + 0x2B8
00025b8d: R30 := 0x40781C
00025b8f: call @printf with return %00025b91

00025b91:
00025b95: R2 := R22
00025b9b: R1 := R21
00025ba1: R0 := pad:64[31:0[R19]]
00025ba6: R30 := 0x40782C
00025ba8: call @prepare_http_connect with return %00025baa

00025baa:
00025bad: when 31:0[R0] = 0 goto %00025b63
00034592: goto %00025bb1

00025bb1:
00025bb3: goto %00025b4f

00026cb4:
00026cb8: R2 := R22
00026cbe: R1 := R21
00026cc4: R0 := pad:64[31:0[R19]]
00026cc9: R30 := 0x4077B0
00026ccb: call @prepare_http_connect with return %00026ccd

00026ccd:
00026cd0: when 31:0[R0] <> 0 goto %00025b4f
00034593: goto %00025b63

00025b4f:
00025b53: R1 := pad:64[31:0[R19]]
00025b59: R0 := pad:64[31:0[R23]]
00025b5e: R30 := 0x407804
00025b60: call @tunnel with return %00025b62

00025b62:
00025b65: goto %00025b63

00025b63:
00025b6a: R0 := pad:64[31:0[R19]]
00025b6f: R30 := 0x4077BC
00025b71: call @close with return %00025b3f

00025b3f:
00025b46: R0 := pad:64[31:0[R23]]
00025b4b: R30 := 0x4077C4
00025b4d: call @close with return %00025add

00025add:
00025ae6: R0 := R21
00025aeb: R30 := 0x4077CC
00025aed: call @free with return %00025aef

00025aef:
00025af3: R0 := R20
00025af8: R30 := 0x4077D4
00025afa: call @free with return %00025afc

00025afc:
00025b00: #1147 := R31 + 0x20
00025b05: R21 := mem[#1147, el]:u64
00025b0a: R22 := mem[#1147 + 8, el]:u64
00025b10: R0 := pad:64[31:0[R19]]
00025b16: #1148 := R31 + 0x10
00025b1b: R19 := mem[#1148, el]:u64
00025b20: R20 := mem[#1148 + 8, el]:u64
00025b27: R23 := mem[R31 + 0x30, el]:u64
00025b2e: R29 := mem[R31, el]:u64
00025b33: R30 := mem[R31 + 8, el]:u64
00025b37: R31 := R31 + 0x70
00025b3c: call R30 with noreturn

00034594: sub fprintf(fprintf_stream, fprintf_format, fprintf_result)
00034bac: fprintf_stream :: in out u64 = R0
00034bad: fprintf_format :: in u64 = R1
00034bae: fprintf_result :: out u32 = low:32[R0]

00025ffb:
000302ce: R16 := 0x430000
000302d5: R17 := mem[R16 + 0x2F0, el]:u64
000302db: R16 := R16 + 0x2F0
000302e0: call R17 with noreturn

00034595: sub fputc(fputc_c, fputc_stream, fputc_result)
00034baf: fputc_c :: in u32 = low:32[R0]
00034bb0: fputc_stream :: in out u64 = R1
00034bb1: fputc_result :: out u32 = low:32[R0]

0002b892:
0002fc30: R16 := 0x430000
0002fc37: R17 := mem[R16 + 0x88, el]:u64
0002fc3d: R16 := R16 + 0x88
0002fc42: call R17 with noreturn

00034596: sub frame_dummy(frame_dummy_result)
00034bb2: frame_dummy_result :: out u32 = low:32[R0]

0002cc77:
0002cc79: call @register_tm_clones with noreturn

00034597: sub fread(fread_ptr, fread_size, fread_nmemb, fread_stream, fread_result)
00034bb3: fread_ptr :: in out u64 = R0
00034bb4: fread_size :: in u64 = R1
00034bb5: fread_nmemb :: in u64 = R2
00034bb6: fread_stream :: in out u64 = R3
00034bb7: fread_result :: out u64 = R0

00012c0b:
0002fff8: R16 := 0x430000
0002ffff: R17 := mem[R16 + 0x1E8, el]:u64
00030005: R16 := R16 + 0x1E8
0003000a: call R17 with noreturn

00034598: sub free(free_ptr)
00034bb8: free_ptr :: in out u64 = R0

00016da7:
0003003a: R16 := 0x430000
00030041: R17 := mem[R16 + 0x200, el]:u64
00030047: R16 := R16 + 0x200
0003004c: call R17 with noreturn

00034599: sub free_rr_data(free_rr_data_result)
00034bb9: free_rr_data_result :: out u32 = low:32[R0]

00018481:
00018485: when R0 = 0 goto %00018483
0003459a: goto %000185e6

00018483:
0001848b: R1 := 0x430000
00018490: R0 := 0x416000
00018495: R2 := 0x36
0001849b: R0 := R0 + 0x140
000184a2: R3 := mem[R1 + 0x330, el]:u64
000184a7: R1 := 1
000184ab: call @fwrite with noreturn

000185e6:
000185ea: #477 := R31 - 0x30
000185f0: mem := mem with [#477, el]:u64 <- R29
000185f6: mem := mem with [#477 + 8, el]:u64 <- R30
000185fa: R31 := #477
00018600: R29 := R31
00018608: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001860f: R21 := mem[R0, el]:u64
00018615: when R21 = 0 goto %00018613
0003459b: goto %00018634

00018613:
0001861d: R21 := mem[R31 + 0x20, el]:u64
00018624: R29 := mem[R31, el]:u64
00018629: R30 := mem[R31 + 8, el]:u64
0001862d: R31 := R31 + 0x30
00018632: call R30 with noreturn

00018634:
00018638: #478 := R31 + 0x10
0001863e: mem := mem with [#478, el]:u64 <- R19
00018644: mem := mem with [#478 + 8, el]:u64 <- R20
0001864b: R19 := mem[R21 + 8, el]:u64
00018651: when R19 = 0 goto %0001864f
0003459c: goto %00018718

00018718:
0003459d: goto %0001871a

0001871a:
0001871e: R20 := R19
00018725: R19 := mem[R19 + 0x18, el]:u64
0001872c: R0 := mem[R20, el]:u64
00018731: R30 := 0x40F198
00018733: call @free with return %00018735

00018735:
0001873a: R0 := mem[R20 + 8, el]:u64
0001873f: R30 := 0x40F1A0
00018741: call @free with return %00018743

00018743:
00018747: R0 := R20
0001874c: R30 := 0x40F1A8
0001874e: call @free with return %00018750

00018750:
00018753: when R19 <> 0 goto %0001871a
0003459e: goto %0001864f

0001864f:
00018659: R0 := mem[R21 + 0x28, el]:u64
0001865f: when R0 = 0 goto %0001865d
0003459f: goto %00018711

00018711:
00018714: R30 := 0x40F1B8
00018716: call @free with return %0001865d

0001865d:
00018667: R0 := mem[R21 + 0x30, el]:u64
0001866d: when R0 = 0 goto %0001866b
000345a0: goto %0001870a

0001870a:
0001870d: R30 := 0x40F1C4
0001870f: call @free with return %0001866b

0001866b:
00018675: R0 := mem[R21 + 0x38, el]:u64
0001867b: when R0 = 0 goto %00018679
000345a1: goto %00018703

00018703:
00018706: R30 := 0x40F1D0
00018708: call @free with return %00018679

00018679:
00018683: R0 := mem[R21 + 0x40, el]:u64
00018689: when R0 = 0 goto %00018687
000345a2: goto %000186fc

000186fc:
000186ff: R30 := 0x40F1DC
00018701: call @free with return %00018687

00018687:
00018691: R0 := mem[R21 + 0x48, el]:u64
00018697: when R0 = 0 goto %00018695
000345a3: goto %000186f5

000186f5:
000186f8: R30 := 0x40F1E8
000186fa: call @free with return %00018695

00018695:
0001869f: R0 := mem[R21 + 0x50, el]:u64
000186a5: when R0 = 0 goto %000186a3
000345a4: goto %000186ee

000186ee:
000186f1: R30 := 0x40F1F4
000186f3: call @free with return %000186a3

000186a3:
000186ad: R0 := mem[R21 + 0x58, el]:u64
000186b3: when R0 = 0 goto %000186b1
000345a5: goto %000186e7

000186e7:
000186ea: R30 := 0x40F200
000186ec: call @free with return %000186b1

000186b1:
000186ba: #479 := R31 + 0x10
000186bf: R19 := mem[#479, el]:u64
000186c4: R20 := mem[#479 + 8, el]:u64
000186ca: R0 := R21
000186d1: R21 := mem[R31 + 0x20, el]:u64
000186d8: R29 := mem[R31, el]:u64
000186dd: R30 := mem[R31 + 8, el]:u64
000186e1: R31 := R31 + 0x30
000186e5: call @free with noreturn

000345a6: sub freeaddrinfo(freeaddrinfo_result)
00034bba: freeaddrinfo_result :: out u32 = low:32[R0]

000223a8:
0002fae6: R16 := 0x430000
0002faed: R17 := mem[R16 + 0x10, el]:u64
0002faf3: R16 := R16 + 0x10
0002faf8: call R17 with noreturn

000345a7: sub from_base64(from_base64_result)
00034bbb: from_base64_result :: out u32 = low:32[R0]

0001096a:
0001096d: R3 := 0x416000
00010973: R3 := R3 + 0x3B0
00010979: R6 := R0
0001097f: R3 := R3 + 0x260
00010984: R8 := 0
000345a8: goto %00010986

00010986:
0001098b: R2 := pad:64[mem[R1]]
00010991: when 7:7[R2] goto %0001098f
000345a9: goto %000168f7

000168f7:
000168fd: R0 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
00016903: #345 := 31:0[R0] + 1
00016908: VF := extend:64[#345] <> extend:64[31:0[R0]] + 1
0001690d: CF := pad:64[#345] <> pad:64[31:0[R0]] + 1
00016911: ZF := #345 = 0
00016915: NF := 31:31[#345]
0001691b: when ZF goto %00016919
000345aa: goto %00016981

00016981:
00016986: R2 := pad:64[mem[R1 + 1]]
0001698b: when 7:7[R2] goto %0001098f
000345ab: goto %0001698f

0001698f:
00016995: R5 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
0001699b: #348 := 31:0[R5] + 1
000169a0: VF := extend:64[#348] <> extend:64[31:0[R5]] + 1
000169a5: CF := pad:64[#348] <> pad:64[31:0[R5]] + 1
000169a9: ZF := #348 = 0
000169ad: NF := 31:31[#348]
000169b2: when ZF goto %0001098f
000345ac: goto %000169b6

000169b6:
000169bb: R2 := pad:64[mem[R1 + 2]]
000169c0: when 7:7[R2] goto %0001098f
000345ad: goto %000169c4

000169c4:
000169c8: #349 := 31:0[R2] - 0x3D
000169cd: VF := extend:64[#349] <> extend:64[31:0[R2]] - 0x3D
000169d2: CF := pad:64[#349] <> pad:64[31:0[R2]] + 0xFFFFFFC3
000169d6: ZF := #349 = 0
000169da: NF := 31:31[#349]
000169e0: when ZF goto %000169de
000345ae: goto %00016adc

00016adc:
00016ae0: R4 := pad:64[31:0[R2]]
00016ae8: R4 := pad:64[mem[R3 + (61:0[R4].0), el]:u32]
00016aee: #354 := 31:0[R4] + 1
00016af3: VF := extend:64[#354] <> extend:64[31:0[R4]] + 1
00016af8: CF := pad:64[#354] <> pad:64[31:0[R4]] + 1
00016afc: ZF := #354 = 0
00016b00: NF := 31:31[#354]
00016b05: when ZF goto %0001098f
000345af: goto %000169de

000169de:
000169e8: R4 := pad:64[mem[R1 + 3]]
000169ed: when 7:7[R4] goto %0001098f
000345b0: goto %000169f1

0001098f:
00010997: R0 := 0xFFFFFFFF
0001099c: call R30 with noreturn

000169f1:
000169f5: #350 := 31:0[R4] - 0x3D
000169fa: VF := extend:64[#350] <> extend:64[31:0[R4]] - 0x3D
000169ff: CF := pad:64[#350] <> pad:64[31:0[R4]] + 0xFFFFFFC3
00016a03: ZF := #350 = 0
00016a07: NF := 31:31[#350]
00016a0d: when ZF goto %00016a0b
000345b1: goto %00016aaf

00016aaf:
00016ab3: R7 := pad:64[31:0[R4]]
00016abb: R7 := pad:64[mem[R3 + (61:0[R7].0), el]:u32]
00016ac1: #353 := 31:0[R7] + 1
00016ac6: VF := extend:64[#353] <> extend:64[31:0[R7]] + 1
00016acb: CF := pad:64[#353] <> pad:64[31:0[R7]] + 1
00016acf: ZF := #353 = 0
00016ad3: NF := 31:31[#353]
00016ad8: when ZF goto %0001099e
000345b2: goto %00016a0b

0001099e:
000109a2: R0 := pad:64[31:0[R7]]
000109a7: call R30 with noreturn

00016a0b:
00016a14: R7 := pad:64[extend:32[31:4[R5]]]
00016a1a: R1 := R1 + 4
00016a21: R0 := pad:64[31:0[R7] | (29:0[R0].0)]
00016a29: mem := mem with [R6] <- 7:0[R0]
00016a2f: #351 := 31:0[R2] - 0x3D
00016a34: VF := extend:64[#351] <> extend:64[31:0[R2]] - 0x3D
00016a39: CF := pad:64[#351] <> pad:64[31:0[R2]] + 0xFFFFFFC3
00016a3d: ZF := #351 = 0
00016a41: NF := 31:31[#351]
00016a46: when ZF goto %00016923
000345b3: goto %00016a4a

00016923:
00016927: R6 := R6 + 1
0001692d: R8 := pad:64[31:0[R8] + 1]
00016932: goto %00016930

00016a4a:
00016a50: R0 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
00016a56: R2 := pad:64[extend:32[31:2[R0]]]
00016a5d: R5 := pad:64[31:0[R2] | (27:0[R5].0)]
00016a65: mem := mem with [R6 + 1] <- 7:0[R5]
00016a6b: #352 := 31:0[R4] - 0x3D
00016a70: VF := extend:64[#352] <> extend:64[31:0[R4]] - 0x3D
00016a75: CF := pad:64[#352] <> pad:64[31:0[R4]] + 0xFFFFFFC3
00016a79: ZF := #352 = 0
00016a7d: NF := 31:31[#352]
00016a82: when ZF goto %00016976
000345b4: goto %00016a86

00016976:
0001697a: R0 := pad:64[31:0[R8] + 2]
0001697f: call R30 with noreturn

00016a86:
00016a8a: R2 := pad:64[31:0[R4]]
00016a90: R8 := pad:64[31:0[R8] + 3]
00016a96: R6 := R6 + 3
00016a9e: R2 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
00016aa5: R0 := pad:64[31:0[R2] | (25:0[R0].0)]
00016aad: mem := mem with [R6 - 1] <- 7:0[R0]
000345b5: goto %00016930

00016930:
00016938: R0 := pad:64[mem[R1]]
0001693e: #346 := 31:0[R4] - 0x3D
00016943: VF := extend:64[#346] <> extend:64[31:0[R4]] - 0x3D
00016948: CF := pad:64[#346] <> pad:64[31:0[R4]] + 0xFFFFFFC3
0001694c: ZF := #346 = 0
00016950: NF := 31:31[#346]
00016956: #347 := ZF <> 1
00016959: VF := 0
0001695d: CF := #347
00016962: ZF := 31:0[R0] = 0 | ~#347
00016967: NF := #347 & 31:31[R0]
0001696c: when ZF <> 1 goto %00010986
000345b6: goto %00016970

00016970:
00016974: R0 := pad:64[31:0[R8]]
000345b7: goto %00016919

00016919:
00016921: call R30 with noreturn

000345b8: sub fwrite(fwrite_ptr, fwrite_size, fwrite_nmemb, fwrite_stream, fwrite_result)
00034bbc: fwrite_ptr :: in out u64 = R0
00034bbd: fwrite_size :: in u64 = R1
00034bbe: fwrite_nmemb :: in u64 = R2
00034bbf: fwrite_stream :: in out u64 = R3
00034bc0: fwrite_result :: out u64 = R0

00018119:
000300be: R16 := 0x430000
000300c5: R17 := mem[R16 + 0x230, el]:u64
000300cb: R16 := R16 + 0x230
000300d0: call R17 with noreturn

000345b9: sub gai_strerror(gai_strerror_result)
00034bc1: gai_strerror_result :: out u32 = low:32[R0]

0001972e:
0002fad0: R16 := 0x430000
0002fad7: R17 := mem[R16 + 8, el]:u64
0002fadd: R16 := R16 + 8
0002fae2: call R17 with noreturn

000345ba: sub gen_401_page(gen_401_page_result)
00034bc2: gen_401_page_result :: out u32 = low:32[R0]

0001cc30:
0001cc34: #728 := R31 - 0x30
0001cc3a: mem := mem with [#728, el]:u64 <- R29
0001cc40: mem := mem with [#728 + 8, el]:u64 <- R30
0001cc44: R31 := #728
0001cc49: VF := 0
0001cc4c: CF := 1
0001cc50: ZF := R0 = 0
0001cc54: NF := 63:63[R0]
0001cc5a: R29 := R31
0001cc60: #729 := R31 + 0x10
0001cc66: mem := mem with [#729, el]:u64 <- R19
0001cc6c: mem := mem with [#729 + 8, el]:u64 <- R20
0001cc72: R19 := R0
0001cc77: R0 := 0x415000
0001cc7d: R0 := R0 + 0x418
0001cc83: R20 := R1
0001cc91: when ZF goto %0001cc89
0001cc92: goto %0001cc8d

0001cc8d:
0001cc8e: R19 := R19
0001cc94: goto %0001cc90

0001cc89:
0001cc8a: R19 := R0
0001cc93: goto %0001cc90

0001cc90:
0001cc99: R0 := 0x1000
0001cca1: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001cca7: R21 := pad:64[31:0[R2]]
0001ccac: R30 := 0x40BA84
0001ccae: call @zmalloc with return %0001ccb0

0001ccb0:
0001ccb4: R5 := pad:64[31:0[R21]]
0001ccba: R4 := R20
0001ccc0: R3 := R19
0001ccc5: R1 := 0xFFF
0001cccb: R19 := R0
0001ccd0: R2 := 0x415000
0001ccd6: R2 := R2 + 0x518
0001ccdb: R30 := 0x40BAA4
0001ccdd: call @snprintf with return %0001ccdf

0001ccdf:
0001cce4: R21 := mem[R31 + 0x20, el]:u64
0001ccea: R0 := R19
0001ccf0: #730 := R31 + 0x10
0001ccf5: R19 := mem[#730, el]:u64
0001ccfa: R20 := mem[#730 + 8, el]:u64
0001cd01: R29 := mem[R31, el]:u64
0001cd06: R30 := mem[R31 + 8, el]:u64
0001cd0a: R31 := R31 + 0x30
0001cd0f: call R30 with noreturn

000345bb: sub gen_407_page(gen_407_page_result)
00034bc3: gen_407_page_result :: out u32 = low:32[R0]

0001cb89:
0001cb8d: #727 := R31 - 0x20
0001cb93: mem := mem with [#727, el]:u64 <- R29
0001cb99: mem := mem with [#727 + 8, el]:u64 <- R30
0001cb9d: R31 := #727
0001cba2: VF := 0
0001cba5: CF := 1
0001cba9: ZF := R0 = 0
0001cbad: NF := 63:63[R0]
0001cbb2: R1 := 0x415000
0001cbb8: R1 := R1 + 0x418
0001cbbe: R29 := R31
0001cbc6: mem := mem with [R31 + 0x10, el]:u64 <- R19
0001cbcc: R19 := R0
0001cbda: when ZF goto %0001cbd2
0001cbdb: goto %0001cbd6

0001cbd6:
0001cbd7: R19 := R19
0001cbdd: goto %0001cbd9

0001cbd2:
0001cbd3: R19 := R1
0001cbdc: goto %0001cbd9

0001cbd9:
0001cbe2: R0 := 0x1000
0001cbe7: R30 := 0x40BA28
0001cbe9: call @zmalloc with return %0001cbeb

0001cbeb:
0001cbef: R3 := R19
0001cbf4: R1 := 0xFFF
0001cbfa: R19 := R0
0001cbff: R2 := 0x415000
0001cc05: R2 := R2 + 0x428
0001cc0a: R30 := 0x40BA40
0001cc0c: call @snprintf with return %0001cc0e

0001cc0e:
0001cc12: R0 := R19
0001cc19: R19 := mem[R31 + 0x10, el]:u64
0001cc20: R29 := mem[R31, el]:u64
0001cc25: R30 := mem[R31 + 8, el]:u64
0001cc29: R31 := R31 + 0x20
0001cc2e: call R30 with noreturn

000345bc: sub gen_502_page(gen_502_page_result)
00034bc4: gen_502_page_result :: out u32 = low:32[R0]

0001cdbc:
0001cdc0: #732 := R31 - 0x20
0001cdc6: mem := mem with [#732, el]:u64 <- R29
0001cdcc: mem := mem with [#732 + 8, el]:u64 <- R30
0001cdd0: R31 := #732
0001cdd5: VF := 0
0001cdd8: CF := 1
0001cddc: ZF := R0 = 0
0001cde0: NF := 63:63[R0]
0001cde6: R29 := R31
0001cdec: #733 := R31 + 0x10
0001cdf2: mem := mem with [#733, el]:u64 <- R19
0001cdf8: mem := mem with [#733 + 8, el]:u64 <- R20
0001cdfe: R19 := R1
0001ce04: R20 := R0
0001ce09: R0 := 0x415000
0001ce0f: R0 := R0 + 0x418
0001ce1d: when ZF goto %0001ce15
0001ce1e: goto %0001ce19

0001ce19:
0001ce1a: R20 := R20
0001ce20: goto %0001ce1c

0001ce15:
0001ce16: R20 := R0
0001ce1f: goto %0001ce1c

0001ce1c:
0001ce25: R1 := 0x415000
0001ce2a: VF := 0
0001ce2d: CF := 1
0001ce31: ZF := R19 = 0
0001ce35: NF := 63:63[R19]
0001ce3b: R1 := R1 + 0x6C0
0001ce49: when ZF goto %0001ce41
0001ce4a: goto %0001ce45

0001ce45:
0001ce46: R19 := R19
0001ce4c: goto %0001ce48

0001ce41:
0001ce42: R19 := R1
0001ce4b: goto %0001ce48

0001ce48:
0001ce51: R0 := 0x1000
0001ce56: R30 := 0x40BB4C
0001ce58: call @zmalloc with return %0001ce5a

0001ce5a:
0001ce5e: R3 := R20
0001ce64: R5 := R19
0001ce6a: R4 := R19
0001ce6f: R1 := 0xFFF
0001ce75: R19 := R0
0001ce7a: R2 := 0x415000
0001ce80: R2 := R2 + 0x6D0
0001ce85: R30 := 0x40BB6C
0001ce87: call @snprintf with return %0001ce89

0001ce89:
0001ce8d: R0 := R19
0001ce93: #734 := R31 + 0x10
0001ce98: R19 := mem[#734, el]:u64
0001ce9d: R20 := mem[#734 + 8, el]:u64
0001cea4: R29 := mem[R31, el]:u64
0001cea9: R30 := mem[R31 + 8, el]:u64
0001cead: R31 := R31 + 0x20
0001ceb2: call R30 with noreturn

000345bd: sub gen_denied_page(gen_denied_page_result)
00034bc5: gen_denied_page_result :: out u32 = low:32[R0]

0001cd15:
0001cd19: #731 := R31 - 0x20
0001cd1f: mem := mem with [#731, el]:u64 <- R29
0001cd25: mem := mem with [#731 + 8, el]:u64 <- R30
0001cd29: R31 := #731
0001cd2e: VF := 0
0001cd31: CF := 1
0001cd35: ZF := R0 = 0
0001cd39: NF := 63:63[R0]
0001cd3e: R1 := 0x415000
0001cd44: R1 := R1 + 0x608
0001cd4a: R29 := R31
0001cd52: mem := mem with [R31 + 0x10, el]:u64 <- R19
0001cd58: R19 := R0
0001cd66: when ZF goto %0001cd5e
0001cd67: goto %0001cd62

0001cd62:
0001cd63: R19 := R19
0001cd69: goto %0001cd65

0001cd5e:
0001cd5f: R19 := R1
0001cd68: goto %0001cd65

0001cd65:
0001cd6e: R0 := 0x1000
0001cd73: R30 := 0x40BAE8
0001cd75: call @zmalloc with return %0001cd77

0001cd77:
0001cd7b: R3 := R19
0001cd80: R1 := 0xFFF
0001cd86: R19 := R0
0001cd8b: R2 := 0x415000
0001cd91: R2 := R2 + 0x610
0001cd96: R30 := 0x40BB00
0001cd98: call @snprintf with return %0001cd9a

0001cd9a:
0001cd9e: R0 := R19
0001cda5: R19 := mem[R31 + 0x10, el]:u64
0001cdac: R29 := mem[R31, el]:u64
0001cdb1: R30 := mem[R31 + 8, el]:u64
0001cdb5: R31 := R31 + 0x20
0001cdba: call R30 with noreturn

000345be: sub get_http_header_name(get_http_header_name_result)
00034bc6: get_http_header_name_result :: out u32 = low:32[R0]

00025dd7:
00025ddb: #1162 := R31 - 0x20
00025de1: mem := mem with [#1162, el]:u64 <- R29
00025de7: mem := mem with [#1162 + 8, el]:u64 <- R30
00025deb: R31 := #1162
00025df0: R1 := 0x413000
00025df6: R1 := R1 + 0x640
00025dfc: R29 := R31
00025e02: #1163 := R31 + 0x10
00025e08: mem := mem with [#1163, el]:u64 <- R19
00025e0e: mem := mem with [#1163 + 8, el]:u64 <- R20
00025e14: R19 := R0
00025e19: R30 := 0x40802C
00025e1b: call @strcspn with return %00025e1d

00025e1d:
00025e21: R20 := R0
00025e27: R0 := R19
00025e2c: R30 := 0x408038
00025e2e: call @strlen with return %00025e30

00025e30:
00025e34: #1164 := ~31:0[R0]
00025e39: #1165 := 31:0[R20] + ~31:0[R0]
00025e3f: VF := extend:64[#1165 + 1] <> extend:64[31:0[R20]] +
          extend:64[#1164] + 1
00025e45: CF := pad:64[#1165 + 1] <> pad:64[31:0[R20]] + pad:64[#1164] + 1
00025e49: ZF := #1165 + 1 = 0
00025e4d: NF := 31:31[#1165 + 1]
00025e53: when ZF goto %00025e51
000345bf: goto %00025f38

00025e51:
00025e5a: #1166 := R31 + 0x10
00025e5f: R19 := mem[#1166, el]:u64
00025e64: R20 := mem[#1166 + 8, el]:u64
00025e69: R0 := 0
00025e70: R29 := mem[R31, el]:u64
00025e75: R30 := mem[R31 + 8, el]:u64
00025e79: R31 := R31 + 0x20
00025e7e: call R30 with noreturn

00025f38:
00025f3c: R2 := pad:64[31:0[R20]]
00025f42: R0 := R19
00025f48: #1171 := R31 + 0x10
00025f4d: R19 := mem[#1171, el]:u64
00025f52: R20 := mem[#1171 + 8, el]:u64
00025f57: R1 := 0
00025f5e: R29 := mem[R31, el]:u64
00025f63: R30 := mem[R31 + 8, el]:u64
00025f67: R31 := R31 + 0x20
00025f6b: call @substr with noreturn

000345c0: sub get_http_header_value(get_http_header_value_result)
00034bc7: get_http_header_value_result :: out u32 = low:32[R0]

00025e84:
00025e88: #1167 := R31 - 0x10
00025e8e: mem := mem with [#1167, el]:u64 <- R29
00025e94: mem := mem with [#1167 + 8, el]:u64 <- R30
00025e98: R31 := #1167
00025e9d: R1 := 0x3A
00025ea3: R29 := R31
00025ea8: R30 := 0x408080
00025eaa: call @strchr with return %00025eac

00025eac:
00025eb0: when R0 = 0 goto %00025eae
000345c1: goto %00025ec8

00025eae:
00025eb8: R29 := mem[R31, el]:u64
00025ebd: R30 := mem[R31 + 8, el]:u64
00025ec1: R31 := R31 + 0x10
00025ec6: call R30 with noreturn

00025ec8:
00025ecd: R2 := pad:64[mem[R0 + 1]]
00025ed3: R0 := R0 + 1
00025ed9: #1168 := 31:0[R2] - 0x20
00025ede: VF := extend:64[#1168] <> extend:64[31:0[R2]] - 0x20
00025ee3: CF := pad:64[#1168] <> pad:64[31:0[R2]] + 0xFFFFFFE0
00025ee7: ZF := #1168 = 0
00025eeb: NF := 31:31[#1168]
00025ef1: when ZF <> 1 goto %00025eef
000345c2: goto %00025f08

00025f08:
000345c3: goto %00025f0a

00025f0a:
00025f0e: #1169 := R0 + 1
00025f13: R1 := pad:64[mem[#1169]]
00025f17: R0 := #1169
00025f1d: #1170 := 31:0[R1] - 0x20
00025f22: VF := extend:64[#1170] <> extend:64[31:0[R1]] - 0x20
00025f27: CF := pad:64[#1170] <> pad:64[31:0[R1]] + 0xFFFFFFE0
00025f2b: ZF := #1170 = 0
00025f2f: NF := 31:31[#1170]
00025f34: when ZF goto %00025f0a
000345c4: goto %00025eef

00025eef:
00025ef9: R29 := mem[R31, el]:u64
00025efe: R30 := mem[R31 + 8, el]:u64
00025f02: R31 := R31 + 0x10
00025f06: call @strdup with noreturn

000345c5: sub getaddrinfo(getaddrinfo_result)
00034bc8: getaddrinfo_result :: out u32 = low:32[R0]

000196fe:
0003012c: R16 := 0x430000
00030133: R17 := mem[R16 + 0x258, el]:u64
00030139: R16 := R16 + 0x258
0003013e: call R17 with noreturn

000345c6: sub geteuid(geteuid_result)
00034bc9: geteuid_result :: out u32 = low:32[R0]

0002c49e:
0002fbd8: R16 := 0x430000
0002fbdf: R17 := mem[R16 + 0x68, el]:u64
0002fbe5: R16 := R16 + 0x68
0002fbea: call R17 with noreturn

000345c7: sub getgid(getgid_result)
00034bca: getgid_result :: out u32 = low:32[R0]

0002e13c:
00030050: R16 := 0x430000
00030057: R17 := mem[R16 + 0x208, el]:u64
0003005d: R16 := R16 + 0x208
00030062: call R17 with noreturn

000345c8: sub gethostname(gethostname_buf, gethostname_len, gethostname_result)
00034bcb: gethostname_buf :: in out u64 = R0
00034bcc: gethostname_len :: in u64 = R1
00034bcd: gethostname_result :: out u32 = low:32[R0]

0002bf74:
0003016e: R16 := 0x430000
00030175: R17 := mem[R16 + 0x270, el]:u64
0003017b: R16 := R16 + 0x270
00030180: call R17 with noreturn

000345c9: sub getpid(getpid_result)
00034bce: getpid_result :: out u32 = low:32[R0]

0002dc16:
0002fce0: R16 := 0x430000
0002fce7: R17 := mem[R16 + 0xC8, el]:u64
0002fced: R16 := R16 + 0xC8
0002fcf2: call R17 with noreturn

000345ca: sub getpwnam(getpwnam_result)
00034bcf: getpwnam_result :: out u32 = low:32[R0]

0002c4df:
0002fda6: R16 := 0x430000
0002fdad: R17 := mem[R16 + 0x110, el]:u64
0002fdb3: R16 := R16 + 0x110
0002fdb8: call R17 with noreturn

000345cb: sub getrandom64(getrandom64_result)
00034bd0: getrandom64_result :: out u32 = low:32[R0]

000109a9:
000109ad: #57 := R31 - 0x30
000109b3: mem := mem with [#57, el]:u64 <- R29
000109b9: mem := mem with [#57 + 8, el]:u64 <- R30
000109bd: R31 := #57
000109c2: R1 := 0x416000
000109c7: R0 := 0x416000
000109cd: R29 := R31
000109d3: R1 := R1 + 0x180
000109d9: R0 := R0 + 0x188
000109e1: mem := mem with [R31 + 0x10, el]:u64 <- R19
000109e8: mem := mem with [R31 + 0x28, el]:u64 <- 0
000109ed: R30 := 0x40F8D4
000109f0: call @fopen with return %000109f2

000109f2:
000109f6: when R0 = 0 goto %000109f4
000345cc: goto %000168a2

000109f4:
000109fc: R0 := 0x430000
00010a03: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00010a09: when 31:0[R0] = 0 goto %00010a07
000345cd: goto %00010ab6

00010ab6:
00010ab9: R0 := 0x416000
00010abf: R0 := R0 + 0x1C0
00010ac4: R30 := 0x40F978
00010ac7: call @puts with return %00010ac9

00010ac9:
00010acb: goto %00010a07

000168a2:
000168a6: R19 := R0
000168ac: R3 := R0
000168b1: R2 := 1
000168b7: R0 := R31 + 0x28
000168bc: R1 := 8
000168c1: R30 := 0x40F8F0
000168c3: call @fread with return %000168c5

000168c5:
000168c9: #344 := R0 - 1
000168ce: VF := extend:128[#344] <> extend:128[R0] - 1
000168d3: CF := pad:128[#344] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
000168d7: ZF := #344 = 0
000168db: NF := 63:63[#344]
000168e0: when ZF goto %00010a86
000345ce: goto %000168e4

00010a86:
00010a8a: R0 := R19
00010a8f: R30 := 0x40F950
00010a91: call @fclose with return %00010a93

00010a93:
00010a98: R19 := mem[R31 + 0x10, el]:u64
00010a9f: R0 := mem[R31 + 0x28, el]:u64
00010aa6: R29 := mem[R31, el]:u64
00010aab: R30 := mem[R31 + 8, el]:u64
00010aaf: R31 := R31 + 0x30
00010ab4: call R30 with noreturn

000168e4:
000168e7: R0 := 0x430000
000168ee: R0 := pad:64[mem[R0 + 0x374, el]:u32]
000168f3: when 31:0[R0] <> 0 goto %00010a44
000345cf: goto %00010a75

00010a44:
00010a47: R30 := 0x40F92C
00010a4a: call @__errno_location with return %00010a4c

00010a4c:
00010a51: R0 := pad:64[mem[R0, el]:u32]
00010a56: R30 := 0x40F934
00010a59: call @strerror with return %00010a5b

00010a5b:
00010a5f: R1 := R0
00010a64: R0 := 0x416000
00010a6a: R0 := R0 + 0x198
00010a6f: R30 := 0x40F944
00010a72: call @printf with return %00010a74

00010a74:
00010a77: goto %00010a75

00010a75:
00010a7c: R0 := R19
00010a81: R30 := 0x40F90C
00010a84: call @fclose with return %00010a07

00010a07:
00010a0f: R30 := 0x40F910
00010a12: call @random with return %00010a14

00010a14:
00010a18: R19 := R0
00010a1d: R30 := 0x40F918
00010a1f: call @random with return %00010a21

00010a21:
00010a26: R0 := R0 | (31:0[R19].0)
00010a2d: R19 := mem[R31 + 0x10, el]:u64
00010a34: R29 := mem[R31, el]:u64
00010a39: R30 := mem[R31 + 8, el]:u64
00010a3d: R31 := R31 + 0x30
00010a42: call R30 with noreturn

000345d0: sub getuid(getuid_result)
00034bd1: getuid_result :: out u32 = low:32[R0]

0002c48f:
0002fc04: R16 := 0x430000
0002fc0b: R17 := mem[R16 + 0x78, el]:u64
0002fc11: R16 := R16 + 0x78
0002fc16: call R17 with noreturn

000345d1: sub gl_des_ecb_crypt(gl_des_ecb_crypt_result)
00034bd2: gl_des_ecb_crypt_result :: out u32 = low:32[R0]

00011663:
00011667: #113 := R31 - 0x40
0001166d: mem := mem with [#113, el]:u64 <- R29
00011673: mem := mem with [#113 + 8, el]:u64 <- R30
00011677: R31 := #113
0001167d: R29 := R31
00011683: #114 := R31 + 0x10
00011689: mem := mem with [#114, el]:u64 <- R19
0001168f: mem := mem with [#114 + 8, el]:u64 <- R20
00011695: #115 := R31 + 0x20
0001169b: mem := mem with [#115, el]:u64 <- R21
000116a1: mem := mem with [#115 + 8, el]:u64 <- R22
000116a9: mem := mem with [R31 + 0x30, el]:u64 <- R23
000116af: when 31:0[R3] = 0 goto %000116ad
000345d2: goto %00016674

000116ad:
000116b7: R17 := pad:64[mem[R0, el]:u32]
000116bc: goto %000116ba

00016674:
00016679: R17 := pad:64[mem[R0 + 0x80, el]:u32]
0001667f: R0 := R0 + 0x80
000345d3: goto %000116ba

000116ba:
000116c2: R5 := pad:64[mem[R1, el]:u32]
000116c7: R4 := pad:64[mem[R1 + 4, el]:u32]
000116cc: R3 := 0x416000
000116d2: R1 := R3 + 0x810
000116d9: R13 := pad:64[mem[R0 + 0x14, el]:u32]
000116e2: R3 := pad:64[7:0[R5].15:8[R5].23:16[R5].31:24[R5]]
000116eb: R4 := pad:64[7:0[R4].15:8[R4].23:16[R4].31:24[R4]]
000116f1: #116 := R0 + 4
000116f6: R18 := pad:64[mem[#116, el]:u32]
000116fb: R16 := pad:64[mem[#116 + 4, el]:u32]
00011702: R12 := pad:64[31:0[R4] ^ pad:32[31:4[R3]]]
00011708: R12 := pad:64[31:0[R12] & 0xF0F0F0F]
0001170e: R10 := R1 + 0x290
00011715: R4 := pad:64[31:0[R12] ^ 31:0[R4]]
0001171b: R9 := R1 + 0x390
00011722: R12 := pad:64[31:0[R3] ^ (27:0[R12].0)]
00011728: R11 := R1 + 0x490
0001172e: R7 := R1 + 0x690
00011734: R8 := R1 + 0x590
0001173b: R3 := pad:64[31:0[R4] ^ pad:32[31:16[R12]]]
00011741: R5 := R1 + 0x890
00011747: R3 := pad:64[15:0[R3]]
0001174d: R6 := R1 + 0x790
00011754: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
0001175a: R1 := R1 + 0x990
00011761: R3 := pad:64[31:0[R12] ^ (15:0[R3].0)]
00011768: R30 := pad:64[31:0[R3] ^ pad:32[31:2[R4]]]
0001176e: R30 := pad:64[31:0[R30] & 0x33333333]
00011775: R3 := pad:64[31:0[R3] ^ 31:0[R30]]
0001177c: R30 := pad:64[31:0[R4] ^ (29:0[R30].0)]
00011782: #117 := R0 + 0xC
00011787: R15 := pad:64[mem[#117, el]:u32]
0001178c: R14 := pad:64[mem[#117 + 4, el]:u32]
00011793: R4 := pad:64[31:0[R3] ^ pad:32[31:8[R30]]]
00011799: R4 := pad:64[31:0[R4] & 0xFF00FF]
000117a0: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
000117a7: R4 := pad:64[31:0[R30] ^ (23:0[R4].0)]
000117ae: R4 := pad:64[30:0[R4].31:31[R4]]
000117b5: R30 := pad:64[31:0[R3] ^ 31:0[R4]]
000117bb: R30 := pad:64[31:0[R30] & 0xAAAAAAAA]
000117c2: R4 := pad:64[31:0[R4] ^ 31:0[R30]]
000117c9: R19 := pad:64[31:0[R3] ^ 31:0[R30]]
000117d0: R17 := pad:64[31:0[R17] ^ 31:0[R4]]
000117d6: R22 := pad:64[5:0[R17]]
000117de: R18 := pad:64[31:0[R18] ^ (3:0[R4].31:4[R4])]
000117e4: R3 := pad:64[13:8[R17]]
000117ea: R20 := pad:64[21:16[R17]]
000117f0: R21 := pad:64[5:0[R18]]
000117f6: R17 := pad:64[29:24[R17]]
000117fe: R23 := pad:64[mem[R11 + (61:0[R22].0), el]:u32]
00011804: R22 := pad:64[13:8[R18]]
0001180c: R20 := pad:64[mem[R9 + (61:0[R20].0), el]:u32]
00011814: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
0001181c: R30 := pad:64[mem[R8 + (61:0[R17].0), el]:u32]
00011824: R19 := pad:64[31:0[R23] ^ (30:0[R19].31:31[R19])]
0001182b: R3 := pad:64[31:0[R3] ^ 31:0[R20]]
00011831: R20 := pad:64[21:16[R18]]
00011839: R21 := pad:64[mem[R7 + (61:0[R21].0), el]:u32]
0001183f: R18 := pad:64[29:24[R18]]
00011847: R17 := pad:64[mem[R6 + (61:0[R22].0), el]:u32]
0001184e: R3 := pad:64[31:0[R3] ^ 31:0[R19]]
00011856: R19 := pad:64[mem[R5 + (61:0[R20].0), el]:u32]
0001185d: R30 := pad:64[31:0[R30] ^ 31:0[R21]]
00011865: R18 := pad:64[mem[R1 + (61:0[R18].0), el]:u32]
0001186c: R3 := pad:64[31:0[R3] ^ 31:0[R30]]
00011873: R17 := pad:64[31:0[R17] ^ 31:0[R19]]
0001187a: R3 := pad:64[31:0[R3] ^ 31:0[R17]]
00011881: R17 := pad:64[31:0[R3] ^ 31:0[R18]]
00011888: R16 := pad:64[31:0[R17] ^ 31:0[R16]]
0001188e: R19 := pad:64[5:0[R16]]
00011896: R15 := pad:64[31:0[R15] ^ (3:0[R17].31:4[R17])]
0001189c: R18 := pad:64[21:16[R16]]
000118a2: R3 := pad:64[13:8[R16]]
000118a8: R20 := pad:64[5:0[R15]]
000118ae: R16 := pad:64[29:24[R16]]
000118b6: R30 := pad:64[mem[R11 + (61:0[R19].0), el]:u32]
000118bc: R21 := pad:64[13:8[R15]]
000118c2: R19 := pad:64[21:16[R15]]
000118ca: R22 := pad:64[mem[R9 + (61:0[R18].0), el]:u32]
000118d2: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
000118d8: R15 := pad:64[29:24[R15]]
000118e0: R18 := pad:64[mem[R8 + (61:0[R16].0), el]:u32]
000118e7: R4 := pad:64[31:0[R4] ^ 31:0[R30]]
000118ef: R20 := pad:64[mem[R7 + (61:0[R20].0), el]:u32]
000118f6: R3 := pad:64[31:0[R3] ^ 31:0[R22]]
000118fe: R16 := pad:64[mem[R6 + (61:0[R21].0), el]:u32]
00011905: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0001190d: R19 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
00011914: R4 := pad:64[31:0[R18] ^ 31:0[R20]]
0001191c: R15 := pad:64[mem[R1 + (61:0[R15].0), el]:u32]
00011923: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0001192a: R4 := pad:64[31:0[R16] ^ 31:0[R19]]
00011931: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
00011938: R16 := pad:64[31:0[R3] ^ 31:0[R15]]
0001193f: R14 := pad:64[31:0[R16] ^ 31:0[R14]]
00011947: R13 := pad:64[31:0[R13] ^ (3:0[R16].31:4[R16])]
0001194d: R20 := pad:64[5:0[R14]]
00011953: R3 := pad:64[13:8[R14]]
00011959: R19 := pad:64[21:16[R14]]
0001195f: R18 := pad:64[5:0[R13]]
00011965: R14 := pad:64[29:24[R14]]
0001196b: R4 := pad:64[13:8[R13]]
00011971: R15 := pad:64[21:16[R13]]
00011979: R20 := pad:64[mem[R11 + (61:0[R20].0), el]:u32]
0001197f: R13 := pad:64[29:24[R13]]
00011987: R19 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
0001198f: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
00011996: R17 := pad:64[31:0[R17] ^ 31:0[R20]]
0001199e: R18 := pad:64[mem[R7 + (61:0[R18].0), el]:u32]
000119a6: R14 := pad:64[mem[R8 + (61:0[R14].0), el]:u32]
000119ad: R3 := pad:64[31:0[R3] ^ 31:0[R19]]
000119b5: R15 := pad:64[mem[R5 + (61:0[R15].0), el]:u32]
000119bc: R3 := pad:64[31:0[R3] ^ 31:0[R17]]
000119c4: R4 := pad:64[mem[R6 + (61:0[R4].0), el]:u32]
000119cb: R14 := pad:64[31:0[R14] ^ 31:0[R18]]
000119d3: R17 := pad:64[mem[R1 + (61:0[R13].0), el]:u32]
000119da: R3 := pad:64[31:0[R3] ^ 31:0[R14]]
000119e1: R13 := pad:64[31:0[R4] ^ 31:0[R15]]
000119e7: #118 := R0 + 0x18
000119ec: R12 := pad:64[mem[#118, el]:u32]
000119f1: R4 := pad:64[mem[#118 + 4, el]:u32]
000119f8: R3 := pad:64[31:0[R3] ^ 31:0[R13]]
000119ff: R17 := pad:64[31:0[R3] ^ 31:0[R17]]
00011a06: R14 := pad:64[mem[R0 + 0x28, el]:u32]
00011a0d: R12 := pad:64[31:0[R17] ^ 31:0[R12]]
00011a13: R19 := pad:64[5:0[R12]]
00011a1b: R4 := pad:64[31:0[R4] ^ (3:0[R17].31:4[R17])]
00011a21: R13 := pad:64[21:16[R12]]
00011a27: R3 := pad:64[13:8[R12]]
00011a2d: R20 := pad:64[5:0[R4]]
00011a33: R12 := pad:64[29:24[R12]]
00011a3b: R30 := pad:64[mem[R11 + (61:0[R19].0), el]:u32]
00011a41: R21 := pad:64[13:8[R4]]
00011a47: R19 := pad:64[21:16[R4]]
00011a4f: R22 := pad:64[mem[R9 + (61:0[R13].0), el]:u32]
00011a57: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
00011a5d: R13 := pad:64[29:24[R4]]
00011a65: R20 := pad:64[mem[R7 + (61:0[R20].0), el]:u32]
00011a6c: R16 := pad:64[31:0[R16] ^ 31:0[R30]]
00011a74: R12 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
00011a7b: R3 := pad:64[31:0[R3] ^ 31:0[R22]]
00011a83: R4 := pad:64[mem[R6 + (61:0[R21].0), el]:u32]
00011a8a: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
00011a92: R19 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
00011a99: R12 := pad:64[31:0[R12] ^ 31:0[R20]]
00011a9f: #119 := R0 + 0x20
00011aa4: R15 := pad:64[mem[#119, el]:u32]
00011aa9: R18 := pad:64[mem[#119 + 4, el]:u32]
00011ab0: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
00011ab8: R16 := pad:64[mem[R1 + (61:0[R13].0), el]:u32]
00011abf: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
00011ac6: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
00011acd: R4 := pad:64[mem[R0 + 0x34, el]:u32]
00011ad4: R16 := pad:64[31:0[R3] ^ 31:0[R16]]
00011adb: R15 := pad:64[31:0[R16] ^ 31:0[R15]]
00011ae1: R20 := pad:64[5:0[R15]]
00011ae9: R18 := pad:64[31:0[R18] ^ (3:0[R16].31:4[R16])]
00011aef: R3 := pad:64[13:8[R15]]
00011af5: R21 := pad:64[21:16[R15]]
00011afb: R19 := pad:64[5:0[R18]]
00011b01: R15 := pad:64[29:24[R15]]
00011b09: R20 := pad:64[mem[R11 + (61:0[R20].0), el]:u32]
00011b0f: R22 := pad:64[13:8[R18]]
00011b17: R21 := pad:64[mem[R9 + (61:0[R21].0), el]:u32]
00011b1e: R17 := pad:64[31:0[R17] ^ 31:0[R20]]
00011b24: R20 := pad:64[21:16[R18]]
00011b2c: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
00011b34: R30 := pad:64[mem[R8 + (61:0[R15].0), el]:u32]
00011b3a: R15 := pad:64[29:24[R18]]
00011b42: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00011b49: R3 := pad:64[31:0[R3] ^ 31:0[R21]]
00011b51: R18 := pad:64[mem[R6 + (61:0[R22].0), el]:u32]
00011b58: R3 := pad:64[31:0[R3] ^ 31:0[R17]]
00011b60: R20 := pad:64[mem[R5 + (61:0[R20].0), el]:u32]
00011b67: R17 := pad:64[31:0[R30] ^ 31:0[R19]]
00011b6e: R3 := pad:64[31:0[R3] ^ 31:0[R17]]
00011b76: R19 := pad:64[mem[R1 + (61:0[R15].0), el]:u32]
00011b7d: R15 := pad:64[31:0[R18] ^ 31:0[R20]]
00011b83: #120 := R0 + 0x2C
00011b88: R13 := pad:64[mem[#120, el]:u32]
00011b8d: R12 := pad:64[mem[#120 + 4, el]:u32]
00011b94: R3 := pad:64[31:0[R3] ^ 31:0[R15]]
00011b9b: R15 := pad:64[31:0[R3] ^ 31:0[R19]]
00011ba2: R14 := pad:64[31:0[R15] ^ 31:0[R14]]
00011ba8: R18 := pad:64[5:0[R14]]
00011bb0: R13 := pad:64[31:0[R13] ^ (3:0[R15].31:4[R15])]
00011bb6: R17 := pad:64[21:16[R14]]
00011bbc: R3 := pad:64[13:8[R14]]
00011bc2: R19 := pad:64[5:0[R13]]
00011bc8: R14 := pad:64[29:24[R14]]
00011bd0: R30 := pad:64[mem[R11 + (61:0[R18].0), el]:u32]
00011bd6: R20 := pad:64[13:8[R13]]
00011bdc: R18 := pad:64[21:16[R13]]
00011be4: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
00011bec: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
00011bf2: R13 := pad:64[29:24[R13]]
00011bfa: R17 := pad:64[mem[R8 + (61:0[R14].0), el]:u32]
00011c01: R16 := pad:64[31:0[R16] ^ 31:0[R30]]
00011c09: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00011c10: R3 := pad:64[31:0[R3] ^ 31:0[R21]]
00011c18: R14 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00011c1f: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
00011c27: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00011c2e: R16 := pad:64[31:0[R17] ^ 31:0[R19]]
00011c35: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
00011c3d: R17 := pad:64[mem[R1 + (61:0[R13].0), el]:u32]
00011c44: R13 := pad:64[31:0[R14] ^ 31:0[R18]]
00011c4b: R3 := pad:64[31:0[R3] ^ 31:0[R13]]
00011c52: R3 := pad:64[31:0[R3] ^ 31:0[R17]]
00011c59: R12 := pad:64[31:0[R3] ^ 31:0[R12]]
00011c5f: R14 := pad:64[5:0[R12]]
00011c67: R4 := pad:64[31:0[R4] ^ (3:0[R3].31:4[R3])]
00011c6d: R19 := pad:64[21:16[R12]]
00011c73: R20 := pad:64[13:8[R12]]
00011c79: R13 := pad:64[29:24[R12]]
00011c7f: R16 := pad:64[5:0[R4]]
00011c85: R18 := pad:64[13:8[R4]]
00011c8b: R17 := pad:64[21:16[R4]]
00011c93: R12 := pad:64[mem[R10 + (61:0[R20].0), el]:u32]
00011c99: R4 := pad:64[29:24[R4]]
00011ca1: R20 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
00011ca9: R19 := pad:64[mem[R11 + (61:0[R14].0), el]:u32]
00011cb1: R16 := pad:64[mem[R7 + (61:0[R16].0), el]:u32]
00011cb8: R12 := pad:64[31:0[R12] ^ 31:0[R20]]
00011cc0: R14 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
00011cc7: R15 := pad:64[31:0[R15] ^ 31:0[R19]]
00011ccf: R13 := pad:64[mem[R6 + (61:0[R18].0), el]:u32]
00011cd6: R12 := pad:64[31:0[R12] ^ 31:0[R15]]
00011cde: R15 := pad:64[mem[R5 + (61:0[R17].0), el]:u32]
00011ce5: R14 := pad:64[31:0[R14] ^ 31:0[R16]]
00011cec: R12 := pad:64[31:0[R12] ^ 31:0[R14]]
00011cf4: R16 := pad:64[mem[R1 + (61:0[R4].0), el]:u32]
00011cfb: R13 := pad:64[31:0[R13] ^ 31:0[R15]]
00011d01: #121 := R0 + 0x38
00011d06: R4 := pad:64[mem[#121, el]:u32]
00011d0b: R15 := pad:64[mem[#121 + 4, el]:u32]
00011d12: R12 := pad:64[31:0[R12] ^ 31:0[R13]]
00011d19: R12 := pad:64[31:0[R12] ^ 31:0[R16]]
00011d20: R4 := pad:64[31:0[R12] ^ 31:0[R4]]
00011d28: R15 := pad:64[31:0[R15] ^ (3:0[R12].31:4[R12])]
00011d2e: R21 := pad:64[5:0[R4]]
00011d34: R18 := pad:64[13:8[R4]]
00011d3a: R17 := pad:64[21:16[R4]]
00011d40: R16 := pad:64[29:24[R4]]
00011d46: R19 := pad:64[5:0[R15]]
00011d4c: R20 := pad:64[13:8[R15]]
00011d54: R30 := pad:64[mem[R11 + (61:0[R21].0), el]:u32]
00011d5c: R4 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
00011d62: R18 := pad:64[21:16[R15]]
00011d6a: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
00011d70: R15 := pad:64[29:24[R15]]
00011d78: R17 := pad:64[mem[R8 + (61:0[R16].0), el]:u32]
00011d7f: R16 := pad:64[31:0[R3] ^ 31:0[R30]]
00011d87: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00011d8e: R3 := pad:64[31:0[R4] ^ 31:0[R21]]
00011d96: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00011d9d: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
00011da5: R4 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00011dac: R16 := pad:64[31:0[R17] ^ 31:0[R19]]
00011db2: #122 := R0 + 0x40
00011db7: R13 := pad:64[mem[#122, el]:u32]
00011dbc: R14 := pad:64[mem[#122 + 4, el]:u32]
00011dc3: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
00011dcb: R15 := pad:64[mem[R1 + (61:0[R15].0), el]:u32]
00011dd2: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
00011dd9: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
00011de0: R3 := pad:64[31:0[R3] ^ 31:0[R15]]
00011de7: R13 := pad:64[31:0[R3] ^ 31:0[R13]]
00011def: R14 := pad:64[31:0[R14] ^ (3:0[R3].31:4[R3])]
00011df5: R21 := pad:64[5:0[R13]]
00011dfb: R18 := pad:64[13:8[R13]]
00011e01: R17 := pad:64[21:16[R13]]
00011e07: R15 := pad:64[29:24[R13]]
00011e0d: R19 := pad:64[5:0[R14]]
00011e13: R20 := pad:64[13:8[R14]]
00011e1b: R30 := pad:64[mem[R11 + (61:0[R21].0), el]:u32]
00011e23: R13 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
00011e29: R18 := pad:64[21:16[R14]]
00011e31: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
00011e37: R14 := pad:64[29:24[R14]]
00011e3f: R17 := pad:64[mem[R8 + (61:0[R15].0), el]:u32]
00011e46: R12 := pad:64[31:0[R12] ^ 31:0[R30]]
00011e4e: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00011e55: R13 := pad:64[31:0[R13] ^ 31:0[R21]]
00011e5d: R15 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00011e64: R13 := pad:64[31:0[R13] ^ 31:0[R12]]
00011e6c: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00011e73: R12 := pad:64[31:0[R17] ^ 31:0[R19]]
00011e79: #123 := R0 + 0x48
00011e7e: R16 := pad:64[mem[#123, el]:u32]
00011e83: R4 := pad:64[mem[#123 + 4, el]:u32]
00011e8a: R13 := pad:64[31:0[R13] ^ 31:0[R12]]
00011e92: R14 := pad:64[mem[R1 + (61:0[R14].0), el]:u32]
00011e99: R12 := pad:64[31:0[R15] ^ 31:0[R18]]
00011ea0: R13 := pad:64[31:0[R13] ^ 31:0[R12]]
00011ea7: R13 := pad:64[31:0[R13] ^ 31:0[R14]]
00011eae: R12 := pad:64[31:0[R13] ^ 31:0[R16]]
00011eb4: R15 := pad:64[5:0[R12]]
00011ebc: R4 := pad:64[31:0[R4] ^ (3:0[R13].31:4[R13])]
00011ec2: R20 := pad:64[13:8[R12]]
00011ec8: R19 := pad:64[21:16[R12]]
00011ece: R14 := pad:64[29:24[R12]]
00011ed4: R16 := pad:64[5:0[R4]]
00011edc: R15 := pad:64[mem[R11 + (61:0[R15].0), el]:u32]
00011ee2: R18 := pad:64[13:8[R4]]
00011ee8: R17 := pad:64[21:16[R4]]
00011ef0: R12 := pad:64[mem[R10 + (61:0[R20].0), el]:u32]
00011ef8: R19 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
00011eff: R3 := pad:64[31:0[R3] ^ 31:0[R15]]
00011f05: R4 := pad:64[29:24[R4]]
00011f0d: R15 := pad:64[mem[R8 + (61:0[R14].0), el]:u32]
00011f15: R16 := pad:64[mem[R7 + (61:0[R16].0), el]:u32]
00011f1c: R12 := pad:64[31:0[R12] ^ 31:0[R19]]
00011f24: R14 := pad:64[mem[R6 + (61:0[R18].0), el]:u32]
00011f2b: R12 := pad:64[31:0[R12] ^ 31:0[R3]]
00011f33: R17 := pad:64[mem[R5 + (61:0[R17].0), el]:u32]
00011f3a: R3 := pad:64[31:0[R15] ^ 31:0[R16]]
00011f41: R12 := pad:64[31:0[R12] ^ 31:0[R3]]
00011f49: R16 := pad:64[mem[R1 + (61:0[R4].0), el]:u32]
00011f50: R3 := pad:64[31:0[R14] ^ 31:0[R17]]
00011f56: #124 := R0 + 0x50
00011f5b: R4 := pad:64[mem[#124, el]:u32]
00011f60: R15 := pad:64[mem[#124 + 4, el]:u32]
00011f67: R12 := pad:64[31:0[R12] ^ 31:0[R3]]
00011f6e: R12 := pad:64[31:0[R12] ^ 31:0[R16]]
00011f75: R4 := pad:64[31:0[R12] ^ 31:0[R4]]
00011f7d: R15 := pad:64[31:0[R15] ^ (3:0[R12].31:4[R12])]
00011f83: R21 := pad:64[5:0[R4]]
00011f89: R18 := pad:64[13:8[R4]]
00011f8f: R17 := pad:64[21:16[R4]]
00011f95: R16 := pad:64[29:24[R4]]
00011f9b: R19 := pad:64[5:0[R15]]
00011fa1: R20 := pad:64[13:8[R15]]
00011fa9: R30 := pad:64[mem[R11 + (61:0[R21].0), el]:u32]
00011fb1: R4 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
00011fb7: R18 := pad:64[21:16[R15]]
00011fbf: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
00011fc5: R15 := pad:64[29:24[R15]]
00011fcd: R17 := pad:64[mem[R8 + (61:0[R16].0), el]:u32]
00011fd4: R13 := pad:64[31:0[R13] ^ 31:0[R30]]
00011fdc: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00011fe3: R4 := pad:64[31:0[R4] ^ 31:0[R21]]
00011feb: R16 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00011ff2: R4 := pad:64[31:0[R4] ^ 31:0[R13]]
00011ffa: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00012001: R13 := pad:64[31:0[R17] ^ 31:0[R19]]
00012007: #125 := R0 + 0x58
0001200c: R3 := pad:64[mem[#125, el]:u32]
00012011: R14 := pad:64[mem[#125 + 4, el]:u32]
00012018: R4 := pad:64[31:0[R4] ^ 31:0[R13]]
00012020: R17 := pad:64[mem[R1 + (61:0[R15].0), el]:u32]
00012027: R15 := pad:64[31:0[R16] ^ 31:0[R18]]
0001202e: R4 := pad:64[31:0[R4] ^ 31:0[R15]]
00012035: R4 := pad:64[31:0[R4] ^ 31:0[R17]]
0001203c: R3 := pad:64[31:0[R4] ^ 31:0[R3]]
00012044: R14 := pad:64[31:0[R14] ^ (3:0[R4].31:4[R4])]
0001204a: R21 := pad:64[5:0[R3]]
00012050: R18 := pad:64[13:8[R3]]
00012056: R17 := pad:64[21:16[R3]]
0001205c: R15 := pad:64[29:24[R3]]
00012062: R19 := pad:64[5:0[R14]]
00012068: R20 := pad:64[13:8[R14]]
00012070: R30 := pad:64[mem[R11 + (61:0[R21].0), el]:u32]
00012078: R3 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
0001207e: R18 := pad:64[21:16[R14]]
00012086: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
0001208c: R14 := pad:64[29:24[R14]]
00012094: R17 := pad:64[mem[R8 + (61:0[R15].0), el]:u32]
0001209b: R12 := pad:64[31:0[R12] ^ 31:0[R30]]
000120a3: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
000120aa: R3 := pad:64[31:0[R3] ^ 31:0[R21]]
000120b2: R15 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
000120b9: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
000120c1: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
000120c8: R12 := pad:64[31:0[R17] ^ 31:0[R19]]
000120ce: #126 := R0 + 0x60
000120d3: R13 := pad:64[mem[#126, el]:u32]
000120d8: R16 := pad:64[mem[#126 + 4, el]:u32]
000120df: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
000120e7: R14 := pad:64[mem[R1 + (61:0[R14].0), el]:u32]
000120ee: R12 := pad:64[31:0[R15] ^ 31:0[R18]]
000120f5: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
000120fc: R3 := pad:64[31:0[R3] ^ 31:0[R14]]
00012103: R13 := pad:64[31:0[R3] ^ 31:0[R13]]
00012109: R15 := pad:64[5:0[R13]]
00012111: R12 := pad:64[31:0[R16] ^ (3:0[R3].31:4[R3])]
00012117: R20 := pad:64[13:8[R13]]
0001211d: R19 := pad:64[21:16[R13]]
00012123: R14 := pad:64[29:24[R13]]
00012129: R17 := pad:64[5:0[R12]]
00012131: R15 := pad:64[mem[R11 + (61:0[R15].0), el]:u32]
00012137: R18 := pad:64[13:8[R12]]
0001213d: R16 := pad:64[21:16[R12]]
00012145: R19 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
0001214b: R13 := pad:64[29:24[R12]]
00012153: R12 := pad:64[mem[R10 + (61:0[R20].0), el]:u32]
0001215b: R17 := pad:64[mem[R7 + (61:0[R17].0), el]:u32]
00012162: R4 := pad:64[31:0[R4] ^ 31:0[R15]]
0001216a: R15 := pad:64[mem[R8 + (61:0[R14].0), el]:u32]
00012171: R12 := pad:64[31:0[R12] ^ 31:0[R19]]
00012179: R14 := pad:64[mem[R6 + (61:0[R18].0), el]:u32]
00012180: R12 := pad:64[31:0[R12] ^ 31:0[R4]]
00012188: R16 := pad:64[mem[R5 + (61:0[R16].0), el]:u32]
0001218f: R4 := pad:64[31:0[R15] ^ 31:0[R17]]
00012196: R12 := pad:64[31:0[R12] ^ 31:0[R4]]
0001219e: R15 := pad:64[mem[R1 + (61:0[R13].0), el]:u32]
000121a5: R13 := pad:64[31:0[R14] ^ 31:0[R16]]
000121ac: R12 := pad:64[31:0[R12] ^ 31:0[R13]]
000121b2: #127 := R0 + 0x68
000121b7: R4 := pad:64[mem[#127, el]:u32]
000121bc: R13 := pad:64[mem[#127 + 4, el]:u32]
000121c3: R12 := pad:64[31:0[R12] ^ 31:0[R15]]
000121c9: #128 := R0 + 0x70
000121ce: R16 := pad:64[mem[#128, el]:u32]
000121d3: R15 := pad:64[mem[#128 + 4, el]:u32]
000121da: R4 := pad:64[31:0[R12] ^ 31:0[R4]]
000121e2: R13 := pad:64[31:0[R13] ^ (3:0[R12].31:4[R12])]
000121e8: R21 := pad:64[5:0[R4]]
000121ee: R18 := pad:64[13:8[R4]]
000121f4: R17 := pad:64[21:16[R4]]
000121fa: R14 := pad:64[29:24[R4]]
00012200: R19 := pad:64[5:0[R13]]
00012206: R20 := pad:64[13:8[R13]]
0001220e: R21 := pad:64[mem[R11 + (61:0[R21].0), el]:u32]
00012216: R4 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
0001221c: R18 := pad:64[21:16[R13]]
00012224: R30 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
0001222a: R13 := pad:64[29:24[R13]]
00012232: R17 := pad:64[mem[R8 + (61:0[R14].0), el]:u32]
00012239: R3 := pad:64[31:0[R3] ^ 31:0[R21]]
00012241: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00012248: R4 := pad:64[31:0[R4] ^ 31:0[R30]]
00012250: R14 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00012257: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
0001225f: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00012266: R3 := pad:64[31:0[R17] ^ 31:0[R19]]
0001226d: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
00012275: R17 := pad:64[mem[R1 + (61:0[R13].0), el]:u32]
0001227c: R3 := pad:64[31:0[R14] ^ 31:0[R18]]
00012283: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
0001228a: R4 := pad:64[31:0[R4] ^ 31:0[R17]]
00012291: R3 := pad:64[31:0[R4] ^ 31:0[R16]]
00012297: R16 := pad:64[5:0[R3]]
0001229f: R15 := pad:64[31:0[R15] ^ (3:0[R4].31:4[R4])]
000122a5: R20 := pad:64[13:8[R3]]
000122ab: R30 := pad:64[21:16[R3]]
000122b1: R14 := pad:64[29:24[R3]]
000122b7: R18 := pad:64[5:0[R15]]
000122bf: R16 := pad:64[mem[R11 + (61:0[R16].0), el]:u32]
000122c5: R19 := pad:64[13:8[R15]]
000122cb: R17 := pad:64[21:16[R15]]
000122d3: R3 := pad:64[mem[R10 + (61:0[R20].0), el]:u32]
000122db: R30 := pad:64[mem[R9 + (61:0[R30].0), el]:u32]
000122e2: R12 := pad:64[31:0[R12] ^ 31:0[R16]]
000122ea: R18 := pad:64[mem[R7 + (61:0[R18].0), el]:u32]
000122f0: R15 := pad:64[29:24[R15]]
000122f8: R16 := pad:64[mem[R8 + (61:0[R14].0), el]:u32]
000122ff: R3 := pad:64[31:0[R3] ^ 31:0[R30]]
00012307: R14 := pad:64[mem[R6 + (61:0[R19].0), el]:u32]
0001230e: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
00012316: R17 := pad:64[mem[R5 + (61:0[R17].0), el]:u32]
0001231d: R12 := pad:64[31:0[R16] ^ 31:0[R18]]
00012325: R15 := pad:64[mem[R1 + (61:0[R15].0), el]:u32]
0001232c: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
00012332: #129 := R0 + 0x78
00012337: R13 := pad:64[mem[#129, el]:u32]
0001233c: R0 := pad:64[mem[#129 + 4, el]:u32]
00012343: R12 := pad:64[31:0[R14] ^ 31:0[R17]]
0001234a: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
00012351: R3 := pad:64[31:0[R3] ^ 31:0[R15]]
00012358: R12 := pad:64[31:0[R3] ^ 31:0[R13]]
00012360: R0 := pad:64[31:0[R0] ^ (3:0[R3].31:4[R3])]
00012366: R16 := pad:64[5:0[R12]]
0001236c: R18 := pad:64[13:8[R12]]
00012372: R17 := pad:64[21:16[R12]]
00012378: R15 := pad:64[5:0[R0]]
0001237e: R12 := pad:64[29:24[R12]]
00012384: R14 := pad:64[13:8[R0]]
0001238a: R13 := pad:64[21:16[R0]]
00012392: R16 := pad:64[mem[R11 + (61:0[R16].0), el]:u32]
00012398: R11 := pad:64[29:24[R0]]
000123a0: R0 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
000123a8: R10 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
000123af: R4 := pad:64[31:0[R4] ^ 31:0[R16]]
000123b7: R9 := pad:64[mem[R7 + (61:0[R15].0), el]:u32]
000123bf: R8 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
000123c6: R0 := pad:64[31:0[R0] ^ 31:0[R10]]
000123ce: R6 := pad:64[mem[R6 + (61:0[R14].0), el]:u32]
000123d5: R0 := pad:64[31:0[R0] ^ 31:0[R4]]
000123dd: R7 := pad:64[mem[R5 + (61:0[R13].0), el]:u32]
000123e4: R4 := pad:64[31:0[R8] ^ 31:0[R9]]
000123ec: R5 := pad:64[mem[R1 + (61:0[R11].0), el]:u32]
000123f3: R0 := pad:64[31:0[R0] ^ 31:0[R4]]
000123fa: R1 := pad:64[31:0[R6] ^ 31:0[R7]]
00012401: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
00012408: R0 := pad:64[31:0[R0] ^ 31:0[R5]]
0001240e: #130 := R31 + 0x10
00012413: R19 := mem[#130, el]:u64
00012418: R20 := mem[#130 + 8, el]:u64
0001241f: R0 := pad:64[0:0[R0].31:1[R0]]
00012426: R1 := pad:64[31:0[R3] ^ 31:0[R0]]
0001242c: R1 := pad:64[31:0[R1] & 0xAAAAAAAA]
00012433: R3 := pad:64[31:0[R3] ^ 31:0[R1]]
0001243a: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
00012440: #131 := R31 + 0x20
00012445: R21 := mem[#131, el]:u64
0001244a: R22 := mem[#131 + 8, el]:u64
00012451: R3 := pad:64[0:0[R3].31:1[R3]]
00012458: R23 := mem[R31 + 0x30, el]:u64
0001245f: R1 := pad:64[31:0[R0] ^ pad:32[31:8[R3]]]
00012465: R1 := pad:64[31:0[R1] & 0xFF00FF]
0001246c: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
00012473: R3 := pad:64[31:0[R3] ^ (23:0[R1].0)]
0001247a: R29 := mem[R31, el]:u64
0001247f: R30 := mem[R31 + 8, el]:u64
00012483: R31 := R31 + 0x40
0001248a: R1 := pad:64[31:0[R0] ^ pad:32[31:2[R3]]]
00012490: R1 := pad:64[31:0[R1] & 0x33333333]
00012497: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
0001249e: R1 := pad:64[31:0[R3] ^ (29:0[R1].0)]
000124a5: R3 := pad:64[31:0[R1] ^ pad:32[31:16[R0]]]
000124ab: R3 := pad:64[15:0[R3]]
000124b2: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
000124b9: R3 := pad:64[31:0[R0] ^ (15:0[R3].0)]
000124c0: R0 := pad:64[31:0[R1] ^ pad:32[31:4[R3]]]
000124c6: R0 := pad:64[31:0[R0] & 0xF0F0F0F]
000124cd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
000124d3: V1 := pad:128[31:0[R1]]
000124da: R0 := pad:64[31:0[R3] ^ (27:0[R0].0)]
000124e0: V2 := pad:128[31:0[R0]]
000124e6: V0 := pad:128[31:0[R0]]
000124ed: V4 := pad:128[31:0[pad:64[63:32[V1]] ~>>
          0x18].31:0[pad:64[31:0[V1]] ~>> 0x18]]
000124f4: V6 := pad:128[31:0[pad:64[63:32[V2]] ~>>
          0x10].31:0[pad:64[31:0[V2]] ~>> 0x10]]
000124fb: V5 := pad:128[31:0[pad:64[63:32[V2]] ~>> 8].31:0[pad:64[31:0[V2]]
          ~>> 8]]
00012502: V0 := pad:128[31:0[pad:64[63:32[V0]] ~>>
          0x18].31:0[pad:64[31:0[V0]] ~>> 0x18]]
00012509: V3 := pad:128[31:0[pad:64[63:32[V1]] ~>>
          0x10].31:0[pad:64[31:0[V1]] ~>> 0x10]]
00012510: V2 := pad:128[31:0[pad:64[63:32[V1]] ~>> 8].31:0[pad:64[31:0[V1]]
          ~>> 8]]
00012518: V0 := 127:16[V0].7:0[V6].7:0[V0]
00012520: V0 := 127:24[V0].7:0[V5].15:0[V0]
00012528: V0 := 127:32[V0].7:0[R0].23:0[V0]
00012530: V0 := 127:40[V0].7:0[V4].31:0[V0]
00012538: V0 := 127:48[V0].7:0[V3].39:0[V0]
00012540: V0 := 127:56[V0].7:0[V2].47:0[V0]
00012548: V0 := 127:64[V0].7:0[V1].55:0[V0]
00012550: mem := mem with [R2, el]:u64 <- 63:0[V0]
00012555: call R30 with noreturn

000345d4: sub gl_des_is_weak_key(gl_des_is_weak_key_result)
00034bd3: gl_des_is_weak_key_result :: out u32 = low:32[R0]

000111c8:
000111cc: #73 := R31 - 0x40
000111d2: mem := mem with [#73, el]:u64 <- R29
000111d8: mem := mem with [#73 + 8, el]:u64 <- R30
000111dc: R31 := #73
000111e1: V1 := 0xFEFEFEFEFEFEFEFE
000111e7: R29 := R31
000111ed: #74 := R31 + 0x10
000111f3: mem := mem with [#74, el]:u64 <- R19
000111f9: mem := mem with [#74 + 8, el]:u64 <- R20
000111fe: R20 := 0
00011204: #75 := R31 + 0x20
0001120a: mem := mem with [#75, el]:u64 <- R21
00011210: mem := mem with [#75 + 8, el]:u64 <- R22
00011215: R22 := 0x416000
0001121b: R22 := R22 + 0x810
00011222: V0 := pad:128[mem[R0, el]:u64]
00011228: R22 := R22 + 0x90
0001122d: R21 := 0x3F
00011234: V0 := pad:128[63:0[V0] & 63:0[V1]]
0001123c: mem := mem with [R31 + 0x38, el]:u64 <- 63:0[V0]
000345d5: goto %00011240

00011240:
00011245: R1 := pad:64[31:0[R20] + 31:0[R21]]
0001124b: R0 := R31 + 0x38
00011250: R2 := 8
00011257: R1 := pad:64[31:0[R1] + pad:32[31:31[R1]]]
0001125d: R19 := pad:64[extend:32[31:1[R1]]]
00011264: R1 := R22 + extend:64[31:0[R19].0]
00011269: R30 := 0x40FDE4
0001126c: call @memcmp with return %0001126e

0001126e:
00011271: VF := 0
00011274: CF := 1
00011278: ZF := 31:0[R0] = 0
0001127c: NF := 31:31[R0]
00011282: when 31:0[R0] = 0 goto %00011280
000345d6: goto %00016734

00011280:
00011289: #76 := R31 + 0x10
0001128e: R19 := mem[#76, el]:u64
00011293: R20 := mem[#76 + 8, el]:u64
00011298: R0 := 1
0001129e: #77 := R31 + 0x20
000112a3: R21 := mem[#77, el]:u64
000112a8: R22 := mem[#77 + 8, el]:u64
000112af: R29 := mem[R31, el]:u64
000112b4: R30 := mem[R31 + 8, el]:u64
000112b8: R31 := R31 + 0x40
000112bd: call R30 with noreturn

00016734:
0001673a: when ~(NF = VF & ~ZF) goto %00016738
000345d7: goto %000167a8

00016738:
00016741: R21 := pad:64[31:0[R19] - 1]
00016747: #330 := ~31:0[R20]
0001674c: #331 := 31:0[R21] + ~31:0[R20]
00016752: VF := extend:64[#331 + 1] <> extend:64[31:0[R21]] + extend:64[#330]
          + 1
00016758: CF := pad:64[#331 + 1] <> pad:64[31:0[R21]] + pad:64[#330] + 1
0001675c: ZF := #331 + 1 = 0
00016760: NF := 31:31[#331 + 1]
00016766: when NF = VF goto %00011240
000345d8: goto %0001676a

0001676a:
0001676d: goto %0001676b

000167a8:
000167ac: R20 := pad:64[31:0[R19] + 1]
000167b2: #334 := ~31:0[R21]
000167b7: #335 := 31:0[R20] + ~31:0[R21]
000167bd: VF := extend:64[#335 + 1] <> extend:64[31:0[R20]] + extend:64[#334]
          + 1
000167c3: CF := pad:64[#335 + 1] <> pad:64[31:0[R20]] + pad:64[#334] + 1
000167c7: ZF := #335 + 1 = 0
000167cb: NF := 31:31[#335 + 1]
000167d2: when ~(NF = VF & ~ZF) goto %00011240
000345d9: goto %0001676b

0001676b:
00016772: #332 := R31 + 0x10
00016777: R19 := mem[#332, el]:u64
0001677c: R20 := mem[#332 + 8, el]:u64
00016781: R0 := 0
00016787: #333 := R31 + 0x20
0001678c: R21 := mem[#333, el]:u64
00016791: R22 := mem[#333 + 8, el]:u64
00016798: R29 := mem[R31, el]:u64
0001679d: R30 := mem[R31 + 8, el]:u64
000167a1: R31 := R31 + 0x40
000167a6: call R30 with noreturn

000345da: sub gl_des_makekey(gl_des_makekey_result)
00034bd4: gl_des_makekey_result :: out u32 = low:32[R0]

0001141d:
00011421: #93 := R2 - 8
00011426: VF := extend:128[#93] <> extend:128[R2] - 8
0001142b: CF := pad:128[#93] <> pad:128[R2] + 0xFFFFFFFFFFFFFFF8
0001142f: ZF := #93 = 0
00011433: NF := 63:63[#93]
00011439: when ZF goto %00011437
000345db: goto %0001672a

00011437:
00011440: #94 := R31 - 0x50
00011446: mem := mem with [#94, el]:u64 <- R29
0001144c: mem := mem with [#94 + 8, el]:u64 <- R30
00011450: R31 := #94
00011455: V1 := 0xFEFEFEFEFEFEFEFE
0001145b: R29 := R31
00011461: #95 := R31 + 0x10
00011467: mem := mem with [#95, el]:u64 <- R19
0001146d: mem := mem with [#95 + 8, el]:u64 <- R20
00011473: R19 := R0
00011478: R20 := 0
00011480: mem := mem with [R31 + 0x30, el]:u64 <- R23
00011486: R23 := R1
0001148c: R1 := R0
00011492: R0 := R23
00011498: #96 := R31 + 0x20
0001149e: mem := mem with [#96, el]:u64 <- R21
000114a4: mem := mem with [#96 + 8, el]:u64 <- R22
000114a9: R30 := 0x40FEE0
000114ab: call @des_key_schedule with return %000114ad

000114ad:
000114b2: V21 := pad:128[mem[R19 + 0x78, el]:u64]
000114b8: #97 := R19 + 8
000114bd: V0 := pad:128[mem[#97, el]:u64]
000114c2: V2 := pad:128[mem[#97 + 8, el]:u64]
000114c7: R22 := 0x416000
000114cd: #98 := R19 + 0x18
000114d2: V3 := pad:128[mem[#98, el]:u64]
000114d7: V4 := pad:128[mem[#98 + 8, el]:u64]
000114dd: R22 := R22 + 0x810
000114e3: #99 := R19 + 0x28
000114e8: V5 := pad:128[mem[#99, el]:u64]
000114ed: V6 := pad:128[mem[#99 + 8, el]:u64]
000114f3: R22 := R22 + 0x90
000114f9: #100 := R19 + 0x38
000114fe: V7 := pad:128[mem[#100, el]:u64]
00011503: V16 := pad:128[mem[#100 + 8, el]:u64]
00011509: #101 := R19 + 0xE0
0001150f: mem := mem with [#101, el]:u64 <- 63:0[V3]
00011515: mem := mem with [#101 + 8, el]:u64 <- 63:0[V2]
0001151d: V0 := mem[R19, el]:u64.63:0[V0]
00011523: #102 := R19 + 0x48
00011528: V17 := pad:128[mem[#102, el]:u64]
0001152d: V18 := pad:128[mem[#102 + 8, el]:u64]
00011533: #103 := R19 + 0xC0
00011539: mem := mem with [#103, el]:u64 <- 63:0[V7]
0001153f: mem := mem with [#103 + 8, el]:u64 <- 63:0[V6]
00011544: R21 := 0x3F
0001154a: #104 := R19 + 0x58
0001154f: V19 := pad:128[mem[#104, el]:u64]
00011554: V22 := pad:128[mem[#104 + 8, el]:u64]
0001155a: #105 := R19 + 0xB0
00011560: mem := mem with [#105, el]:u64 <- 63:0[V17]
00011566: mem := mem with [#105 + 8, el]:u64 <- 63:0[V16]
0001156c: #106 := R19 + 0x68
00011571: V23 := pad:128[mem[#106, el]:u64]
00011576: V20 := pad:128[mem[#106 + 8, el]:u64]
0001157c: #107 := R19 + 0xA0
00011582: mem := mem with [#107, el]:u64 <- 63:0[V19]
00011588: mem := mem with [#107 + 8, el]:u64 <- 63:0[V18]
0001158e: #108 := R19 + 0xD0
00011594: mem := mem with [#108, el]:u64 <- 63:0[V5]
0001159a: mem := mem with [#108 + 8, el]:u64 <- 63:0[V4]
000115a0: #109 := R19 + 0x80
000115a6: mem := mem with [#109, el]:u64 <- 63:0[V21]
000115ac: mem := mem with [#109 + 8, el]:u64 <- 63:0[V20]
000115b2: #110 := R19 + 0x90
000115b8: mem := mem with [#110, el]:u64 <- 63:0[V23]
000115be: mem := mem with [#110 + 8, el]:u64 <- 63:0[V22]
000115c6: mem := mem with [R19 + 0xF0, el]:u128 <- V0
000115cd: V0 := pad:128[mem[R23, el]:u64]
000115d4: V0 := pad:128[63:0[V0] & 63:0[V1]]
000115dc: mem := mem with [R31 + 0x48, el]:u64 <- 63:0[V0]
000345dc: goto %000115de

000115de:
000115e3: R1 := pad:64[31:0[R20] + 31:0[R21]]
000115e9: R0 := R31 + 0x48
000115ee: R2 := 8
000115f5: R1 := pad:64[31:0[R1] + pad:32[31:31[R1]]]
000115fb: R19 := pad:64[extend:32[31:1[R1]]]
00011602: R1 := R22 + extend:64[31:0[R19].0]
00011607: R30 := 0x40FF5C
00011609: call @memcmp with return %0001160b

0001160b:
0001160e: VF := 0
00011611: CF := 1
00011615: ZF := 31:0[R0] = 0
00011619: NF := 31:31[R0]
0001161f: when 31:0[R0] = 0 goto %0001161d
000345dd: goto %00016681

0001161d:
00011626: #111 := R31 + 0x10
0001162b: R19 := mem[#111, el]:u64
00011630: R20 := mem[#111 + 8, el]:u64
00011635: R0 := 0
0001163b: #112 := R31 + 0x20
00011640: R21 := mem[#112, el]:u64
00011645: R22 := mem[#112 + 8, el]:u64
0001164c: R23 := mem[R31 + 0x30, el]:u64
00011653: R29 := mem[R31, el]:u64
00011658: R30 := mem[R31 + 8, el]:u64
0001165c: R31 := R31 + 0x50
00011661: call R30 with noreturn

00016681:
00016687: when ~(NF = VF & ~ZF) goto %00016685
000345de: goto %000166fc

00016685:
0001668e: R21 := pad:64[31:0[R19] - 1]
00016694: #324 := ~31:0[R20]
00016699: #325 := 31:0[R21] + ~31:0[R20]
0001669f: VF := extend:64[#325 + 1] <> extend:64[31:0[R21]] + extend:64[#324]
          + 1
000166a5: CF := pad:64[#325 + 1] <> pad:64[31:0[R21]] + pad:64[#324] + 1
000166a9: ZF := #325 + 1 = 0
000166ad: NF := 31:31[#325 + 1]
000166b3: when NF = VF goto %000115de
000345df: goto %000166b7

000166b7:
000166ba: goto %000166b8

000166fc:
00016700: R20 := pad:64[31:0[R19] + 1]
00016706: #328 := ~31:0[R21]
0001670b: #329 := 31:0[R20] + ~31:0[R21]
00016711: VF := extend:64[#329 + 1] <> extend:64[31:0[R20]] + extend:64[#328]
          + 1
00016717: CF := pad:64[#329 + 1] <> pad:64[31:0[R20]] + pad:64[#328] + 1
0001671b: ZF := #329 + 1 = 0
0001671f: NF := 31:31[#329 + 1]
00016726: when ~(NF = VF & ~ZF) goto %000115de
000345e0: goto %000166b8

000166b8:
000166bf: #326 := R31 + 0x10
000166c4: R19 := mem[#326, el]:u64
000166c9: R20 := mem[#326 + 8, el]:u64
000166ce: R0 := 1
000166d4: #327 := R31 + 0x20
000166d9: R21 := mem[#327, el]:u64
000166de: R22 := mem[#327 + 8, el]:u64
000166e5: R23 := mem[R31 + 0x30, el]:u64
000166ec: R29 := mem[R31, el]:u64
000166f1: R30 := mem[R31 + 8, el]:u64
000166f5: R31 := R31 + 0x50
000166fa: call R30 with noreturn

0001672a:
0001672d: R0 := 0
00016732: call R30 with noreturn

000345e1: sub gl_des_setkey(gl_des_setkey_result)
00034bd5: gl_des_setkey_result :: out u32 = low:32[R0]

000112bf:
000112c3: #78 := R31 - 0x20
000112c9: mem := mem with [#78, el]:u64 <- R29
000112cf: mem := mem with [#78 + 8, el]:u64 <- R30
000112d3: R31 := #78
000112d9: R29 := R31
000112e1: mem := mem with [R31 + 0x10, el]:u64 <- R19
000112e7: R19 := R0
000112ed: R0 := R1
000112f3: R1 := R19
000112f8: R30 := 0x40FE50
000112fa: call @des_key_schedule with return %000112fc

000112fc:
00011300: #79 := R19 + 8
00011305: V0 := pad:128[mem[#79, el]:u64]
0001130a: V1 := pad:128[mem[#79 + 8, el]:u64]
00011310: #80 := R19 + 0x18
00011315: V2 := pad:128[mem[#80, el]:u64]
0001131a: V3 := pad:128[mem[#80 + 8, el]:u64]
00011320: #81 := R19 + 0x28
00011325: V4 := pad:128[mem[#81, el]:u64]
0001132a: V5 := pad:128[mem[#81 + 8, el]:u64]
00011330: #82 := R19 + 0x38
00011335: V6 := pad:128[mem[#82, el]:u64]
0001133a: V7 := pad:128[mem[#82 + 8, el]:u64]
00011340: #83 := R19 + 0xE0
00011346: mem := mem with [#83, el]:u64 <- 63:0[V2]
0001134c: mem := mem with [#83 + 8, el]:u64 <- 63:0[V1]
00011353: V20 := pad:128[mem[R19 + 0x78, el]:u64]
00011359: #84 := R19 + 0x48
0001135e: V16 := pad:128[mem[#84, el]:u64]
00011363: V17 := pad:128[mem[#84 + 8, el]:u64]
00011369: #85 := R19 + 0xC0
0001136f: mem := mem with [#85, el]:u64 <- 63:0[V6]
00011375: mem := mem with [#85 + 8, el]:u64 <- 63:0[V5]
0001137d: V0 := mem[R19, el]:u64.63:0[V0]
00011383: #86 := R19 + 0x58
00011388: V18 := pad:128[mem[#86, el]:u64]
0001138d: V21 := pad:128[mem[#86 + 8, el]:u64]
00011393: #87 := R19 + 0xB0
00011399: mem := mem with [#87, el]:u64 <- 63:0[V16]
0001139f: mem := mem with [#87 + 8, el]:u64 <- 63:0[V7]
000113a5: #88 := R19 + 0x68
000113aa: V22 := pad:128[mem[#88, el]:u64]
000113af: V19 := pad:128[mem[#88 + 8, el]:u64]
000113b5: #89 := R19 + 0xA0
000113bb: mem := mem with [#89, el]:u64 <- 63:0[V18]
000113c1: mem := mem with [#89 + 8, el]:u64 <- 63:0[V17]
000113c7: #90 := R19 + 0xD0
000113cd: mem := mem with [#90, el]:u64 <- 63:0[V4]
000113d3: mem := mem with [#90 + 8, el]:u64 <- 63:0[V3]
000113d9: #91 := R19 + 0x80
000113df: mem := mem with [#91, el]:u64 <- 63:0[V20]
000113e5: mem := mem with [#91 + 8, el]:u64 <- 63:0[V19]
000113eb: #92 := R19 + 0x90
000113f1: mem := mem with [#92, el]:u64 <- 63:0[V22]
000113f7: mem := mem with [#92 + 8, el]:u64 <- 63:0[V21]
000113ff: mem := mem with [R19 + 0xF0, el]:u128 <- V0
00011406: R19 := mem[R31 + 0x10, el]:u64
0001140d: R29 := mem[R31, el]:u64
00011412: R30 := mem[R31 + 8, el]:u64
00011416: R31 := R31 + 0x20
0001141b: call R30 with noreturn

000345e2: sub headers_recv(headers_recv_result)
00034bd6: headers_recv_result :: out u32 = low:32[R0]

000203ce:
000203d5: #949 := R31 - 0x90
000203db: mem := mem with [#949, el]:u64 <- R29
000203e1: mem := mem with [#949 + 8, el]:u64 <- R30
000203e5: R31 := #949
000203eb: R29 := R31
000203f1: #950 := R31 + 0x10
000203f7: mem := mem with [#950, el]:u64 <- R19
000203fd: mem := mem with [#950 + 8, el]:u64 <- R20
00020403: R20 := R1
00020408: R1 := 0x1000
0002040e: #951 := R31 + 0x20
00020414: mem := mem with [#951, el]:u64 <- R21
0002041a: mem := mem with [#951 + 8, el]:u64 <- R22
00020420: R21 := pad:64[31:0[R0]]
00020425: R0 := 0x1000
0002042b: #952 := R31 + 0x30
00020431: mem := mem with [#952, el]:u64 <- R23
00020437: mem := mem with [#952 + 8, el]:u64 <- R24
0002043f: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R1]
00020446: mem := mem with [R31 + 0x88, el]:u64 <- 0
0002044b: R30 := 0x4080E4
0002044d: call @zmalloc with return %0002044f

0002044f:
00020453: R3 := R0
00020459: R2 := R31 + 0x7C
0002045f: R1 := R31 + 0x80
00020465: R0 := pad:64[31:0[R21]]
0002046d: mem := mem with [R31 + 0x80, el]:u64 <- R3
00020472: R30 := 0x4080FC
00020474: call @so_recvln with return %00020476

00020476:
00020479: VF := 0
0002047c: CF := 1
00020480: ZF := 31:0[R0] = 0
00020484: NF := 31:31[R0]
0002048c: when ~(NF = VF & ~ZF) goto %0002048a
000345e3: goto %000215fc

0002048a:
00020493: R19 := pad:64[31:0[R0]]
00020498: R24 := 0x430000
0002049f: R0 := mem[R31 + 0x80, el]:u64
000204a4: R30 := 0x4082CC
000204a6: call @free with return %000204a8

000215fc:
000215ff: R24 := 0x430000
00021605: #1001 := R31 + 0x40
0002160b: mem := mem with [#1001, el]:u64 <- R25
00021611: mem := mem with [#1001 + 8, el]:u64 <- R26
00021618: R0 := pad:64[mem[R24 + 0x374, el]:u32]
0002161d: when 31:0[R0] <> 0 goto %00021322
000345e4: goto %0002133c

00021322:
00021327: R1 := mem[R31 + 0x80, el]:u64
0002132c: R0 := 0x413000
00021332: R0 := R0 + 0x648
00021337: R30 := 0x4082B8
00021339: call @printf with return %0002133b

0002133b:
0002133e: goto %0002133c

0002133c:
00021344: R0 := mem[R31 + 0x80, el]:u64
00021349: R23 := 0x413000
0002134f: R23 := R23 + 0x358
00021354: R30 := 0x408124
00021356: call @trimr with return %00021358

00021358:
0002135d: R0 := mem[R31 + 0x80, el]:u64
00021362: R30 := 0x40812C
00021364: call @strdup with return %00021366

00021366:
0002136a: R22 := R0
00021371: R19 := mem[R31 + 0x80, el]:u64
00021377: R0 := R19
0002137c: R30 := 0x40813C
0002137e: call @strlen with return %00021380

00021380:
00021384: R2 := R31 + 0x88
0002138a: R25 := R0
00021390: R1 := R23
00021396: R0 := R19
0002139b: R30 := 0x408150
0002139d: call @strtok_r with return %0002139f

0002139f:
000213a3: R19 := R0
000213a8: when R0 = 0 goto %000205e4
000345e5: goto %000213ac

000205e4:
000205e9: R0 := pad:64[mem[R24 + 0x374, el]:u32]
000205ef: when 31:0[R0] <> 0 goto %000205ed
000345e6: goto %0002060b

000205ed:
000205f6: R1 := R22
000205fb: R0 := 0x413000
00020601: R0 := R0 + 0x670
00020606: R30 := 0x408648
00020608: call @printf with return %0002060a

0002060a:
0002060d: goto %0002060b

0002060b:
00020612: when R22 <> 0 goto %00020610
000345e7: goto %00021215

00021215:
0002121a: R0 := mem[R31 + 0x80, el]:u64
0002121f: R30 := 0x4085C0
00021221: call @free with return %00020631

000213ac:
000213af: R1 := 0x413000
000213b4: R2 := 5
000213ba: R1 := R1 + 0x658
000213bf: R30 := 0x408168
000213c1: call @strncasecmp with return %000213c3

000213c3:
000213c6: when 31:0[R0] = 0 goto %00020744
000345e8: goto %000213ca

00020744:
00020749: mem := mem with [R20, el]:u32 <- 0
0002074f: R0 := R19
00020756: mem := mem with [R20 + 0x1C, el]:u32 <- 0
0002075b: R30 := 0x4083A0
0002075d: call @strdup with return %0002075f

0002075f:
00020763: #961 := R20 + 0x48
00020769: mem := mem with [#961, el]:u64 <- R0
0002076e: mem := mem with [#961 + 8, el]:u64 <- 0
00020773: R1 := 0x2F
00020778: R30 := 0x4083AC
0002077a: call @strchr with return %0002077c

0002077c:
00020780: R19 := R0
00020785: when R0 = 0 goto %0002054e
000345e9: goto %00020789

00020789:
0002078c: R30 := 0x4083B8
0002078e: call @strlen with return %00020790

00020790:
00020794: #962 := R0 - 3
00020799: VF := extend:128[#962] <> extend:128[R0] - 3
0002079e: CF := pad:128[#962] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
000207a2: ZF := #962 = 0
000207a6: NF := 63:63[#962]
000207ac: when ~(CF & ~ZF) goto %0002054e
000345ea: goto %000207b0

000207b0:
000207b3: R30 := 0x4083C4
000207b5: call @__ctype_b_loc with return %000207b7

000207b7:
000207bc: R1 := pad:64[mem[R19 + 1]]
000207c3: R0 := mem[R0, el]:u64
000207c9: R2 := pad:64[7:0[R1].0]
000207d1: R2 := pad:64[mem[R0 + R2, el]:u16]
000207d6: when ~11:11[R2] goto %0002054e
000345eb: goto %000207da

000207da:
000207df: R2 := pad:64[mem[R19 + 3]]
000207e5: R3 := pad:64[7:0[R2].0]
000207ed: R0 := pad:64[mem[R0 + R3, el]:u16]
000207f2: when ~11:11[R0] goto %0002054e
000345ec: goto %000207f6

000207f6:
000207fa: R1 := pad:64[31:0[R1] - 0x30]
00020800: R2 := pad:64[31:0[R2] - 0x30]
00020807: R1 := pad:64[31:0[R1] + (29:0[R1].0)]
0002080e: R0 := pad:64[31:0[R2] + (30:0[R1].0)]
00020812: goto %00020553

000213ca:
000213cd: R1 := 0x413000
000213d3: R0 := R19
000213d9: R1 := R1 + 0x660
000213de: R2 := 3
000213e3: R30 := 0x408180
000213e5: call @strncasecmp with return %000213e7

000213e7:
000213ea: when 31:0[R0] = 0 goto %00020522
000345ed: goto %000213ee

00020522:
00020527: mem := mem with [R20, el]:u32 <- 0
0002052d: R0 := R19
00020534: mem := mem with [R20 + 0x1C, el]:u32 <- 0
00020539: R30 := 0x4082FC
0002053b: call @strdup with return %0002053d

0002053d:
00020541: #956 := R20 + 0x48
00020547: mem := mem with [#956, el]:u64 <- R0
0002054c: mem := mem with [#956 + 8, el]:u64 <- 0
000345ee: goto %0002054e

0002054e:
00020551: R0 := 0xFFFFFFFF
000345ef: goto %00020553

00020553:
00020559: mem := mem with [R20 + 0x24, el]:u32 <- 31:0[R0]
0002055f: R2 := R31 + 0x88
00020565: R1 := R23
0002056a: R0 := 0
0002056f: R30 := 0x408318
00020571: call @strtok_r with return %00020573

00020573:
00020577: R19 := R0
0002057d: when R0 = 0 goto %0002057b
000345f0: goto %00021567

0002057b:
00020585: R0 := mem[R20 + 0x50, el]:u64
0002058b: when R0 = 0 goto %00020589
000345f1: goto %000205a9

00020589:
00020591: R0 := 0x412000
00020597: R0 := R0 + 0xA38
0002059c: R30 := 0x408798
0002059e: call @strdup with return %000205a0

000205a0:
000205a6: mem := mem with [R20 + 0x50, el]:u64 <- R0
000205ab: goto %000205a9

000205a9:
000205b1: R19 := mem[R31 + 0x80, el]:u64
000205b7: when R22 = 0 goto %000205b5
000345f2: goto %0002154d

000205b5:
000205be: R0 := R19
000205c3: R30 := 0x408704
000205c5: call @free with return %000205c7

000205c7:
000205ca: goto %000205c8

0002154d:
00021551: R0 := R22
00021556: R30 := 0x408598
00021558: call @free with return %0002155a

0002155a:
0002155e: R0 := R19
00021563: R30 := 0x4085A0
00021565: call @free with return %000205c8

000205c8:
000205cf: #957 := R31 + 0x40
000205d4: R25 := mem[#957, el]:u64
000205d9: R26 := mem[#957 + 8, el]:u64
000205de: R19 := 0xFFFFFFFE
000205e2: goto %000204a8

00021567:
0002156a: R30 := 0x408324
0002156c: call @strdup with return %0002156e

0002156e:
00021572: R23 := R0
00021577: R30 := 0x40832C
00021579: call @strlen with return %0002157b

0002157b:
00021580: R19 := R19 + R0
00021587: R2 := mem[R31 + 0x80, el]:u64
0002158e: R25 := R2 + extend:64[31:0[R25]]
00021593: goto %00021591

00021591:
00021599: R0 := pad:64[mem[R19]]
0002159f: #998 := ~R19
000215a4: #999 := R25 + ~R19
000215aa: VF := extend:128[#999 + 1] <> extend:128[R25] + extend:128[#998] +
          1
000215b0: CF := pad:128[#999 + 1] <> pad:128[R25] + pad:128[#998] + 1
000215b4: ZF := #999 + 1 = 0
000215b8: NF := 63:63[#999 + 1]
000215bf: when CF & ~ZF goto %000215bd
000345f3: goto %000215e2

000215bd:
000215c6: R19 := R19 + 1
000215cc: #1000 := 31:0[R0] - 0x20
000215d1: VF := extend:64[#1000] <> extend:64[31:0[R0]] - 0x20
000215d6: CF := pad:64[#1000] <> pad:64[31:0[R0]] + 0xFFFFFFE0
000215da: ZF := #1000 = 0
000215de: NF := 31:31[#1000]
000215e4: when ZF <> 1 goto %000215e2
000345f4: goto %00021591

000215e2:
000215ec: R0 := pad:64[mem[R19]]
000215f1: when 31:0[R0] <> 0 goto %00020685
000345f5: goto %000215f5

00020685:
00020689: R0 := R19
0002068e: R30 := 0x408630
00020690: call @strdup with return %00020692

00020692:
00020698: mem := mem with [R20 + 0x50, el]:u64 <- R0
0002069d: goto %0002069b

000215f5:
000215fa: R0 := mem[R20 + 0x50, el]:u64
000345f6: goto %0002069b

0002069b:
000206a2: when R0 = 0 goto %000206a0
000345f7: goto %000206c0

000206a0:
000206a8: R0 := 0x412000
000206ae: R0 := R0 + 0xA38
000206b3: R30 := 0x408784
000206b5: call @strdup with return %000206b7

000206b7:
000206bd: mem := mem with [R20 + 0x50, el]:u64 <- R0
000206c2: goto %000206c0

000206c0:
000206c7: R0 := R23
000206cc: R30 := 0x40836C
000206ce: call @strlen with return %000206d0

000206d0:
000206d4: #960 := R0 - 3
000206d9: VF := extend:128[#960] <> extend:128[R0] - 3
000206de: CF := pad:128[#960] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
000206e2: ZF := #960 = 0
000206e6: NF := 63:63[#960]
000206ec: when ZF goto %000206ea
000345f8: goto %00020715

000206ea:
000206f3: R0 := R23
000206f8: R2 := 0xA
000206fd: R1 := 0
00020702: R30 := 0x40840C
00020704: call @strtol with return %00020706

00020706:
0002070c: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R0]
00020711: R25 := 0
00020717: when 31:0[R0] = 0 goto %00020715
000345f9: goto %00020814

00020814:
00020818: #963 := R31 + 0x50
0002081e: mem := mem with [#963, el]:u64 <- R27
00020824: mem := mem with [#963 + 8, el]:u64 <- R28
000345fa: goto %00020826

00020715:
0002071d: when R22 = 0 goto %0002064d
000345fb: goto %00020721

0002064d:
00020651: R0 := R23
00020656: R19 := 0xFFFFFFFE
0002065b: R30 := 0x4085D8
0002065d: call @free with return %0002065f

0002065f:
00020662: goto %00020660

00020721:
00020725: R0 := R22
0002072a: R30 := 0x408380
0002072c: call @free with return %0002072e

0002072e:
00020732: R0 := R23
00020737: R19 := 0xFFFFFFFE
0002073c: R30 := 0x40838C
0002073e: call @free with return %00020740

00020740:
00020742: goto %00020660

000213ee:
000213f1: R1 := 0x413000
000213f7: R0 := R22
000213fd: R1 := R1 + 0x668
00021402: R30 := 0x408194
00021404: call @strstr with return %00021406

00021406:
00021409: when R0 = 0 goto %000211db
000345fc: goto %0002140d

000211db:
000211e0: R0 := pad:64[mem[R24 + 0x374, el]:u32]
000211e5: when 31:0[R0] = 0 goto %00020610
000345fd: goto %000211e9

000211e9:
000211ec: R0 := 0x413000
000211f2: R1 := R22
000211f8: R0 := R0 + 0x670
000211fd: R30 := 0x4085F4
000211ff: call @printf with return %00021201

00021201:
000345fe: goto %00020610

00020610:
00020619: R0 := R22
0002061e: R30 := 0x408600
00020620: call @free with return %00020622

00020622:
00020627: R0 := mem[R31 + 0x80, el]:u64
0002062c: R30 := 0x408608
0002062e: call @free with return %00020630

00020630:
00020633: goto %00020631

00020631:
00020638: #958 := R31 + 0x40
0002063d: R25 := mem[#958, el]:u64
00020642: R26 := mem[#958 + 8, el]:u64
00020647: R19 := 0xFFFFFFFC
0002064b: goto %000204a8

0002140d:
00021410: V0 := 0
00021415: R0 := 1
0002141d: mem := mem with [R20, el]:u32 <- 31:0[R0]
00021423: R0 := R19
0002142a: mem := mem with [R20 + 0x1C, el]:u32 <- 0
00021431: mem := mem with [R20 + 0x48, el]:u64 <- 0
00021439: mem := mem with [R20 + 0x28, el]:u128 <- V0
00021441: mem := mem with [R20 + 0x38, el]:u128 <- V0
00021446: R30 := 0x4081BC
00021448: call @strdup with return %0002144a

0002144a:
0002144e: R2 := R31 + 0x88
00021456: mem := mem with [R20 + 0x28, el]:u64 <- R0
0002145c: R1 := R23
00021461: R0 := 0
00021466: R30 := 0x4081D0
00021468: call @strtok_r with return %0002146a

0002146a:
0002146e: when R0 = 0 goto %0002146c
000345ff: goto %0002153e

0002153e:
00021541: R30 := 0x4081D8
00021543: call @strdup with return %00021545

00021545:
0002154b: mem := mem with [R20 + 0x30, el]:u64 <- R0
00034600: goto %0002146c

0002146c:
00021475: R2 := R31 + 0x88
0002147b: R1 := R23
00021480: R0 := 0
00021485: R30 := 0x4081EC
00021487: call @strtok_r with return %00021489

00021489:
0002148d: when R0 = 0 goto %0002148b
00034601: goto %0002152f

0002152f:
00021532: R30 := 0x4081F4
00021534: call @strdup with return %00021536

00021536:
0002153c: mem := mem with [R20 + 0x48, el]:u64 <- R0
00034602: goto %0002148b

0002148b:
00021495: R19 := mem[R20 + 0x30, el]:u64
0002149a: when R19 = 0 goto %00021203
00034603: goto %0002149e

0002149e:
000214a3: R0 := mem[R20 + 0x48, el]:u64
000214a8: when R0 = 0 goto %00021203
00034604: goto %000214ac

00021203:
00021206: R19 := 0xFFFFFFFD
0002120c: R0 := R22
00021211: R30 := 0x408618
00021213: call @free with return %00020660

00020660:
00020668: R0 := mem[R31 + 0x80, el]:u64
0002066d: R30 := 0x408620
0002066f: call @free with return %00020671

00020671:
00020675: #959 := R31 + 0x40
0002067a: R25 := mem[#959, el]:u64
0002067f: R26 := mem[#959 + 8, el]:u64
00020683: goto %000204a8

000214ac:
000214af: R1 := 0x2F
000214b4: R25 := 0xFFFFFFFF
000214ba: #996 := R31 + 0x50
000214c0: mem := mem with [#996, el]:u64 <- R27
000214c6: mem := mem with [#996 + 8, el]:u64 <- R28
000214cb: R30 := 0x408218
000214cd: call @strchr with return %000214cf

000214cf:
000214d3: R23 := R0
000214d8: when R0 = 0 goto %00021273
00034605: goto %000214dc

000214dc:
000214df: R30 := 0x408224
000214e1: call @strlen with return %000214e3

000214e3:
000214e7: #997 := R0 - 3
000214ec: VF := extend:128[#997] <> extend:128[R0] - 3
000214f1: CF := pad:128[#997] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
000214f5: ZF := #997 = 0
000214f9: NF := 63:63[#997]
000214ff: when ~(CF & ~ZF) goto %00021273
00034606: goto %00021503

00021503:
00021506: R30 := 0x408230
00021508: call @__ctype_b_loc with return %0002150a

0002150a:
0002150f: R1 := pad:64[mem[R23 + 1]]
00021516: R2 := mem[R0, el]:u64
0002151c: R0 := pad:64[7:0[R1].0]
00021524: R0 := pad:64[mem[R2 + R0, el]:u16]
00021529: when 11:11[R0] goto %00021223
00034607: goto %0002152d

00021223:
00021228: R0 := pad:64[mem[R23 + 3]]
0002122e: R1 := pad:64[31:0[R1] - 0x30]
00021235: R1 := pad:64[31:0[R1] + (29:0[R1].0)]
0002123b: R4 := pad:64[31:0[R0] - 0x30]
00021241: R3 := pad:64[7:0[R0].0]
00021248: R0 := pad:64[31:0[R4] + (30:0[R1].0)]
00021250: R1 := pad:64[mem[R2 + R3, el]:u16]
00021255: VF := 0
00021258: CF := 0
0002125c: ZF := pad:64[11:11[R1].0] = 0
0002125f: NF := 0
0002126d: when ZF <> 1 goto %00021265
0002126e: goto %00021269

00021269:
0002126a: R25 := pad:64[31:0[R25]]
00021270: goto %0002126c

00021265:
00021266: R25 := pad:64[31:0[R0]]
0002126f: goto %0002126c

0002126c:
00021275: goto %00021273

0002152d:
00034608: goto %00021273

00021273:
0002127c: mem := mem with [R20 + 0x24, el]:u32 <- 31:0[R25]
00021282: R0 := R19
00021287: R1 := 0x413000
0002128d: R1 := R1 + 0x330
00021292: R30 := 0x40825C
00021294: call @strstr with return %00021296

00021296:
00021299: VF := 0
0002129c: CF := 1
000212a0: ZF := R0 = 0
000212a4: NF := 63:63[R0]
000212aa: R0 := R0 + 3
000212af: R1 := 0x2F
000212bd: when ZF <> 1 goto %000212b5
000212be: goto %000212b9

000212b9:
000212ba: R19 := R19
000212c0: goto %000212bc

000212b5:
000212b6: R19 := R0
000212bf: goto %000212bc

000212bc:
000212c6: R0 := R19
000212cb: R30 := 0x408274
000212cd: call @strchr with return %000212cf

000212cf:
000212d5: mem := mem with [R31 + 0x88, el]:u64 <- R0
000212db: R23 := R0
000212e0: when R0 = 0 goto %0002098a
00034609: goto %000212e4

0002098a:
0002098e: R0 := R19
00020993: R30 := 0x408750
00020995: call @strlen with return %00020997

00020997:
0002099b: R2 := pad:64[31:0[R0]]
000209a0: R1 := 0
000209a6: R0 := R19
000209ab: R30 := 0x408760
000209ad: call @substr with return %000209af

000209af:
000209b3: R25 := R0
000209b8: R0 := 0x412000
000209be: R0 := R0 + 0x888
000209c3: R30 := 0x408770
000209c5: call @strdup with return %000209c7

000209c7:
000209cd: mem := mem with [R20 + 0x38, el]:u64 <- R0
000209d1: goto %00020826

000212e4:
000212e9: R2 := pad:64[31:0[R0] + ~31:0[R19] + 1]
000212ee: R1 := 0
000212f4: R0 := R19
000212f9: R30 := 0x408290
000212fb: call @substr with return %000212fd

000212fd:
00021301: R25 := R0
00021306: R23 := 0
0002130d: R0 := mem[R31 + 0x88, el]:u64
00021312: R30 := 0x4082A0
00021314: call @strdup with return %00021316

00021316:
0002131c: mem := mem with [R20 + 0x38, el]:u64 <- R0
00021320: goto %00020826

00020826:
00020829: R26 := 0x413000
0002082f: R26 := R26 + 0x640
0003460a: goto %00020833

00020833:
00020837: R2 := R31 + 0x7C
0002083d: R1 := R31 + 0x80
00020843: R0 := pad:64[31:0[R21]]
00020848: R30 := 0x408438
0002084a: call @so_recvln with return %0002084c

0002084c:
00020850: R19 := pad:64[31:0[R0]]
00020857: R0 := mem[R31 + 0x80, el]:u64
0002085c: R30 := 0x408444
0002085e: call @trimr with return %00020860

00020860:
00020863: VF := 0
00020866: CF := 1
0002086a: ZF := 31:0[R19] = 0
0002086e: NF := 31:31[R19]
00020876: when ~(NF = VF & ~ZF) goto %00020874
0003460b: goto %0002105b

0002105b:
00021060: R28 := mem[R31 + 0x80, el]:u64
00021066: R1 := R26
0002106c: R0 := R28
00021071: R30 := 0x40845C
00021073: call @strcspn with return %00021075

00021075:
00021079: R27 := R0
0002107f: R0 := R28
00021084: R30 := 0x408468
00021086: call @strlen with return %00021088

00021088:
0002108c: #987 := ~R0
00021091: #988 := R27 + ~R0
00021097: VF := extend:128[#988 + 1] <> extend:128[R27] + extend:128[#987] +
          1
0002109d: CF := pad:128[#988 + 1] <> pad:128[R27] + pad:128[#987] + 1
000210a1: ZF := #988 + 1 = 0
000210a5: NF := 63:63[#988 + 1]
000210ab: when ZF <> 1 goto %000210a9
0003460c: goto %0002113c

000210a9:
000210b3: R1 := mem[R20 + 8, el]:u64
000210b9: #989 := R31 + 0x60
000210be: mem := mem with [#989, el]:u64 <- 0
000210c4: mem := mem with [#989 + 8, el]:u64 <- R1
000210ca: #990 := ~31:0[R0]
000210cf: #991 := 31:0[R27] + ~31:0[R0]
000210d5: VF := extend:64[#991 + 1] <> extend:64[31:0[R27]] + extend:64[#990]
          + 1
000210db: CF := pad:64[#991 + 1] <> pad:64[31:0[R27]] + pad:64[#990] + 1
000210df: ZF := #991 + 1 = 0
000210e3: NF := 31:31[#991 + 1]
000210e9: when ZF goto %000210e7
0003460d: goto %000211b4

000211b4:
000211b8: R0 := R28
000211be: R2 := pad:64[31:0[R27]]
000211c3: R1 := 0
000211c8: R30 := 0x408524
000211ca: call @substr with return %000211cc

000211cc:
000211d1: R28 := mem[R31 + 0x80, el]:u64
000211d9: mem := mem with [R31 + 0x60, el]:u64 <- R0
0003460e: goto %000210e7

000210e7:
000210f0: R0 := R28
000210f5: R1 := 0x3A
000210fa: R30 := 0x408538
000210fc: call @strchr with return %000210fe

000210fe:
00021102: R2 := R0
00021108: when R0 = 0 goto %00021106
0003460f: goto %0002114d

0002114d:
00021152: R1 := pad:64[mem[R0 + 1]]
00021158: R0 := R0 + 1
0002115e: #993 := 31:0[R1] - 0x20
00021163: VF := extend:64[#993] <> extend:64[31:0[R1]] - 0x20
00021168: CF := pad:64[#993] <> pad:64[31:0[R1]] + 0xFFFFFFE0
0002116c: ZF := #993 = 0
00021170: NF := 31:31[#993]
00021176: when ZF <> 1 goto %00021174
00034610: goto %00021186

00021186:
0002118a: #994 := R0 + 1
0002118f: R1 := pad:64[mem[#994]]
00021193: R0 := #994
00021199: #995 := 31:0[R1] - 0x20
0002119e: VF := extend:64[#995] <> extend:64[31:0[R1]] - 0x20
000211a3: CF := pad:64[#995] <> pad:64[31:0[R1]] + 0xFFFFFFE0
000211a7: ZF := #995 = 0
000211ab: NF := 31:31[#995]
000211b0: when ZF goto %00021186
00034611: goto %00021174

00021174:
0002117c: R30 := 0x408560
0002117e: call @strdup with return %00021180

00021180:
00021184: R2 := R0
00034612: goto %00021106

00021106:
0002110f: #992 := R31 + 0x60
00021114: R1 := mem[#992, el]:u64
00021119: R0 := mem[#992 + 8, el]:u64
0002111e: R4 := 0
00021123: R3 := 0
00021128: R30 := 0x408574
0002112a: call @hlist_add with return %0002112c

0002112c:
00021132: mem := mem with [R20 + 8, el]:u64 <- R0
00021139: R28 := mem[R31 + 0x80, el]:u64
0002113e: goto %0002113c

0002113c:
00021144: R0 := pad:64[mem[R28]]
00021149: when 31:0[R0] <> 0 goto %00020833
00034613: goto %00020874

00020874:
0002087e: R0 := pad:64[mem[R20, el]:u32]
00020884: when 31:0[R0] = 0 goto %00020882
00034614: goto %00020954

00020954:
00020958: when R25 = 0 goto %00020956
00034615: goto %000209d8

000209d8:
000209dd: R0 := pad:64[mem[R25]]
000209e3: when 31:0[R0] <> 0 goto %000209e1
00034616: goto %00020956

000209e1:
000209eb: R0 := mem[R20 + 8, el]:u64
000209f0: R26 := 0x413000
000209f6: R26 := R26 + 0x440
000209fc: R1 := R26
00020a01: R30 := 0x408660
00020a03: call @hlist_get with return %00020a05

00020a05:
00020a09: when R0 = 0 goto %00020a07
00034617: goto %00020a3a

00020a07:
00020a11: R0 := mem[R20 + 8, el]:u64
00020a16: R4 := 1
00020a1c: R1 := R26
00020a22: R2 := R25
00020a28: R3 := pad:64[31:0[R4]]
00020a2d: R30 := 0x40882C
00020a2f: call @hlist_add with return %00020a31

00020a31:
00020a37: mem := mem with [R20 + 8, el]:u64 <- R0
00020a3c: goto %00020a3a

00020a3a:
00020a42: R0 := pad:64[mem[R25]]
00020a48: #969 := 31:0[R0] - 0x5B
00020a4d: VF := extend:64[#969] <> extend:64[31:0[R0]] - 0x5B
00020a52: CF := pad:64[#969] <> pad:64[31:0[R0]] + 0xFFFFFFA5
00020a56: ZF := #969 = 0
00020a5a: NF := 31:31[#969]
00020a60: when ZF goto %00020a5e
00034618: goto %00021016

00020a5e:
00020a66: R1 := 0x5D
00020a6c: R0 := R25
00020a71: R30 := 0x4087D8
00020a73: call @strchr with return %00020a75

00020a75:
00020a79: R27 := R0
00020a7f: R0 := R25 + 1
00020a86: mem := mem with [R27] <- 0
00020a8b: R30 := 0x4087E8
00020a8d: call @strdup with return %00020a8f

00020a8f:
00020a95: mem := mem with [R20 + 0x40, el]:u64 <- R0
00020a9b: R26 := R0
00020aa2: R0 := pad:64[mem[R27 + 1]]
00020aa8: #970 := 31:0[R0] - 0x3A
00020aad: VF := extend:64[#970] <> extend:64[31:0[R0]] - 0x3A
00020ab2: CF := pad:64[#970] <> pad:64[31:0[R0]] + 0xFFFFFFC6
00020ab6: ZF := #970 = 0
00020aba: NF := 31:31[#970]
00020ac0: when ZF goto %00020abe
00034619: goto %0002100b

00020abe:
00020ac7: R0 := R27 + 2
00020acc: goto %00020aca

0002100b:
00021010: R1 := pad:64[mem[R20 + 0x20, el]:u32]
00021014: goto %00020af3

00021016:
0002101a: R0 := R25
0002101f: R1 := 0x3A
00021024: R30 := 0x40867C
00021026: call @strchr with return %00021028

00021028:
0002102b: when R0 = 0 goto %00020b3f
0003461a: goto %0002102f

00020b3f:
00020b43: R0 := R25
00020b48: R30 := 0x4087BC
00020b4a: call @strdup with return %00020b4c

00020b4c:
00020b51: R1 := pad:64[mem[R20 + 0x20, el]:u32]
00020b57: R26 := R0
00020b5f: mem := mem with [R20 + 0x40, el]:u64 <- R0
00020b63: goto %00020af3

0002102f:
00021033: R26 := R0
00021039: R0 := R25
00021040: mem := mem with [R26] <- 0
00021044: R26 := R26 + 1
00021049: R30 := 0x408690
0002104b: call @strdup with return %0002104d

0002104d:
00021053: mem := mem with [R20 + 0x40, el]:u64 <- R0
00021059: R0 := R26
0003461b: goto %00020aca

00020aca:
00020ad0: R1 := 0
00020ad5: R2 := 0xA
00020ada: R30 := 0x4086A4
00020adc: call @strtol with return %00020ade

00020ade:
00020ae2: R1 := R0
00020ae9: R26 := mem[R20 + 0x40, el]:u64
00020af1: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0003461c: goto %00020af3

00020af3:
00020af7: when 31:0[R1] <> 0 goto %00020af5
0003461d: goto %00020c00

00020c00:
00020c05: R0 := mem[R20 + 0x30, el]:u64
00020c0a: R1 := 0x413000
00020c0f: R2 := 5
00020c15: R1 := R1 + 0x6C0
00020c1a: R30 := 0x4086C8
00020c1d: call @strncasecmp with return %00020c1f

00020c1f:
00020c22: VF := 0
00020c25: CF := 1
00020c29: ZF := 31:0[R0] = 0
00020c2d: NF := 31:31[R0]
00020c32: R1 := 0x50
00020c37: R0 := 0x1BB
00020c45: when ZF goto %00020c3d
00020c46: goto %00020c41

00020c41:
00020c42: R0 := pad:64[31:0[R1]]
00020c48: goto %00020c44

00020c3d:
00020c3e: R0 := pad:64[31:0[R0]]
00020c47: goto %00020c44

00020c44:
00020c50: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0003461e: goto %00020af5

00020af5:
00020aff: R0 := pad:64[mem[R26]]
00020b05: when 31:0[R0] <> 0 goto %00020b03
0003461f: goto %00020b65

00020b03:
00020b0c: when R22 = 0 goto %00020b0a
00034620: goto %00020b27

00020b0a:
00020b12: when R23 = 0 goto %0002092d
00034621: goto %00020b16

00020b16:
00020b1a: R0 := R23
00020b1f: R30 := 0x408810
00020b21: call @free with return %00020b23

00020b23:
00020b25: goto %0002092d

00020b27:
00020b2b: R0 := R22
00020b30: R30 := 0x4087AC
00020b32: call @free with return %00020b34

00020b34:
00020b37: when R23 <> 0 goto %0002093a
00034622: goto %00020b3b

00020b3b:
00020b3d: goto %0002092d

00020b65:
00020b69: when R22 = 0 goto %00020b67
00034623: goto %00020be3

00020b67:
00020b70: when R23 = 0 goto %00020b6e
00034624: goto %00020bbb

00020b6e:
00020b77: R0 := R25
00020b7c: R30 := 0x408868
00020b7e: call @free with return %00020b80

00020b80:
00020b85: R0 := mem[R31 + 0x80, el]:u64
00020b8a: R30 := 0x408870
00020b8c: call @free with return %00020b8e

00020b8e:
00020b91: goto %00020b8f

00020bbb:
00020bbf: R0 := R23
00020bc4: R30 := 0x408840
00020bc6: call @free with return %00020bc8

00020bc8:
00020bcc: R0 := R25
00020bd1: R30 := 0x408848
00020bd3: call @free with return %00020bd5

00020bd5:
00020bda: R0 := mem[R31 + 0x80, el]:u64
00020bdf: R30 := 0x408850
00020be1: call @free with return %00020b8f

00020b8f:
00020b96: #971 := R31 + 0x40
00020b9b: R25 := mem[#971, el]:u64
00020ba0: R26 := mem[#971 + 8, el]:u64
00020ba5: R19 := 0xFFFFFFFB
00020bab: #972 := R31 + 0x50
00020bb0: R27 := mem[#972, el]:u64
00020bb5: R28 := mem[#972 + 8, el]:u64
00020bb9: goto %000204a8

00020be3:
00020be7: R0 := R22
00020bec: R19 := 0xFFFFFFFB
00020bf1: R30 := 0x4086F4
00020bf3: call @free with return %00020bf5

00020bf5:
00020bf8: when R23 <> 0 goto %0002093a
00034625: goto %00020bfc

00020bfc:
00020bfe: goto %0002092d

00020956:
00020960: R0 := pad:64[mem[R24 + 0x374, el]:u32]
00020966: when 31:0[R0] <> 0 goto %00020964
00034626: goto %000209d3

00020964:
0002096d: R1 := R22
00020972: R0 := 0x413000
00020977: R19 := 0xFFFFFFFA
0002097d: R0 := R0 + 0x698
00020982: R30 := 0x408744
00020984: call @printf with return %00020986

00020986:
00020988: goto %00020882

000209d3:
000209d6: R19 := 0xFFFFFFFA
00034627: goto %00020882

00020882:
0002088b: when R22 = 0 goto %00020889
00034628: goto %00020947

00020947:
0002094b: R0 := R22
00020950: R30 := 0x4084A4
00020952: call @free with return %00020889

00020889:
00020892: when R23 = 0 goto %00020890
00034629: goto %0002093a

0002093a:
0002093e: R0 := R23
00020943: R30 := 0x4084B0
00020945: call @free with return %00020890

00020890:
00020899: when R25 = 0 goto %00020897
0003462a: goto %0002092d

0002092d:
00020931: R0 := R25
00020936: R30 := 0x4084BC
00020938: call @free with return %00020897

00020897:
000208a1: R0 := mem[R31 + 0x80, el]:u64
000208a6: R30 := 0x4084C4
000208a8: call @free with return %000208aa

000208aa:
000208ae: #964 := R31 + 0x40
000208b3: R25 := mem[#964, el]:u64
000208b8: R26 := mem[#964 + 8, el]:u64
000208bd: R0 := 1
000208c3: #965 := R31 + 0x50
000208c8: R27 := mem[#965, el]:u64
000208cd: R28 := mem[#965 + 8, el]:u64
000208d2: VF := 0
000208d5: CF := 1
000208d9: ZF := 31:0[R19] = 0
000208dd: NF := 31:31[R19]
000208e4: when ~(NF = VF & ~ZF) goto %000204a8
0003462b: goto %000208e8

000208e8:
000208ec: #966 := R31 + 0x10
000208f1: R19 := mem[#966, el]:u64
000208f6: R20 := mem[#966 + 8, el]:u64
000208fc: #967 := R31 + 0x20
00020901: R21 := mem[#967, el]:u64
00020906: R22 := mem[#967 + 8, el]:u64
0002090c: #968 := R31 + 0x30
00020911: R23 := mem[#968, el]:u64
00020916: R24 := mem[#968 + 8, el]:u64
0002091d: R29 := mem[R31, el]:u64
00020922: R30 := mem[R31 + 8, el]:u64
00020926: R31 := R31 + 0x90
0002092b: call R30 with noreturn

000204a8:
000204ad: R0 := pad:64[mem[R24 + 0x374, el]:u32]
000204b3: when 31:0[R0] <> 0 goto %000204b1
0003462c: goto %000204d5

000204b1:
000204ba: R2 := pad:64[31:0[R19]]
000204c0: R1 := pad:64[31:0[R21]]
000204c5: R0 := 0x413000
000204cb: R0 := R0 + 0x6C8
000204d0: R30 := 0x408500
000204d2: call @printf with return %000204d4

000204d4:
000204d7: goto %000204d5

000204d5:
000204dc: #953 := R31 + 0x10
000204e1: R19 := mem[#953, el]:u64
000204e6: R20 := mem[#953 + 8, el]:u64
000204eb: R0 := 0
000204f1: #954 := R31 + 0x20
000204f6: R21 := mem[#954, el]:u64
000204fb: R22 := mem[#954 + 8, el]:u64
00020501: #955 := R31 + 0x30
00020506: R23 := mem[#955, el]:u64
0002050b: R24 := mem[#955 + 8, el]:u64
00020512: R29 := mem[R31, el]:u64
00020517: R30 := mem[R31 + 8, el]:u64
0002051b: R31 := R31 + 0x90
00020520: call R30 with noreturn

0003462d: sub headers_send(headers_send_result)
00034bd7: headers_send_result :: out u32 = low:32[R0]

00020c54:
00020c58: #973 := R31 - 0x50
00020c5e: mem := mem with [#973, el]:u64 <- R29
00020c64: mem := mem with [#973 + 8, el]:u64 <- R30
00020c68: R31 := #973
00020c6e: R29 := R31
00020c74: #974 := R31 + 0x20
00020c7a: mem := mem with [#974, el]:u64 <- R21
00020c80: mem := mem with [#974 + 8, el]:u64 <- R22
00020c86: R22 := pad:64[31:0[R0]]
00020c8d: R0 := mem[R1 + 0x48, el]:u64
00020c93: #975 := R31 + 0x30
00020c99: mem := mem with [#975, el]:u64 <- R23
00020c9f: mem := mem with [#975 + 8, el]:u64 <- R24
00020ca5: R23 := R1
00020cab: #976 := R31 + 0x10
00020cb1: mem := mem with [#976, el]:u64 <- R19
00020cb7: mem := mem with [#976 + 8, el]:u64 <- R20
00020cbf: mem := mem with [R31 + 0x40, el]:u64 <- R25
00020cc4: R30 := 0x4088A8
00020cc6: call @strlen with return %00020cc8

00020cc8:
00020ccd: R1 := pad:64[mem[R23, el]:u32]
00020cd3: R20 := pad:64[31:0[R0] + 0x14]
00020cd9: when 31:0[R1] = 0 goto %00020cd7
0003462e: goto %00020fdb

00020cd7:
00020ce1: R0 := mem[R23 + 0x50, el]:u64
00020ce6: R30 := 0x4089B0
00020ce8: call @strlen with return %00020cea

00020cea:
00020cef: R20 := pad:64[31:0[R20] + 31:0[R0]]
00020cf4: goto %00020cf2

00020fdb:
00020fe0: R0 := mem[R23 + 0x28, el]:u64
00020fe5: R30 := 0x4088BC
00020fe7: call @strlen with return %00020fe9

00020fe9:
00020fed: R19 := R0
00020ff4: R0 := mem[R23 + 0x30, el]:u64
00020ff9: R30 := 0x4088C8
00020ffb: call @strlen with return %00020ffd

00020ffd:
00021002: R19 := pad:64[31:0[R19] + 31:0[R0]]
00021009: R20 := pad:64[31:0[R19] + 31:0[R20]]
0003462f: goto %00020cf2

00020cf2:
00020cfa: R21 := mem[R23 + 8, el]:u64
00020d00: when R21 = 0 goto %00020cfe
00034630: goto %00020f97

00020f97:
00020f9c: R0 := mem[R21, el]:u64
00020fa2: R20 := pad:64[31:0[R20] + 0x14]
00020fa7: R30 := 0x4088E4
00020fa9: call @strlen with return %00020fab

00020fab:
00020faf: R19 := R0
00020fb6: R0 := mem[R21 + 8, el]:u64
00020fbb: R30 := 0x4088F0
00020fbd: call @strlen with return %00020fbf

00020fbf:
00020fc4: R19 := pad:64[31:0[R19] + 31:0[R0]]
00020fcb: R21 := mem[R21 + 0x18, el]:u64
00020fd2: R20 := pad:64[31:0[R20] + 31:0[R19]]
00020fd7: when R21 <> 0 goto %00020f97
00034631: goto %00020cfe

00020cfe:
00020d07: R25 := extend:64[31:0[R20]]
00020d0d: R0 := R25
00020d12: R30 := 0x40890C
00020d14: call @zmalloc with return %00020d16

00020d16:
00020d1b: R21 := pad:64[mem[R23, el]:u32]
00020d21: R24 := R0
00020d27: when 31:0[R21] <> 0 goto %00020d25
00034632: goto %00020f50

00020d25:
00020d2e: #977 := R23 + 0x28
00020d33: R3 := mem[#977, el]:u64
00020d38: R4 := mem[#977 + 8, el]:u64
00020d3e: R1 := R25
00020d45: R5 := mem[R23 + 0x48, el]:u64
00020d4a: R2 := 0x413000
00020d50: R2 := R2 + 0x6E8
00020d55: R30 := 0x408A08
00020d57: call @snprintf with return %00020d59

00020d59:
00020d5d: R21 := pad:64[31:0[R0]]
00020d62: goto %00020d60

00020f50:
00020f55: R1 := pad:64[mem[R23 + 0x14, el]:u32]
00020f5b: when 31:0[R1] = 0 goto %00020f59
00034633: goto %00020d60

00020f59:
00020f62: #986 := R23 + 0x48
00020f67: R3 := mem[#986, el]:u64
00020f6c: R5 := mem[#986 + 8, el]:u64
00020f72: R1 := R25
00020f79: R4 := pad:64[mem[R23 + 0x10, el]:u32]
00020f7e: R2 := 0x413000
00020f84: R2 := R2 + 0x6F8
00020f89: R30 := 0x4089D0
00020f8b: call @snprintf with return %00020f8d

00020f8d:
00020f91: R21 := pad:64[31:0[R0]]
00020f95: goto %00020d60

00020d60:
00020d68: R19 := mem[R23 + 8, el]:u64
00020d6e: when R19 = 0 goto %00020d6c
00034634: goto %00020f03

00020f03:
00020f06: R23 := 0x413000
00020f0c: R23 := R23 + 0x708
00034635: goto %00020f0e

00020f0e:
00020f13: R3 := mem[R19, el]:u64
00020f18: R4 := mem[R19 + 8, el]:u64
00020f1f: R1 := pad:64[31:0[R20] + ~31:0[R21] + 1]
00020f26: R0 := R24 + extend:64[31:0[R21]]
00020f2c: R2 := R23
00020f32: R1 := extend:64[31:0[R1]]
00020f37: R30 := 0x408948
00020f39: call @snprintf with return %00020f3b

00020f3b:
00020f40: R21 := pad:64[31:0[R21] + 31:0[R0]]
00020f47: R19 := mem[R19 + 0x18, el]:u64
00020f4c: when R19 <> 0 goto %00020f0e
00034636: goto %00020d6c

00020d6c:
00020d75: R2 := R25
00020d7a: R1 := 0x413000
00020d80: R1 := R1 + 0x6F0
00020d86: R0 := R24
00020d8b: R30 := 0x408968
00020d8d: call @strlcat with return %00020d8f

00020d8f:
00020d93: R0 := pad:64[31:0[R22]]
00020d98: R30 := 0x408970
00020d9a: call @so_closed with return %00020d9c

00020d9c:
00020da0: when 31:0[R0] = 0 goto %00020d9e
00034637: goto %00020ef1

00020d9e:
00020da7: R21 := pad:64[31:0[R21] + 2]
00020dad: R1 := R24
00020db3: R0 := pad:64[31:0[R22]]
00020db9: R2 := extend:64[31:0[R21]]
00020dbe: R30 := 0x408A24
00020dc0: call @write_wrapper with return %00020dc2

00020dc2:
00020dc6: R19 := R0
00020dcc: R0 := R24
00020dd2: R20 := pad:64[31:0[R19]]
00020dd7: R30 := 0x408A34
00020dd9: call @free with return %00020ddb

00020ddb:
00020dde: VF := 0
00020de1: CF := 1
00020de5: ZF := 31:0[R19] = 0
00020de9: NF := 31:31[R19]
00020df1: when ~(NF = VF & ~ZF) goto %00020def
00034638: goto %00020e7a

00020e7a:
00020e7d: R0 := 1
00020e83: #981 := ~31:0[R19]
00020e88: #982 := 31:0[R21] + ~31:0[R19]
00020e8e: VF := extend:64[#982 + 1] <> extend:64[31:0[R21]] + extend:64[#981]
          + 1
00020e94: CF := pad:64[#982 + 1] <> pad:64[31:0[R21]] + pad:64[#981] + 1
00020e98: ZF := #982 + 1 = 0
00020e9c: NF := 31:31[#982 + 1]
00020ea1: when ZF <> 1 goto %00020def
00034639: goto %00020ea5

00020ea5:
00020ea9: #983 := R31 + 0x10
00020eae: R19 := mem[#983, el]:u64
00020eb3: R20 := mem[#983 + 8, el]:u64
00020eb9: #984 := R31 + 0x20
00020ebe: R21 := mem[#984, el]:u64
00020ec3: R22 := mem[#984 + 8, el]:u64
00020ec9: #985 := R31 + 0x30
00020ece: R23 := mem[#985, el]:u64
00020ed3: R24 := mem[#985 + 8, el]:u64
00020eda: R25 := mem[R31 + 0x40, el]:u64
00020ee1: R29 := mem[R31, el]:u64
00020ee6: R30 := mem[R31 + 8, el]:u64
00020eea: R31 := R31 + 0x50
00020eef: call R30 with noreturn

00020ef1:
00020ef4: R20 := 0xFFFFFC19
00020efa: R0 := R24
00020eff: R30 := 0x408980
00020f01: call @free with return %00020def

00020def:
00020df7: R0 := 0x430000
00020dfe: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00020e04: when 31:0[R0] <> 0 goto %00020e02
0003463a: goto %00020e26

00020e02:
00020e0b: R2 := pad:64[31:0[R20]]
00020e11: R1 := pad:64[31:0[R22]]
00020e16: R0 := 0x413000
00020e1c: R0 := R0 + 0x718
00020e21: R30 := 0x4089EC
00020e23: call @printf with return %00020e25

00020e25:
00020e28: goto %00020e26

00020e26:
00020e2d: #978 := R31 + 0x10
00020e32: R19 := mem[#978, el]:u64
00020e37: R20 := mem[#978 + 8, el]:u64
00020e3c: R0 := 0
00020e42: #979 := R31 + 0x20
00020e47: R21 := mem[#979, el]:u64
00020e4c: R22 := mem[#979 + 8, el]:u64
00020e52: #980 := R31 + 0x30
00020e57: R23 := mem[#980, el]:u64
00020e5c: R24 := mem[#980 + 8, el]:u64
00020e63: R25 := mem[R31 + 0x40, el]:u64
00020e6a: R29 := mem[R31, el]:u64
00020e6f: R30 := mem[R31 + 8, el]:u64
00020e73: R31 := R31 + 0x50
00020e78: call R30 with noreturn

0003463b: sub hlist_add(hlist_add_result)
00034bd8: hlist_add_result :: out u32 = low:32[R0]

00017877:
0001787e: #416 := R31 - 0x40
00017884: mem := mem with [#416, el]:u64 <- R29
0001788a: mem := mem with [#416 + 8, el]:u64 <- R30
0001788e: R31 := #416
00017893: VF := 0
00017896: CF := 1
0001789a: ZF := R1 = 0
0001789e: NF := 63:63[R1]
000178a4: #417 := ZF <> 1
000178a7: VF := 0
000178ab: CF := #417
000178b0: ZF := R2 = 0 | ~#417
000178b5: NF := #417 & 63:63[R2]
000178bb: R29 := R31
000178c1: #418 := R31 + 0x10
000178c7: mem := mem with [#418, el]:u64 <- R19
000178cd: mem := mem with [#418 + 8, el]:u64 <- R20
000178d3: #419 := R31 + 0x20
000178d9: mem := mem with [#419, el]:u64 <- R21
000178df: mem := mem with [#419 + 8, el]:u64 <- R22
000178e5: R22 := R0
000178eb: when ZF <> 1 goto %000178e9
0003463c: goto %000191f9

000178e9:
000178f2: R21 := R1
000178f8: R20 := R2
000178fd: R0 := 0x20
00017903: #420 := R31 + 0x30
00017909: mem := mem with [#420, el]:u64 <- R23
0001790f: mem := mem with [#420 + 8, el]:u64 <- R24
00017915: R24 := pad:64[31:0[R3]]
0001791b: R23 := pad:64[31:0[R4]]
00017920: R30 := 0x40E6F8
00017922: call @malloc with return %00017924

00017924:
00017928: R19 := R0
0001792e: #421 := 31:0[R24] - 1
00017933: VF := extend:64[#421] <> extend:64[31:0[R24]] - 1
00017938: CF := pad:64[#421] <> pad:64[31:0[R24]] + 0xFFFFFFFF
0001793c: ZF := #421 = 0
00017940: NF := 31:31[#421]
00017946: when ZF goto %00017944
0003463d: goto %0001795e

00017944:
0001794d: R0 := R21
00017952: R30 := 0x40E748
00017955: call @strdup with return %00017957

00017957:
0001795b: R21 := R0
00017960: goto %0001795e

0001795e:
00017967: mem := mem with [R19, el]:u64 <- R21
0001796d: #422 := 31:0[R23] - 1
00017972: VF := extend:64[#422] <> extend:64[31:0[R23]] - 1
00017977: CF := pad:64[#422] <> pad:64[31:0[R23]] + 0xFFFFFFFF
0001797b: ZF := #422 = 0
0001797f: NF := 31:31[#422]
00017985: when ZF goto %00017983
0003463e: goto %0001799c

00017983:
0001798c: R0 := R20
00017991: R30 := 0x40E758
00017993: call @strdup with return %00017995

00017995:
00017999: R20 := R0
0001799e: goto %0001799c

0001799c:
000179a5: mem := mem with [R19 + 8, el]:u64 <- R20
000179ac: mem := mem with [R19 + 0x10, el]:u32 <- 0
000179b3: mem := mem with [R19 + 0x18, el]:u64 <- 0
000179b9: when R22 = 0 goto %000179b7
0003463f: goto %000191c4

000179b7:
000179c0: #423 := R31 + 0x30
000179c5: R23 := mem[#423, el]:u64
000179ca: R24 := mem[#423 + 8, el]:u64
000179cf: goto %000179cd

000191c4:
000191c8: R1 := R22
00034640: goto %000191cc

000191cc:
000191d0: R0 := R1
000191d7: R1 := mem[R1 + 0x18, el]:u64
000191dc: when R1 <> 0 goto %000191cc
00034641: goto %000191e0

000191e0:
000191e4: #516 := R31 + 0x30
000191e9: R23 := mem[#516, el]:u64
000191ee: R24 := mem[#516 + 8, el]:u64
000191f6: mem := mem with [R0 + 0x18, el]:u64 <- R19
000191fb: goto %000191f9

000191f9:
00019200: R19 := R22
00034642: goto %000179cd

000179cd:
000179d4: #424 := R31 + 0x20
000179d9: R21 := mem[#424, el]:u64
000179de: R22 := mem[#424 + 8, el]:u64
000179e4: R0 := R19
000179ea: #425 := R31 + 0x10
000179ef: R19 := mem[#425, el]:u64
000179f4: R20 := mem[#425 + 8, el]:u64
000179fb: R29 := mem[R31, el]:u64
00017a00: R30 := mem[R31 + 8, el]:u64
00017a04: R31 := R31 + 0x40
00017a09: call R30 with noreturn

00034643: sub hlist_count(hlist_count_result)
00034bd9: hlist_count_result :: out u32 = low:32[R0]

00017c57:
00017c5b: R1 := R0
00017c60: R0 := 0
00017c66: when R1 = 0 goto %00017c64
00034644: goto %00018e96

00018e96:
00034645: goto %00018e98

00018e98:
00018e9d: R1 := mem[R1 + 0x18, el]:u64
00018ea3: R0 := pad:64[31:0[R0] + 1]
00018ea8: when R1 <> 0 goto %00018e98
00034646: goto %00017c64

00017c64:
00017c6c: call R30 with noreturn

00034647: sub hlist_del(hlist_del_result)
00034bda: hlist_del_result :: out u32 = low:32[R0]

00017a61:
00017a65: #427 := R31 - 0x40
00017a6b: mem := mem with [#427, el]:u64 <- R29
00017a71: mem := mem with [#427 + 8, el]:u64 <- R30
00017a75: R31 := #427
00017a7b: R29 := R31
00017a81: #428 := R31 + 0x20
00017a87: mem := mem with [#428, el]:u64 <- R21
00017a8d: mem := mem with [#428 + 8, el]:u64 <- R22
00017a93: when R0 = 0 goto %00017a91
00034648: goto %00018fbd

00017a91:
00017a99: R21 := 0
00017a9e: goto %00017a9c

00018fbd:
00018fc1: R21 := R1
00018fc6: R22 := 0
00018fcc: #509 := R31 + 0x10
00018fd2: mem := mem with [#509, el]:u64 <- R19
00018fd8: mem := mem with [#509 + 8, el]:u64 <- R20
00018fde: R19 := R0
00018fe6: mem := mem with [R31 + 0x30, el]:u64 <- R23
00018fec: R23 := R0
00018ff1: goto %00018fef

00018fef:
00018ff7: R20 := mem[R19, el]:u64
00018ffd: R1 := R21
00019003: R0 := R20
00019008: R30 := 0x40E870
0001900a: call @strcasecmp with return %0001900c

0001900c:
00019010: when 31:0[R0] <> 0 goto %0001900e
00034649: goto %0001904a

0001904a:
0001904f: R21 := mem[R19 + 0x18, el]:u64
00019055: R0 := R20
0001905a: R30 := 0x40E880
0001905c: call @free with return %0001905e

0001905e:
00019063: R0 := mem[R19 + 8, el]:u64
00019068: R30 := 0x40E888
0001906a: call @free with return %0001906c

0001906c:
00019070: R0 := R19
00019075: R30 := 0x40E890
00019077: call @free with return %00019079

00019079:
0001907c: when R22 = 0 goto %00017aca
0003464a: goto %00019080

00017aca:
00017ace: #430 := R31 + 0x10
00017ad3: R19 := mem[#430, el]:u64
00017ad8: R20 := mem[#430 + 8, el]:u64
00017adf: R23 := mem[R31 + 0x30, el]:u64
00017ae3: goto %00017a9c

00019080:
00019086: mem := mem with [R22 + 0x18, el]:u64 <- R21
0003464b: goto %00019028

0001900e:
00019018: R2 := mem[R19 + 0x18, el]:u64
0001901e: R22 := R19
00019024: R19 := R2
0001902a: when R2 = 0 goto %00019028
0003464c: goto %00018fef

00019028:
00019031: #510 := R31 + 0x10
00019036: R19 := mem[#510, el]:u64
0001903b: R20 := mem[#510 + 8, el]:u64
00019041: R21 := R23
00019048: R23 := mem[R31 + 0x30, el]:u64
0003464d: goto %00017a9c

00017a9c:
00017aa3: R0 := R21
00017aa9: #429 := R31 + 0x20
00017aae: R21 := mem[#429, el]:u64
00017ab3: R22 := mem[#429 + 8, el]:u64
00017aba: R29 := mem[R31, el]:u64
00017abf: R30 := mem[R31 + 8, el]:u64
00017ac3: R31 := R31 + 0x40
00017ac8: call R30 with noreturn

0003464e: sub hlist_dump(hlist_dump_result)
00034bdb: hlist_dump_result :: out u32 = low:32[R0]

00017f1e:
00017f22: when R0 = 0 goto %00017f20
0003464f: goto %00018a37

00017f20:
00017f28: call R30 with noreturn

00018a37:
00018a3b: #486 := R31 - 0x20
00018a41: mem := mem with [#486, el]:u64 <- R29
00018a47: mem := mem with [#486 + 8, el]:u64 <- R30
00018a4b: R31 := #486
00018a51: R29 := R31
00018a57: #487 := R31 + 0x10
00018a5d: mem := mem with [#487, el]:u64 <- R19
00018a63: mem := mem with [#487 + 8, el]:u64 <- R20
00018a68: R20 := 0x416000
00018a6e: R19 := R0
00018a74: R20 := R20 + 0x50
00034650: goto %00018a76

00018a76:
00018a7b: R1 := mem[R19, el]:u64
00018a80: R2 := mem[R19 + 8, el]:u64
00018a86: R0 := R20
00018a8b: R30 := 0x40ED3C
00018a8d: call @printf with return %00018a8f

00018a8f:
00018a94: R19 := mem[R19 + 0x18, el]:u64
00018a99: when R19 <> 0 goto %00018a76
00034651: goto %00018a9d

00018a9d:
00018aa1: #488 := R31 + 0x10
00018aa6: R19 := mem[#488, el]:u64
00018aab: R20 := mem[#488 + 8, el]:u64
00018ab2: R29 := mem[R31, el]:u64
00018ab7: R30 := mem[R31 + 8, el]:u64
00018abb: R31 := R31 + 0x20
00018ac0: call R30 with noreturn

00034652: sub hlist_dup(hlist_dup_result)
00034bdc: hlist_dup_result :: out u32 = low:32[R0]

00017a0f:
00017a13: #426 := R31 - 0x40
00017a19: mem := mem with [#426, el]:u64 <- R29
00017a1f: mem := mem with [#426 + 8, el]:u64 <- R30
00017a23: R31 := #426
00017a29: R29 := R31
00017a31: mem := mem with [R31 + 0x30, el]:u64 <- R23
00017a37: when R0 = 0 goto %00017a35
00034653: goto %00019088

00017a35:
00017a3d: R23 := 0
00017a43: R0 := R23
00017a4a: R23 := mem[R31 + 0x30, el]:u64
00017a51: R29 := mem[R31, el]:u64
00017a56: R30 := mem[R31 + 8, el]:u64
00017a5a: R31 := R31 + 0x40
00017a5f: call R30 with noreturn

00019088:
0001908c: #511 := R31 + 0x10
00019092: mem := mem with [#511, el]:u64 <- R19
00019098: mem := mem with [#511 + 8, el]:u64 <- R20
0001909e: R19 := R0
000190a3: R23 := 0
000190a9: #512 := R31 + 0x20
000190af: mem := mem with [#512, el]:u64 <- R21
000190b5: mem := mem with [#512 + 8, el]:u64 <- R22
00034654: goto %000190b7

000190b7:
000190bc: R22 := mem[R19, el]:u64
000190c1: R21 := mem[R19 + 8, el]:u64
000190c6: VF := 0
000190c9: CF := 1
000190cd: ZF := R22 = 0
000190d1: NF := 63:63[R22]
000190d7: #513 := ZF <> 1
000190da: VF := 0
000190de: CF := #513
000190e3: ZF := R21 = 0 | ~#513
000190e8: NF := #513 & 63:63[R21]
000190ee: when ZF goto %000190ec
00034655: goto %0001914b

0001914b:
0001914e: R0 := 0x20
00019153: R30 := 0x40E7A8
00019155: call @malloc with return %00019157

00019157:
0001915b: R20 := R0
00019161: R0 := R22
00019166: R30 := 0x40E7B4
00019168: call @strdup with return %0001916a

0001916a:
0001916e: R1 := R0
00019174: R0 := R21
0001917c: mem := mem with [R20, el]:u64 <- R1
00019181: R30 := 0x40E7C4
00019183: call @strdup with return %00019185

00019185:
0001918b: mem := mem with [R20 + 8, el]:u64 <- R0
00019192: mem := mem with [R20 + 0x10, el]:u32 <- 0
00019199: mem := mem with [R20 + 0x18, el]:u64 <- 0
0001919e: when R23 = 0 goto %00019141
00034656: goto %000191a2

00019141:
00019145: R23 := R20
00019149: goto %000190ec

000191a2:
000191a6: R1 := R23
00034657: goto %000191a8

000191a8:
000191ac: R2 := R1
000191b3: R1 := mem[R1 + 0x18, el]:u64
000191b8: when R1 <> 0 goto %000191a8
00034658: goto %000191bc

000191bc:
000191c2: mem := mem with [R2 + 0x18, el]:u64 <- R20
00034659: goto %000190ec

000190ec:
000190f6: R19 := mem[R19 + 0x18, el]:u64
000190fb: when R19 <> 0 goto %000190b7
0003465a: goto %000190ff

000190ff:
00019103: #514 := R31 + 0x10
00019108: R19 := mem[#514, el]:u64
0001910d: R20 := mem[#514 + 8, el]:u64
00019113: R0 := R23
00019119: #515 := R31 + 0x20
0001911e: R21 := mem[#515, el]:u64
00019123: R22 := mem[#515 + 8, el]:u64
0001912a: R23 := mem[R31 + 0x30, el]:u64
00019131: R29 := mem[R31, el]:u64
00019136: R30 := mem[R31 + 8, el]:u64
0001913a: R31 := R31 + 0x40
0001913f: call R30 with noreturn

0003465b: sub hlist_free(hlist_free_result)
00034bdd: hlist_free_result :: out u32 = low:32[R0]

00017f0d:
00017f11: when R0 = 0 goto %00017f0f
0003465c: goto %00018ac2

00017f0f:
00017f17: R0 := 0
00017f1c: call R30 with noreturn

00018ac2:
00018ac6: #489 := R31 - 0x20
00018acc: mem := mem with [#489, el]:u64 <- R29
00018ad2: mem := mem with [#489 + 8, el]:u64 <- R30
00018ad6: R31 := #489
00018adc: R29 := R31
00018ae2: #490 := R31 + 0x10
00018ae8: mem := mem with [#490, el]:u64 <- R19
00018aee: mem := mem with [#490 + 8, el]:u64 <- R20
00018af4: R19 := R0
0003465d: goto %00018af8

00018af8:
00018afc: R20 := R19
00018b03: R19 := mem[R19 + 0x18, el]:u64
00018b0a: R0 := mem[R20, el]:u64
00018b0f: R30 := 0x40ECE8
00018b11: call @free with return %00018b13

00018b13:
00018b18: R0 := mem[R20 + 8, el]:u64
00018b1d: R30 := 0x40ECF0
00018b1f: call @free with return %00018b21

00018b21:
00018b25: R0 := R20
00018b2a: R30 := 0x40ECF8
00018b2c: call @free with return %00018b2e

00018b2e:
00018b31: when R19 <> 0 goto %00018af8
0003465e: goto %00018b35

00018b35:
00018b39: #491 := R31 + 0x10
00018b3e: R19 := mem[#491, el]:u64
00018b43: R20 := mem[#491 + 8, el]:u64
00018b48: R0 := 0
00018b4f: R29 := mem[R31, el]:u64
00018b54: R30 := mem[R31 + 8, el]:u64
00018b58: R31 := R31 + 0x20
00018b5d: call R30 with noreturn

0003465f: sub hlist_get(hlist_get_result)
00034bde: hlist_get_result :: out u32 = low:32[R0]

00017c6e:
00017c72: when R0 = 0 goto %00017c70
00034660: goto %00018dd9

00017c70:
00017c78: R0 := 0
00017c7d: call R30 with noreturn

00018dd9:
00018ddd: #501 := R31 - 0x20
00018de3: mem := mem with [#501, el]:u64 <- R29
00018de9: mem := mem with [#501 + 8, el]:u64 <- R30
00018ded: R31 := #501
00018df3: R29 := R31
00018df9: #502 := R31 + 0x10
00018dff: mem := mem with [#502, el]:u64 <- R19
00018e05: mem := mem with [#502 + 8, el]:u64 <- R20
00018e0b: R19 := R0
00018e11: R20 := R1
00018e16: goto %00018e14

00018e14:
00018e1c: R0 := mem[R19, el]:u64
00018e22: R1 := R20
00018e27: R30 := 0x40EA50
00018e29: call @strcasecmp with return %00018e2b

00018e2b:
00018e2f: when 31:0[R0] <> 0 goto %00018e2d
00034661: goto %00018e6a

00018e6a:
00018e6f: R0 := mem[R19 + 8, el]:u64
00018e75: #504 := R31 + 0x10
00018e7a: R19 := mem[#504, el]:u64
00018e7f: R20 := mem[#504 + 8, el]:u64
00018e86: R29 := mem[R31, el]:u64
00018e8b: R30 := mem[R31 + 8, el]:u64
00018e8f: R31 := R31 + 0x20
00018e94: call R30 with noreturn

00018e2d:
00018e37: R19 := mem[R19 + 0x18, el]:u64
00018e3d: when R19 = 0 goto %00018e3b
00034662: goto %00018e14

00018e3b:
00018e44: #503 := R31 + 0x10
00018e49: R19 := mem[#503, el]:u64
00018e4e: R20 := mem[#503 + 8, el]:u64
00018e53: R0 := 0
00018e5a: R29 := mem[R31, el]:u64
00018e5f: R30 := mem[R31 + 8, el]:u64
00018e63: R31 := R31 + 0x20
00018e68: call R30 with noreturn

00034663: sub hlist_in(hlist_in_result)
00034bdf: hlist_in_result :: out u32 = low:32[R0]

00017c46:
00017c4a: when R0 = 0 goto %00017c48
00034664: goto %00018eac

00017c48:
00017c50: R0 := 0
00017c55: call R30 with noreturn

00018eac:
00018eb0: #505 := R31 - 0x20
00018eb6: mem := mem with [#505, el]:u64 <- R29
00018ebc: mem := mem with [#505 + 8, el]:u64 <- R30
00018ec0: R31 := #505
00018ec6: R29 := R31
00018ecc: #506 := R31 + 0x10
00018ed2: mem := mem with [#506, el]:u64 <- R19
00018ed8: mem := mem with [#506 + 8, el]:u64 <- R20
00018ede: R19 := R0
00018ee4: R20 := R1
00018ee9: goto %00018ee7

00018ee7:
00018eef: R0 := mem[R19, el]:u64
00018ef5: R1 := R20
00018efa: R30 := 0x40E9D4
00018efc: call @strcasecmp with return %00018efe

00018efe:
00018f02: when 31:0[R0] <> 0 goto %00018f00
00034665: goto %00018f3d

00018f3d:
00018f41: #508 := R31 + 0x10
00018f46: R19 := mem[#508, el]:u64
00018f4b: R20 := mem[#508 + 8, el]:u64
00018f50: R0 := 1
00018f57: R29 := mem[R31, el]:u64
00018f5c: R30 := mem[R31 + 8, el]:u64
00018f60: R31 := R31 + 0x20
00018f65: call R30 with noreturn

00018f00:
00018f0a: R19 := mem[R19 + 0x18, el]:u64
00018f10: when R19 = 0 goto %00018f0e
00034666: goto %00018ee7

00018f0e:
00018f17: #507 := R31 + 0x10
00018f1c: R19 := mem[#507, el]:u64
00018f21: R20 := mem[#507 + 8, el]:u64
00018f26: R0 := 0
00018f2d: R29 := mem[R31, el]:u64
00018f32: R30 := mem[R31 + 8, el]:u64
00018f36: R31 := R31 + 0x20
00018f3b: call R30 with noreturn

00034667: sub hlist_mod(hlist_mod_result)
00034be0: hlist_mod_result :: out u32 = low:32[R0]

00017ae9:
00017aed: #431 := R31 - 0x40
00017af3: mem := mem with [#431, el]:u64 <- R29
00017af9: mem := mem with [#431 + 8, el]:u64 <- R30
00017afd: R31 := #431
00017b03: R29 := R31
00017b09: #432 := R31 + 0x10
00017b0f: mem := mem with [#432, el]:u64 <- R19
00017b15: mem := mem with [#432 + 8, el]:u64 <- R20
00017b1b: R20 := R1
00017b21: #433 := R31 + 0x20
00017b27: mem := mem with [#433, el]:u64 <- R21
00017b2d: mem := mem with [#433 + 8, el]:u64 <- R22
00017b33: R21 := R0
00017b39: R22 := R2
00017b41: mem := mem with [R31 + 0x30, el]:u64 <- R23
00017b47: R23 := pad:64[31:0[R3]]
00017b4d: when R0 = 0 goto %00017b4b
00034668: goto %00018f67

00018f67:
00018f6b: R19 := R0
00018f70: goto %00018f6e

00018f6e:
00018f76: R0 := mem[R19, el]:u64
00018f7c: R1 := R20
00018f81: R30 := 0x40E914
00018f83: call @strcasecmp with return %00018f85

00018f85:
00018f89: when 31:0[R0] <> 0 goto %00018f87
00034669: goto %00018f9a

00018f9a:
00018f9f: R0 := mem[R19 + 8, el]:u64
00018fa4: R30 := 0x40E920
00018fa6: call @free with return %00018fa8

00018fa8:
00018fac: R0 := R22
00018fb1: R30 := 0x40E928
00018fb3: call @strdup with return %00018fb5

00018fb5:
00018fbb: mem := mem with [R19 + 8, el]:u64 <- R0
0003466a: goto %00017b52

00018f87:
00018f91: R19 := mem[R19 + 0x18, el]:u64
00018f96: when R19 = 0 goto %00017b4b
0003466b: goto %00018f6e

00017b4b:
00017b54: when 31:0[R23] = 0 goto %00017b52
0003466c: goto %00017b9f

00017b9f:
00017ba2: VF := 0
00017ba5: CF := 1
00017ba9: ZF := R20 = 0
00017bad: NF := 63:63[R20]
00017bb3: #436 := ZF <> 1
00017bb6: VF := 0
00017bba: CF := #436
00017bbf: ZF := R22 = 0 | ~#436
00017bc4: NF := #436 & 63:63[R22]
00017bc9: when ZF goto %00017b52
0003466d: goto %00017bcd

00017bcd:
00017bd0: R0 := 0x20
00017bd5: R30 := 0x40E960
00017bd7: call @malloc with return %00017bd9

00017bd9:
00017bdd: R19 := R0
00017be3: R0 := R20
00017be8: R30 := 0x40E96C
00017bea: call @strdup with return %00017bec

00017bec:
00017bf2: mem := mem with [R19, el]:u64 <- R0
00017bf8: R0 := R22
00017bfd: R30 := 0x40E978
00017bff: call @strdup with return %00017c01

00017c01:
00017c07: mem := mem with [R19 + 8, el]:u64 <- R0
00017c0e: mem := mem with [R19 + 0x10, el]:u32 <- 0
00017c15: mem := mem with [R19 + 0x18, el]:u64 <- 0
00017c1a: when R21 = 0 goto %00017b5d
0003466e: goto %00017c1e

00017c1e:
00017c22: R1 := R21
0003466f: goto %00017c26

00017c26:
00017c2a: R0 := R1
00017c31: R1 := mem[R1 + 0x18, el]:u64
00017c36: when R1 <> 0 goto %00017c26
00034670: goto %00017c3a

00017c3a:
00017c40: mem := mem with [R0 + 0x18, el]:u64 <- R19
00017c44: goto %00017b52

00017b52:
00017b5b: R19 := R21
00034671: goto %00017b5d

00017b5d:
00017b61: #434 := R31 + 0x20
00017b66: R21 := mem[#434, el]:u64
00017b6b: R22 := mem[#434 + 8, el]:u64
00017b71: R0 := R19
00017b77: #435 := R31 + 0x10
00017b7c: R19 := mem[#435, el]:u64
00017b81: R20 := mem[#435 + 8, el]:u64
00017b88: R23 := mem[R31 + 0x30, el]:u64
00017b8f: R29 := mem[R31, el]:u64
00017b94: R30 := mem[R31 + 8, el]:u64
00017b98: R31 := R31 + 0x40
00017b9d: call R30 with noreturn

00034672: sub hlist_subcmp(hlist_subcmp_result)
00034be1: hlist_subcmp_result :: out u32 = low:32[R0]

00017c81:
00017c85: #437 := R31 - 0x30
00017c8b: mem := mem with [#437, el]:u64 <- R29
00017c91: mem := mem with [#437 + 8, el]:u64 <- R30
00017c95: R31 := #437
00017c9b: R29 := R31
00017ca1: #438 := R31 + 0x10
00017ca7: mem := mem with [#438, el]:u64 <- R19
00017cad: mem := mem with [#438 + 8, el]:u64 <- R20
00017cb3: R20 := R0
00017cb8: R19 := 0
00017cbe: R0 := R2
00017cc4: #439 := R31 + 0x20
00017cca: mem := mem with [#439, el]:u64 <- R21
00017cd0: mem := mem with [#439 + 8, el]:u64 <- R22
00017cd6: R22 := R1
00017cdb: R30 := 0x40EAA4
00017cdd: call @strdup with return %00017cdf

00017cdf:
00017ce3: R21 := R0
00017ce8: goto %00017ce6

00017ce6:
00017ced: R0 := R21
00017cf2: R30 := 0x40EACC
00017cf4: call @strlen with return %00017cf6

00017cf6:
00017cfa: #440 := ~R0
00017cff: #441 := R19 + ~R0
00017d05: VF := extend:128[#441 + 1] <> extend:128[R19] + extend:128[#440] +
          1
00017d0b: CF := pad:128[#441 + 1] <> pad:128[R19] + pad:128[#440] + 1
00017d0f: ZF := #441 + 1 = 0
00017d13: NF := 63:63[#441 + 1]
00017d19: when CF <> 1 goto %00017d17
00034673: goto %00017d49

00017d49:
00017d4d: when R20 <> 0 goto %00017d4b
00034674: goto %00018dd5

00017d4b:
00017d55: R0 := mem[R20, el]:u64
00017d5b: R1 := R22
00017d60: R30 := 0x40EAF0
00017d63: call @strcasecmp with return %00017d65

00017d65:
00017d69: R19 := pad:64[31:0[R0]]
00017d6f: when 31:0[R0] <> 0 goto %00017d6d
00034675: goto %00018cca

00018cca:
00018ccf: R0 := mem[R20 + 8, el]:u64
00018cd5: when R0 = 0 goto %00018cd3
00034676: goto %00018d20

00018d20:
00018d23: R30 := 0x40EB04
00018d25: call @strdup with return %00018d27

00018d27:
00018d2a: R19 := 0
00018d30: R20 := R0
00018d35: goto %00018d33

00018d33:
00018d3a: R0 := R20
00018d3f: R30 := 0x40EB30
00018d41: call @strlen with return %00018d43

00018d43:
00018d47: #499 := ~R0
00018d4c: #500 := R19 + ~R0
00018d52: VF := extend:128[#500 + 1] <> extend:128[R19] + extend:128[#499] +
          1
00018d58: CF := pad:128[#500 + 1] <> pad:128[R19] + pad:128[#499] + 1
00018d5c: ZF := #500 + 1 = 0
00018d60: NF := 63:63[#500 + 1]
00018d66: when CF <> 1 goto %00018d64
00034677: goto %00018d96

00018d96:
00018d9a: R1 := R21
00018da0: R0 := R20
00018da5: R30 := 0x40EB44
00018da7: call @strstr with return %00018da9

00018da9:
00018dac: VF := 0
00018daf: CF := 1
00018db3: ZF := R0 = 0
00018db7: NF := 63:63[R0]
00018dc3: when ZF goto %00018dbc
00018dc4: goto %00018dbf

00018dbf:
00018dc0: R19 := 1
00018dc6: goto %00018dc2

00018dbc:
00018dbd: R19 := 0
00018dc5: goto %00018dc2

00018dc2:
00018dcc: R0 := R20
00018dd1: R30 := 0x40EB54
00018dd3: call @free with return %00018cd3

00018cd3:
00018cdc: R0 := R21
00018ce1: R30 := 0x40EB5C
00018ce3: call @free with return %00018ce5

00018ce5:
00018ce9: #497 := R31 + 0x20
00018cee: R21 := mem[#497, el]:u64
00018cf3: R22 := mem[#497 + 8, el]:u64
00018cf9: R0 := pad:64[31:0[R19]]
00018cff: #498 := R31 + 0x10
00018d04: R19 := mem[#498, el]:u64
00018d09: R20 := mem[#498 + 8, el]:u64
00018d10: R29 := mem[R31, el]:u64
00018d15: R30 := mem[R31 + 8, el]:u64
00018d19: R31 := R31 + 0x30
00018d1e: call R30 with noreturn

00018d64:
00018d6c: R30 := 0x40EB14
00018d6e: call @__ctype_tolower_loc with return %00018d70

00018d70:
00018d75: R0 := mem[R0, el]:u64
00018d7d: R1 := pad:64[mem[R20 + R19]]
00018d85: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018d8e: mem := mem with [R20 + R19] <- 7:0[R0]
00018d94: R19 := R19 + 1
00034678: goto %00018d33

00017d6d:
00017d77: R20 := mem[R20 + 0x18, el]:u64
00017d7d: when R20 = 0 goto %00017d7b
00034679: goto %00017d4b

00018dd5:
00018dd7: goto %00017d7b

00017d7b:
00017d84: R0 := R21
00017d89: R19 := 0
00017d8e: R30 := 0x40EB7C
00017d90: call @free with return %00017d92

00017d92:
00017d96: #442 := R31 + 0x20
00017d9b: R21 := mem[#442, el]:u64
00017da0: R22 := mem[#442 + 8, el]:u64
00017da6: R0 := pad:64[31:0[R19]]
00017dac: #443 := R31 + 0x10
00017db1: R19 := mem[#443, el]:u64
00017db6: R20 := mem[#443 + 8, el]:u64
00017dbd: R29 := mem[R31, el]:u64
00017dc2: R30 := mem[R31 + 8, el]:u64
00017dc6: R31 := R31 + 0x30
00017dcb: call R30 with noreturn

00017d17:
00017d1f: R30 := 0x40EAB0
00017d21: call @__ctype_tolower_loc with return %00017d23

00017d23:
00017d28: R0 := mem[R0, el]:u64
00017d30: R2 := pad:64[mem[R21 + R19]]
00017d38: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017d41: mem := mem with [R21 + R19] <- 7:0[R0]
00017d47: R19 := R19 + 1
0003467a: goto %00017ce6

0003467b: sub hlist_subcmp_all(hlist_subcmp_all_result)
00034be2: hlist_subcmp_all_result :: out u32 = low:32[R0]

00017dcd:
00017dd1: #444 := R31 - 0x50
00017dd7: mem := mem with [#444, el]:u64 <- R29
00017ddd: mem := mem with [#444 + 8, el]:u64 <- R30
00017de1: R31 := #444
00017de7: R29 := R31
00017ded: #445 := R31 + 0x10
00017df3: mem := mem with [#445, el]:u64 <- R19
00017df9: mem := mem with [#445 + 8, el]:u64 <- R20
00017dfe: R19 := 0
00017e04: #446 := R31 + 0x20
00017e0a: mem := mem with [#446, el]:u64 <- R21
00017e10: mem := mem with [#446 + 8, el]:u64 <- R22
00017e16: R21 := R0
00017e1c: R0 := R2
00017e22: #447 := R31 + 0x30
00017e28: mem := mem with [#447, el]:u64 <- R23
00017e2e: mem := mem with [#447 + 8, el]:u64 <- R24
00017e34: R23 := R1
00017e39: R30 := 0x40EBB8
00017e3b: call @strdup with return %00017e3d

00017e3d:
00017e41: R22 := R0
00017e46: goto %00017e44

00017e44:
00017e4b: R0 := R22
00017e50: R30 := 0x40EBE0
00017e52: call @strlen with return %00017e54

00017e54:
00017e58: #448 := ~R0
00017e5d: #449 := R19 + ~R0
00017e63: VF := extend:128[#449 + 1] <> extend:128[R19] + extend:128[#448] +
          1
00017e69: CF := pad:128[#449 + 1] <> pad:128[R19] + pad:128[#448] + 1
00017e6d: ZF := #449 + 1 = 0
00017e71: NF := 63:63[#449 + 1]
00017e77: when CF <> 1 goto %00017e75
0003467c: goto %00017ea7

00017ea7:
00017eab: when R21 = 0 goto %00017ea9
0003467d: goto %00018b5f

00017ea9:
00017eb2: R0 := R22
00017eb7: R24 := 0
00017ebc: R30 := 0x40ECA4
00017ebe: call @free with return %00017ec0

00017ec0:
00017ec4: #450 := R31 + 0x10
00017ec9: R19 := mem[#450, el]:u64
00017ece: R20 := mem[#450 + 8, el]:u64
00017ed4: R0 := pad:64[31:0[R24]]
00017eda: #451 := R31 + 0x20
00017edf: R21 := mem[#451, el]:u64
00017ee4: R22 := mem[#451 + 8, el]:u64
00017eea: #452 := R31 + 0x30
00017eef: R23 := mem[#452, el]:u64
00017ef4: R24 := mem[#452 + 8, el]:u64
00017efb: R29 := mem[R31, el]:u64
00017f00: R30 := mem[R31 + 8, el]:u64
00017f04: R31 := R31 + 0x50
00017f09: call R30 with noreturn

00018b5f:
00018b62: R24 := 0
00018b6a: mem := mem with [R31 + 0x40, el]:u64 <- R25
00018b6f: R25 := 1
00018b74: goto %00018b72

00018b72:
00018b7a: R0 := mem[R21, el]:u64
00018b80: R1 := R23
00018b85: R30 := 0x40EC10
00018b87: call @strcasecmp with return %00018b89

00018b89:
00018b8d: when 31:0[R0] <> 0 goto %00018b8b
0003467e: goto %00018bfd

00018bfd:
00018c02: R0 := mem[R21 + 8, el]:u64
00018c07: R19 := 0
00018c0c: R30 := 0x40EC20
00018c0e: call @strdup with return %00018c10

00018c10:
00018c14: R20 := R0
00018c19: goto %00018c17

00018c17:
00018c1e: R0 := R20
00018c23: R30 := 0x40EC48
00018c25: call @strlen with return %00018c27

00018c27:
00018c2b: #495 := ~R0
00018c30: #496 := R19 + ~R0
00018c36: VF := extend:128[#496 + 1] <> extend:128[R19] + extend:128[#495] +
          1
00018c3c: CF := pad:128[#496 + 1] <> pad:128[R19] + pad:128[#495] + 1
00018c40: ZF := #496 + 1 = 0
00018c44: NF := 63:63[#496 + 1]
00018c4a: when CF <> 1 goto %00018c48
0003467f: goto %00018c7a

00018c7a:
00018c7e: R1 := R22
00018c84: R0 := R20
00018c89: R30 := 0x40EC5C
00018c8c: call @strstr with return %00018c8e

00018c8e:
00018c91: VF := 0
00018c94: CF := 1
00018c98: ZF := R0 = 0
00018c9c: NF := 63:63[R0]
00018caa: when ZF goto %00018ca2
00018cab: goto %00018ca6

00018ca6:
00018ca7: R24 := pad:64[31:0[R25]]
00018cad: goto %00018ca9

00018ca2:
00018ca3: R24 := pad:64[31:0[R24]]
00018cac: goto %00018ca9

00018ca9:
00018cb3: R0 := R20
00018cb8: R30 := 0x40EC6C
00018cba: call @free with return %00018cbc

00018cbc:
00018cc1: R21 := mem[R21 + 0x18, el]:u64
00018cc6: when R21 <> 0 goto %00018b72
00034680: goto %00018b99

00018c48:
00018c50: R30 := 0x40EC2C
00018c52: call @__ctype_tolower_loc with return %00018c54

00018c54:
00018c59: R2 := mem[R0, el]:u64
00018c61: R1 := pad:64[mem[R20 + R19]]
00018c69: R2 := pad:64[mem[R2 + (61:0[R1].0), el]:u32]
00018c72: mem := mem with [R20 + R19] <- 7:0[R2]
00018c78: R19 := R19 + 1
00034681: goto %00018c17

00018b8b:
00018b95: R21 := mem[R21 + 0x18, el]:u64
00018b9b: when R21 = 0 goto %00018b99
00034682: goto %00018b72

00018b99:
00018ba3: R25 := mem[R31 + 0x40, el]:u64
00018ba9: R0 := R22
00018bae: R30 := 0x40EC80
00018bb0: call @free with return %00018bb2

00018bb2:
00018bb6: #492 := R31 + 0x10
00018bbb: R19 := mem[#492, el]:u64
00018bc0: R20 := mem[#492 + 8, el]:u64
00018bc6: R0 := pad:64[31:0[R24]]
00018bcc: #493 := R31 + 0x20
00018bd1: R21 := mem[#493, el]:u64
00018bd6: R22 := mem[#493 + 8, el]:u64
00018bdc: #494 := R31 + 0x30
00018be1: R23 := mem[#494, el]:u64
00018be6: R24 := mem[#494 + 8, el]:u64
00018bed: R29 := mem[R31, el]:u64
00018bf2: R30 := mem[R31 + 8, el]:u64
00018bf6: R31 := R31 + 0x50
00018bfb: call R30 with noreturn

00017e75:
00017e7d: R30 := 0x40EBC4
00017e7f: call @__ctype_tolower_loc with return %00017e81

00017e81:
00017e86: R0 := mem[R0, el]:u64
00017e8e: R1 := pad:64[mem[R22 + R19]]
00017e96: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00017e9f: mem := mem with [R22 + R19] <- 7:0[R0]
00017ea5: R19 := R19 + 1
00034683: goto %00017e44

00034684: sub hmac_md5(hmac_md5_result)
00034be3: hmac_md5_result :: out u32 = low:32[R0]

000137c8:
000137cc: R31 := R31 - 0x200
000137d4: mem := mem with [R31, el]:u64 <- R29
000137da: mem := mem with [R31 + 8, el]:u64 <- R30
000137e0: R29 := R31
000137e6: #215 := R31 + 0x10
000137ec: mem := mem with [#215, el]:u64 <- R19
000137f2: mem := mem with [#215 + 8, el]:u64 <- R20
000137f8: #216 := R31 + 0x20
000137fe: mem := mem with [#216, el]:u64 <- R21
00013804: mem := mem with [#216 + 8, el]:u64 <- R22
0001380a: #217 := R31 + 0x30
00013810: mem := mem with [#217, el]:u64 <- R23
00013816: mem := mem with [#217 + 8, el]:u64 <- R24
0001381c: R24 := R2
00013822: R23 := R4
00013828: #218 := R31 + 0x40
0001382e: mem := mem with [#218, el]:u64 <- R25
00013834: mem := mem with [#218 + 8, el]:u64 <- R26
0001383a: R25 := R3
00013842: mem := mem with [R31 + 0x50, el]:u64 <- R27
00013848: #219 := R1 - 0x40
0001384d: VF := extend:128[#219] <> extend:128[R1] - 0x40
00013852: CF := pad:128[#219] <> pad:128[R1] + 0xFFFFFFFFFFFFFFC0
00013856: ZF := #219 = 0
0001385a: NF := 63:63[#219]
00013861: when CF & ~ZF goto %0001385f
00034685: goto %0001458a

0001385f:
00013867: R2 := 0x416000
0001386d: R22 := R31 + 0x160
00013874: mem := mem with [R31 + 0x170, el]:u64 <- 0
0001387a: R20 := R31 + 0x60
00013881: V1 := mem[R2 + 0x3A0, el]:u128
00013887: R2 := R22
0001388e: mem := mem with [R31 + 0x178, el]:u32 <- 0
00013894: R19 := R31 + 0x80
00013899: R27 := 0xF
0001389e: R21 := 0x10
000138a6: mem := mem with [R31 + 0x160, el]:u128 <- V1
000138ab: R30 := 0x4125DC
000138ad: call @md5_process_bytes with return %000138af

000138af:
000138b3: R1 := R31 + 0x60
000138b9: R0 := R22
000138be: R30 := 0x4125E8
000138c0: call @md5_finish_ctx with return %000138c2

000138c2:
000138c5: R0 := 0x416000
000138cc: mem := mem with [R31 + 0xD0, el]:u64 <- 0
000138d1: V0 := 0x36363636363636363636363636363636
000138d8: mem := mem with [R31 + 0xD8, el]:u32 <- 0
000138df: V1 := mem[R0 + 0x3A0, el]:u128
000138e5: #220 := R31 + 0x90
000138eb: mem := mem with [#220, el]:u128 <- V0
000138f1: mem := mem with [#220 + 0x10, el]:u128 <- V0
000138f7: #221 := R31 + 0xB0
000138fd: mem := mem with [#221, el]:u128 <- V0
00013903: mem := mem with [#221 + 0x10, el]:u128 <- V1
00013908: goto %00013906

0001458a:
0001458e: R20 := R0
00014593: R0 := 0x416000
00014598: V0 := 0x36363636363636363636363636363636
0001459e: R19 := R31 + 0x80
000145a5: V1 := mem[R0 + 0x3A0, el]:u128
000145ac: mem := mem with [R31 + 0xD0, el]:u64 <- 0
000145b3: mem := mem with [R31 + 0xD8, el]:u32 <- 0
000145b9: R21 := R1
000145c1: mem := mem with [R19, el]:u128 <- V0
000145c7: mem := mem with [R19 + 0x10, el]:u128 <- V0
000145cd: #263 := R19 + 0x20
000145d3: mem := mem with [#263, el]:u128 <- V0
000145d9: mem := mem with [#263 + 0x10, el]:u128 <- V0
000145e1: mem := mem with [R31 + 0xC0, el]:u128 <- V1
000145e6: when R1 = 0 goto %000144ef
00034686: goto %000145ea

000144ef:
000144f3: R2 := R31 + 0xC0
000144f9: R0 := R19
000144fe: R1 := 0x40
00014503: R30 := 0x412634
00014505: call @md5_process_block with return %00014507

00014507:
0001450b: R2 := R31 + 0xC0
00014511: R0 := R24
00014517: R1 := R25
0001451d: R24 := R31 + 0x70
00014522: R30 := 0x412648
00014524: call @md5_process_bytes with return %00014526

00014526:
0001452a: R22 := R31 + 0x160
00014530: R0 := R31 + 0xC0
00014536: R1 := R24
0001453b: R30 := 0x412658
0001453d: call @md5_finish_ctx with return %0001453f

0001453f:
00014544: mem := mem with [R31 + 0x170, el]:u64 <- 0
00014549: R0 := 0x416000
00014550: mem := mem with [R31 + 0x178, el]:u32 <- 0
00014555: V0 := 0x5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
0001455c: V1 := mem[R0 + 0x3A0, el]:u128
00014564: mem := mem with [R19, el]:u128 <- V0
0001456a: mem := mem with [R19 + 0x10, el]:u128 <- V0
00014570: #262 := R19 + 0x20
00014576: mem := mem with [#262, el]:u128 <- V0
0001457c: mem := mem with [#262 + 0x10, el]:u128 <- V0
00014584: mem := mem with [R31 + 0x160, el]:u128 <- V1
00014588: goto %00013a77

000145ea:
000145ee: R27 := R1 - 1
000145f4: #264 := R27 - 0xE
000145f9: VF := extend:128[#264] <> extend:128[R27] - 0xE
000145fe: CF := pad:128[#264] <> pad:128[R27] + 0xFFFFFFFFFFFFFFF2
00014602: ZF := #264 = 0
00014606: NF := 63:63[#264]
0001460c: when ~(CF & ~ZF) goto %000144c8
00034687: goto %00014610

000144c8:
000144cc: R0 := R1
000144d2: R6 := R20
000144d8: R5 := R19
000144de: R22 := R31 + 0x160
000144e4: R2 := R1
000144e9: R7 := 0
000144ed: goto %00013da4

00014610:
00014614: R22 := R31 + 0x160
00034688: goto %00013906

00013906:
0001390e: V0 := mem[R20, el]:u128
00013914: R26 := pad:64[63:4[R21]]
00013919: V1 := 0x36363636363636363636363636363636
00013920: V0 := V1 ^ V0
00013928: mem := mem with [R31 + 0x80, el]:u128 <- V0
0001392e: #222 := R26 - 1
00013933: VF := extend:128[#222] <> extend:128[R26] - 1
00013938: CF := pad:128[#222] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFF
0001393c: ZF := #222 = 0
00013940: NF := 63:63[#222]
00013946: when ZF goto %00013944
00034689: goto %00014448

00014448:
0001444d: V0 := mem[R20 + 0x10, el]:u128
00014454: V0 := V1 ^ V0
0001445c: mem := mem with [R31 + 0x90, el]:u128 <- V0
00014462: #260 := R26 - 2
00014467: VF := extend:128[#260] <> extend:128[R26] - 2
0001446c: CF := pad:128[#260] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFE
00014470: ZF := #260 = 0
00014474: NF := 63:63[#260]
00014479: when ZF goto %00013944
0003468a: goto %0001447d

0001447d:
00014482: V0 := mem[R20 + 0x20, el]:u128
00014489: V0 := V1 ^ V0
00014491: mem := mem with [R31 + 0xA0, el]:u128 <- V0
00014497: #261 := R26 - 4
0001449c: VF := extend:128[#261] <> extend:128[R26] - 4
000144a1: CF := pad:128[#261] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFC
000144a5: ZF := #261 = 0
000144a9: NF := 63:63[#261]
000144ae: when ZF <> 1 goto %00013944
0003468b: goto %000144b2

00013944:
0001394d: R7 := 63:4[R21].0
00013954: R2 := R21 + ~R7 + 1
0001395b: R6 := R20 + R7
00013961: R0 := R2
00013968: R5 := R19 + R7
0001396d: VF := 0
00013970: CF := 0
00013974: ZF := pad:64[3:0[R21]] = 0
00013977: NF := 0
0001397d: when ZF goto %0001397b
0003468c: goto %00013da4

00013da4:
00013da8: R1 := R2 - 1
00013dae: #238 := R1 - 6
00013db3: VF := extend:128[#238] <> extend:128[R1] - 6
00013db8: CF := pad:128[#238] <> pad:128[R1] + 0xFFFFFFFFFFFFFFFA
00013dbc: ZF := #238 = 0
00013dc0: NF := 63:63[#238]
00013dc7: when ~(CF & ~ZF) goto %00013dc5
0003468d: goto %000143f7

000143f7:
000143fd: V1 := pad:128[mem[R20 + R7, el]:u64]
00014403: R1 := 63:3[R2].0
0001440b: V0 := pad:128[mem[R19 + R7, el]:u64]
00014412: R6 := R6 + R1
00014419: R5 := R5 + R1
00014420: R0 := R0 + ~R1 + 1
00014427: V0 := pad:128[63:0[V1] ^ 63:0[V0]]
00014430: mem := mem with [R19 + R7, el]:u64 <- 63:0[V0]
00014435: VF := 0
00014438: CF := 0
0001443c: ZF := pad:64[2:0[R2]] = 0
0001443f: NF := 0
00014444: when ZF goto %00013e01
0003468e: goto %00013dc5

00013dc5:
00013dcf: R1 := pad:64[mem[R6]]
00013dd6: R2 := pad:64[mem[R5]]
00013ddd: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00013de5: mem := mem with [R5] <- 7:0[R1]
00013deb: #239 := R0 - 1
00013df0: VF := extend:128[#239] <> extend:128[R0] - 1
00013df5: CF := pad:128[#239] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
00013df9: ZF := #239 = 0
00013dfd: NF := 63:63[#239]
00013e03: when ZF goto %00013e01
0003468f: goto %000142ae

000142ae:
000142b3: R1 := pad:64[mem[R6 + 1]]
000142ba: R2 := pad:64[mem[R5 + 1]]
000142c1: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
000142c9: mem := mem with [R5 + 1] <- 7:0[R1]
000142cf: #255 := R0 - 2
000142d4: VF := extend:128[#255] <> extend:128[R0] - 2
000142d9: CF := pad:128[#255] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFE
000142dd: ZF := #255 = 0
000142e1: NF := 63:63[#255]
000142e6: when ZF goto %00013e01
00034690: goto %000142ea

000142ea:
000142ef: R1 := pad:64[mem[R6 + 2]]
000142f6: R2 := pad:64[mem[R5 + 2]]
000142fd: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00014305: mem := mem with [R5 + 2] <- 7:0[R1]
0001430b: #256 := R0 - 3
00014310: VF := extend:128[#256] <> extend:128[R0] - 3
00014315: CF := pad:128[#256] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
00014319: ZF := #256 = 0
0001431d: NF := 63:63[#256]
00014322: when ZF goto %00013e01
00034691: goto %00014326

00014326:
0001432b: R1 := pad:64[mem[R6 + 3]]
00014332: R2 := pad:64[mem[R5 + 3]]
00014339: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00014341: mem := mem with [R5 + 3] <- 7:0[R1]
00014347: #257 := R0 - 4
0001434c: VF := extend:128[#257] <> extend:128[R0] - 4
00014351: CF := pad:128[#257] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFC
00014355: ZF := #257 = 0
00014359: NF := 63:63[#257]
0001435e: when ZF goto %00013e01
00034692: goto %00014362

00014362:
00014367: R1 := pad:64[mem[R6 + 4]]
0001436e: R2 := pad:64[mem[R5 + 4]]
00014375: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
0001437d: mem := mem with [R5 + 4] <- 7:0[R1]
00014383: #258 := R0 - 5
00014388: VF := extend:128[#258] <> extend:128[R0] - 5
0001438d: CF := pad:128[#258] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFB
00014391: ZF := #258 = 0
00014395: NF := 63:63[#258]
0001439a: when ZF goto %00013e01
00034693: goto %0001439e

0001439e:
000143a3: R1 := pad:64[mem[R6 + 5]]
000143aa: R2 := pad:64[mem[R5 + 5]]
000143b1: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
000143b9: mem := mem with [R5 + 5] <- 7:0[R1]
000143bf: #259 := R0 - 6
000143c4: VF := extend:128[#259] <> extend:128[R0] - 6
000143c9: CF := pad:128[#259] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFA
000143cd: ZF := #259 = 0
000143d1: NF := 63:63[#259]
000143d6: when ZF goto %00013e01
00034694: goto %000143da

000143da:
000143df: R0 := pad:64[mem[R6 + 6]]
000143e6: R1 := pad:64[mem[R5 + 6]]
000143ed: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
000143f5: mem := mem with [R5 + 6] <- 7:0[R0]
00034695: goto %00013e01

00013e01:
00013e0a: R2 := R31 + 0xC0
00013e10: R0 := R19
00013e15: R1 := 0x40
00013e1a: R30 := 0x412454
00013e1c: call @md5_process_block with return %00013e1e

00013e1e:
00013e22: R2 := R31 + 0xC0
00013e28: R0 := R24
00013e2e: R1 := R25
00013e34: R24 := R31 + 0x70
00013e39: R30 := 0x412468
00013e3b: call @md5_process_bytes with return %00013e3d

00013e3d:
00013e41: R0 := R31 + 0xC0
00013e47: R1 := R24
00013e4c: R30 := 0x412474
00013e4e: call @md5_finish_ctx with return %00013e50

00013e50:
00013e55: mem := mem with [R31 + 0x170, el]:u64 <- 0
00013e5a: R0 := 0x416000
00013e61: mem := mem with [R31 + 0x178, el]:u32 <- 0
00013e66: V0 := 0x5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
00013e6d: V1 := mem[R0 + 0x3A0, el]:u128
00013e75: mem := mem with [R19, el]:u128 <- V0
00013e7b: mem := mem with [R19 + 0x10, el]:u128 <- V0
00013e81: #240 := R19 + 0x20
00013e87: mem := mem with [#240, el]:u128 <- V0
00013e8d: mem := mem with [#240 + 0x10, el]:u128 <- V0
00013e95: mem := mem with [R31 + 0x160, el]:u128 <- V1
00013e9b: #241 := R27 - 0xE
00013ea0: VF := extend:128[#241] <> extend:128[R27] - 0xE
00013ea5: CF := pad:128[#241] <> pad:128[R27] + 0xFFFFFFFFFFFFFFF2
00013ea9: ZF := #241 = 0
00013ead: NF := 63:63[#241]
00013eb4: when ~(CF & ~ZF) goto %00013eb2
00034696: goto %0001426e

00013eb2:
00013ebb: R3 := R21
00013ec1: R2 := R20
00013ec7: R5 := R21
00013ecd: R0 := R19
00013ed2: R1 := 0
00013ed6: goto %00013b22

0001426e:
00014273: V0 := mem[R20, el]:u128
00014279: R26 := pad:64[63:4[R21]]
0001427e: V1 := 0x5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
00014285: V0 := V1 ^ V0
0001428d: mem := mem with [R31 + 0x80, el]:u128 <- V0
00014293: #254 := R26 - 1
00014298: VF := extend:128[#254] <> extend:128[R26] - 1
0001429d: CF := pad:128[#254] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFF
000142a1: ZF := #254 = 0
000142a5: NF := 63:63[#254]
000142aa: when ZF <> 1 goto %00013d24
00034697: goto %00013a40

000144b2:
000144b7: V0 := mem[R20 + 0x30, el]:u128
000144be: V0 := V1 ^ V0
000144c6: mem := mem with [R31 + 0xB0, el]:u128 <- V0
00034698: goto %0001397b

0001397b:
00013984: R2 := R31 + 0xC0
0001398a: R0 := R19
0001398f: R1 := 0x40
00013994: R30 := 0x412274
00013996: call @md5_process_block with return %00013998

00013998:
0001399c: R2 := R31 + 0xC0
000139a2: R0 := R24
000139a8: R1 := R25
000139ae: R24 := R31 + 0x70
000139b3: R30 := 0x412288
000139b5: call @md5_process_bytes with return %000139b7

000139b7:
000139bb: R0 := R31 + 0xC0
000139c1: R1 := R24
000139c6: R30 := 0x412294
000139c8: call @md5_finish_ctx with return %000139ca

000139ca:
000139cf: mem := mem with [R31 + 0x170, el]:u64 <- 0
000139d4: R0 := 0x416000
000139db: mem := mem with [R31 + 0x178, el]:u32 <- 0
000139e0: V0 := 0x5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
000139e7: V1 := mem[R0 + 0x3A0, el]:u128
000139ed: #223 := R31 + 0x90
000139f3: mem := mem with [#223, el]:u128 <- V0
000139f9: mem := mem with [#223 + 0x10, el]:u128 <- V0
00013a01: mem := mem with [R31 + 0xB0, el]:u128 <- V0
00013a08: V0 := mem[R20, el]:u128
00013a10: mem := mem with [R31 + 0x160, el]:u128 <- V1
00013a15: V1 := 0x5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
00013a1c: V0 := V1 ^ V0
00013a24: mem := mem with [R31 + 0x80, el]:u128 <- V0
00013a2a: #224 := R26 - 1
00013a2f: VF := extend:128[#224] <> extend:128[R26] - 1
00013a34: CF := pad:128[#224] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFF
00013a38: ZF := #224 = 0
00013a3c: NF := 63:63[#224]
00013a42: when ZF goto %00013a40
00034699: goto %00013d22

00013d22:
0003469a: goto %00013d24

00013d24:
00013d29: V0 := mem[R20 + 0x10, el]:u128
00013d30: V0 := V1 ^ V0
00013d38: mem := mem with [R31 + 0x90, el]:u128 <- V0
00013d3e: #236 := R26 - 2
00013d43: VF := extend:128[#236] <> extend:128[R26] - 2
00013d48: CF := pad:128[#236] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFE
00013d4c: ZF := #236 = 0
00013d50: NF := 63:63[#236]
00013d55: when ZF goto %00013a40
0003469b: goto %00013d59

00013d59:
00013d5e: V0 := mem[R20 + 0x20, el]:u128
00013d65: V0 := V1 ^ V0
00013d6d: mem := mem with [R31 + 0xA0, el]:u128 <- V0
00013d73: #237 := R26 - 4
00013d78: VF := extend:128[#237] <> extend:128[R26] - 4
00013d7d: CF := pad:128[#237] <> pad:128[R26] + 0xFFFFFFFFFFFFFFFC
00013d81: ZF := #237 = 0
00013d85: NF := 63:63[#237]
00013d8a: when ZF <> 1 goto %00013a40
0003469c: goto %00013d8e

00013a40:
00013a49: R1 := 63:4[R21].0
00013a50: R5 := R21 + ~R1 + 1
00013a57: R2 := R20 + R1
00013a5d: R3 := R5
00013a64: R0 := R19 + R1
00013a69: VF := 0
00013a6c: CF := 0
00013a70: ZF := pad:64[3:0[R21]] = 0
00013a73: NF := 0
00013a79: when ZF goto %00013a77
0003469d: goto %00013b22

00013b22:
00013b26: R4 := R5 - 1
00013b2c: #229 := R4 - 6
00013b31: VF := extend:128[#229] <> extend:128[R4] - 6
00013b36: CF := pad:128[#229] <> pad:128[R4] + 0xFFFFFFFFFFFFFFFA
00013b3a: ZF := #229 = 0
00013b3e: NF := 63:63[#229]
00013b45: when ~(CF & ~ZF) goto %00013b43
0003469e: goto %00013cd1

00013cd1:
00013cd7: V1 := pad:128[mem[R20 + R1, el]:u64]
00013cdd: R4 := 63:3[R5].0
00013ce5: V0 := pad:128[mem[R19 + R1, el]:u64]
00013cec: R2 := R2 + R4
00013cf3: R0 := R0 + R4
00013cfa: R3 := R3 + ~R4 + 1
00013d01: V0 := pad:128[63:0[V1] ^ 63:0[V0]]
00013d0a: mem := mem with [R19 + R1, el]:u64 <- 63:0[V0]
00013d0f: VF := 0
00013d12: CF := 0
00013d16: ZF := pad:64[2:0[R5]] = 0
00013d19: NF := 0
00013d1e: when ZF goto %00013a77
0003469f: goto %00013b43

00013b43:
00013b4d: R1 := pad:64[mem[R2]]
00013b54: R4 := pad:64[mem[R0]]
00013b5b: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00013b63: mem := mem with [R0] <- 7:0[R1]
00013b69: #230 := R3 - 1
00013b6e: VF := extend:128[#230] <> extend:128[R3] - 1
00013b73: CF := pad:128[#230] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFF
00013b77: ZF := #230 = 0
00013b7b: NF := 63:63[#230]
00013b80: when ZF goto %00013a77
000346a0: goto %00013b84

00013b84:
00013b89: R1 := pad:64[mem[R2 + 1]]
00013b90: R4 := pad:64[mem[R0 + 1]]
00013b97: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00013b9f: mem := mem with [R0 + 1] <- 7:0[R1]
00013ba5: #231 := R3 - 2
00013baa: VF := extend:128[#231] <> extend:128[R3] - 2
00013baf: CF := pad:128[#231] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFE
00013bb3: ZF := #231 = 0
00013bb7: NF := 63:63[#231]
00013bbc: when ZF goto %00013a77
000346a1: goto %00013bc0

00013bc0:
00013bc5: R1 := pad:64[mem[R2 + 2]]
00013bcc: R4 := pad:64[mem[R0 + 2]]
00013bd3: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00013bdb: mem := mem with [R0 + 2] <- 7:0[R1]
00013be1: #232 := R3 - 3
00013be6: VF := extend:128[#232] <> extend:128[R3] - 3
00013beb: CF := pad:128[#232] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFD
00013bef: ZF := #232 = 0
00013bf3: NF := 63:63[#232]
00013bf8: when ZF goto %00013a77
000346a2: goto %00013bfc

00013bfc:
00013c01: R1 := pad:64[mem[R2 + 3]]
00013c08: R4 := pad:64[mem[R0 + 3]]
00013c0f: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00013c17: mem := mem with [R0 + 3] <- 7:0[R1]
00013c1d: #233 := R3 - 4
00013c22: VF := extend:128[#233] <> extend:128[R3] - 4
00013c27: CF := pad:128[#233] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFC
00013c2b: ZF := #233 = 0
00013c2f: NF := 63:63[#233]
00013c34: when ZF goto %00013a77
000346a3: goto %00013c38

00013c38:
00013c3d: R1 := pad:64[mem[R2 + 4]]
00013c44: R4 := pad:64[mem[R0 + 4]]
00013c4b: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00013c53: mem := mem with [R0 + 4] <- 7:0[R1]
00013c59: #234 := R3 - 5
00013c5e: VF := extend:128[#234] <> extend:128[R3] - 5
00013c63: CF := pad:128[#234] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFB
00013c67: ZF := #234 = 0
00013c6b: NF := 63:63[#234]
00013c70: when ZF goto %00013a77
000346a4: goto %00013c74

00013c74:
00013c79: R1 := pad:64[mem[R2 + 5]]
00013c80: R4 := pad:64[mem[R0 + 5]]
00013c87: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00013c8f: mem := mem with [R0 + 5] <- 7:0[R1]
00013c95: #235 := R3 - 6
00013c9a: VF := extend:128[#235] <> extend:128[R3] - 6
00013c9f: CF := pad:128[#235] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFA
00013ca3: ZF := #235 = 0
00013ca7: NF := 63:63[#235]
00013cac: when ZF goto %00013a77
000346a5: goto %00013cb0

00013cb0:
00013cb5: R1 := pad:64[mem[R2 + 6]]
00013cbc: R2 := pad:64[mem[R0 + 6]]
00013cc3: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00013ccb: mem := mem with [R0 + 6] <- 7:0[R1]
00013ccf: goto %00013a77

00013d8e:
00013d93: V0 := mem[R20 + 0x30, el]:u128
00013d9a: V0 := V1 ^ V0
00013da2: mem := mem with [R31 + 0xB0, el]:u128 <- V0
000346a6: goto %00013a77

00013a77:
00013a80: R0 := R19
00013a86: R2 := R22
00013a8b: R1 := 0x40
00013a90: R30 := 0x412314
00013a92: call @md5_process_block with return %00013a94

00013a94:
00013a98: R2 := R22
00013a9e: R0 := R24
00013aa3: R1 := 0x10
00013aa8: R30 := 0x412324
00013aaa: call @md5_process_bytes with return %00013aac

00013aac:
00013ab0: R1 := R23
00013ab6: R0 := R22
00013abb: R30 := 0x412330
00013abd: call @md5_finish_ctx with return %00013abf

00013abf:
00013ac4: R29 := mem[R31, el]:u64
00013ac9: R30 := mem[R31 + 8, el]:u64
00013ace: R0 := 0
00013ad4: #225 := R31 + 0x10
00013ad9: R19 := mem[#225, el]:u64
00013ade: R20 := mem[#225 + 8, el]:u64
00013ae4: #226 := R31 + 0x20
00013ae9: R21 := mem[#226, el]:u64
00013aee: R22 := mem[#226 + 8, el]:u64
00013af4: #227 := R31 + 0x30
00013af9: R23 := mem[#227, el]:u64
00013afe: R24 := mem[#227 + 8, el]:u64
00013b04: #228 := R31 + 0x40
00013b09: R25 := mem[#228, el]:u64
00013b0e: R26 := mem[#228 + 8, el]:u64
00013b15: R27 := mem[R31 + 0x50, el]:u64
00013b1b: R31 := R31 + 0x200
00013b20: call R30 with noreturn

000346a7: sub host_connect(host_connect_result)
00034be4: host_connect_result :: out u32 = low:32[R0]

000195e1:
000195e5: #538 := R31 - 0x30
000195eb: mem := mem with [#538, el]:u64 <- R29
000195f1: mem := mem with [#538 + 8, el]:u64 <- R30
000195f5: R31 := #538
000195fb: R29 := R31
00019601: #539 := R31 + 0x10
00019607: mem := mem with [#539, el]:u64 <- R19
0001960d: mem := mem with [#539 + 8, el]:u64 <- R20
00019613: R20 := pad:64[31:0[R1]]
00019619: R19 := R0
0001961e: R30 := 0x405788
00019620: call @__errno_location with return %00019622

00019622:
00019626: R3 := R0
0001962c: R2 := pad:64[31:0[R20]]
00019632: R1 := R19
00019638: R0 := R31 + 0x28
0001963f: mem := mem with [R3, el]:u32 <- 0
00019644: R30 := 0x4057A0
00019647: call @so_resolv with return %0001ad7f

0001ad7f:
0001ad83: when 31:0[R0] = 0 goto %0001ad81
000346a8: goto %0002ab77

0001ad81:
0001ad89: R19 := 0xFFFFFFFF
0001ad8e: goto %0001ad8c

0002ab77:
0002ab7c: R0 := mem[R31 + 0x28, el]:u64
0002ab81: R30 := 0x4057AC
0002ab83: call @so_connect with return %0002ab85

0002ab85:
0002ab89: R19 := pad:64[31:0[R0]]
0002ab90: R0 := mem[R31 + 0x28, el]:u64
0002ab95: R30 := 0x4057B8
0002ab97: call @freeaddrinfo with return %0001ad8c

0001ad8c:
0001ad93: R0 := pad:64[31:0[R19]]
0001ad99: #648 := R31 + 0x10
0001ad9e: R19 := mem[#648, el]:u64
0001ada3: R20 := mem[#648 + 8, el]:u64
0001adaa: R29 := mem[R31, el]:u64
0001adaf: R30 := mem[R31 + 8, el]:u64
0001adb3: R31 := R31 + 0x30
0001adb8: call R30 with noreturn

000346a9: sub http_body_drop(http_body_drop_result)
00034be5: http_body_drop_result :: out u32 = low:32[R0]

0001fa30:
0001fa34: #909 := R31 - 0x40
0001fa3a: mem := mem with [#909, el]:u64 <- R29
0001fa40: mem := mem with [#909 + 8, el]:u64 <- R30
0001fa44: R31 := #909
0001fa4a: R29 := R31
0001fa50: #910 := R31 + 0x10
0001fa56: mem := mem with [#910, el]:u64 <- R19
0001fa5c: mem := mem with [#910 + 8, el]:u64 <- R20
0001fa62: R19 := R1
0001fa68: when R1 = 0 goto %0001fa66
000346aa: goto %000291ad

000291ad:
000291b1: #1312 := R31 + 0x20
000291b7: mem := mem with [#1312, el]:u64 <- R21
000291bd: mem := mem with [#1312 + 8, el]:u64 <- R22
000291c3: R21 := pad:64[31:0[R0]]
000291ca: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
000291cf: when 31:0[R0] <> 0 goto %0001fb0f
000346ab: goto %000291d3

0001fb0f:
0001fb13: #914 := R31 + 0x20
0001fb18: R21 := mem[#914, el]:u64
0001fb1d: R22 := mem[#914 + 8, el]:u64
000346ac: goto %0001fa66

0001fa66:
0001fa6f: R3 := R19
0001fa74: R2 := 0
0001fa79: R0 := 3
0001fa7e: R1 := 0x413000
0001fa84: R1 := R1 + 0x8A0
0001fa89: R30 := 0x4097B4
0001fa8b: call @syslog with return %0001fa8d

0001fa8d:
0001fa91: #911 := R31 + 0x10
0001fa96: R19 := mem[#911, el]:u64
0001fa9b: R20 := mem[#911 + 8, el]:u64
0001faa0: R0 := 1
0001faa7: R29 := mem[R31, el]:u64
0001faac: R30 := mem[R31 + 8, el]:u64
0001fab0: R31 := R31 + 0x40
0001fab5: call R30 with noreturn

000291d3:
000291d8: R2 := pad:64[mem[R19 + 0x10, el]:u32]
000291dd: R1 := 0xCC
000291e4: R0 := mem[R19 + 8, el]:u64
000291ea: #1313 := 31:0[R2] - 0x130
000291ef: VF := extend:64[#1313] <> extend:64[31:0[R2]] - 0x130
000291f4: CF := pad:64[#1313] <> pad:64[31:0[R2]] + 0xFFFFFED0
000291f8: ZF := #1313 = 0
000291fc: NF := 31:31[#1313]
00029202: #1314 := ~31:0[R1]
00029207: #1315 := 31:0[R2] + ~31:0[R1]
0002920b: #1316 := ZF <> 1
00029212: VF := #1316 & extend:64[#1315 + 1] <> extend:64[31:0[R2]] +
          extend:64[#1314] + 1
00029219: CF := #1316 & pad:64[#1315 + 1] <> pad:64[31:0[R2]] + pad:64[#1314]
          + 1
0002921e: ZF := #1315 + 1 = 0 | ~#1316
00029223: NF := #1316 & 31:31[#1315 + 1]
00029229: R3 := pad:64[31:0[R2] - 0x64]
00029235: when ZF <> 1 goto %0002922e
00029236: goto %00029231

00029231:
00029232: R2 := 1
00029238: goto %00029234

0002922e:
0002922f: R2 := 0
00029237: goto %00029234

00029234:
0002923e: #1317 := 31:0[R3] - 0x63
00029243: VF := extend:64[#1317] <> extend:64[31:0[R3]] - 0x63
00029248: CF := pad:64[#1317] <> pad:64[31:0[R3]] + 0xFFFFFF9D
0002924c: ZF := #1317 = 0
00029250: NF := 31:31[#1317]
0002925d: when CF & ~ZF goto %00029256
0002925e: goto %00029259

00029259:
0002925a: R3 := 1
00029260: goto %0002925c

00029256:
00029257: R3 := 0
0002925f: goto %0002925c

0002925c:
00029265: R1 := 0x412000
0002926c: R20 := pad:64[31:0[R2] | 31:0[R3]]
00029272: R1 := R1 + 0xAA8
00029277: R30 := 0x409768
00029279: call @hlist_get with return %0002927b

0002927b:
0002927e: VF := 0
00029281: CF := 1
00029285: ZF := R0 = 0
00029289: NF := 63:63[R0]
0002928f: R2 := pad:64[31:0[R20] ^ 1]
00029295: #1318 := ZF
00029298: VF := 0
0002929c: CF := #1318
000292a1: ZF := 31:0[R2] = 0 | ~#1318
000292a6: NF := #1318 & 31:31[R2]
000292ab: when ZF <> 1 goto %00029182
000346ad: goto %000292af

00029182:
00029187: R0 := mem[R19 + 8, el]:u64
0002918c: R1 := 0x413000
00029192: R1 := R1 + 0x920
00029197: R30 := 0x4097FC
00029199: call @hlist_in with return %0002919b

0002919b:
0002919e: when 31:0[R0] = 0 goto %0001fbc8
000346ae: goto %000291a2

0001fbc8:
0001fbcd: R0 := mem[R19 + 8, el]:u64
0001fbd2: R20 := 0x412000
0001fbd8: R20 := R20 + 0xAB8
0001fbde: R1 := R20
0001fbe3: R30 := 0x409894
0001fbe5: call @hlist_in with return %0001fbe7

0001fbe7:
0001fbeb: when 31:0[R0] <> 0 goto %0001fbe9
000346af: goto %000290db

000290db:
000290e0: R0 := mem[R19 + 8, el]:u64
000290e5: R2 := 0x412000
000290ea: R1 := 0x412000
000290f0: R2 := R2 + 0xDB0
000290f6: R1 := R1 + 0xA80
000290fb: R30 := 0x4098B0
000290fd: call @hlist_subcmp with return %000290ff

000290ff:
00029102: when 31:0[R0] <> 0 goto %0001fbe9
000346b0: goto %00029106

00029106:
0002910a: #1309 := R31 + 0x20
0002910f: R21 := mem[#1309, el]:u64
00029114: R22 := mem[#1309 + 8, el]:u64
00029118: goto %0001fae5

000291a2:
000291a5: R20 := 0x412000
000291ab: R20 := R20 + 0xAB8
000346b1: goto %0001fbe9

0001fbe9:
0001fbf3: R0 := mem[R19 + 8, el]:u64
0001fbf9: R1 := R20
0001fbfe: R30 := 0x409814
0001fc00: call @hlist_in with return %0001fc02

0001fc02:
0001fc05: R2 := 0x413000
0001fc0b: R2 := R2 + 0x930
0001fc11: when 31:0[R0] <> 0 goto %0001fc0f
000346b2: goto %0001fc44

0001fc0f:
0001fc19: R0 := mem[R19 + 8, el]:u64
0001fc1f: R1 := R20
0001fc27: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001fc2c: R22 := 1
0001fc31: R30 := 0x4098F4
0001fc33: call @hlist_subcmp with return %0001fc35

0001fc35:
0001fc3a: R2 := mem[R31 + 0x38, el]:u64
0001fc3f: when 31:0[R0] <> 0 goto %0001fb36
000346b3: goto %0001fc43

0001fc43:
0001fc46: goto %0001fc44

0001fc44:
0001fc4a: R22 := 0xFFFFFFFFFFFFFFFF
000346b4: goto %0001fb36

000292af:
000292b2: VF := 0
000292b5: CF := 1
000292b9: ZF := R0 = 0
000292bd: NF := 63:63[R0]
000292c3: #1319 := ZF <> 1
000292c6: VF := 0
000292ca: CF := #1319
000292cf: ZF := 31:0[R2] = 0 | ~#1319
000292d4: NF := #1319 & 31:31[R2]
000292d9: when ZF <> 1 goto %0001fab7
000346b5: goto %0001fad0

0001fab7:
0001faba: R2 := 0xA
0001fabf: R1 := 0
0001fac4: R30 := 0x4097D0
0001fac6: call @strtoll with return %0001fac8

0001fac8:
0001facc: R22 := R0
0001fad2: when R0 = 0 goto %0001fad0
000346b6: goto %0001fb1f

0001fb1f:
0001fb22: R20 := 0x412000
0001fb27: R1 := 0x413000
0001fb2d: R20 := R20 + 0xAB8
0001fb33: R2 := R1 + 0x930
0001fb38: goto %0001fb36

0001fb36:
0001fb3e: R0 := mem[R19 + 8, el]:u64
0001fb44: R1 := R20
0001fb49: R30 := 0x409830
0001fb4b: call @hlist_subcmp with return %0001fb4d

0001fb4d:
0001fb51: when 31:0[R0] = 0 goto %0001fb4f
000346b7: goto %0002916f

0001fb4f:
0001fb57: R0 := 0x430000
0001fb5e: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001fb64: when 31:0[R0] <> 0 goto %0001fb62
000346b8: goto %0001fb80

0001fb62:
0001fb6b: R1 := R22
0001fb70: R0 := 0x413000
0001fb76: R0 := R0 + 0xA18
0001fb7b: R30 := 0x4098DC
0001fb7d: call @printf with return %0001fb7f

0001fb7f:
0001fb82: goto %0001fb80

0001fb80:
0001fb87: #915 := R31 + 0x10
0001fb8c: R19 := mem[#915, el]:u64
0001fb91: R20 := mem[#915 + 8, el]:u64
0001fb97: R2 := R22
0001fb9d: R1 := pad:64[31:0[R21]]
0001fba2: R0 := 0xFFFFFFFF
0001fba8: #916 := R31 + 0x20
0001fbad: R21 := mem[#916, el]:u64
0001fbb2: R22 := mem[#916 + 8, el]:u64
0001fbb9: R29 := mem[R31, el]:u64
0001fbbe: R30 := mem[R31 + 8, el]:u64
0001fbc2: R31 := R31 + 0x40
0001fbc6: call @data_send with noreturn

0002916f:
00029172: R0 := 0x430000
00029179: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0002917e: when 31:0[R0] <> 0 goto %0002911a
000346b9: goto %0002912d

0002911a:
0002911d: R0 := 0x413000
00029123: R0 := R0 + 0x9F8
00029128: R30 := 0x4098C8
0002912a: call @puts with return %0002912c

0002912c:
0002912f: goto %0002912d

0002912d:
00029134: #1310 := R31 + 0x10
00029139: R19 := mem[#1310, el]:u64
0002913e: R20 := mem[#1310 + 8, el]:u64
00029144: R1 := pad:64[31:0[R21]]
0002914a: #1311 := R31 + 0x20
0002914f: R21 := mem[#1311, el]:u64
00029154: R22 := mem[#1311 + 8, el]:u64
00029159: R0 := 0xFFFFFFFF
00029160: R29 := mem[R31, el]:u64
00029165: R30 := mem[R31 + 8, el]:u64
00029169: R31 := R31 + 0x40
0002916d: call @chunked_data_send with noreturn

0001fad0:
0001fad9: #912 := R31 + 0x20
0001fade: R21 := mem[#912, el]:u64
0001fae3: R22 := mem[#912 + 8, el]:u64
000346ba: goto %0001fae5

0001fae5:
0001fae8: R0 := 1
0001faee: #913 := R31 + 0x10
0001faf3: R19 := mem[#913, el]:u64
0001faf8: R20 := mem[#913 + 8, el]:u64
0001faff: R29 := mem[R31, el]:u64
0001fb04: R30 := mem[R31 + 8, el]:u64
0001fb08: R31 := R31 + 0x40
0001fb0d: call R30 with noreturn

000346bb: sub http_body_send(http_body_send_result)
00034be6: http_body_send_result :: out u32 = low:32[R0]

0001e414:
0001e418: #820 := R31 - 0x50
0001e41e: mem := mem with [#820, el]:u64 <- R29
0001e424: mem := mem with [#820 + 8, el]:u64 <- R30
0001e428: R31 := #820
0001e42e: R29 := R31
0001e435: R4 := pad:64[mem[R3 + 0x1C, el]:u32]
0001e43b: #821 := R31 + 0x10
0001e441: mem := mem with [#821, el]:u64 <- R19
0001e447: mem := mem with [#821 + 8, el]:u64 <- R20
0001e44d: R19 := R3
0001e453: R20 := R2
0001e459: #822 := R31 + 0x20
0001e45f: mem := mem with [#822, el]:u64 <- R21
0001e465: mem := mem with [#822 + 8, el]:u64 <- R22
0001e46b: R21 := pad:64[31:0[R0]]
0001e471: R22 := pad:64[31:0[R1]]
0001e479: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001e47f: when 31:0[R4] <> 0 goto %0001e47d
000346bc: goto %000293d8

0001e47d:
0001e486: when R2 = 0 goto %0001e484
000346bd: goto %0002937e

0001e484:
0001e48c: R1 := 0x413000
0001e491: R0 := 3
0001e497: R1 := R1 + 0x8A0
0001e49c: R30 := 0x4096BC
0001e49e: call @syslog with return %0001e4a0

0001e4a0:
0001e4a3: goto %0001e4a1

0002937e:
00029382: #1322 := ~R2
00029387: #1323 := R3 + ~R2
0002938d: VF := extend:128[#1323 + 1] <> extend:128[R3] + extend:128[#1322] +
          1
00029393: CF := pad:128[#1323 + 1] <> pad:128[R3] + pad:128[#1322] + 1
00029397: ZF := #1323 + 1 = 0
0002939b: NF := 63:63[#1323 + 1]
000293a0: when ZF goto %0001f952
000346be: goto %000293a4

000293a4:
000293a9: R0 := pad:64[mem[R2, el]:u32]
000293ae: when 31:0[R0] = 0 goto %0001f853
000346bf: goto %000293b2

0001f853:
0001f857: R19 := R2
0001f85c: R23 := 1
0001f861: goto %0001f85f

000293b2:
000293b7: R19 := mem[R2 + 0x28, el]:u64
000293bc: R0 := 0x413000
000293c2: R0 := R0 + 0x338
000293c8: R1 := R19
000293cd: R30 := 0x40953C
000293cf: call @strcasecmp with return %000293d1

000293d1:
000293d4: when 31:0[R0] <> 0 goto %00029317
000346c0: goto %0001fa14

00029317:
0002931b: R1 := R19
00029320: R0 := 0x412000
00029326: R0 := R0 + 0xEB0
0002932b: R30 := 0x409628
0002932d: call @strcasecmp with return %0002932f

0002932f:
00029332: VF := 0
00029335: CF := 1
00029339: ZF := 31:0[R0] = 0
0002933d: NF := 31:31[R0]
00029343: R19 := R20
0002934f: when ZF goto %00029348
00029350: goto %0002934b

0002934b:
0002934c: R23 := 1
00029352: goto %0002934e

00029348:
00029349: R23 := 0
00029351: goto %0002934e

0002934e:
00029356: goto %0001f85f

000293d8:
000293db: when R2 <> 0 goto %0001f952
000346c1: goto %0001f95b

0001f952:
0001f957: R0 := pad:64[mem[R20, el]:u32]
0001f95d: when 31:0[R0] = 0 goto %0001f95b
000346c2: goto %0001f9ed

0001f9ed:
0001f9f2: R1 := mem[R20 + 0x28, el]:u64
0001f9f7: R0 := 0x412000
0001f9fd: R0 := R0 + 0xEB0
0001fa02: R30 := 0x409600
0001fa04: call @strcasecmp with return %0001fa06

0001fa06:
0001fa09: when 31:0[R0] <> 0 goto %0001f95b
000346c3: goto %0001fa0d

0001fa0d:
0001fa11: R20 := R19
0001fa16: goto %0001fa14

0001fa14:
0001fa1c: R0 := mem[R20 + 8, el]:u64
0001fa21: R1 := 0x412000
0001fa27: R1 := R1 + 0xAA8
0001fa2c: R30 := 0x409550
0001fa2e: call @hlist_get with return %0001e4a1

0001f95b:
0001f965: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0001f96a: R3 := 0xCC
0001f96f: R1 := 0x63
0001f975: #902 := 31:0[R0] - 0x130
0001f97a: VF := extend:64[#902] <> extend:64[31:0[R0]] - 0x130
0001f97f: CF := pad:64[#902] <> pad:64[31:0[R0]] + 0xFFFFFED0
0001f983: ZF := #902 = 0
0001f987: NF := 31:31[#902]
0001f98d: R2 := pad:64[31:0[R0] - 0x64]
0001f993: #903 := ~31:0[R3]
0001f998: #904 := 31:0[R0] + ~31:0[R3]
0001f99c: #905 := ZF <> 1
0001f9a3: VF := #905 & extend:64[#904 + 1] <> extend:64[31:0[R0]] +
          extend:64[#903] + 1
0001f9aa: CF := #905 & pad:64[#904 + 1] <> pad:64[31:0[R0]] + pad:64[#903] +
          1
0001f9af: ZF := #904 + 1 = 0 | ~#905
0001f9b4: NF := #905 & 31:31[#904 + 1]
0001f9ba: #906 := ~31:0[R1]
0001f9bf: #907 := 31:0[R2] + ~31:0[R1]
0001f9c3: #908 := ZF <> 1
0001f9ca: VF := #908 & extend:64[#907 + 1] <> extend:64[31:0[R2]] +
          extend:64[#906] + 1
0001f9d1: CF := #908 & pad:64[#907 + 1] <> pad:64[31:0[R2]] + pad:64[#906] +
          1
0001f9d6: ZF := #908 & #907 + 1 = 0
0001f9db: NF := #908 & 31:31[#907 + 1]
0001f9e8: when ~(CF & ~ZF) goto %0001f9e1
0001f9e9: goto %0001f9e4

0001f9e4:
0001f9e5: R23 := 1
0001f9eb: goto %0001f9e7

0001f9e1:
0001f9e2: R23 := 0
0001f9ea: goto %0001f9e7

0001f9e7:
000346c4: goto %0001f85f

0001f85f:
0001f867: R0 := mem[R19 + 8, el]:u64
0001f86c: R1 := 0x412000
0001f872: R1 := R1 + 0xAA8
0001f877: R30 := 0x409470
0001f879: call @hlist_get with return %0001f87b

0001f87b:
0001f87e: VF := 0
0001f881: CF := 1
0001f885: ZF := R0 = 0
0001f889: NF := 63:63[R0]
0001f88f: #896 := ZF
0001f892: VF := 0
0001f896: CF := #896
0001f89b: ZF := 31:0[R23] = 0 | ~#896
0001f8a0: NF := #896 & 31:31[R23]
0001f8a5: when ZF <> 1 goto %0001e514
000346c5: goto %0001f8a9

0001e514:
0001e519: R0 := mem[R19 + 8, el]:u64
0001e51e: R1 := 0x413000
0001e524: R1 := R1 + 0x920
0001e529: R30 := 0x409598
0001e52b: call @hlist_in with return %0001e52d

0001e52d:
0001e531: when 31:0[R0] <> 0 goto %0001e52f
000346c6: goto %00029358

0001e52f:
0001e537: R23 := 0x412000
0001e53d: R23 := R23 + 0xAB8
0001e542: goto %0001e540

00029358:
0002935d: R0 := mem[R19 + 8, el]:u64
00029362: R23 := 0x412000
00029368: R23 := R23 + 0xAB8
0002936e: R1 := R23
00029373: R30 := 0x4095B0
00029375: call @hlist_in with return %00029377

00029377:
0002937a: when 31:0[R0] = 0 goto %0001f78c
000346c7: goto %0001e540

0001f78c:
0001f791: R0 := mem[R19 + 8, el]:u64
0001f796: R2 := 0x412000
0001f79b: R1 := 0x412000
0001f7a1: R2 := R2 + 0xDB0
0001f7a7: R1 := R1 + 0xA80
0001f7ac: R30 := 0x4096FC
0001f7ae: call @hlist_subcmp with return %0001f7b0

0001f7b0:
0001f7b3: when 31:0[R0] <> 0 goto %0001e540
000346c8: goto %0001f7b7

0001f7b7:
0001f7b9: goto %0001e4a1

0001e540:
0001e548: R0 := mem[R19 + 8, el]:u64
0001e54e: R1 := R23
0001e553: R30 := 0x4095C0
0001e555: call @hlist_in with return %0001e557

0001e557:
0001e55b: when 31:0[R0] <> 0 goto %0001e559
000346c9: goto %000292e6

0001e559:
0001e563: R0 := mem[R19 + 8, el]:u64
0001e569: R1 := R23
0001e56e: R2 := 0x413000
0001e574: R2 := R2 + 0x930
0001e57c: mem := mem with [R31 + 0x48, el]:u64 <- R2
0001e581: R30 := 0x40969C
0001e583: call @hlist_subcmp with return %0001e585

0001e585:
0001e58a: R2 := mem[R31 + 0x48, el]:u64
0001e590: when 31:0[R0] = 0 goto %0001e58e
000346ca: goto %000292dd

0001e58e:
0001e597: #825 := ~R19
0001e59c: #826 := R20 + ~R19
0001e5a2: VF := extend:128[#826 + 1] <> extend:128[R20] + extend:128[#825] +
          1
0001e5a8: CF := pad:128[#826 + 1] <> pad:128[R20] + pad:128[#825] + 1
0001e5ac: ZF := #826 + 1 = 0
0001e5b0: NF := 63:63[#826 + 1]
0001e5b5: when ZF goto %0001e4a1
000346cb: goto %0001e5b9

0001e5b9:
0001e5bc: goto %0001e5ba

000292dd:
000292e0: R20 := 1
000292e4: goto %0001e5c3

000292e6:
000292ea: #1320 := ~R19
000292ef: #1321 := R20 + ~R19
000292f5: VF := extend:128[#1321 + 1] <> extend:128[R20] + extend:128[#1320]
          + 1
000292fb: CF := pad:128[#1321 + 1] <> pad:128[R20] + pad:128[#1320] + 1
000292ff: ZF := #1321 + 1 = 0
00029303: NF := 63:63[#1321 + 1]
00029308: when ZF goto %0001e4a1
000346cc: goto %0002930c

0002930c:
0002930f: R2 := 0x413000
00029315: R2 := R2 + 0x930
000346cd: goto %0001e5ba

0001e5ba:
0001e5c0: R20 := 0xFFFFFFFFFFFFFFFF
0001e5c5: goto %0001e5c3

0001f8a9:
0001f8ac: VF := 0
0001f8af: CF := 1
0001f8b3: ZF := R0 = 0
0001f8b7: NF := 63:63[R0]
0001f8bd: #897 := ZF <> 1
0001f8c0: VF := 0
0001f8c4: CF := #897
0001f8c9: ZF := 31:0[R23] = 0 | ~#897
0001f8ce: NF := #897 & 31:31[R23]
0001f8d3: when ZF goto %0001e4a1
000346ce: goto %0001f8d7

0001f8d7:
0001f8da: R2 := 0xA
0001f8df: R1 := 0
0001f8e4: R30 := 0x409494
0001f8e7: call @strtoll with return %0001f8e9

0001f8e9:
0001f8ed: #898 := ~R19
0001f8f2: #899 := R20 + ~R19
0001f8f8: VF := extend:128[#899 + 1] <> extend:128[R20] + extend:128[#898] +
          1
0001f8fe: CF := pad:128[#899 + 1] <> pad:128[R20] + pad:128[#898] + 1
0001f902: ZF := #899 + 1 = 0
0001f906: NF := 63:63[#899 + 1]
0001f90c: R20 := R0
0001f912: #900 := R0 + 1
0001f916: #901 := ZF
0001f91c: VF := #901 & extend:128[#900] <> extend:128[R0] + 1
0001f922: CF := #901 & pad:128[#900] <> pad:128[R0] + 1
0001f927: ZF := #901 & #900 = 0
0001f92c: NF := #901 & 63:63[#900]
0001f931: when ZF goto %0001e4a1
000346cf: goto %0001f935

0001f935:
0001f938: when R0 = 0 goto %0001e4a1
000346d0: goto %0001f93c

0001e4a1:
0001e4a7: R0 := 0x430000
0001e4ae: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001e4b4: when 31:0[R0] <> 0 goto %0001e4b2
000346d1: goto %0001e4ca

0001e4b2:
0001e4ba: R0 := 0x413000
0001e4c0: R0 := R0 + 0x9E8
0001e4c5: R30 := 0x409584
0001e4c7: call @puts with return %0001e4c9

0001e4c9:
0001e4cc: goto %0001e4ca

0001e4ca:
0001e4d0: R19 := 1
000346d2: goto %0001e4d2

0001f93c:
0001f93f: R23 := 0x412000
0001f944: R2 := 0x413000
0001f94a: R23 := R23 + 0xAB8
0001f950: R2 := R2 + 0x930
000346d3: goto %0001e5c3

0001e5c3:
0001e5cb: R0 := mem[R19 + 8, el]:u64
0001e5d1: R1 := R23
0001e5d6: R19 := 0x430000
0001e5db: R30 := 0x4094C8
0001e5dd: call @hlist_subcmp with return %0001e5df

0001e5df:
0001e5e3: when 31:0[R0] = 0 goto %0001e5e1
000346d4: goto %0001f7bb

0001e5e1:
0001e5eb: R0 := pad:64[mem[R19 + 0x374, el]:u32]
0001e5f1: when 31:0[R0] <> 0 goto %0001e5ef
000346d5: goto %0001e60d

0001e5ef:
0001e5f8: R1 := R20
0001e5fd: R0 := 0x413000
0001e603: R0 := R0 + 0x9C8
0001e608: R30 := 0x4096E0
0001e60a: call @printf with return %0001e60c

0001e60c:
0001e60f: goto %0001e60d

0001e60d:
0001e614: R1 := pad:64[31:0[R22]]
0001e61a: R2 := R20
0001e620: R0 := pad:64[31:0[R21]]
0001e625: R30 := 0x409650
0001e628: call @data_send with return %0001f72b

0001f72b:
0001f730: R1 := pad:64[mem[R19 + 0x374, el]:u32]
0001f736: R19 := pad:64[31:0[R0]]
0001f73b: when 31:0[R1] = 0 goto %0001e4d2
000346d6: goto %0001f73f

0001f73f:
0001f742: VF := 0
0001f745: CF := 1
0001f749: ZF := 31:0[R0] = 0
0001f74d: NF := 31:31[R0]
0001f752: R2 := 0x413000
0001f758: R2 := R2 + 0x978
0001f75d: R1 := 0x413000
0001f763: R1 := R1 + 0x988
0001f768: R0 := 0x413000
0001f776: when ZF goto %0001f76e
0001f777: goto %0001f772

0001f772:
0001f773: R1 := R2
0001f779: goto %0001f775

0001f76e:
0001f76f: R1 := R1
0001f778: goto %0001f775

0001f775:
0001f77f: R0 := R0 + 0x9C0
0001f784: R30 := 0x409680
0001f786: call @printf with return %0001f788

0001f788:
0001f78a: goto %0001e4d2

0001f7bb:
0001f7c0: R0 := pad:64[mem[R19 + 0x374, el]:u32]
0001f7c6: when 31:0[R0] <> 0 goto %0001f7c4
000346d7: goto %0001f7dc

0001f7c4:
0001f7cc: R0 := 0x413000
0001f7d2: R0 := R0 + 0x9A8
0001f7d7: R30 := 0x4096CC
0001f7d9: call @puts with return %0001f7db

0001f7db:
0001f7de: goto %0001f7dc

0001f7dc:
0001f7e3: R1 := pad:64[31:0[R22]]
0001f7e9: R0 := pad:64[31:0[R21]]
0001f7ee: R30 := 0x4094E0
0001f7f0: call @chunked_data_send with return %0001f7f2

0001f7f2:
0001f7f7: R1 := pad:64[mem[R19 + 0x374, el]:u32]
0001f7fd: R19 := pad:64[31:0[R0]]
0001f802: when 31:0[R1] = 0 goto %0001e4d2
000346d8: goto %0001f806

0001f806:
0001f809: VF := 0
0001f80c: CF := 1
0001f810: ZF := 31:0[R0] = 0
0001f814: NF := 31:31[R0]
0001f819: R2 := 0x413000
0001f81f: R2 := R2 + 0x938
0001f824: R1 := 0x413000
0001f82a: R1 := R1 + 0x950
0001f82f: R0 := 0x413000
0001f83d: when ZF goto %0001f835
0001f83e: goto %0001f839

0001f839:
0001f83a: R1 := R2
0001f840: goto %0001f83c

0001f835:
0001f836: R1 := R1
0001f83f: goto %0001f83c

0001f83c:
0001f846: R0 := R0 + 0x9C0
0001f84b: R30 := 0x409510
0001f84d: call @printf with return %0001f84f

0001f84f:
0001f851: goto %0001e4d2

0001e4d2:
0001e4d6: #823 := R31 + 0x20
0001e4db: R21 := mem[#823, el]:u64
0001e4e0: R22 := mem[#823 + 8, el]:u64
0001e4e6: R0 := pad:64[31:0[R19]]
0001e4ec: #824 := R31 + 0x10
0001e4f1: R19 := mem[#824, el]:u64
0001e4f6: R20 := mem[#824 + 8, el]:u64
0001e4fd: R23 := mem[R31 + 0x30, el]:u64
0001e504: R29 := mem[R31, el]:u64
0001e509: R30 := mem[R31 + 8, el]:u64
0001e50d: R31 := R31 + 0x50
0001e512: call R30 with noreturn

000346d9: sub http_has_body(http_has_body_result)
00034be7: http_has_body_result :: out u32 = low:32[R0]

0001e198:
0001e19f: #810 := R31 - 0x30
0001e1a5: mem := mem with [#810, el]:u64 <- R29
0001e1ab: mem := mem with [#810 + 8, el]:u64 <- R30
0001e1af: R31 := #810
0001e1b5: R29 := R31
0001e1bb: #811 := R31 + 0x10
0001e1c1: mem := mem with [#811, el]:u64 <- R19
0001e1c7: mem := mem with [#811 + 8, el]:u64 <- R20
0001e1cd: R19 := R1
0001e1d3: #812 := R31 + 0x20
0001e1d9: mem := mem with [#812, el]:u64 <- R21
0001e1df: mem := mem with [#812 + 8, el]:u64 <- R22
0001e1e5: R21 := R0
0001e1eb: when R1 = 0 goto %0001e1e9
000346da: goto %0002958a

0001e1e9:
0001e1f2: when R0 = 0 goto %0001e1f0
000346db: goto %0001e27d

0002958a:
0002958f: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
00029594: when 31:0[R0] <> 0 goto %0001e255
000346dc: goto %00029598

0001e255:
0001e258: when R21 = 0 goto %0001e1f0
000346dd: goto %0001e25c

0001e1f0:
0001e1f9: R3 := R19
0001e1fe: R1 := 0x413000
0001e203: R2 := 0
0001e209: R1 := R1 + 0x8A0
0001e20e: R0 := 3
0001e213: R30 := 0x4093E8
0001e215: call @syslog with return %0001e217

0001e217:
0001e21a: goto %0001e218

0001e25c:
0001e260: #815 := ~R21
0001e265: #816 := R1 + ~R21
0001e26b: VF := extend:128[#816 + 1] <> extend:128[R1] + extend:128[#815] + 1
0001e271: CF := pad:128[#816 + 1] <> pad:128[R1] + pad:128[#815] + 1
0001e275: ZF := #816 + 1 = 0
0001e279: NF := 63:63[#816 + 1]
0001e27f: when ZF <> 1 goto %0001e27d
000346de: goto %000294c9

0001e27d:
0001e287: R0 := pad:64[mem[R21, el]:u32]
0001e28d: when 31:0[R0] = 0 goto %0001e28b
000346df: goto %00029445

0001e28b:
0001e294: R19 := R21
0001e299: R20 := 1
0001e29e: goto %0001e29c

00029445:
0002944a: R19 := mem[R21 + 0x28, el]:u64
0002944f: R0 := 0x413000
00029455: R0 := R0 + 0x338
0002945b: R1 := R19
00029460: R30 := 0x40932C
00029462: call @strcasecmp with return %00029464

00029464:
00029468: when 31:0[R0] = 0 goto %00029466
000346e0: goto %00029488

00029488:
0002948c: R1 := R19
00029491: R0 := 0x412000
00029497: R0 := R0 + 0xEB0
0002949c: R30 := 0x409340
0002949e: call @strcasecmp with return %000294a0

000294a0:
000294a3: VF := 0
000294a6: CF := 1
000294aa: ZF := 31:0[R0] = 0
000294ae: NF := 31:31[R0]
000294b4: R19 := R21
000294c0: when ZF goto %000294b9
000294c1: goto %000294bc

000294bc:
000294bd: R20 := 1
000294c3: goto %000294bf

000294b9:
000294ba: R20 := 0
000294c2: goto %000294bf

000294bf:
000294c7: goto %0001e29c

00029598:
0002959b: when R21 <> 0 goto %000294c9
000346e1: goto %000294d2

000294c9:
000294ce: R0 := pad:64[mem[R21, el]:u32]
000294d4: when 31:0[R0] = 0 goto %000294d2
000346e2: goto %00029564

00029564:
00029569: R1 := mem[R21 + 0x28, el]:u64
0002956e: R0 := 0x412000
00029574: R0 := R0 + 0xEB0
00029579: R30 := 0x4092F0
0002957b: call @strcasecmp with return %0002957d

0002957d:
00029580: when 31:0[R0] <> 0 goto %000294d2
000346e3: goto %00029584

00029584:
00029588: R21 := R19
000346e4: goto %00029466

00029466:
00029470: R0 := mem[R21 + 8, el]:u64
00029475: R1 := 0x412000
0002947b: R1 := R1 + 0xAA8
00029480: R30 := 0x409308
00029482: call @hlist_get with return %00029484

00029484:
00029486: goto %0001e218

000294d2:
000294dc: R0 := pad:64[mem[R19 + 0x10, el]:u32]
000294e1: R3 := 0x130
000294e6: R1 := 0x63
000294ec: #1326 := 31:0[R0] - 0xCC
000294f1: VF := extend:64[#1326] <> extend:64[31:0[R0]] - 0xCC
000294f6: CF := pad:64[#1326] <> pad:64[31:0[R0]] + 0xFFFFFF34
000294fa: ZF := #1326 = 0
000294fe: NF := 31:31[#1326]
00029504: R2 := pad:64[31:0[R0] - 0x64]
0002950a: #1327 := ~31:0[R3]
0002950f: #1328 := 31:0[R0] + ~31:0[R3]
00029513: #1329 := ZF <> 1
0002951a: VF := #1329 & extend:64[#1328 + 1] <> extend:64[31:0[R0]] +
          extend:64[#1327] + 1
00029521: CF := #1329 & pad:64[#1328 + 1] <> pad:64[31:0[R0]] + pad:64[#1327]
          + 1
00029526: ZF := #1328 + 1 = 0 | ~#1329
0002952b: NF := #1329 & 31:31[#1328 + 1]
00029531: #1330 := ~31:0[R1]
00029536: #1331 := 31:0[R2] + ~31:0[R1]
0002953a: #1332 := ZF <> 1
00029541: VF := #1332 & extend:64[#1331 + 1] <> extend:64[31:0[R2]] +
          extend:64[#1330] + 1
00029548: CF := #1332 & pad:64[#1331 + 1] <> pad:64[31:0[R2]] + pad:64[#1330]
          + 1
0002954d: ZF := #1332 & #1331 + 1 = 0
00029552: NF := #1332 & 31:31[#1331 + 1]
0002955f: when ~(CF & ~ZF) goto %00029558
00029560: goto %0002955b

0002955b:
0002955c: R20 := 1
00029562: goto %0002955e

00029558:
00029559: R20 := 0
00029561: goto %0002955e

0002955e:
000346e5: goto %0001e29c

0001e29c:
0001e2a4: R0 := mem[R19 + 8, el]:u64
0001e2a9: R1 := 0x412000
0001e2af: R1 := R1 + 0xAA8
0001e2b4: R30 := 0x409278
0001e2b6: call @hlist_get with return %0001e2b8

0001e2b8:
0001e2bb: VF := 0
0001e2be: CF := 1
0001e2c2: ZF := R0 = 0
0001e2c6: NF := 63:63[R0]
0001e2d2: when ZF <> 1 goto %0001e2cb
0001e2d3: goto %0001e2ce

0001e2ce:
0001e2cf: R2 := 1
0001e2d5: goto %0001e2d1

0001e2cb:
0001e2cc: R2 := 0
0001e2d4: goto %0001e2d1

0001e2d1:
0001e2dc: R22 := pad:64[31:0[R20] & 31:0[R2]]
0001e2e1: VF := 0
0001e2e4: CF := 0
0001e2e9: ZF := (31:0[R20] & 31:0[R2]) = 0
0001e2ee: NF := 31:31[R20] & 31:31[R2]
0001e2f4: when ZF <> 1 goto %0001e2f2
000346e6: goto %000293df

0001e2f2:
0001e2fc: R0 := mem[R19 + 8, el]:u64
0001e301: R1 := 0x413000
0001e307: R1 := R1 + 0x920
0001e30c: R30 := 0x409360
0001e30e: call @hlist_in with return %0001e310

0001e310:
0001e314: when 31:0[R0] <> 0 goto %0001e312
000346e7: goto %0001e3bd

0001e312:
0001e31a: R20 := 0x412000
0001e320: R20 := R20 + 0xAB8
0001e325: goto %0001e323

0001e3bd:
0001e3c2: R0 := mem[R19 + 8, el]:u64
0001e3c7: R20 := 0x412000
0001e3cd: R20 := R20 + 0xAB8
0001e3d3: R1 := R20
0001e3d8: R30 := 0x409378
0001e3da: call @hlist_in with return %0001e3dc

0001e3dc:
0001e3e0: when 31:0[R0] = 0 goto %0001e3de
000346e8: goto %0001e323

0001e3de:
0001e3e8: R0 := mem[R19 + 8, el]:u64
0001e3ed: R2 := 0x412000
0001e3f2: R1 := 0x412000
0001e3f8: R2 := R2 + 0xDB0
0001e3fe: R1 := R1 + 0xA80
0001e403: R30 := 0x409404
0001e405: call @hlist_subcmp with return %0001e407

0001e407:
0001e40a: when 31:0[R0] <> 0 goto %0001e323
000346e9: goto %0001e40e

0001e40e:
0001e410: goto %0001e218

0001e323:
0001e32b: R0 := mem[R19 + 8, el]:u64
0001e331: R1 := R20
0001e336: R30 := 0x409388
0001e338: call @hlist_in with return %0001e33a

0001e33a:
0001e33e: when 31:0[R0] <> 0 goto %0001e33c
000346ea: goto %0001e373

0001e33c:
0001e346: R0 := mem[R19 + 8, el]:u64
0001e34c: R1 := R20
0001e351: R2 := 0x413000
0001e357: R2 := R2 + 0x930
0001e35c: R30 := 0x4093C0
0001e35e: call @hlist_subcmp with return %0001e360

0001e360:
0001e364: R1 := pad:64[31:0[R0]]
0001e369: R0 := 1
0001e36e: when 31:0[R1] <> 0 goto %0001e220
000346eb: goto %0001e372

0001e372:
0001e375: goto %0001e373

0001e373:
0001e379: R0 := 0xFFFFFFFFFFFFFFFF
0001e37e: goto %0001e37c

000293df:
000293e2: VF := 0
000293e5: CF := 1
000293e9: ZF := R0 = 0
000293ed: NF := 63:63[R0]
000293f3: #1324 := ZF <> 1
000293f6: VF := 0
000293fa: CF := #1324
000293ff: ZF := 31:0[R20] = 0 | ~#1324
00029404: NF := #1324 & 31:31[R20]
00029409: when ZF goto %0001e218
000346ec: goto %0002940d

0002940d:
00029410: R2 := 0xA
00029415: R1 := 0
0002941a: R30 := 0x4092A4
0002941c: call @strtoll with return %0002941e

0002941e:
00029422: #1325 := R0 + 1
00029427: VF := extend:128[#1325] <> extend:128[R0] + 1
0002942c: CF := pad:128[#1325] <> pad:128[R0] + 1
00029430: ZF := #1325 = 0
00029434: NF := 63:63[#1325]
00029440: when ZF <> 1 goto %00029439
00029441: goto %0002943c

0002943c:
0002943d: R22 := 1
00029443: goto %0002943f

00029439:
0002943a: R22 := 0
00029442: goto %0002943f

0002943f:
000346ed: goto %0001e37c

0001e37c:
0001e382: VF := 0
0001e385: CF := 1
0001e389: ZF := 31:0[R22] = 0
0001e38d: NF := 31:31[R22]
0001e393: #817 := ~R19
0001e398: #818 := R21 + ~R19
0001e39c: #819 := ZF <> 1
0001e3a3: VF := #819 & extend:128[#818 + 1] <> extend:128[R21] +
          extend:128[#817] + 1
0001e3aa: CF := #819 & pad:128[#818 + 1] <> pad:128[R21] + pad:128[#817] + 1
0001e3af: ZF := #819 & #818 + 1 = 0
0001e3b4: NF := #819 & 63:63[#818 + 1]
0001e3b9: when ZF <> 1 goto %0001e220
000346ee: goto %0001e218

0001e218:
0001e21e: R0 := 0
000346ef: goto %0001e220

0001e220:
0001e224: #813 := R31 + 0x10
0001e229: R19 := mem[#813, el]:u64
0001e22e: R20 := mem[#813 + 8, el]:u64
0001e234: #814 := R31 + 0x20
0001e239: R21 := mem[#814, el]:u64
0001e23e: R22 := mem[#814 + 8, el]:u64
0001e245: R29 := mem[R31, el]:u64
0001e24a: R30 := mem[R31 + 8, el]:u64
0001e24e: R31 := R31 + 0x30
0001e253: call R30 with noreturn

000346f0: sub http_parse_basic(http_parse_basic_result)
00034be8: http_parse_basic_result :: out u32 = low:32[R0]

0001fc4c:
0001fc50: #917 := R31 - 0x30
0001fc56: mem := mem with [#917, el]:u64 <- R29
0001fc5c: mem := mem with [#917 + 8, el]:u64 <- R30
0001fc60: R31 := #917
0001fc66: R29 := R31
0001fc6c: #918 := R31 + 0x10
0001fc72: mem := mem with [#918, el]:u64 <- R19
0001fc78: mem := mem with [#918 + 8, el]:u64 <- R20
0001fc7e: R20 := R2
0001fc84: R19 := R0
0001fc89: R2 := 0x413000
0001fc8f: R2 := R2 + 0xA30
0001fc95: #919 := R31 + 0x20
0001fc9b: mem := mem with [#919, el]:u64 <- R21
0001fca1: mem := mem with [#919 + 8, el]:u64 <- R22
0001fca7: R21 := R1
0001fcac: R30 := 0x409928
0001fcae: call @hlist_subcmp with return %0001fcb0

0001fcb0:
0001fcb4: when 31:0[R0] <> 0 goto %0001fcb2
000346f1: goto %0001fd9b

0001fcb2:
0001fcbb: R1 := R21
0001fcc1: R0 := R19
0001fcc6: R30 := 0x409948
0001fcc8: call @hlist_get with return %0001fcca

0001fcca:
0001fcce: R19 := R0
0001fcd3: R30 := 0x409950
0001fcd5: call @strlen with return %0001fcd7

0001fcd7:
0001fcdb: R0 := R0 + 1
0001fce0: R30 := 0x409958
0001fce2: call @zmalloc with return %0001fce4

0001fce4:
0001fce8: R21 := R0
0001fcee: R0 := R19
0001fcf3: R30 := 0x409964
0001fcf5: call @strlen with return %0001fcf7

0001fcf7:
0001fcfa: R3 := 5
0001fcff: goto %0001fcfd

0001fcfd:
0001fd04: #920 := ~R3
0001fd09: #921 := R0 + ~R3
0001fd0f: VF := extend:128[#921 + 1] <> extend:128[R0] + extend:128[#920] + 1
0001fd15: CF := pad:128[#921 + 1] <> pad:128[R0] + pad:128[#920] + 1
0001fd19: ZF := #921 + 1 = 0
0001fd1d: NF := 63:63[#921 + 1]
0001fd24: when CF & ~ZF goto %0001fd22
000346f2: goto %0001fd4f

0001fd22:
0001fd2b: R3 := R3 + 1
0001fd33: R4 := pad:64[mem[R19 + R3]]
0001fd39: #922 := 31:0[R4] - 0x20
0001fd3e: VF := extend:64[#922] <> extend:64[31:0[R4]] - 0x20
0001fd43: CF := pad:64[#922] <> pad:64[31:0[R4]] + 0xFFFFFFE0
0001fd47: ZF := #922 = 0
0001fd4b: NF := 31:31[#922]
0001fd51: when ZF <> 1 goto %0001fd4f
000346f3: goto %0001fcfd

0001fd4f:
0001fd59: R1 := R19 + R3
0001fd5f: R0 := R21
0001fd64: R30 := 0x409990
0001fd66: call @from_base64 with return %0001fd68

0001fd68:
0001fd6c: R0 := R21
0001fd71: R1 := 0x3A
0001fd76: R30 := 0x40999C
0001fd79: call @strchr with return %0001fd7b

0001fd7b:
0001fd7f: R19 := R0
0001fd85: when R0 = 0 goto %0001fd83
000346f4: goto %00028ecf

0001fd83:
0001fd8c: R0 := R21
0001fd91: R30 := 0x409AC8
0001fd93: call @free with return %0001fd95

0001fd95:
0001fd98: R0 := 0xFFFFFFFF
0001fd9d: goto %0001fd9b

00028ecf:
00028ed4: mem := mem with [R0] <- 0
00028ed9: R1 := 0x5C
00028edf: R0 := R21
00028ee4: R30 := 0x4099B4
00028ee6: call @strchr with return %00028ee8

00028ee8:
00028eec: R22 := R0
00028ef2: when R0 = 0 goto %00028ef0
000346f5: goto %000290cd

00028ef0:
00028ef9: when R20 = 0 goto %00028ef7
000346f6: goto %0002907c

0002907c:
00029080: R1 := R21
00029086: R0 := R20
0002908b: R2 := 0x32
00029090: R30 := 0x409A64
00029092: call @strlcpy with return %00029094

00029094:
00029096: goto %00028ef7

000290cd:
000290d2: mem := mem with [R0] <- 0
000290d7: when R20 <> 0 goto %00029098
000346f7: goto %00028ef7

00029098:
0002909c: R1 := R21
000290a1: R2 := 0x32
000290a8: R0 := R20 + R2
000290ad: R30 := 0x409A78
000290af: call @strlcpy with return %000290b1

000290b1:
000290b5: R1 := R22 + 1
000290bb: R0 := R20
000290c0: R2 := 0x32
000290c5: R30 := 0x409A88
000290c7: call @strlcpy with return %000290c9

000290c9:
000290cb: goto %00028ef7

00028ef7:
00028f01: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
00028f07: when 31:0[R0] <> 0 goto %00028f05
000346f8: goto %0002906e

00028f05:
00028f0e: R2 := R19 + 1
00028f14: R1 := R20 + 0x32
00028f1a: R0 := R20
00028f1f: R30 := 0x409A08
00028f21: call @ntlm2_hash_password with return %00028f23

00028f23:
00028f27: when R0 = 0 goto %00028f25
000346f9: goto %0002904e

0002904e:
00029052: R1 := R20 + 0xFA
00029059: R2 := mem[R0, el]:u64
0002905e: R3 := mem[R0 + 8, el]:u64
00029066: mem := mem with [R1, el]:u64 <- R2
0002906c: mem := mem with [R1 + 8, el]:u64 <- R3
000346fa: goto %00028f25

00028f25:
00028f2d: R30 := 0x409A1C
00028f2f: call @free with return %00028f31

00028f31:
00028f36: R0 := pad:64[mem[R20 + 0x130, el]:u32]
00028f3c: when 31:0[R0] = 0 goto %00028f3a
000346fb: goto %00028fed

0002906e:
00029073: R0 := pad:64[mem[R20 + 0x130, el]:u32]
00029078: when 31:0[R0] <> 0 goto %00028fed
000346fc: goto %00028f3a

00028fed:
00028ff1: R0 := R19 + 1
00028ff6: R30 := 0x409A2C
00028ff8: call @ntlm_hash_nt_password with return %00028ffa

00028ffa:
00028ffe: when R0 <> 0 goto %00028ffc
000346fd: goto %00029047

00028ffc:
00029006: R2 := mem[R0, el]:u64
0002900b: R3 := mem[R0 + 8, el]:u64
00029011: #1308 := R20 + 0xC8
00029017: mem := mem with [#1308, el]:u64 <- R2
0002901d: mem := mem with [#1308 + 8, el]:u64 <- R3
00029024: R1 := mem[R0 + 0xD, el]:u64
0002902c: mem := mem with [R20 + 0xD5, el]:u64 <- R1
00029031: R30 := 0x409AA0
00029033: call @free with return %00029035

00029035:
00029038: goto %00029036

00029047:
0002904a: R30 := 0x409A34
0002904c: call @free with return %00029036

00029036:
0002903e: R0 := pad:64[mem[R20 + 0x134, el]:u32]
00029043: when 31:0[R0] = 0 goto %00028f98
000346fe: goto %00028f48

00028f3a:
00028f44: R0 := pad:64[mem[R20 + 0x134, el]:u32]
00028f4a: when 31:0[R0] <> 0 goto %00028f48
000346ff: goto %00028f98

00028f48:
00028f51: R0 := R19 + 1
00028f56: R30 := 0x409A44
00028f58: call @ntlm_hash_lm_password with return %00028f5a

00028f5a:
00028f5e: when R0 <> 0 goto %00028f5c
00034700: goto %00028fe2

00028f5c:
00028f65: R1 := R20 + 0x96
00028f6c: R2 := mem[R0, el]:u64
00028f71: R3 := mem[R0 + 8, el]:u64
00028f79: mem := mem with [R1, el]:u64 <- R2
00028f7f: mem := mem with [R1 + 8, el]:u64 <- R3
00028f86: R1 := mem[R0 + 0xD, el]:u64
00028f8e: mem := mem with [R20 + 0xA3, el]:u64 <- R1
00028f93: R30 := 0x409ABC
00028f95: call @free with return %00028f97

00028f97:
00028f9a: goto %00028f98

00028fe2:
00028fe5: R30 := 0x409A4C
00028fe7: call @free with return %00028fe9

00028fe9:
00028feb: goto %00028f98

00028f98:
00028f9f: R0 := R21
00028fa4: R30 := 0x4099E4
00028fa6: call @free with return %00028fa8

00028fa8:
00028fac: #1306 := R31 + 0x10
00028fb1: R19 := mem[#1306, el]:u64
00028fb6: R20 := mem[#1306 + 8, el]:u64
00028fbb: R0 := 1
00028fc1: #1307 := R31 + 0x20
00028fc6: R21 := mem[#1307, el]:u64
00028fcb: R22 := mem[#1307 + 8, el]:u64
00028fd2: R29 := mem[R31, el]:u64
00028fd7: R30 := mem[R31 + 8, el]:u64
00028fdb: R31 := R31 + 0x30
00028fe0: call R30 with noreturn

0001fd9b:
0001fda2: #923 := R31 + 0x10
0001fda7: R19 := mem[#923, el]:u64
0001fdac: R20 := mem[#923 + 8, el]:u64
0001fdb2: #924 := R31 + 0x20
0001fdb7: R21 := mem[#924, el]:u64
0001fdbc: R22 := mem[#924 + 8, el]:u64
0001fdc3: R29 := mem[R31, el]:u64
0001fdc8: R30 := mem[R31 + 8, el]:u64
0001fdcc: R31 := R31 + 0x30
0001fdd1: call R30 with noreturn

00034701: sub inet_ntoa(inet_ntoa_result)
00034be9: inet_ntoa_result :: out u32 = low:32[R0]

0002cd07:
0002fc46: R16 := 0x430000
0002fc4d: R17 := mem[R16 + 0x90, el]:u64
0002fc53: R16 := R16 + 0x90
0002fc58: call R17 with noreturn

00034702: sub inet_ntop(inet_ntop_result)
00034bea: inet_ntop_result :: out u32 = low:32[R0]

0001a918:
000302fa: R16 := 0x430000
00030301: R17 := mem[R16 + 0x300, el]:u64
00030307: R16 := R16 + 0x300
0003030c: call R17 with noreturn

00034703: sub is_http_header(is_http_header_result)
00034beb: is_http_header_result :: out u32 = low:32[R0]

00025d29:
00025d2d: #1157 := R31 - 0x20
00025d33: mem := mem with [#1157, el]:u64 <- R29
00025d39: mem := mem with [#1157 + 8, el]:u64 <- R30
00025d3d: R31 := #1157
00025d42: R1 := 0x413000
00025d48: R1 := R1 + 0x640
00025d4e: R29 := R31
00025d54: #1158 := R31 + 0x10
00025d5a: mem := mem with [#1158, el]:u64 <- R19
00025d60: mem := mem with [#1158 + 8, el]:u64 <- R20
00025d66: R20 := R0
00025d6b: R30 := 0x407FEC
00025d6d: call @strcspn with return %00025d6f

00025d6f:
00025d73: R19 := R0
00025d79: R0 := R20
00025d7e: R30 := 0x407FF8
00025d80: call @strlen with return %00025d82

00025d82:
00025d86: #1159 := ~R0
00025d8b: #1160 := R19 + ~R0
00025d91: VF := extend:128[#1160 + 1] <> extend:128[R19] + extend:128[#1159]
          + 1
00025d97: CF := pad:128[#1160 + 1] <> pad:128[R19] + pad:128[#1159] + 1
00025d9b: ZF := #1160 + 1 = 0
00025d9f: NF := 63:63[#1160 + 1]
00025da5: #1161 := R31 + 0x10
00025daa: R19 := mem[#1161, el]:u64
00025daf: R20 := mem[#1161 + 8, el]:u64
00025dbb: when ZF goto %00025db4
00025dbc: goto %00025db7

00025db7:
00025db8: R0 := 1
00025dbe: goto %00025dba

00025db4:
00025db5: R0 := 0
00025dbd: goto %00025dba

00025dba:
00025dc5: R29 := mem[R31, el]:u64
00025dca: R30 := mem[R31 + 8, el]:u64
00025dce: R31 := R31 + 0x20
00025dd3: call R30 with noreturn

00034704: sub is_memory_all_zero(is_memory_all_zero_result)
00034bec: is_memory_all_zero_result :: out u32 = low:32[R0]

0001089c:
000108a0: when R1 = 0 goto %0001089e
00034705: goto %00016c92

00016c92:
00016c97: R2 := R0 + R1
00016c9c: goto %00016c9a

00016c9a:
00016ca2: R1 := pad:64[mem[R0]]
00016ca8: R0 := R0 + 1
00016cae: when 31:0[R1] = 0 goto %00016cac
00034706: goto %00016cd7

00016cd7:
00016cda: R0 := 0
00016cdf: call R30 with noreturn

00016cac:
00016cb5: #359 := ~R2
00016cba: #360 := R0 + ~R2
00016cc0: VF := extend:128[#360 + 1] <> extend:128[R0] + extend:128[#359] + 1
00016cc6: CF := pad:128[#360 + 1] <> pad:128[R0] + pad:128[#359] + 1
00016cca: ZF := #360 + 1 = 0
00016cce: NF := 63:63[#360 + 1]
00016cd3: when ZF goto %0001089e
00034707: goto %00016c9a

0001089e:
000108a6: R0 := 1
000108ab: call R30 with noreturn

00034708: sub listen(listen_fd, listen_n, listen_result)
00034bed: listen_fd :: in u32 = low:32[R0]
00034bee: listen_n :: in u32 = low:32[R1]
00034bef: listen_result :: out u32 = low:32[R0]

0001aa4f:
0002fb96: R16 := 0x430000
0002fb9d: R17 := mem[R16 + 0x50, el]:u64
0002fba3: R16 := R16 + 0x50
0002fba8: call R17 with noreturn

00034709: sub listen_add(listen_add_result)
00034bf0: listen_add_result :: out u32 = low:32[R0]

0001fe93:
0001fe97: #926 := R31 - 0x50
0001fe9d: mem := mem with [#926, el]:u64 <- R29
0001fea3: mem := mem with [#926 + 8, el]:u64 <- R30
0001fea7: R31 := #926
0001fead: R29 := R31
0001feb3: #927 := R31 + 0x10
0001feb9: mem := mem with [#927, el]:u64 <- R19
0001febf: mem := mem with [#927 + 8, el]:u64 <- R20
0001fec5: R19 := R2
0001fecb: R20 := pad:64[31:0[R3]]
0001fed1: #928 := R31 + 0x20
0001fed7: mem := mem with [#928, el]:u64 <- R21
0001fedd: mem := mem with [#928 + 8, el]:u64 <- R22
0001fee3: R22 := R0
0001fee9: R21 := R1
0001feef: R0 := R2
0001fef4: R1 := 0x3A
0001fef9: R30 := 0x409B6C
0001fefb: call @strrchr with return %0001fefd

0001fefd:
0001ff01: when R0 = 0 goto %0001feff
0003470a: goto %00028e38

0001feff:
0001ff07: R1 := 0
0001ff0d: R0 := R19
0001ff12: R2 := 0xA
0001ff17: R30 := 0x409C50
0001ff19: call @strtol with return %0001ff1b

0001ff1b:
0001ff1f: R1 := R0
0001ff25: when 31:0[R0] = 0 goto %0001ff23
0003470b: goto %00028d0e

0001ff23:
0001ff2e: mem := mem with [R31 + 0x30, el]:u64 <- R23
0003470c: goto %0001ff30

00028d0e:
00028d12: R2 := pad:64[31:0[R20]]
00028d18: R0 := R31 + 0x48
00028d1d: R30 := 0x409C64
00028d1f: call @so_resolv_wildcard with return %00028d21

00028d21:
00028d24: goto %00028d22

00028e38:
00028e3e: mem := mem with [R31 + 0x30, el]:u64 <- R23
00028e45: R2 := R0 + ~R19 + 1
00028e4c: R0 := pad:64[mem[R19]]
00028e52: R23 := extend:64[31:0[R2]]
00028e58: #1304 := 31:0[R0] - 0x5B
00028e5d: VF := extend:64[#1304] <> extend:64[31:0[R0]] - 0x5B
00028e62: CF := pad:64[#1304] <> pad:64[31:0[R0]] + 0xFFFFFFA5
00028e66: ZF := #1304 = 0
00028e6a: NF := 31:31[#1304]
00028e70: when ZF <> 1 goto %00028e6e
0003470d: goto %00028e8b

00028e8b:
00028e90: R0 := R19 + R23
00028e97: R0 := pad:64[mem[R0 - 1]]
00028e9d: #1305 := 31:0[R0] - 0x5D
00028ea2: VF := extend:64[#1305] <> extend:64[31:0[R0]] - 0x5D
00028ea7: CF := pad:64[#1305] <> pad:64[31:0[R0]] + 0xFFFFFFA3
00028eab: ZF := #1305 = 0
00028eaf: NF := 31:31[#1305]
00028eb4: when ZF goto %00028d9a
0003470e: goto %00028e6e

00028d9a:
00028d9e: R2 := pad:64[31:0[R2] - 2]
00028da4: R0 := R19
00028da9: R1 := 1
00028dae: R30 := 0x409C38
00028db0: call @substr with return %00028db2

00028db2:
00028db6: R20 := R0
00028dbb: goto %00028db9

00028e6e:
00028e77: R0 := R19
00028e7c: R1 := 0
00028e81: R30 := 0x409BA4
00028e83: call @substr with return %00028e85

00028e85:
00028e89: R20 := R0
0003470f: goto %00028db9

00028db9:
00028dbf: R2 := 0xA
00028dc5: R0 := R23 + 1
00028dcc: R0 := R19 + R0
00028dd1: R1 := 0
00028dd6: R30 := 0x409BBC
00028dd8: call @strtol with return %00028dda

00028dda:
00028dde: R2 := R0
00028de3: when 31:0[R0] = 0 goto %0001ff30
00034710: goto %00028de7

00028de7:
00028deb: R1 := R20
00028df1: R0 := R31 + 0x48
00028df6: R30 := 0x409BD0
00028df8: call @so_resolv with return %00028dfa

00028dfa:
00028dfd: when 31:0[R0] = 0 goto %0001ff30
00034711: goto %00028e01

0001ff30:
0001ff34: R2 := R19
0001ff39: R1 := 0x413000
0001ff3f: R1 := R1 + 0xA90
0001ff44: R0 := 3
0001ff49: R30 := 0x409C80
0001ff4b: call @syslog with return %0001ff4d

0001ff4d:
0001ff50: R0 := 1
0001ff55: R30 := 0x409C88
0001ff57: call @myexit with return %0001ff59

0001ff59:
00034712: call @tunnel_add with noreturn

00028e01:
00028e05: R0 := R20
00028e0a: R30 := 0x409BDC
00028e0c: call @free with return %00028e0e

00028e0e:
00028e13: R23 := mem[R31 + 0x30, el]:u64
00034713: goto %00028d22

00028d22:
00028d29: R0 := R21
00028d30: R1 := mem[R31 + 0x48, el]:u64
00028d35: R2 := 0
00028d3a: R30 := 0x409BF0
00028d3c: call @so_listen with return %00028d3e

00028d3e:
00028d41: VF := 0
00028d44: CF := 1
00028d48: ZF := 31:0[R0] = 0
00028d4c: NF := 31:31[R0]
00028d54: when ~(NF = VF & ~ZF) goto %00028d52
00034714: goto %00028e15

00028e15:
00028e18: R1 := 0x413000
00028e1e: R3 := R19
00028e24: R2 := R22
00028e2a: R1 := R1 + 0xAB8
00028e2f: R0 := 6
00028e34: R30 := 0x409C10
00028e36: call @syslog with return %00028d52

00028d52:
00028d5c: R0 := mem[R31 + 0x48, el]:u64
00028d61: R30 := 0x409C18
00028d63: call @freeaddrinfo with return %00028d65

00028d65:
00028d69: #1302 := R31 + 0x10
00028d6e: R19 := mem[#1302, el]:u64
00028d73: R20 := mem[#1302 + 8, el]:u64
00028d79: #1303 := R31 + 0x20
00028d7e: R21 := mem[#1303, el]:u64
00028d83: R22 := mem[#1303 + 8, el]:u64
00028d8a: R29 := mem[R31, el]:u64
00028d8f: R30 := mem[R31 + 8, el]:u64
00028d93: R31 := R31 + 0x50
00028d98: call R30 with noreturn

00034715: sub lowercase(lowercase_result)
00034bf1: lowercase_result :: out u32 = low:32[R0]

00010293:
00010297: #8 := R31 - 0x20
0001029d: mem := mem with [#8, el]:u64 <- R29
000102a3: mem := mem with [#8 + 8, el]:u64 <- R30
000102a7: R31 := #8
000102ad: R29 := R31
000102b3: #9 := R31 + 0x10
000102b9: mem := mem with [#9, el]:u64 <- R19
000102bf: mem := mem with [#9 + 8, el]:u64 <- R20
000102c5: R20 := R0
000102ca: R19 := 0
000102cf: goto %000102cd

000102cd:
000102d4: R0 := R20
000102d9: R30 := 0x40F308
000102dc: call @strlen with return %000102de

000102de:
000102e2: #10 := ~R0
000102e7: #11 := R19 + ~R0
000102ed: VF := extend:128[#11 + 1] <> extend:128[R19] + extend:128[#10] + 1
000102f3: CF := pad:128[#11 + 1] <> pad:128[R19] + pad:128[#10] + 1
000102f7: ZF := #11 + 1 = 0
000102fb: NF := 63:63[#11 + 1]
00010301: when CF <> 1 goto %000102ff
00034716: goto %00010332

00010332:
00010336: R0 := R20
0001033c: #12 := R31 + 0x10
00010341: R19 := mem[#12, el]:u64
00010346: R20 := mem[#12 + 8, el]:u64
0001034d: R29 := mem[R31, el]:u64
00010352: R30 := mem[R31 + 8, el]:u64
00010356: R31 := R31 + 0x20
0001035b: call R30 with noreturn

000102ff:
00010307: R30 := 0x40F2EC
0001030a: call @__ctype_tolower_loc with return %0001030c

0001030c:
00010311: R0 := mem[R0, el]:u64
00010319: R1 := pad:64[mem[R20 + R19]]
00010321: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001032a: mem := mem with [R20 + R19] <- 7:0[R0]
00010330: R19 := R19 + 1
00034717: goto %000102cd

00034718: sub magic_auth_detect(magic_auth_detect_result)
00034bf2: magic_auth_detect_result :: out u32 = low:32[R0]

00025bb5:
00025bb9: #1149 := R31 - 0x180
00025bbf: mem := mem with [#1149, el]:u64 <- R29
00025bc5: mem := mem with [#1149 + 8, el]:u64 <- R30
00025bc9: R31 := #1149
00025bcf: R29 := R31
00025bd5: #1150 := R31 + 0x20
00025bdb: mem := mem with [#1150, el]:u64 <- R21
00025be1: mem := mem with [#1150 + 8, el]:u64 <- R22
00025be6: R22 := 0x416000
00025bec: R22 := R22 + 0x278
00025bf2: R1 := R31 + 0x200
00025bf8: #1151 := R31 + 0x30
00025bfe: mem := mem with [#1151, el]:u64 <- R23
00025c04: mem := mem with [#1151 + 8, el]:u64 <- R24
00025c0a: R23 := R0
00025c11: V4 := mem[R22, el]:u128
00025c16: V5 := mem[R22 + 0x10, el]:u128
00025c1c: R0 := R31 + 0x118
00025c22: #1152 := R31 + 0x10
00025c28: mem := mem with [#1152, el]:u64 <- R19
00025c2e: mem := mem with [#1152 + 8, el]:u64 <- R20
00025c34: R2 := R31 + 0x200
00025c3a: #1153 := R22 + 0x20
00025c3f: V2 := mem[#1153, el]:u128
00025c44: V3 := mem[#1153 + 0x10, el]:u128
00025c4c: mem := mem with [R0, el]:u128 <- V4
00025c52: mem := mem with [R0 + 0x10, el]:u128 <- V5
00025c58: R1 := R31 + 0x138
00025c5e: #1154 := R22 + 0x40
00025c63: V0 := mem[#1154, el]:u128
00025c68: V1 := mem[#1154 + 0x10, el]:u128
00025c6f: R0 := pad:64[mem[R22 + 0x60, el]:u32]
00025c77: mem := mem with [R1, el]:u128 <- V2
00025c7d: mem := mem with [R1 + 0x10, el]:u128 <- V3
00025c83: R1 := R31 + 0x158
00025c8b: mem := mem with [R31 + 0x178, el]:u32 <- 31:0[R0]
00025c93: mem := mem with [R1, el]:u128 <- V0
00025c99: mem := mem with [R1 + 0x10, el]:u128 <- V1
00025c9e: R30 := 0x40788C
00025ca0: call @new_auth with return %00025ca2

00025ca2:
00025ca5: R1 := 0x430000
00025caa: R2 := 1
00025cb0: R20 := R0
00025cb7: R1 := mem[R1 + 0x3C8, el]:u64
00025cbc: R30 := 0x4078A0
00025cbe: call @copy_auth with return %00025cc0

00025cc0:
00025cc4: R0 := R20 + 0xC8
00025cc9: R1 := 0x32
00025cd1: mem := mem with [R31 + 0xB8, el]:u64 <- R0
00025cd6: R30 := 0x4078B0
00025cd8: call @is_memory_all_zero with return %00025cda

00025cda:
00025cde: when 31:0[R0] <> 0 goto %00025cdc
00034719: goto %00025f6d

00025f6d:
00025f71: R0 := R20 + 0x96
00025f76: R1 := 0x32
00025f7e: mem := mem with [R31 + 0xC0, el]:u64 <- R0
00025f83: R30 := 0x4078C4
00025f85: call @is_memory_all_zero with return %00025f87

00025f87:
00025f8a: when 31:0[R0] <> 0 goto %00025cdc
0003471a: goto %00025f8e

00025f8e:
00025f92: R0 := R20 + 0xFA
00025f97: R1 := 0x32
00025f9f: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00025fa4: R30 := 0x4078D8
00025fa6: call @is_memory_all_zero with return %00025fa8

00025fa8:
00025fac: R21 := pad:64[31:0[R0]]
00025fb1: when 31:0[R0] <> 0 goto %00025cdc
0003471b: goto %00025fb5

00025cdc:
00025ce4: R0 := 0x413000
00025cea: R0 := R0 + 0x2E0
00025cf0: #1155 := R31 + 0x40
00025cf6: mem := mem with [#1155, el]:u64 <- R25
00025cfc: mem := mem with [#1155 + 8, el]:u64 <- R26
00025d02: #1156 := R31 + 0x50
00025d08: mem := mem with [#1156, el]:u64 <- R27
00025d0e: mem := mem with [#1156 + 8, el]:u64 <- R28
00025d13: R30 := 0x407FBC
00025d15: call @puts with return %00025d17

00025d17:
00025d1a: R0 := 1
00025d1f: R30 := 0x407FC4
00025d21: call @exit with return %00025d23

00025d23:
0003471c: call @is_http_header with noreturn

00025fb5:
00025fb9: R0 := R23
00025fbe: R1 := 0x413000
00025fc4: R1 := R1 + 0x330
00025fc9: R30 := 0x4078F0
00025fcb: call @strstr with return %00025fcd

00025fcd:
00025fd1: R19 := R0
00025fd7: when R0 = 0 goto %00025fd5
0003471d: goto %00026b5c

00025fd5:
00025fdd: R0 := 0x430000
00025fe3: R2 := R23
00025fe8: R1 := 0x413000
00025fee: R1 := R1 + 0x428
00025ff5: R0 := mem[R0 + 0x330, el]:u64
00025ffa: R30 := 0x407F28
00025ffd: call @fprintf with return %00025fff

00025fff:
00026003: #1172 := R31 + 0x20
00026008: R21 := mem[#1172, el]:u64
0002600d: R22 := mem[#1172 + 8, el]:u64
00026013: R0 := R20
00026019: #1173 := R31 + 0x10
0002601e: R19 := mem[#1173, el]:u64
00026023: R20 := mem[#1173 + 8, el]:u64
00026029: #1174 := R31 + 0x30
0002602e: R23 := mem[#1174, el]:u64
00026033: R24 := mem[#1174 + 8, el]:u64
0002603a: R29 := mem[R31, el]:u64
0002603f: R30 := mem[R31 + 8, el]:u64
00026043: R31 := R31 + 0x180
00026047: call @free with noreturn

00026b5c:
00026b60: R24 := R0 + 3
00026b65: R1 := 0x2F
00026b6b: R0 := R24
00026b71: #1203 := R31 + 0x40
00026b77: mem := mem with [#1203, el]:u64 <- R25
00026b7d: mem := mem with [#1203 + 8, el]:u64 <- R26
00026b83: #1204 := R31 + 0x50
00026b89: mem := mem with [#1204, el]:u64 <- R27
00026b8f: mem := mem with [#1204 + 8, el]:u64 <- R28
00026b94: R30 := 0x407910
00026b96: call @strchr with return %00026b98

00026b98:
00026b9c: R3 := R0
00026ba1: VF := 0
00026ba4: CF := 1
00026ba8: ZF := R3 = 0
00026bac: NF := 63:63[R3]
00026bb3: R2 := R3 + ~R19 + 1
00026bb9: R2 := pad:64[31:0[R2] - 3]
00026bbf: R0 := R24
00026bc4: R1 := 0
00026bd1: when ZF <> 1 goto %00026bca
00026bd2: goto %00026bcd

00026bcd:
00026bce: R2 := 0
00026bd4: goto %00026bd0

00026bca:
00026bcb: R2 := pad:64[31:0[R2]]
00026bd3: goto %00026bd0

00026bd0:
00026bd9: R30 := 0x407930
00026bdb: call @substr with return %00026bdd

00026bdd:
00026be1: R24 := R0
00026be6: R1 := 0x413000
00026beb: R0 := 0x413000
00026bf1: R1 := R1 + 0x338
00026bf7: R0 := R0 + 0x1A0
00026bff: mem := mem with [R31 + 0x68, el]:u64 <- R0
00026c04: R0 := 0x412000
00026c0a: R0 := R0 + 0xE68
00026c12: mem := mem with [R31 + 0x78, el]:u64 <- R1
00026c17: R1 := 0x412000
00026c1d: R1 := R1 + 0xA70
00026c23: #1205 := R31 + 0x80
00026c29: mem := mem with [#1205, el]:u64 <- R1
00026c2f: mem := mem with [#1205 + 8, el]:u64 <- R0
00026c35: R19 := R31 + 0x118
00026c3a: R0 := 0x413000
00026c3f: when R24 = 0 goto %000268ce
0003471e: goto %00026c43

000268ce:
000268d2: R0 := R0 + 0x340
000268d7: R1 := 0x413000
000268df: mem := mem with [R31 + 0x70, el]:u64 <- R0
000268e5: R0 := R1 + 0x3D0
000268ec: mem := mem with [R31 + 0xA0, el]:u32 <- 0
000268f4: mem := mem with [R31 + 0xA8, el]:u64 <- R0
0003471f: goto %00026141

00026141:
00026149: R30 := 0x407B24
0002614b: call @new_rr_data with return %0002614d

0002614d:
00026153: mem := mem with [R31 + 0xE8, el]:u64 <- R0
00026158: R30 := 0x407B2C
0002615a: call @new_rr_data with return %0002615c

0002615c:
00026160: R25 := R0
00026167: R0 := mem[R31 + 0x78, el]:u64
0002616f: mem := mem with [R31 + 0xE0, el]:u64 <- R25
00026174: R1 := 1
0002617c: mem := mem with [R25, el]:u32 <- 31:0[R1]
00026181: R30 := 0x407B44
00026183: call @strdup with return %00026185

00026185:
0002618b: mem := mem with [R25 + 0x28, el]:u64 <- R0
00026192: R25 := mem[R31 + 0xE0, el]:u64
00026198: R0 := R23
0002619d: R30 := 0x407B54
0002619f: call @strdup with return %000261a1

000261a1:
000261a7: mem := mem with [R25 + 0x30, el]:u64 <- R0
000261ae: R0 := mem[R31 + 0x68, el]:u64
000261b5: R25 := mem[R31 + 0xE0, el]:u64
000261ba: R30 := 0x407B64
000261bc: call @strdup with return %000261be

000261be:
000261c3: R5 := mem[R31 + 0xE0, el]:u64
000261cb: mem := mem with [R25 + 0x48, el]:u64 <- R0
000261d1: #1181 := R31 + 0x80
000261d6: R2 := mem[#1181, el]:u64
000261db: R1 := mem[#1181 + 8, el]:u64
000261e0: R4 := 1
000261e7: R0 := mem[R5 + 8, el]:u64
000261ed: R3 := pad:64[31:0[R4]]
000261f5: mem := mem with [R31 + 0x98, el]:u64 <- R5
000261fa: R30 := 0x407B84
000261fc: call @hlist_add with return %000261fe

000261fe:
00026202: R2 := R0
00026209: R5 := mem[R31 + 0x98, el]:u64
0002620f: R3 := R20 + 0x134
00026216: R0 := mem[R31 + 0x70, el]:u64
0002621e: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R21]
00026225: R28 := pad:64[mem[R19, el]:u32]
0002622a: R27 := pad:64[mem[R19 + 4, el]:u32]
00026232: mem := mem with [R5 + 8, el]:u64 <- R2
00026238: #1182 := R19 + 8
0002623d: R26 := pad:64[mem[#1182, el]:u32]
00026242: R25 := pad:64[mem[#1182 + 4, el]:u32]
00026248: #1183 := R3 - 8
0002624e: mem := mem with [#1183, el]:u32 <- 31:0[R26]
00026254: mem := mem with [#1183 + 4, el]:u32 <- 31:0[R28]
0002625c: mem := mem with [R3, el]:u32 <- 31:0[R27]
00026262: mem := mem with [R3 + 4, el]:u32 <- 31:0[R25]
00026268: R21 := pad:64[31:0[R21] + 1]
0002626e: R1 := pad:64[31:0[R21]]
00026273: R2 := 5
00026278: R30 := 0x407BBC
0002627a: call @printf with return %0002627c

0002627c:
00026280: R1 := R23
00026285: R2 := 0
0002628a: R0 := 0
0002628f: R30 := 0x407BCC
00026291: call @proxy_connect with return %00026293

00026293:
00026299: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
0002629f: when 31:31[R0] goto %0002629d
00034720: goto %000262d2

0002629d:
000262a5: R0 := 0x413000
000262ab: R0 := R0 + 0x5F0
000262b0: R30 := 0x407F94
000262b2: call @puts with return %000262b4

000262b4:
000262b8: R0 := R31 + 0xE8
000262bd: R30 := 0x407F9C
000262bf: call @free_rr_data with return %000262c1

000262c1:
000262c5: R0 := R31 + 0xE0
000262ca: R30 := 0x407FA4
000262cc: call @free_rr_data with return %000262ce

000262ce:
000262d0: goto %00026086

000262d2:
000262d6: #1184 := R31 + 0xE0
000262db: R1 := mem[#1184, el]:u64
000262e0: R2 := mem[#1184 + 8, el]:u64
000262e6: R3 := R20
000262ec: R0 := R31 + 0xDC
000262f1: R30 := 0x407BE4
000262f3: call @proxy_authenticate with return %000262f5

000262f5:
000262f9: when 31:0[R0] = 0 goto %000262f7
00034721: goto %00026b09

000262f7:
00026301: R0 := mem[R31 + 0xE8, el]:u64
00026306: goto %00026304

00026b09:
00026b0e: R0 := mem[R31 + 0xE8, el]:u64
00026b15: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00026b1b: #1201 := 31:0[R1] - 0x197
00026b20: VF := extend:64[#1201] <> extend:64[31:0[R1]] - 0x197
00026b25: CF := pad:64[#1201] <> pad:64[31:0[R1]] + 0xFFFFFE69
00026b29: ZF := #1201 = 0
00026b2d: NF := 31:31[#1201]
00026b32: when ZF <> 1 goto %0002652b
00034722: goto %00026304

0002652b:
00026530: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00026536: R0 := pad:64[31:0[R0] + 1]
0002653e: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
00026543: R0 := 0x413000
00026549: R0 := R0 + 0x400
0002654e: R30 := 0x407E18
00026550: call @printf with return %00026552

00026552:
00026554: goto %000260f9

00026304:
0002630a: R30 := 0x407BFC
0002630c: call @reset_rr_data with return %0002630e

0002630e:
00026313: R1 := mem[R31 + 0xE0, el]:u64
0002631a: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002631f: R30 := 0x407C08
00026321: call @headers_send with return %00026323

00026323:
00026326: when 31:0[R0] = 0 goto %000260eb
00034723: goto %0002632a

0002632a:
0002632f: R1 := mem[R31 + 0xE8, el]:u64
00026336: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002633b: R30 := 0x407C18
0002633d: call @headers_recv with return %0002633f

0002633f:
00026342: when 31:0[R0] = 0 goto %000260eb
00034724: goto %00026346

000260eb:
000260f0: R0 := mem[R31 + 0xA8, el]:u64
000260f5: R30 := 0x407CE8
000260f7: call @puts with return %000260f9

00026346:
0002634b: R0 := mem[R31 + 0xE8, el]:u64
00026352: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00026358: #1185 := 31:0[R1] - 0x197
0002635d: VF := extend:64[#1185] <> extend:64[31:0[R1]] - 0x197
00026362: CF := pad:64[#1185] <> pad:64[31:0[R1]] + 0xFFFFFE69
00026366: ZF := #1185 = 0
0002636a: NF := 31:31[#1185]
00026370: when ZF <> 1 goto %0002636e
00034725: goto %00026a31

00026a31:
00026a36: R0 := mem[R0 + 8, el]:u64
00026a3b: R25 := 0x413000
00026a41: R25 := R25 + 0x78
00026a46: R2 := 0x412000
00026a4c: R1 := R25
00026a52: R2 := R2 + 0xDA8
00026a57: R30 := 0x407C48
00026a59: call @hlist_subcmp_all with return %00026a5b

00026a5b:
00026a5e: when 31:0[R0] <> 0 goto %00026974
00034726: goto %00026a62

00026974:
00026977: R0 := 0x413000
0002697d: R0 := R0 + 0x3A8
00026982: R30 := 0x407E38
00026984: call @puts with return %00026986

00026986:
00026988: goto %000260f9

00026a62:
00026a67: R0 := mem[R31 + 0xE8, el]:u64
00026a6c: R2 := 0x413000
00026a72: R1 := R25
00026a78: R2 := R2 + 0x360
00026a7f: R0 := mem[R0 + 8, el]:u64
00026a84: R30 := 0x407C64
00026a86: call @hlist_subcmp_all with return %00026a88

00026a88:
00026a8c: when 31:0[R0] = 0 goto %00026a8a
00034727: goto %00026af3

00026a8a:
00026a92: R0 := 0x413000
00026a98: R0 := R0 + 0x448
00026a9d: R30 := 0x407F6C
00026a9f: call @puts with return %00026aa1

00026aa1:
00026aa6: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00026aac: #1200 := 31:0[R0] - 5
00026ab1: VF := extend:64[#1200] <> extend:64[31:0[R0]] - 5
00026ab6: CF := pad:64[#1200] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00026aba: ZF := #1200 = 0
00026abe: NF := 31:31[#1200]
00026ac4: when ZF <> 1 goto %00026ac2
00034728: goto %00026add

00026af3:
00026af6: R0 := 0x413000
00026afc: R0 := R0 + 0x368
00026b01: R30 := 0x407C74
00026b03: call @puts with return %00026b05

00026b05:
00026b07: goto %000260f9

000260f9:
000260fd: R0 := R31 + 0xE8
00026102: R30 := 0x407CF0
00026104: call @free_rr_data with return %00026106

00026106:
0002610a: R0 := R31 + 0xE0
0002610f: R30 := 0x407CF8
00026111: call @free_rr_data with return %00026113

00026113:
00026118: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002611e: R19 := R19 + 0x14
00026123: R30 := 0x407D04
00026125: call @close with return %00026127

00026127:
0002612b: #1180 := 31:0[R21] - 5
00026130: VF := extend:64[#1180] <> extend:64[31:0[R21]] - 5
00026135: CF := pad:64[#1180] <> pad:64[31:0[R21]] + 0xFFFFFFFB
00026139: ZF := #1180 = 0
0002613d: NF := 31:31[#1180]
00026143: when ZF <> 1 goto %00026141
00034729: goto %00026b36

00026b36:
00026b3b: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00026b41: #1202 := 31:0[R0] - 5
00026b46: VF := extend:64[#1202] <> extend:64[31:0[R0]] - 5
00026b4b: CF := pad:64[#1202] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00026b4f: ZF := #1202 = 0
00026b53: NF := 31:31[#1202]
00026b58: when ZF goto %00026add
0003472a: goto %00026ac2

00026add:
00026ae0: R0 := 0x413000
00026ae6: R0 := R0 + 0x478
00026aeb: R30 := 0x407F84
00026aed: call @puts with return %00026aef

00026aef:
00026af1: goto %00026086

00026ac2:
00026aca: R0 := 0x413000
00026ad0: R0 := R0 + 0x4B0
00026ad5: R30 := 0x407D24
00026ad7: call @puts with return %00026ad9

00026ad9:
00026adb: goto %00026086

00026c43:
00026c47: R0 := R0 + 0x340
00026c4c: R1 := 0x413000
00026c54: mem := mem with [R31 + 0x70, el]:u64 <- R0
00026c5a: R0 := R1 + 0x440
00026c62: mem := mem with [R31 + 0xA0, el]:u64 <- R0
00026c67: R0 := 0x413000
00026c6d: R0 := R0 + 0x3D0
00026c74: mem := mem with [R31 + 0xA8, el]:u32 <- 0
00026c7c: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0003472b: goto %000265b4

000265b4:
000265bc: R30 := 0x407994
000265be: call @new_rr_data with return %000265c0

000265c0:
000265c6: mem := mem with [R31 + 0xE8, el]:u64 <- R0
000265cb: R30 := 0x40799C
000265cd: call @new_rr_data with return %000265cf

000265cf:
000265d3: R25 := R0
000265da: R0 := mem[R31 + 0x78, el]:u64
000265e2: mem := mem with [R31 + 0xE0, el]:u64 <- R25
000265e7: R1 := 1
000265ef: mem := mem with [R25, el]:u32 <- 31:0[R1]
000265f4: R30 := 0x4079B4
000265f6: call @strdup with return %000265f8

000265f8:
000265fe: mem := mem with [R25 + 0x28, el]:u64 <- R0
00026605: R25 := mem[R31 + 0xE0, el]:u64
0002660b: R0 := R23
00026610: R30 := 0x4079C4
00026612: call @strdup with return %00026614

00026614:
00026619: R26 := mem[R31 + 0xE0, el]:u64
00026621: mem := mem with [R25 + 0x30, el]:u64 <- R0
00026628: R0 := mem[R31 + 0x68, el]:u64
0002662d: R30 := 0x4079D4
0002662f: call @strdup with return %00026631

00026631:
00026637: mem := mem with [R26 + 0x48, el]:u64 <- R0
0002663e: R25 := mem[R31 + 0xE0, el]:u64
00026643: R4 := 1
00026649: #1192 := R31 + 0x80
0002664e: R2 := mem[#1192, el]:u64
00026653: R1 := mem[#1192 + 8, el]:u64
00026659: R3 := pad:64[31:0[R4]]
00026660: R0 := mem[R25 + 8, el]:u64
00026665: R30 := 0x4079F0
00026667: call @hlist_add with return %00026669

00026669:
0002666f: mem := mem with [R25 + 8, el]:u64 <- R0
00026676: R5 := mem[R31 + 0xE0, el]:u64
0002667b: R4 := 1
00026682: R1 := mem[R31 + 0xA0, el]:u64
00026688: R3 := pad:64[31:0[R4]]
0002668f: R0 := mem[R5 + 8, el]:u64
00026695: R2 := R24
0002669d: mem := mem with [R31 + 0x98, el]:u64 <- R5
000266a2: R30 := 0x407A14
000266a4: call @hlist_add with return %000266a6

000266a6:
000266aa: R2 := R0
000266b1: R5 := mem[R31 + 0x98, el]:u64
000266b7: R1 := R20 + 0x134
000266be: R0 := mem[R31 + 0x70, el]:u64
000266c6: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R21]
000266cd: R28 := pad:64[mem[R19, el]:u32]
000266d2: R27 := pad:64[mem[R19 + 4, el]:u32]
000266da: mem := mem with [R5 + 8, el]:u64 <- R2
000266e0: #1193 := R19 + 8
000266e5: R26 := pad:64[mem[#1193, el]:u32]
000266ea: R25 := pad:64[mem[#1193 + 4, el]:u32]
000266f0: #1194 := R1 - 8
000266f6: mem := mem with [#1194, el]:u32 <- 31:0[R26]
000266fc: mem := mem with [#1194 + 4, el]:u32 <- 31:0[R28]
00026704: mem := mem with [R1, el]:u32 <- 31:0[R27]
0002670a: mem := mem with [R1 + 4, el]:u32 <- 31:0[R25]
00026710: R21 := pad:64[31:0[R21] + 1]
00026716: R1 := pad:64[31:0[R21]]
0002671b: R2 := 5
00026720: R30 := 0x407A4C
00026722: call @printf with return %00026724

00026724:
00026728: R2 := R24
0002672e: R1 := R23
00026733: R0 := 0
00026738: R30 := 0x407A5C
0002673a: call @proxy_connect with return %0002673c

0002673c:
00026742: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
00026747: when 31:31[R0] goto %00026049
0003472c: goto %0002674b

00026049:
0002604c: R0 := 0x413000
00026052: R0 := R0 + 0x5F0
00026057: R30 := 0x407F4C
00026059: call @puts with return %0002605b

0002605b:
0002605f: R0 := R31 + 0xE8
00026064: R30 := 0x407F54
00026066: call @free_rr_data with return %00026068

00026068:
0002606c: R0 := R31 + 0xE0
00026071: R30 := 0x407F5C
00026073: call @free_rr_data with return %00026075

00026075:
00026078: goto %00026076

0002674b:
0002674f: #1195 := R31 + 0xE0
00026754: R1 := mem[#1195, el]:u64
00026759: R2 := mem[#1195 + 8, el]:u64
0002675f: R3 := R20
00026765: R0 := R31 + 0xDC
0002676a: R30 := 0x407A74
0002676c: call @proxy_authenticate with return %0002676e

0002676e:
00026772: when 31:0[R0] = 0 goto %00026770
0003472d: goto %000268f6

00026770:
0002677a: R0 := mem[R31 + 0xE8, el]:u64
0002677f: goto %0002677d

000268f6:
000268fb: R0 := mem[R31 + 0xE8, el]:u64
00026902: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00026908: #1198 := 31:0[R1] - 0x197
0002690d: VF := extend:64[#1198] <> extend:64[31:0[R1]] - 0x197
00026912: CF := pad:64[#1198] <> pad:64[31:0[R1]] + 0xFFFFFE69
00026916: ZF := #1198 = 0
0002691a: NF := 31:31[#1198]
00026920: when ZF <> 1 goto %0002691e
0003472e: goto %0002677d

0002691e:
00026928: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
0002692e: R0 := pad:64[31:0[R0] + 1]
00026936: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
0002693b: R0 := 0x413000
00026941: R0 := R0 + 0x400
00026946: R30 := 0x407D50
00026948: call @printf with return %0002694a

0002694a:
0002694c: goto %00026569

0002677d:
00026783: R30 := 0x407A8C
00026785: call @reset_rr_data with return %00026787

00026787:
0002678c: R1 := mem[R31 + 0xE0, el]:u64
00026793: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
00026798: R30 := 0x407A98
0002679a: call @headers_send with return %0002679c

0002679c:
000267a0: when 31:0[R0] = 0 goto %0002679e
0003472f: goto %000267b1

000267b1:
000267b6: R1 := mem[R31 + 0xE8, el]:u64
000267bd: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
000267c2: R30 := 0x407AA8
000267c4: call @headers_recv with return %000267c6

000267c6:
000267c9: when 31:0[R0] = 0 goto %0002679e
00034730: goto %000267cd

0002679e:
000267a8: R0 := mem[R31 + 0xB0, el]:u64
000267ad: R30 := 0x407C80
000267af: call @puts with return %00026569

000267cd:
000267d2: R0 := mem[R31 + 0xE8, el]:u64
000267d9: R1 := pad:64[mem[R0 + 0x10, el]:u32]
000267df: #1196 := 31:0[R1] - 0x197
000267e4: VF := extend:64[#1196] <> extend:64[31:0[R1]] - 0x197
000267e9: CF := pad:64[#1196] <> pad:64[31:0[R1]] + 0xFFFFFE69
000267ed: ZF := #1196 = 0
000267f1: NF := 31:31[#1196]
000267f6: when ZF <> 1 goto %0002636e
00034731: goto %000267fa

0002636e:
00026376: R0 := 0x413000
0002637c: R0 := R0 + 0x4F0
00026381: R30 := 0x407D60
00026383: call @printf with return %00026385

00026385:
00026389: R22 := R22 + 0x68
0002638f: R0 := R31 + 0xE8
00026394: R30 := 0x407D6C
00026396: call @free_rr_data with return %00026398

00026398:
0002639c: R0 := R31 + 0xE0
000263a1: R30 := 0x407D74
000263a3: call @free_rr_data with return %000263a5

000263a5:
000263aa: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
000263b0: R19 := R31 + 0xF0
000263b5: R30 := 0x407D80
000263b7: call @close with return %000263b9

000263b9:
000263be: R20 := pad:64[mem[R31 + 0x94, el]:u32]
000263c5: V0 := mem[R22, el]:u128
000263ca: V1 := mem[R22 + 0x10, el]:u128
000263d0: R1 := pad:64[31:0[R20]]
000263d7: R2 := mem[R22 + 0x20, el]:u64
000263dc: R0 := 0x413000
000263e2: R0 := R0 + 0x508
000263ea: mem := mem with [R19, el]:u128 <- V0
000263f0: mem := mem with [R19 + 0x10, el]:u128 <- V1
000263f8: mem := mem with [R31 + 0x110, el]:u64 <- R2
000263fd: R30 := 0x407DA4
000263ff: call @printf with return %00026401

00026401:
00026405: R0 := extend:64[31:0[R20].0]
0002640b: R2 := R31 + 0x128
00026412: R1 := R0 + extend:64[31:0[R20]]
00026417: R0 := 0x413000
0002641d: R0 := R0 + 0x540
00026425: R1 := extend:64[mem[R2 + (61:0[R1].0), el]:u32]
0002642d: R1 := mem[R19 + (60:0[R1].0), el]:u64
00026432: R30 := 0x407DC4
00026434: call @printf with return %00026436

00026436:
0002643a: when 31:0[R25] <> 0 goto %00026438
00034732: goto %00026a2a

00026438:
00026440: R0 := 0x413000
00026446: R1 := pad:64[31:0[R25]]
0002644c: R0 := R0 + 0x558
00026451: R30 := 0x407EE0
00026453: call @printf with return %00026455

00026455:
00026459: when 31:0[R28] = 0 goto %00026457
00034733: goto %00026a26

00026a26:
00026a28: goto %000269d1

00026a2a:
00026a2d: when 31:0[R28] <> 0 goto %000269d1
00034734: goto %00026457

000269d1:
000269d6: R0 := mem[R31 + 0xB8, el]:u64
000269db: R2 := 8
000269e0: R1 := 0x10
000269e5: R30 := 0x407EAC
000269e7: call @printmem with return %000269e9

000269e9:
000269ed: R19 := R0
000269f2: R1 := 0x413000
000269f8: R0 := R1 + 0x570
000269fe: R1 := R19
00026a03: R30 := 0x407EC0
00026a05: call @printf with return %00026a07

00026a07:
00026a0b: R0 := R19
00026a10: R30 := 0x407EC8
00026a12: call @free with return %00026a14

00026a14:
00026a18: when 31:0[R27] = 0 goto %00026a16
00034735: goto %00026a22

00026a22:
00026a24: goto %0002645e

00026457:
00026460: when 31:0[R27] <> 0 goto %0002645e
00034736: goto %00026a16

0002645e:
00026468: R0 := mem[R31 + 0xC0, el]:u64
0002646d: R2 := 8
00026472: R1 := 0x10
00026477: R30 := 0x407E4C
00026479: call @printmem with return %0002647b

0002647b:
0002647f: R19 := R0
00026484: R1 := 0x413000
0002648a: R0 := R1 + 0x588
00026490: R1 := R19
00026495: R30 := 0x407E60
00026497: call @printf with return %00026499

00026499:
0002649d: R0 := R19
000264a2: R30 := 0x407E68
000264a4: call @free with return %000264a6

000264a6:
000264aa: when 31:0[R26] = 0 goto %000264a8
00034737: goto %0002698a

00026a16:
00026a1e: when 31:0[R26] <> 0 goto %0002698a
00034738: goto %000264a8

0002698a:
0002698f: R0 := mem[R31 + 0xC8, el]:u64
00026994: R2 := 8
00026999: R1 := 0x10
0002699e: R30 := 0x407E7C
000269a0: call @printmem with return %000269a2

000269a2:
000269a6: R19 := R0
000269ab: R1 := 0x413000
000269b1: R0 := R1 + 0x5A0
000269b7: R1 := R19
000269bc: R30 := 0x407E90
000269be: call @printf with return %000269c0

000269c0:
000269c4: R0 := R19
000269c9: R30 := 0x407E98
000269cb: call @free with return %000269cd

000269cd:
000269cf: goto %000264a8

000264a8:
000264b0: R0 := 0x413000
000264b6: R0 := R0 + 0x5B8
000264bb: R30 := 0x407DE0
000264bd: call @puts with return %000264bf

000264bf:
000264c2: when R24 <> 0 goto %00026076
00034739: goto %000264c6

000264c6:
000264ca: #1186 := R31 + 0x10
000264cf: R19 := mem[#1186, el]:u64
000264d4: R20 := mem[#1186 + 8, el]:u64
000264da: #1187 := R31 + 0x20
000264df: R21 := mem[#1187, el]:u64
000264e4: R22 := mem[#1187 + 8, el]:u64
000264ea: #1188 := R31 + 0x30
000264ef: R23 := mem[#1188, el]:u64
000264f4: R24 := mem[#1188 + 8, el]:u64
000264fa: #1189 := R31 + 0x40
000264ff: R25 := mem[#1189, el]:u64
00026504: R26 := mem[#1189 + 8, el]:u64
0002650a: #1190 := R31 + 0x50
0002650f: R27 := mem[#1190, el]:u64
00026514: R28 := mem[#1190 + 8, el]:u64
0002651b: R29 := mem[R31, el]:u64
00026520: R30 := mem[R31 + 8, el]:u64
00026524: R31 := R31 + 0x180
00026529: call R30 with noreturn

000267fa:
000267ff: R0 := mem[R0 + 8, el]:u64
00026804: R25 := 0x413000
0002680a: R25 := R25 + 0x78
0002680f: R2 := 0x412000
00026815: R1 := R25
0002681b: R2 := R2 + 0xDA8
00026820: R30 := 0x407AD8
00026822: call @hlist_subcmp_all with return %00026824

00026824:
00026827: when 31:0[R0] <> 0 goto %00026556
0003473a: goto %0002682b

00026556:
00026559: R0 := 0x413000
0002655f: R0 := R0 + 0x3A8
00026564: R30 := 0x407E28
00026566: call @puts with return %00026568

00026568:
0002656b: goto %00026569

0002682b:
00026830: R0 := mem[R31 + 0xE8, el]:u64
00026835: R2 := 0x413000
0002683b: R1 := R25
00026841: R2 := R2 + 0x360
00026848: R0 := mem[R0 + 8, el]:u64
0002684d: R30 := 0x407AF4
0002684f: call @hlist_subcmp_all with return %00026851

00026851:
00026855: when 31:0[R0] = 0 goto %00026853
0003473b: goto %000268b8

00026853:
0002685b: R0 := 0x413000
00026861: R0 := R0 + 0x448
00026866: R30 := 0x407EF4
00026868: call @puts with return %0002686a

0002686a:
0002686f: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
00026875: #1197 := 31:0[R0] - 5
0002687a: VF := extend:64[#1197] <> extend:64[31:0[R0]] - 5
0002687f: CF := pad:64[#1197] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00026883: ZF := #1197 = 0
00026887: NF := 31:31[#1197]
0002688d: when ZF <> 1 goto %0002688b
0003473c: goto %000268a2

000268b8:
000268bb: R0 := 0x413000
000268c1: R0 := R0 + 0x368
000268c6: R30 := 0x407B04
000268c8: call @puts with return %000268ca

000268ca:
000268cc: goto %00026569

00026569:
00026570: R0 := R31 + 0xE8
00026575: R30 := 0x407C88
00026577: call @free_rr_data with return %00026579

00026579:
0002657d: R0 := R31 + 0xE0
00026582: R30 := 0x407C90
00026584: call @free_rr_data with return %00026586

00026586:
0002658b: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
00026591: R19 := R19 + 0x14
00026596: R30 := 0x407C9C
00026598: call @close with return %0002659a

0002659a:
0002659e: #1191 := 31:0[R21] - 5
000265a3: VF := extend:64[#1191] <> extend:64[31:0[R21]] - 5
000265a8: CF := pad:64[#1191] <> pad:64[31:0[R21]] + 0xFFFFFFFB
000265ac: ZF := #1191 = 0
000265b0: NF := 31:31[#1191]
000265b6: when ZF <> 1 goto %000265b4
0003473d: goto %0002694e

0002694e:
00026953: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
00026959: #1199 := 31:0[R0] - 5
0002695e: VF := extend:64[#1199] <> extend:64[31:0[R0]] - 5
00026963: CF := pad:64[#1199] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00026967: ZF := #1199 = 0
0002696b: NF := 31:31[#1199]
00026970: when ZF goto %000268a2
0003473e: goto %0002688b

000268a2:
000268a5: R0 := 0x413000
000268ab: R0 := R0 + 0x478
000268b0: R30 := 0x407F0C
000268b2: call @puts with return %000268b4

000268b4:
000268b6: goto %00026076

0002688b:
00026893: R0 := 0x413000
00026899: R0 := R0 + 0x4B0
0002689e: R30 := 0x407CBC
000268a0: call @puts with return %00026076

00026076:
0002607d: R0 := R24
00026082: R30 := 0x407CC4
00026084: call @free with return %00026086

00026086:
0002608a: #1175 := R31 + 0x10
0002608f: R19 := mem[#1175, el]:u64
00026094: R20 := mem[#1175 + 8, el]:u64
0002609a: #1176 := R31 + 0x20
0002609f: R21 := mem[#1176, el]:u64
000260a4: R22 := mem[#1176 + 8, el]:u64
000260aa: #1177 := R31 + 0x30
000260af: R23 := mem[#1177, el]:u64
000260b4: R24 := mem[#1177 + 8, el]:u64
000260ba: #1178 := R31 + 0x40
000260bf: R25 := mem[#1178, el]:u64
000260c4: R26 := mem[#1178 + 8, el]:u64
000260ca: #1179 := R31 + 0x50
000260cf: R27 := mem[#1179, el]:u64
000260d4: R28 := mem[#1179 + 8, el]:u64
000260db: R29 := mem[R31, el]:u64
000260e0: R30 := mem[R31 + 8, el]:u64
000260e4: R31 := R31 + 0x180
000260e9: call R30 with noreturn

0003473f: sub main(main_argc, main_argv, main_result)
00034bf3: main_argc :: in u32 = low:32[R0]
00034bf4: main_argv :: in out u64 = R1
00034bf5: main_result :: out u32 = low:32[R0]

000101a5:
000101a9: R31 := R31 - 0x2D0
000101b1: mem := mem with [R31, el]:u64 <- R29
000101b7: mem := mem with [R31 + 8, el]:u64 <- R30
000101bd: R29 := R31
000101c3: #1 := R31 + 0x10
000101c9: mem := mem with [#1, el]:u64 <- R19
000101cf: mem := mem with [#1 + 8, el]:u64 <- R20
000101d5: R20 := pad:64[31:0[R0]]
000101da: R0 := 0x1000
000101e0: #2 := R31 + 0x20
000101e6: mem := mem with [#2, el]:u64 <- R21
000101ec: mem := mem with [#2 + 8, el]:u64 <- R22
000101f2: R21 := R1
000101f7: R19 := 0x430000
000101fd: #3 := R31 + 0x30
00010203: mem := mem with [#3, el]:u64 <- R23
00010209: mem := mem with [#3 + 8, el]:u64 <- R24
0001020f: R19 := R19 + 0x370
00010214: R23 := 0x413000
0001021a: #4 := R31 + 0x40
00010220: mem := mem with [#4, el]:u64 <- R25
00010226: mem := mem with [#4 + 8, el]:u64 <- R26
0001022b: R24 := 0x416000
00010231: R23 := R23 + 0xE28
00010237: #5 := R31 + 0x50
0001023d: mem := mem with [#5, el]:u64 <- R27
00010243: mem := mem with [#5 + 8, el]:u64 <- R28
00010249: R24 := R24 + 0x308
0001024e: R22 := 0
00010254: #6 := R31 + 0x110
00010259: mem := mem with [#6, el]:u64 <- 0
0001025e: mem := mem with [#6 + 8, el]:u64 <- 0
00010263: R25 := 0
00010268: R27 := 0
0001026e: #7 := R31 + 0x120
00010273: mem := mem with [#7, el]:u64 <- 0
00010278: mem := mem with [#7 + 8, el]:u64 <- 0
0001027d: R30 := 0x40275C
00010280: call @zmalloc with return %00016f96

00016f96:
00016f9c: mem := mem with [R31 + 0xE0, el]:u64 <- R0
00016fa1: R30 := 0x402764
00016fa4: call @new_auth with return %0002b22c

0002b22c:
0002b230: R1 := R0
0002b235: R0 := 0x32
0002b23d: mem := mem with [R19 + 0x58, el]:u64 <- R1
0002b242: R30 := 0x402774
0002b244: call @zmalloc with return %0002b246

0002b246:
0002b24a: R1 := R0
0002b24f: R0 := 0x32
0002b257: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0002b25c: R30 := 0x402784
0002b25e: call @zmalloc with return %0002b260

0002b260:
0002b264: R1 := R0
0002b269: R0 := 0x32
0002b271: mem := mem with [R31 + 0x78, el]:u64 <- R1
0002b276: R30 := 0x402794
0002b278: call @zmalloc with return %0002b27a

0002b27a:
0002b27e: R1 := R0
0002b283: R0 := 0x32
0002b28b: mem := mem with [R31 + 0x70, el]:u64 <- R1
0002b290: R30 := 0x4027A4
0002b292: call @zmalloc with return %0002b294

0002b294:
0002b298: R1 := R0
0002b29d: R0 := 0x32
0002b2a5: mem := mem with [R31 + 0xC8, el]:u64 <- R1
0002b2aa: R30 := 0x4027B4
0002b2ac: call @zmalloc with return %0002b2ae

0002b2ae:
0002b2b2: R1 := R0
0002b2b7: R0 := 0x32
0002b2bf: mem := mem with [R31 + 0xD0, el]:u64 <- R1
0002b2c4: R30 := 0x4027C4
0002b2c6: call @zmalloc with return %0002b2c8

0002b2c8:
0002b2cc: R1 := R0
0002b2d1: R0 := 0x32
0002b2d9: mem := mem with [R31 + 0xD8, el]:u64 <- R1
0002b2de: R30 := 0x4027D4
0002b2e0: call @zmalloc with return %0002b2e2

0002b2e2:
0002b2e6: R1 := R0
0002b2eb: R0 := 0x32
0002b2f3: mem := mem with [R31 + 0x90, el]:u64 <- R1
0002b2f8: R30 := 0x4027E4
0002b2fa: call @zmalloc with return %0002b2fc

0002b2fc:
0002b300: R1 := R0
0002b305: R0 := 0x32
0002b30d: mem := mem with [R31 + 0xB0, el]:u64 <- R1
0002b312: R30 := 0x4027F4
0002b314: call @zmalloc with return %0002b316

0002b316:
0002b31a: R1 := R0
0002b31f: R0 := 0x32
0002b327: mem := mem with [R31 + 0xB8, el]:u64 <- R1
0002b32c: R30 := 0x402804
0002b32e: call @zmalloc with return %0002b330

0002b330:
0002b336: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002b33b: R2 := 0x18
0002b340: R1 := 0x413000
0002b346: R1 := R1 + 0xD20
0002b34e: mem := mem with [R31 + 0xE8, el]:u64 <- R1
0002b354: R0 := R1
0002b359: R1 := 0x22
0002b35e: R30 := 0x402824
0002b361: call @openlog with return %0002b363

0002b363:
0002b366: R0 := 6
0002b36b: R1 := 0x413000
0002b371: R1 := R1 + 0xD28
0002b376: R30 := 0x402834
0002b378: call @syslog with return %0002b37a

0002b37a:
0002b37d: R0 := 1
0002b384: mem := mem with [R31 + 0x68, el]:u32 <- 0
0002b38b: mem := mem with [R31 + 0x80, el]:u64 <- 0
0002b393: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0002b39a: mem := mem with [R31 + 0xA8, el]:u32 <- 0
0002b3a0: #1381 := R31 + 0xC0
0002b3a5: mem := mem with [#1381, el]:u32 <- 0
0002b3aa: mem := mem with [#1381 + 4, el]:u32 <- 0
00034740: goto %0002b3ae

0002b3ae:
0002b3b2: R2 := R23
0002b3b8: R1 := R21
0002b3be: R0 := pad:64[31:0[R20]]
0002b3c3: R30 := 0x402860
0002b3c6: call @__posix_getopt with return %0002b3c8

0002b3c8:
0002b3cc: #1382 := 31:0[R0] + 1
0002b3d1: VF := extend:64[#1382] <> extend:64[31:0[R0]] + 1
0002b3d6: CF := pad:64[#1382] <> pad:64[31:0[R0]] + 1
0002b3da: ZF := #1382 = 0
0002b3de: NF := 31:31[#1382]
0002b3e4: when ZF goto %0002b3e2
00034741: goto %0002f3ca

0002f3ca:
0002f3ce: R1 := pad:64[31:0[R0] - 0x41]
0002f3d4: #1451 := 31:0[R1] - 0x36
0002f3d9: VF := extend:64[#1451] <> extend:64[31:0[R1]] - 0x36
0002f3de: CF := pad:64[#1451] <> pad:64[31:0[R1]] + 0xFFFFFFCA
0002f3e2: ZF := #1451 = 0
0002f3e6: NF := 31:31[#1451]
0002f3ec: when ~(CF & ~ZF) goto %0002ed30
00034742: goto %0002f3f0

0002ed30:
0002ed36: R1 := pad:64[mem[R24 + pad:64[31:0[R1].0], el]:u16]
0002ed3b: R2 := 0x4028E0
0002ed42: R1 := R2 + extend:64[15:0[R1].0]
0002ed47: call R1 with noreturn

0002f3f0:
0002f3f4: R2 := R23
0002f3fa: R1 := R21
0002f400: R0 := pad:64[31:0[R20]]
0002f405: R27 := 2
0002f40a: R30 := 0x402888
0002f40c: call @__posix_getopt with return %0002f40e

0002f40e:
0002f412: #1452 := 31:0[R0] + 1
0002f417: VF := extend:64[#1452] <> extend:64[31:0[R0]] + 1
0002f41c: CF := pad:64[#1452] <> pad:64[31:0[R0]] + 1
0002f420: ZF := #1452 = 0
0002f424: NF := 31:31[#1452]
0002f429: when ZF <> 1 goto %0002f3ca
00034743: goto %0002b3e2

0002b3e2:
0002b3eb: when 31:0[R27] <> 0 goto %0002b3e9
00034744: goto %0002f3b5

0002b3e9:
0002b3f1: R0 := 0x413000
0002b3f7: R0 := R0 + 0xE68
0002b3fc: R30 := 0x4034F0
0002b3fe: call @puts with return %0002b400

0002b400:
0002b403: R0 := 0x413000
0002b409: R0 := R0 + 0xEB0
0002b40e: R30 := 0x4034FC
0002b410: call @puts with return %0002b412

0002b412:
0002b415: R0 := 0x430000
0002b41c: R19 := mem[R0 + 0x350, el]:u64
0002b422: #1383 := 31:0[R27] - 1
0002b427: VF := extend:64[#1383] <> extend:64[31:0[R27]] - 1
0002b42c: CF := pad:64[#1383] <> pad:64[31:0[R27]] + 0xFFFFFFFF
0002b430: ZF := #1383 = 0
0002b434: NF := 31:31[#1383]
0002b43a: when ZF goto %0002b438
00034745: goto %0002f3a4

0002b438:
0002b440: R20 := 0
0002b445: goto %0002b443

0002f3a4:
0002f3a7: R0 := 0x430000
0002f3ac: R20 := 1
0002f3b3: R19 := mem[R0 + 0x330, el]:u64
00034746: goto %0002b443

0002b443:
0002b44a: R0 := R19
0002b451: R2 := mem[R21, el]:u64
0002b456: R1 := 0x413000
0002b45c: R1 := R1 + 0xFF8
0002b461: R30 := 0x40352C
0002b463: call @fprintf with return %0002b465

0002b465:
0002b469: R3 := R19
0002b46e: R2 := 0x61
0002b473: R1 := 1
0002b478: R0 := 0x414000
0002b47e: R0 := R0 + 0x48
0002b483: R30 := 0x403544
0002b485: call @fwrite with return %0002b487

0002b487:
0002b48b: R3 := R19
0002b490: R2 := 0xA5
0002b495: R1 := 1
0002b49a: R0 := 0x414000
0002b4a0: R0 := R0 + 0xB0
0002b4a5: R30 := 0x40355C
0002b4a7: call @fwrite with return %0002b4a9

0002b4a9:
0002b4ad: R3 := R19
0002b4b2: R2 := 0x2A
0002b4b7: R1 := 1
0002b4bc: R0 := 0x414000
0002b4c2: R0 := R0 + 0x158
0002b4c7: R30 := 0x403574
0002b4c9: call @fwrite with return %0002b4cb

0002b4cb:
0002b4cf: R3 := R19
0002b4d4: R2 := 0x77
0002b4d9: R1 := 1
0002b4de: R0 := 0x414000
0002b4e4: R0 := R0 + 0x188
0002b4e9: R30 := 0x40358C
0002b4eb: call @fwrite with return %0002b4ed

0002b4ed:
0002b4f1: R3 := R19
0002b4f6: R2 := 0x3E
0002b4fb: R1 := 1
0002b500: R0 := 0x414000
0002b506: R0 := R0 + 0x200
0002b50b: R30 := 0x4035A4
0002b50d: call @fwrite with return %0002b50f

0002b50f:
0002b513: R3 := R19
0002b518: R2 := 0x3B
0002b51d: R1 := 1
0002b522: R0 := 0x414000
0002b528: R0 := R0 + 0x240
0002b52d: R30 := 0x4035BC
0002b52f: call @fwrite with return %0002b531

0002b531:
0002b535: R3 := R19
0002b53a: R2 := 0x2D
0002b53f: R1 := 1
0002b544: R0 := 0x414000
0002b54a: R0 := R0 + 0x280
0002b54f: R30 := 0x4035D4
0002b551: call @fwrite with return %0002b553

0002b553:
0002b557: R3 := R19
0002b55c: R2 := 0x36
0002b561: R1 := 1
0002b566: R0 := 0x414000
0002b56c: R0 := R0 + 0x2B0
0002b571: R30 := 0x4035EC
0002b573: call @fwrite with return %0002b575

0002b575:
0002b579: R3 := R19
0002b57e: R2 := 0x47
0002b583: R1 := 1
0002b588: R0 := 0x414000
0002b58e: R0 := R0 + 0x2E8
0002b593: R30 := 0x403604
0002b595: call @fwrite with return %0002b597

0002b597:
0002b59b: R3 := R19
0002b5a0: R2 := 0x41
0002b5a5: R1 := 1
0002b5aa: R0 := 0x414000
0002b5b0: R0 := R0 + 0x330
0002b5b5: R30 := 0x40361C
0002b5b7: call @fwrite with return %0002b5b9

0002b5b9:
0002b5bd: R3 := R19
0002b5c2: R2 := 0x4C
0002b5c7: R1 := 1
0002b5cc: R0 := 0x414000
0002b5d2: R0 := R0 + 0x378
0002b5d7: R30 := 0x403634
0002b5d9: call @fwrite with return %0002b5db

0002b5db:
0002b5df: R3 := R19
0002b5e4: R2 := 0x35
0002b5e9: R1 := 1
0002b5ee: R0 := 0x414000
0002b5f4: R0 := R0 + 0x3C8
0002b5f9: R30 := 0x40364C
0002b5fb: call @fwrite with return %0002b5fd

0002b5fd:
0002b601: R3 := R19
0002b606: R2 := 0x2C
0002b60b: R1 := 1
0002b610: R0 := 0x414000
0002b616: R0 := R0 + 0x400
0002b61b: R30 := 0x403664
0002b61d: call @fwrite with return %0002b61f

0002b61f:
0002b623: R3 := R19
0002b628: R2 := 0xEE
0002b62d: R1 := 1
0002b632: R0 := 0x414000
0002b638: R0 := R0 + 0x430
0002b63d: R30 := 0x40367C
0002b63f: call @fwrite with return %0002b641

0002b641:
0002b645: R3 := R19
0002b64a: R2 := 0x44
0002b64f: R1 := 1
0002b654: R0 := 0x414000
0002b65a: R0 := R0 + 0x520
0002b65f: R30 := 0x403694
0002b661: call @fwrite with return %0002b663

0002b663:
0002b667: R3 := R19
0002b66c: R2 := 0x41
0002b671: R1 := 1
0002b676: R0 := 0x414000
0002b67c: R0 := R0 + 0x568
0002b681: R30 := 0x4036AC
0002b683: call @fwrite with return %0002b685

0002b685:
0002b689: R3 := R19
0002b68e: R2 := 0x7E
0002b693: R1 := 1
0002b698: R0 := 0x414000
0002b69e: R0 := R0 + 0x5B0
0002b6a3: R30 := 0x4036C4
0002b6a5: call @fwrite with return %0002b6a7

0002b6a7:
0002b6ab: R3 := R19
0002b6b0: R2 := 0x59
0002b6b5: R1 := 1
0002b6ba: R0 := 0x414000
0002b6c0: R0 := R0 + 0x630
0002b6c5: R30 := 0x4036DC
0002b6c7: call @fwrite with return %0002b6c9

0002b6c9:
0002b6cd: R3 := R19
0002b6d2: R2 := 0x3D
0002b6d7: R1 := 1
0002b6dc: R0 := 0x414000
0002b6e2: R0 := R0 + 0x690
0002b6e7: R30 := 0x4036F4
0002b6e9: call @fwrite with return %0002b6eb

0002b6eb:
0002b6ef: R3 := R19
0002b6f4: R2 := 0x50
0002b6f9: R1 := 1
0002b6fe: R0 := 0x414000
0002b704: R0 := R0 + 0x6D0
0002b709: R30 := 0x40370C
0002b70b: call @fwrite with return %0002b70d

0002b70d:
0002b711: R3 := R19
0002b716: R2 := 0x45
0002b71b: R1 := 1
0002b720: R0 := 0x414000
0002b726: R0 := R0 + 0x728
0002b72b: R30 := 0x403724
0002b72d: call @fwrite with return %0002b72f

0002b72f:
0002b733: R3 := R19
0002b738: R2 := 0x9C
0002b73d: R1 := 1
0002b742: R0 := 0x414000
0002b748: R0 := R0 + 0x770
0002b74d: R30 := 0x40373C
0002b74f: call @fwrite with return %0002b751

0002b751:
0002b755: R3 := R19
0002b75a: R2 := 0x80
0002b75f: R1 := 1
0002b764: R0 := 0x414000
0002b76a: R0 := R0 + 0x810
0002b76f: R30 := 0x403754
0002b771: call @fwrite with return %0002b773

0002b773:
0002b777: R3 := R19
0002b77c: R2 := 0x5F
0002b781: R1 := 1
0002b786: R0 := 0x414000
0002b78c: R0 := R0 + 0x898
0002b791: R30 := 0x40376C
0002b793: call @fwrite with return %0002b795

0002b795:
0002b799: R3 := R19
0002b79e: R2 := 0x46
0002b7a3: R1 := 1
0002b7a8: R0 := 0x414000
0002b7ae: R0 := R0 + 0x8F8
0002b7b3: R30 := 0x403784
0002b7b5: call @fwrite with return %0002b7b7

0002b7b7:
0002b7bb: R3 := R19
0002b7c0: R2 := 0x9B
0002b7c5: R1 := 1
0002b7ca: R0 := 0x414000
0002b7d0: R0 := R0 + 0x940
0002b7d5: R30 := 0x40379C
0002b7d7: call @fwrite with return %0002b7d9

0002b7d9:
0002b7dd: R3 := R19
0002b7e2: R2 := 0x54
0002b7e7: R1 := 1
0002b7ec: R0 := 0x414000
0002b7f2: R0 := R0 + 0x9E0
0002b7f7: R30 := 0x4037B4
0002b7f9: call @fwrite with return %0002b7fb

0002b7fb:
0002b7ff: R3 := R19
0002b804: R2 := 0x43
0002b809: R1 := 1
0002b80e: R0 := 0x414000
0002b814: R0 := R0 + 0xA38
0002b819: R30 := 0x4037CC
0002b81b: call @fwrite with return %0002b81d

0002b81d:
0002b821: R3 := R19
0002b826: R2 := 0x22
0002b82b: R1 := 1
0002b830: R0 := 0x414000
0002b836: R0 := R0 + 0xA80
0002b83b: R30 := 0x4037E4
0002b83d: call @fwrite with return %0002b83f

0002b83f:
0002b843: R3 := R19
0002b848: R2 := 0x47
0002b84d: R1 := 1
0002b852: R0 := 0x414000
0002b858: R0 := R0 + 0xAA8
0002b85d: R30 := 0x4037FC
0002b85f: call @fwrite with return %0002b861

0002b861:
0002b865: R3 := R19
0002b86a: R2 := 0x77
0002b86f: R1 := 1
0002b874: R0 := 0x414000
0002b87a: R0 := R0 + 0xAF0
0002b87f: R30 := 0x403814
0002b881: call @fwrite with return %0002b883

0002b883:
0002b887: R1 := R19
0002b88c: R0 := 0xA
0002b891: R30 := 0x403820
0002b894: call @fputc with return %0002b896

0002b896:
0002b89a: R0 := pad:64[31:0[R20]]
0002b89f: R30 := 0x403828
0002b8a1: call @exit with return %0002b8a3

0002f3b5:
0002f3ba: R0 := pad:64[mem[R19 + 4, el]:u32]
0002f3bf: when 31:0[R0] <> 0 goto %0002c35c
00034747: goto %0002f3c3

0002c35c:
0002c35f: R0 := 0x414000
0002c365: R0 := R0 + 0xB68
0002c36a: R30 := 0x4039DC
0002c36c: call @printf with return %0002c36e

0002c36e:
0002c371: R0 := 0x414000
0002c377: R0 := R0 + 0xB90
0002c37c: R30 := 0x4039E8
0002c37e: call @printf with return %0002c380

0002c380:
0002c383: VF := 0
0002c386: CF := 1
0002c38a: ZF := 31:0[R20] = 0
0002c38e: NF := 31:31[R20]
0002c396: when ~(NF = VF & ~ZF) goto %0002c394
00034748: goto %0002ed94

0002ed94:
0002ed97: R23 := 0x414000
0002ed9d: R26 := R21
0002eda3: R23 := R23 + 0xBA8
0002edaa: R24 := R21 + extend:64[31:0[R20].0]
00034749: goto %0002edac

0002edac:
0002edb1: R1 := mem[R26, el]:u64
0002edb5: R26 := R26 + 8
0002edbb: R0 := R23
0002edc0: R30 := 0x403A0C
0002edc2: call @printf with return %0002edc4

0002edc4:
0002edc8: #1444 := ~R24
0002edcd: #1445 := R26 + ~R24
0002edd3: VF := extend:128[#1445 + 1] <> extend:128[R26] + extend:128[#1444]
          + 1
0002edd9: CF := pad:128[#1445 + 1] <> pad:128[R26] + pad:128[#1444] + 1
0002eddd: ZF := #1445 + 1 = 0
0002ede1: NF := 63:63[#1445 + 1]
0002ede6: when ZF <> 1 goto %0002edac
0003474a: goto %0002c394

0002c394:
0002c39c: R0 := 0xA
0002c3a1: R30 := 0x403A1C
0002c3a3: call @putchar with return %0002c3a5

0002c3a5:
0002c3a9: when R22 <> 0 goto %0002c3a7
0003474b: goto %0002ed90

0002ed90:
0002ed92: goto %0002ec8c

0002f3c3:
0002f3c6: when R22 = 0 goto %0002ec8c
0003474c: goto %0002c3a7

0002ec8c:
0002ec8f: R0 := 0x430000
0002ec96: R23 := pad:64[mem[R0 + 0x348, el]:u32]
0002ec9c: #1441 := ~31:0[R23]
0002eca1: #1442 := 31:0[R20] + ~31:0[R23]
0002eca7: VF := extend:64[#1442 + 1] <> extend:64[31:0[R20]] +
          extend:64[#1441] + 1
0002ecad: CF := pad:64[#1442 + 1] <> pad:64[31:0[R20]] + pad:64[#1441] + 1
0002ecb1: ZF := #1442 + 1 = 0
0002ecb5: NF := 31:31[#1442 + 1]
0002ecbc: when NF = VF & ~ZF goto %0002e8d9
0003474d: goto %0002b91d

0002c3a7:
0002c3b0: R0 := R22
0002c3b5: R30 := 0x4028A8
0002c3b7: call @config_open with return %0002c3b9

0002c3b9:
0002c3bd: R23 := R0
0002c3c3: when R0 = 0 goto %0002c3c1
0003474e: goto %0002e897

0002c3c1:
0002c3ca: R2 := R22
0002c3cf: R1 := 0x414000
0002c3d4: R0 := 3
0002c3da: R1 := R1 + 0xBB0
0002c3df: R30 := 0x403DA0
0002c3e1: call @syslog with return %0002c3e3

0002c3e3:
0002c3e6: goto %0002c3e4

0002e897:
0002e89b: R0 := R22
0002e8a0: R30 := 0x4028B8
0002e8a2: call @free with return %0002e8a4

0002e8a4:
0002e8a7: R0 := 0x430000
0002e8ad: R22 := R23
0002e8b4: R23 := pad:64[mem[R0 + 0x348, el]:u32]
0002e8ba: #1437 := ~31:0[R23]
0002e8bf: #1438 := 31:0[R20] + ~31:0[R23]
0002e8c5: VF := extend:64[#1438 + 1] <> extend:64[31:0[R20]] +
          extend:64[#1437] + 1
0002e8cb: CF := pad:64[#1438 + 1] <> pad:64[31:0[R20]] + pad:64[#1437] + 1
0002e8cf: ZF := #1438 + 1 = 0
0002e8d3: NF := 31:31[#1438 + 1]
0002e8db: when NF = VF & ~ZF goto %0002e8d9
0003474f: goto %0002e960

0002e8d9:
0002e8e4: R24 := mem[R21 + extend:64[31:0[R23].0], el]:u64
0002e8e9: R1 := 0x3A
0002e8ef: R26 := extend:64[31:0[R23].0]
0002e8f5: R0 := R24
0002e8fa: R30 := 0x402DA8
0002e8fc: call @strchr with return %0002e8fe

0002e8fe:
0002e904: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002e909: when R0 <> 0 goto %0002e865
00034750: goto %0002e90d

0002e90d:
0002e911: R27 := pad:64[31:0[R23] + 1]
0002e917: #1439 := ~31:0[R20]
0002e91c: #1440 := 31:0[R27] + ~31:0[R20]
0002e922: VF := extend:64[#1440 + 1] <> extend:64[31:0[R27]] +
          extend:64[#1439] + 1
0002e928: CF := pad:64[#1440 + 1] <> pad:64[31:0[R27]] + pad:64[#1439] + 1
0002e92c: ZF := #1440 + 1 = 0
0002e930: NF := 31:31[#1440 + 1]
0002e936: when NF <> VF goto %0002b8a3
00034751: goto %0002e93a

0002b8a3:
0002b8a8: R26 := R21 + R26
0002b8ad: R2 := 0xA
0002b8b2: R1 := 0
0002b8b9: R0 := mem[R26 + 8, el]:u64
0002b8be: R30 := 0x40383C
0002b8c0: call @strtol with return %0002b8c2

0002b8c2:
0002b8c6: R1 := pad:64[31:0[R0]]
0002b8cc: R0 := R24
0002b8d1: R30 := 0x403848
0002b8d3: call @parent_add with return %0002b8d5

0002b8d5:
0002b8da: R0 := mem[R31 + 0x100, el]:u64
0002b8e0: when R0 = 0 goto %0002b8de
00034752: goto %0002f39a

0002f39a:
0002f39e: R23 := pad:64[31:0[R27]]
0002f3a2: goto %0002e8d9

0002e93a:
0002e93e: R0 := R24
0002e943: R1 := 0
0002e948: R30 := 0x402DC8
0002e94a: call @parent_add with return %0002e94c

0002e94c:
0002e951: R0 := mem[R31 + 0x100, el]:u64
0002e956: when R0 = 0 goto %0002b8de
00034753: goto %0002e95a

0002e95a:
0002e95e: R23 := pad:64[31:0[R27]]
00034754: goto %0002b916

0002e865:
0002e868: R1 := 0
0002e86e: R0 := R24
0002e873: R30 := 0x402D7C
0002e875: call @parent_add with return %0002e877

0002e877:
0002e87c: R1 := mem[R31 + 0x100, el]:u64
0002e881: R0 := 1
0002e886: when R1 = 0 goto %0002b8de
00034755: goto %0002b8e9

0002b8de:
0002b8e6: R0 := 2
0002b8eb: goto %0002b8e9

0002b8e9:
0002b8f1: R23 := pad:64[31:0[R23] + 31:0[R0]]
0002b8f7: #1384 := ~31:0[R23]
0002b8fc: #1385 := 31:0[R20] + ~31:0[R23]
0002b902: VF := extend:64[#1385 + 1] <> extend:64[31:0[R20]] +
          extend:64[#1384] + 1
0002b908: CF := pad:64[#1385 + 1] <> pad:64[31:0[R20]] + pad:64[#1384] + 1
0002b90c: ZF := #1385 + 1 = 0
0002b910: NF := 31:31[#1385 + 1]
0002b918: when ~(NF = VF & ~ZF) goto %0002b916
00034756: goto %0002e8d9

0002b916:
0002b91f: when R22 = 0 goto %0002b91d
00034757: goto %0002e961

0002e960:
0002e963: goto %0002e961

0002e961:
0002e967: R0 := 0x32
0002e96c: R30 := 0x402DE0
0002e96e: call @zmalloc with return %0002e970

0002e970:
0002e973: R1 := 0x414000
0002e979: R1 := R1 + 0xBE0
0002e981: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002e987: R0 := R22
0002e98c: R30 := 0x402DF4
0002e98e: call @config_pop with return %0002e990

0002e990:
0002e994: R20 := R0
0002e99a: when R0 = 0 goto %0002e998
00034758: goto %0002ecf8

0002ecf8:
0002ecfd: R0 := mem[R31 + 0x100, el]:u64
0002ed04: R1 := pad:64[mem[R0]]
0002ed0a: when 31:0[R1] = 0 goto %0002ed08
00034759: goto %0002ed20

0002ed08:
0002ed11: R1 := R20
0002ed16: R2 := 0x32
0002ed1b: R30 := 0x403C48
0002ed1d: call @strlcpy with return %0002ed1f

0002ed1f:
0002ed22: goto %0002ed20

0002ed20:
0002ed27: R0 := R20
0002ed2c: R30 := 0x402E10
0002ed2e: call @free with return %0002e998

0002e998:
0002e9a2: R21 := mem[R31 + 0x100, el]:u64
0002e9a7: R20 := 0x414000
0002e9ad: R20 := R20 + 0xBE8
0002e9b3: R1 := R21
0002e9b9: R0 := R20
0002e9be: R30 := 0x402E28
0002e9c0: call @strcasecmp with return %0002e9c2

0002e9c2:
0002e9c5: VF := 0
0002e9c8: CF := 1
0002e9cc: ZF := 31:0[R0] = 0
0002e9d0: NF := 31:31[R0]
0002e9dd: when ZF <> 1 goto %0002e9d6
0002e9de: goto %0002e9d9

0002e9d9:
0002e9da: R25 := 1
0002e9e0: goto %0002e9dc

0002e9d6:
0002e9d7: R25 := pad:64[31:0[R25]]
0002e9df: goto %0002e9dc

0002e9dc:
0002e9e6: R0 := R21
0002e9eb: R30 := 0x402E38
0002e9ed: call @free with return %0002e9ef

0002e9ef:
0002e9f2: R0 := 0x32
0002e9f7: R30 := 0x402E40
0002e9f9: call @zmalloc with return %0002e9fb

0002e9fb:
0002e9ff: R2 := R0
0002ea04: R1 := 0x414000
0002ea0a: R0 := R22
0002ea10: R1 := R1 + 0xBF0
0002ea18: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002ea1d: R30 := 0x402E58
0002ea1f: call @config_pop with return %0002ea21

0002ea21:
0002ea25: R21 := R0
0002ea2b: when R0 = 0 goto %0002ea29
0003475a: goto %0002ecc0

0002ecc0:
0002ecc5: R0 := mem[R31 + 0x100, el]:u64
0002eccc: R1 := pad:64[mem[R0]]
0002ecd2: when 31:0[R1] = 0 goto %0002ecd0
0003475b: goto %0002ece8

0002ecd0:
0002ecd9: R1 := R21
0002ecde: R2 := 0x32
0002ece3: R30 := 0x403C58
0002ece5: call @strlcpy with return %0002ece7

0002ece7:
0002ecea: goto %0002ece8

0002ece8:
0002ecef: R0 := R21
0002ecf4: R30 := 0x402E74
0002ecf6: call @free with return %0002ea29

0002ea29:
0002ea33: R21 := mem[R31 + 0x100, el]:u64
0002ea39: R0 := R20
0002ea3f: R1 := R21
0002ea44: R30 := 0x402E84
0002ea46: call @strcasecmp with return %0002ea48

0002ea48:
0002ea4c: when 31:0[R0] = 0 goto %0002ea4a
0003475c: goto %0002ea5d

0002ea4a:
0002ea52: R0 := 1
0002ea5a: mem := mem with [R19 + 0x60, el]:u32 <- 31:0[R0]
0002ea5f: goto %0002ea5d

0002ea5d:
0002ea64: R0 := R21
0002ea69: R20 := 0x414000
0002ea6e: R30 := 0x402E94
0002ea70: call @free with return %0002ea72

0002ea72:
0002ea76: R20 := R20 + 0xC00
0002ea7b: goto %0002ea79

0002ea79:
0002ea80: R1 := R20
0002ea86: R0 := R22
0002ea8b: R30 := 0x402EBC
0002ea8d: call @config_pop with return %0002ea8f

0002ea8f:
0002ea95: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002ea9b: R1 := R0
0002eaa1: when R0 <> 0 goto %0002ea9f
0003475d: goto %0002eac5

0002eac5:
0002eac8: R21 := 0x413000
0002eacd: R20 := 0x414000
0002ead3: R21 := R21 + 0xD68
0002ead9: R20 := R20 + 0xC08
0002eade: goto %0002eadc

0002eadc:
0002eae3: R1 := R20
0002eae9: R0 := R22
0002eaee: R30 := 0x402F00
0002eaf0: call @config_pop with return %0002eaf2

0002eaf2:
0002eaf8: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002eafe: R2 := R0
0002eb04: when R0 <> 0 goto %0002eb02
0003475e: goto %0002eb2e

0002eb2e:
0002eb31: R20 := 0x414000
0002eb36: R24 := 0x413000
0002eb3c: R20 := R20 + 0xC10
0002eb42: R24 := R24 + 0xD70
0002eb47: goto %0002eb45

0002eb45:
0002eb4c: R1 := R20
0002eb52: R0 := R22
0002eb57: R30 := 0x402F44
0002eb59: call @config_pop with return %0002eb5b

0002eb5b:
0002eb61: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002eb67: R2 := R0
0002eb6d: when R0 <> 0 goto %0002eb6b
0003475f: goto %0002eb97

0002eb97:
0002eb9a: R24 := 0x414000
0002eb9f: R25 := 0x414000
0002eba5: R24 := R24 + 0xC40
0002ebab: R25 := R25 + 0xC20
0002ebb0: goto %0002ebae

0002ebae:
0002ebb5: R1 := R24
0002ebbb: R0 := R22
0002ebc0: R30 := 0x402F9C
0002ebc2: call @config_pop with return %0002ebc4

0002ebc4:
0002ebca: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002ebcf: when R0 = 0 goto %0002de03
00034760: goto %0002ebd3

0002de03:
0002de07: R1 := R21
0002de0d: R0 := R22
0002de12: R30 := 0x403268
0002de14: call @config_pop with return %0002de16

0002de16:
0002de1c: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002de21: when R0 <> 0 goto %0002dde9
00034761: goto %0002de25

0002de25:
0002de2a: R0 := mem[R31 + 0x128, el]:u64
0002de30: when R0 = 0 goto %0002de2e
00034762: goto %0002c796

0002de2e:
0002de38: R24 := mem[R22, el]:u64
0002de3d: R20 := 0x414000
0002de42: when R24 = 0 goto %0002c72a
00034763: goto %0002de46

0002de46:
0002de49: R21 := 0x414000
0002de4f: R20 := R20 + 0xC48
0002de55: R21 := R21 + 0xC50
00034764: goto %0002de59

0002de59:
0002de5e: R25 := mem[R24, el]:u64
0002de64: R0 := R20
0002de6a: R1 := R25
0002de6f: R30 := 0x403B28
0002de71: call @strcasecmp with return %0002de73

0002de73:
0002de77: R23 := pad:64[31:0[R0]]
0002de7d: when 31:0[R0] = 0 goto %0002de7b
00034765: goto %0002decc

0002decc:
0002ded0: R1 := R25
0002ded6: R0 := R21
0002dedb: R30 := 0x403B3C
0002dedd: call @strcasecmp with return %0002dedf

0002dedf:
0002dee2: when 31:0[R0] <> 0 goto %0002deba
00034766: goto %0002de7b

0002de7b:
0002de85: R1 := mem[R24 + 8, el]:u64
0002de8a: VF := 0
0002de8d: CF := 1
0002de91: ZF := 31:0[R23] = 0
0002de95: NF := 31:31[R23]
0002dea1: when ZF goto %0002de9a
0002dea2: goto %0002de9d

0002de9d:
0002de9e: R2 := 1
0002dea4: goto %0002dea0

0002de9a:
0002de9b: R2 := 0
0002dea3: goto %0002dea0

0002dea0:
0002deaa: R0 := R31 + 0x128
0002deaf: R30 := 0x403B54
0002deb1: call @acl_add with return %0002deb3

0002deb3:
0002deb6: when 31:0[R0] = 0 goto %0002c3e4
00034767: goto %0002deba

0002deba:
0002debf: R24 := mem[R24 + 0x18, el]:u64
0002dec4: when R24 <> 0 goto %0002de59
00034768: goto %0002dec8

0002dec8:
0002deca: goto %0002c731

0002c3e4:
0002c3ea: R0 := 1
0002c3ef: R30 := 0x402904
0002c3f1: call @myexit with return %0002c3f3

0002c3f3:
0002c3f6: R3 := 0x430000
0002c3fb: R28 := 1
0002c400: R2 := 0x180
0002c405: R1 := 0x241
0002c40c: R0 := mem[R3 + 0x340, el]:u64
0002c414: mem := mem with [R19 + 4, el]:u32 <- 31:0[R28]
0002c419: R30 := 0x402920
0002c41c: call @open with return %0002c41e

0002c41e:
0002c422: R26 := pad:64[31:0[R0]]
0002c427: R3 := 0x430000
0002c42d: when 31:31[R0] goto %0002c42b
00034769: goto %0002e167

0002c42b:
0002c433: R1 := 0x430000
0002c438: R2 := 0x1A
0002c43d: R0 := 0x413000
0002c443: R0 := R0 + 0xDB0
0002c44a: R3 := mem[R1 + 0x330, el]:u64
0002c44f: R1 := 1
0002c454: R30 := 0x4042C4
0002c456: call @fwrite with return %0002c458

0002c458:
0002c45c: R0 := pad:64[31:0[R28]]
0002c461: R30 := 0x4042CC
0002c463: call @myexit with return %0002c465

0002e167:
0002e16c: R1 := mem[R3 + 0x340, el]:u64
0002e171: R0 := 0x413000
0002e177: R0 := R0 + 0xDD0
0002e17c: R30 := 0x40293C
0002e17e: call @printf with return %0002e180

0002e180:
0002e184: R1 := pad:64[31:0[R28]]
0002e18a: R0 := pad:64[31:0[R26]]
0002e18f: R30 := 0x402948
0002e191: call @dup2 with return %0002e193

0002e193:
0002e197: R0 := pad:64[31:0[R26]]
0002e19c: R1 := 2
0002e1a1: R30 := 0x402954
0002e1a3: call @dup2 with return %0002e1a5

0002e1a5:
0002e1ab: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0002e1b2: mem := mem with [R31 + 0x8C, el]:u32 <- 0
0002e1b6: goto %0002b3ae

0002c796:
0002c79d: R0 := R22
0002c7a2: R1 := 0x414000
0002c7a8: R1 := R1 + 0xC58
0002c7ad: R30 := 0x403288
0002c7af: call @config_pop with return %0002c7b1

0002c7b1:
0002c7b5: R20 := R0
0002c7bb: when R0 = 0 goto %0002c7b9
0003476a: goto %0002cb15

0002cb15:
0002cb1a: R0 := mem[R31 + 0x98, el]:u64
0002cb21: R0 := pad:64[mem[R0]]
0002cb26: when 31:0[R0] = 0 goto %0002ca43
0003476b: goto %0002ca5d

0002ca43:
0002ca48: R0 := mem[R31 + 0x98, el]:u64
0002ca4e: R1 := R20
0002ca53: R2 := 0x32
0002ca58: R30 := 0x403FF0
0002ca5a: call @strlcpy with return %0002ca5c

0002ca5c:
0002ca5f: goto %0002ca5d

0002ca5d:
0002ca64: R0 := R20
0002ca69: R30 := 0x4032A4
0002ca6b: call @free with return %0002c7b9

0002c7b9:
0002c7c2: R0 := R22
0002c7c7: R1 := 0x414000
0002c7cd: R1 := R1 + 0xC60
0002c7d2: R30 := 0x4032B4
0002c7d4: call @config_pop with return %0002c7d6

0002c7d6:
0002c7da: R20 := R0
0002c7e0: when R0 = 0 goto %0002c7de
0003476c: goto %0002cb00

0002cb00:
0002cb05: R0 := mem[R31 + 0x78, el]:u64
0002cb0c: R0 := pad:64[mem[R0]]
0002cb11: when 31:0[R0] = 0 goto %0002ca97
0003476d: goto %0002cab1

0002ca97:
0002ca9c: R0 := mem[R31 + 0x78, el]:u64
0002caa2: R1 := R20
0002caa7: R2 := 0x32
0002caac: R30 := 0x404018
0002caae: call @strlcpy with return %0002cab0

0002cab0:
0002cab3: goto %0002cab1

0002cab1:
0002cab8: R0 := R20
0002cabd: R30 := 0x4032D0
0002cabf: call @free with return %0002c7de

0002c7de:
0002c7e7: R0 := R22
0002c7ec: R1 := 0x414000
0002c7f2: R1 := R1 + 0xC68
0002c7f7: R30 := 0x4032E0
0002c7f9: call @config_pop with return %0002c7fb

0002c7fb:
0002c7ff: R20 := R0
0002c805: when R0 = 0 goto %0002c803
0003476e: goto %0002caeb

0002caeb:
0002caf0: R0 := mem[R31 + 0x70, el]:u64
0002caf7: R0 := pad:64[mem[R0]]
0002cafc: when 31:0[R0] = 0 goto %0002c9f6
0003476f: goto %0002ca10

0002c9f6:
0002c9fb: R0 := mem[R31 + 0x70, el]:u64
0002ca01: R1 := R20
0002ca06: R2 := 0x32
0002ca0b: R30 := 0x403FCC
0002ca0d: call @strlcpy with return %0002ca0f

0002ca0f:
0002ca12: goto %0002ca10

0002ca10:
0002ca17: R0 := R20
0002ca1c: R30 := 0x4032FC
0002ca1e: call @free with return %0002c803

0002c803:
0002c80c: R0 := R22
0002c811: R1 := 0x414000
0002c817: R1 := R1 + 0xC78
0002c81c: R30 := 0x40330C
0002c81e: call @config_pop with return %0002c820

0002c820:
0002c824: R20 := R0
0002c82a: when R0 = 0 goto %0002c828
00034770: goto %0002cad6

0002cad6:
0002cadb: R0 := mem[R31 + 0xC8, el]:u64
0002cae2: R0 := pad:64[mem[R0]]
0002cae7: when 31:0[R0] = 0 goto %0002ca6d
00034771: goto %0002ca87

0002ca6d:
0002ca72: R0 := mem[R31 + 0xC8, el]:u64
0002ca78: R1 := R20
0002ca7d: R2 := 0x32
0002ca82: R30 := 0x404004
0002ca84: call @strlcpy with return %0002ca86

0002ca86:
0002ca89: goto %0002ca87

0002ca87:
0002ca8e: R0 := R20
0002ca93: R30 := 0x403328
0002ca95: call @free with return %0002c828

0002c828:
0002c831: R0 := R22
0002c836: R1 := 0x414000
0002c83c: R1 := R1 + 0xC88
0002c841: R30 := 0x403338
0002c843: call @config_pop with return %0002c845

0002c845:
0002c849: R20 := R0
0002c84f: when R0 = 0 goto %0002c84d
00034772: goto %0002cac1

0002cac1:
0002cac6: R0 := mem[R31 + 0xD0, el]:u64
0002cacd: R0 := pad:64[mem[R0]]
0002cad2: when 31:0[R0] = 0 goto %0002c94e
00034773: goto %0002c968

0002c94e:
0002c953: R0 := mem[R31 + 0xD0, el]:u64
0002c959: R1 := R20
0002c95e: R2 := 0x32
0002c963: R30 := 0x404054
0002c965: call @strlcpy with return %0002c967

0002c967:
0002c96a: goto %0002c968

0002c968:
0002c96f: R0 := R20
0002c974: R30 := 0x403354
0002c976: call @free with return %0002c84d

0002c84d:
0002c856: R0 := R22
0002c85b: R1 := 0x414000
0002c861: R1 := R1 + 0xC90
0002c866: R30 := 0x403364
0002c868: call @config_pop with return %0002c86a

0002c86a:
0002c86e: R20 := R0
0002c874: when R0 = 0 goto %0002c872
00034774: goto %0002c9b7

0002c9b7:
0002c9bc: R0 := mem[R31 + 0xD8, el]:u64
0002c9c3: R0 := pad:64[mem[R0]]
0002c9c9: when 31:0[R0] = 0 goto %0002c9c7
00034775: goto %0002c9e6

0002c9c7:
0002c9d1: R0 := mem[R31 + 0xD8, el]:u64
0002c9d7: R1 := R20
0002c9dc: R2 := 0x32
0002c9e1: R30 := 0x403FB8
0002c9e3: call @strlcpy with return %0002c9e5

0002c9e5:
0002c9e8: goto %0002c9e6

0002c9e6:
0002c9ed: R0 := R20
0002c9f2: R30 := 0x403380
0002c9f4: call @free with return %0002c872

0002c872:
0002c87b: R0 := R22
0002c880: R1 := 0x414000
0002c886: R1 := R1 + 0xC98
0002c88b: R30 := 0x403390
0002c88d: call @config_pop with return %0002c88f

0002c88f:
0002c893: R20 := R0
0002c899: when R0 = 0 goto %0002c897
00034776: goto %0002c978

0002c978:
0002c97d: R0 := mem[R31 + 0xA0, el]:u64
0002c984: R0 := pad:64[mem[R0]]
0002c98a: when 31:0[R0] = 0 goto %0002c988
00034777: goto %0002c9a7

0002c988:
0002c992: R0 := mem[R31 + 0xA0, el]:u64
0002c998: R1 := R20
0002c99d: R2 := 0x32
0002c9a2: R30 := 0x40402C
0002c9a4: call @strlcpy with return %0002c9a6

0002c9a6:
0002c9a9: goto %0002c9a7

0002c9a7:
0002c9ae: R0 := R20
0002c9b3: R30 := 0x4033AC
0002c9b5: call @free with return %0002c897

0002c897:
0002c8a0: R0 := R22
0002c8a5: R1 := 0x414000
0002c8ab: R1 := R1 + 0xCA8
0002c8b0: R30 := 0x4033BC
0002c8b2: call @config_pop with return %0002c8b4

0002c8b4:
0002c8b8: R20 := R0
0002c8be: when R0 = 0 goto %0002c8bc
00034778: goto %0002c90f

0002c90f:
0002c914: R0 := mem[R31 + 0x90, el]:u64
0002c91b: R0 := pad:64[mem[R0]]
0002c921: when 31:0[R0] = 0 goto %0002c91f
00034779: goto %0002c93e

0002c91f:
0002c929: R0 := mem[R31 + 0x90, el]:u64
0002c92f: R1 := R20
0002c934: R2 := 0x32
0002c939: R30 := 0x404040
0002c93b: call @strlcpy with return %0002c93d

0002c93d:
0002c940: goto %0002c93e

0002c93e:
0002c945: R0 := R20
0002c94a: R30 := 0x4033D8
0002c94c: call @free with return %0002c8bc

0002c8bc:
0002c8c4: R0 := 0x32
0002c8c9: R30 := 0x4033E0
0002c8cb: call @zmalloc with return %0002c8cd

0002c8cd:
0002c8d0: R1 := 0x414000
0002c8d6: R1 := R1 + 0xCB8
0002c8de: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c8e4: R0 := R22
0002c8e9: R30 := 0x4033F4
0002c8eb: call @config_pop with return %0002c8ed

0002c8ed:
0002c8f1: R20 := R0
0002c8f6: when R0 = 0 goto %0002c103
0003477a: goto %0002c8fa

0002c8fa:
0002c8ff: R0 := mem[R31 + 0x100, el]:u64
0002c906: R1 := pad:64[mem[R0]]
0002c90b: when 31:0[R1] = 0 goto %0002c0e0
0003477b: goto %0002c0f3

0002c0e0:
0002c0e4: R1 := R20
0002c0e9: R2 := 0x32
0002c0ee: R30 := 0x403FA4
0002c0f0: call @strlcpy with return %0002c0f2

0002c0f2:
0002c0f5: goto %0002c0f3

0002c0f3:
0002c0fa: R0 := R20
0002c0ff: R30 := 0x403410
0002c101: call @free with return %0002c103

0002c103:
0002c108: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
0002c10e: when 31:0[R0] = 0 goto %0002c10c
0003477c: goto %0002c1b4

0002c10c:
0002c116: R0 := mem[R31 + 0x100, el]:u64
0002c11b: R2 := 0
0002c120: R1 := 0
0002c125: R30 := 0x403BE0
0002c128: call @strtoul with return %0002c12a

0002c12a:
0002c12e: R21 := R0
0002c135: R0 := mem[R31 + 0x100, el]:u64
0002c13a: R2 := 0
0002c13f: R1 := 0
0002c144: R30 := 0x403BF4
0002c146: call @strtoul with return %0002c148

0002c148:
0002c14c: R20 := R0
0002c153: R0 := mem[R31 + 0x100, el]:u64
0002c158: R2 := 0
0002c15d: R1 := 0
0002c162: R30 := 0x403C08
0002c164: call @strtoul with return %0002c166

0002c166:
0002c16a: R3 := pad:64[23:0[R20].0]
0002c170: R20 := pad:64[23:16[R0].0]
0002c177: R0 := mem[R31 + 0x100, el]:u64
0002c17d: R3 := pad:64[23:16[R3].0]
0002c184: R20 := pad:64[31:0[R3] | pad:32[31:8[R20]]]
0002c189: R2 := 0
0002c18e: R1 := 0
0002c193: R30 := 0x403C28
0002c195: call @strtoul with return %0002c197

0002c197:
0002c19b: R0 := pad:64[31:24[R0]]
0002c1a2: R21 := pad:64[31:0[R0] | (7:0[R21].0)]
0002c1a9: R0 := pad:64[31:0[R21] | 31:0[R20]]
0002c1b1: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
0002c1b6: goto %0002c1b4

0002c1b4:
0002c1bc: R0 := mem[R31 + 0x100, el]:u64
0002c1c1: R30 := 0x403420
0002c1c3: call @free with return %0002c1c5

0002c1c5:
0002c1c8: R0 := 0x32
0002c1cd: R30 := 0x403428
0002c1cf: call @zmalloc with return %0002c1d1

0002c1d1:
0002c1d4: R1 := 0x414000
0002c1da: R1 := R1 + 0xCC0
0002c1e2: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c1e8: R0 := R22
0002c1ed: R30 := 0x40343C
0002c1ef: call @config_pop with return %0002c1f1

0002c1f1:
0002c1f5: R20 := R0
0002c1fb: when R0 = 0 goto %0002c1f9
0003477d: goto %0002ef90

0002ef90:
0002ef95: R0 := mem[R31 + 0x100, el]:u64
0002ef9c: R1 := pad:64[mem[R0]]
0002efa1: when 31:0[R1] = 0 goto %0002ca20
0003477e: goto %0002ca33

0002ca20:
0002ca24: R1 := R20
0002ca29: R2 := 0x32
0002ca2e: R30 := 0x403FDC
0002ca30: call @strlcpy with return %0002ca32

0002ca32:
0002ca35: goto %0002ca33

0002ca33:
0002ca3a: R0 := R20
0002ca3f: R30 := 0x403458
0002ca41: call @free with return %0002c1f9

0002c1f9:
0002c203: R0 := mem[R19 + 0x68, el]:u64
0002c209: when R0 = 0 goto %0002c207
0003477f: goto %0002c21c

0002c207:
0002c211: R0 := mem[R31 + 0x100, el]:u64
0002c218: R1 := pad:64[mem[R0]]
0002c21e: when 31:0[R1] = 0 goto %0002c21c
00034780: goto %0002ef60

0002ef60:
0002ef63: R1 := 1
0002ef68: R2 := 0xA
0002ef70: mem := mem with [R19 + 0x64, el]:u32 <- 31:0[R1]
0002ef75: R1 := 0
0002ef7a: R30 := 0x403BC4
0002ef7c: call @strtol with return %0002ef7e

0002ef7e:
0002ef82: R0 := extend:64[31:0[R0]]
0002ef8a: mem := mem with [R19 + 0x68, el]:u64 <- R0
0002ef8e: goto %0002c21c

0002c21c:
0002c226: R0 := mem[R31 + 0x100, el]:u64
0002c22b: R20 := 0x414000
0002c231: R20 := R20 + 0xCD0
0002c236: R30 := 0x403470
0002c238: call @free with return %0002c23a

0002c23a:
0002c23d: goto %0002c23b

0002c23b:
0002c242: R1 := R20
0002c248: R0 := R22
0002c24d: R30 := 0x403488
0002c24f: call @config_pop with return %0002c251

0002c251:
0002c257: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c25d: R1 := R0
0002c263: when R0 = 0 goto %0002c261
00034781: goto %0002ef24

0002c261:
0002c269: R20 := 0x414000
0002c26e: R21 := 0x414000
0002c274: R20 := R20 + 0xD10
0002c27a: R21 := R21 + 0xCD8
00034782: goto %0002c27c

0002c27c:
0002c280: R1 := R20
0002c286: R0 := R22
0002c28b: R30 := 0x403888
0002c28d: call @config_pop with return %0002c28f

0002c28f:
0002c295: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c29b: R24 := R0
0002c2a1: when R0 = 0 goto %0002c29f
00034783: goto %0002eeb0

0002eeb0:
0002eeb3: R1 := 0x3A
0002eeb8: R30 := 0x40389C
0002eeba: call @strchr with return %0002eebc

0002eebc:
0002eebf: when R0 = 0 goto %0002ee8c
00034784: goto %0002eec3

0002ee8c:
0002ee90: R2 := R24
0002ee96: R1 := R21
0002ee9b: R0 := 3
0002eea0: R30 := 0x403984
0002eea2: call @syslog with return %0002eea4

0002eea4:
0002eea6: goto %0002c27c

0002eec3:
0002eec7: R2 := R0
0002eecc: R4 := 1
0002eed2: R3 := pad:64[31:0[R4]]
0002eed9: mem := mem with [R2] <- 0
0002eedd: R2 := R2 + 1
0002eee4: R0 := mem[R19 + 0x50, el]:u64
0002eeeb: R1 := mem[R31 + 0x100, el]:u64
0002eef0: R30 := 0x4038BC
0002eef2: call @hlist_add with return %0002eef4

0002eef4:
0002eefa: mem := mem with [R19 + 0x50, el]:u64 <- R0
0002ef00: R1 := R20
0002ef06: R0 := R22
0002ef0b: R30 := 0x4038CC
0002ef0d: call @config_pop with return %0002ef0f

0002ef0f:
0002ef15: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002ef1b: R24 := R0
0002ef20: when R0 <> 0 goto %0002eeb0
00034785: goto %0002c29f

0002c29f:
0002c2a7: R20 := 0x414000
0002c2ac: R25 := 0x413000
0002c2b2: R20 := R20 + 0xD20
0002c2b8: R25 := R25 + 0xD60
0002c2bd: R24 := 1
0002c2c2: R26 := 1
0002c2c7: goto %0002c2c5

0002c2c5:
0002c2cc: R1 := R20
0002c2d2: R0 := R22
0002c2d7: R30 := 0x403908
0002c2d9: call @config_pop with return %0002c2db

0002c2db:
0002c2e1: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c2e7: R21 := R0
0002c2ed: when R0 = 0 goto %0002c2eb
00034786: goto %0002edea

0002c2eb:
0002c2f5: R21 := mem[R22, el]:u64
0002c2fa: when R21 = 0 goto %0002b91d
00034787: goto %0002c2fe

0002c2fe:
0002c301: R20 := 0x414000
0002c307: R20 := R20 + 0xD30
00034788: goto %0002c309

0002c309:
0002c30e: R2 := mem[R21, el]:u64
0002c314: R1 := R20
0002c319: R0 := 6
0002c31e: R30 := 0x4039A8
0002c320: call @syslog with return %0002c322

0002c322:
0002c327: R21 := mem[R21 + 0x18, el]:u64
0002c32c: when R21 <> 0 goto %0002c309
00034789: goto %0002c330

0002c330:
0002c332: goto %0002b91d

0002b91d:
0002b926: R0 := R22
0002b92b: R30 := 0x402FD8
0002b92d: call @config_close with return %0002b92f

0002b92f:
0002b934: R0 := pad:64[mem[R31 + 0xC0, el]:u32]
0002b93a: when 31:0[R0] = 0 goto %0002b938
0003478a: goto %0002f374

0002b938:
0002b940: R30 := 0x403C68
0002b942: call @parent_available with return %0002b944

0002b944:
0002b948: when 31:0[R0] = 0 goto %0002b946
0003478b: goto %0002f34f

0002b946:
0002b950: R0 := mem[R31 + 0x80, el]:u64
0002b957: R2 := pad:64[mem[R31 + 0xC4, el]:u32]
0002b95c: VF := 0
0002b95f: CF := 1
0002b963: ZF := R0 = 0
0002b967: NF := 63:63[R0]
0002b96c: R0 := 0x414000
0002b978: when ZF goto %0002b971
0002b979: goto %0002b974

0002b974:
0002b975: R1 := 1
0002b97b: goto %0002b977

0002b971:
0002b972: R1 := 0
0002b97a: goto %0002b977

0002b977:
0002b981: R0 := R0 + 0xD58
0002b988: R1 := pad:64[31:0[R1] | 31:0[R2]]
0002b98d: R30 := 0x404260
0002b98f: call @croak with return %0002b991

0002f34f:
0002f354: R0 := mem[R31 + 0x80, el]:u64
0002f359: when R0 <> 0 goto %0002c55a
0003478c: goto %0002f35d

0002f35d:
0002f362: R0 := mem[R31 + 0x118, el]:u64
0002f367: when R0 = 0 goto %0002f336
0003478d: goto %0002f36b

0002f336:
0002f33b: R1 := pad:64[mem[R31 + 0xC4, el]:u32]
0002f340: R0 := 0x414000
0002f346: R0 := R0 + 0xD78
0002f34b: R30 := 0x404284
0002f34d: call @croak with return %0002df0f

0002f36b:
0002f36e: R20 := 1
0002f372: goto %0002c560

0002f374:
0002f379: R0 := mem[R31 + 0x80, el]:u64
0002f37e: VF := 0
0002f381: CF := 1
0002f385: ZF := R0 = 0
0002f389: NF := 63:63[R0]
0002f395: when ZF <> 1 goto %0002f38e
0002f396: goto %0002f391

0002f391:
0002f392: R20 := 1
0002f398: goto %0002f394

0002f38e:
0002f38f: R20 := 0
0002f397: goto %0002f394

0002f394:
0003478e: goto %0002c560

0002c560:
0002c568: R0 := mem[R31 + 0x90, el]:u64
0002c56f: R0 := pad:64[mem[R0]]
0002c574: when 31:0[R0] = 0 goto %0002bf5e
0003478f: goto %0002b9ce

0002b9ce:
0002b9d6: R1 := mem[R31 + 0x98, el]:u64
0002b9dd: R0 := pad:64[mem[R1]]
0002b9e3: when 31:0[R0] = 0 goto %0002b9e1
00034790: goto %0002f2ef

0002f2ef:
0002f2f2: R0 := 0x414000
0002f2f8: R0 := R0 + 0xDD0
0002f2fd: R30 := 0x403010
0002f2ff: call @strcasecmp with return %0002f301

0002f301:
0002f304: when 31:0[R0] <> 0 goto %0002dcd4
00034791: goto %0002f308

0002f308:
0002f30d: R0 := mem[R19 + 0x58, el]:u64
0002f312: R1 := 0x416000
0002f317: R2 := 1
0002f31e: V0 := pad:128[mem[R1 + 0x260, el]:u64]
0002f324: R1 := R0 + 0x200
0002f32c: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
0002f334: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
00034792: goto %0002b9e1

0002b9e1:
0002b9eb: R0 := mem[R31 + 0x120, el]:u64
0002b9f1: when R0 = 0 goto %0002b9ef
00034793: goto %0002f2e1

0002f2e1:
0002f2e6: R0 := mem[R19 + 0x50, el]:u64
0002f2eb: when R0 = 0 goto %0002dd92
00034794: goto %0002b9ef

0002dd92:
0002dd95: R1 := 0x414000
0002dd9a: R0 := 4
0002dda0: R1 := R1 + 0xE10
0002dda5: R30 := 0x404150
0002dda7: call @syslog with return %0002dda9

0002dda9:
0002ddab: goto %0002b9ef

0002b9ef:
0002b9f8: when 31:0[R20] <> 0 goto %0002b9f6
00034795: goto %0002ba2f

0002b9f6:
0002ba00: R4 := mem[R19 + 0x58, el]:u64
0002ba05: R1 := 0x414000
0002ba0a: R0 := 6
0002ba10: R1 := R1 + 0xE48
0002ba17: R2 := pad:64[mem[R4 + 0x12C, el]:u32]
0002ba1e: R3 := pad:64[mem[R4 + 0x130, el]:u32]
0002ba25: R4 := pad:64[mem[R4 + 0x134, el]:u32]
0002ba2a: R30 := 0x404078
0002ba2c: call @syslog with return %0002ba2e

0002ba2e:
0002ba31: goto %0002ba2f

0002ba2f:
0002ba37: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
0002ba3d: when 31:0[R0] <> 0 goto %0002ba3b
00034796: goto %0002ba76

0002ba3b:
0002ba44: R20 := R0
0002ba4d: R2 := pad:64[7:0[R0].15:8[R0].23:16[R0].31:24[R0]]
0002ba52: R1 := 0x414000
0002ba57: R0 := 6
0002ba5d: R1 := R1 + 0xE80
0002ba62: R30 := 0x403D80
0002ba64: call @syslog with return %0002ba66

0002ba66:
0002ba6b: R0 := mem[R19 + 0x58, el]:u64
0002ba73: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R20]
0002ba78: goto %0002ba76

0002ba76:
0002ba7e: R0 := mem[R31 + 0x80, el]:u64
0002ba85: R1 := pad:64[mem[R31 + 0xC0, el]:u32]
0002ba8a: VF := 0
0002ba8d: CF := 1
0002ba91: ZF := R0 = 0
0002ba95: NF := 63:63[R0]
0002baa1: when ZF goto %0002ba9a
0002baa2: goto %0002ba9d

0002ba9d:
0002ba9e: R0 := 1
0002baa4: goto %0002baa0

0002ba9a:
0002ba9b: R0 := 0
0002baa3: goto %0002baa0

0002baa0:
0002baab: R20 := pad:64[31:0[R0] | 31:0[R1]]
0002bab1: when 31:0[R20] <> 0 goto %0002baaf
00034797: goto %0002f2c5

0002f2c5:
0002f2ca: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002f2cf: when 31:0[R0] = 0 goto %0002bc21
00034798: goto %0002f2d3

0002f2d3:
0002f2d8: R0 := pad:64[mem[R19 + 0x60, el]:u32]
0002f2dd: when 31:0[R0] <> 0 goto %0002bc21
00034799: goto %0002baaf

0002baaf:
0002bab7: R0 := 0x414000
0002babd: R0 := R0 + 0xEA0
0002bac2: R30 := 0x403080
0002bac4: call @printf with return %0002bac6

0002bac6:
0002baca: R1 := R31 + 0x190
0002bacf: R0 := 0
0002bad4: R30 := 0x40308C
0002bad7: call @tcgetattr with return %0002bad9

0002bad9:
0002badd: #1386 := R31 + 0x190
0002bae2: V2 := mem[#1386, el]:u128
0002bae7: V3 := mem[#1386 + 0x10, el]:u128
0002baed: R0 := R31 + 0x290
0002baf3: R2 := R31 + 0x1D0
0002baf8: R1 := 0xFFFFFFF6
0002baff: V1 := mem[R31 + 0x1B0, el]:u128
0002bb06: V0 := mem[R0 - 0xD4, el]:u128
0002bb0e: mem := mem with [R2, el]:u128 <- V2
0002bb14: mem := mem with [R2 + 0x10, el]:u128 <- V3
0002bb1b: R0 := pad:64[mem[R31 + 0x1DC, el]:u32]
0002bb23: mem := mem with [R2 + 0x20, el]:u128 <- V1
0002bb2a: R0 := pad:64[31:0[R0] & 31:0[R1]]
0002bb2f: R1 := 1
0002bb37: mem := mem with [R2 + 0x2C, el]:u128 <- V0
0002bb3f: mem := mem with [R31 + 0x1DC, el]:u32 <- 31:0[R0]
0002bb44: R0 := 0
0002bb49: R30 := 0x4030C8
0002bb4c: call @tcsetattr with return %0002bb4e

0002bb4e:
0002bb51: R2 := 0x430000
0002bb56: R1 := 0x32
0002bb5d: R21 := mem[R31 + 0x70, el]:u64
0002bb64: R2 := mem[R2 + 0x360, el]:u64
0002bb6a: R0 := R21
0002bb6f: R30 := 0x4030E0
0002bb71: call @fgets with return %0002bb73

0002bb73:
0002bb77: R3 := R0
0002bb7d: R2 := R31 + 0x190
0002bb82: R1 := 1
0002bb87: R0 := 0
0002bb8f: mem := mem with [R31 + 0x100, el]:u64 <- R3
0002bb94: R30 := 0x4030F8
0002bb96: call @tcsetattr with return %0002bb98

0002bb98:
0002bb9c: R0 := R21
0002bba1: R30 := 0x403100
0002bba3: call @strlen with return %0002bba5

0002bba5:
0002bba9: R23 := pad:64[31:0[R0] - 1]
0002bbaf: R1 := extend:64[31:0[R23]]
0002bbb7: R0 := pad:64[mem[R21 + extend:64[31:0[R23]]]]
0002bbbd: #1387 := 31:0[R0] - 0xA
0002bbc2: VF := extend:64[#1387] <> extend:64[31:0[R0]] - 0xA
0002bbc7: CF := pad:64[#1387] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0002bbcb: ZF := #1387 = 0
0002bbcf: NF := 31:31[#1387]
0002bbd5: when ZF goto %0002bbd3
0003479a: goto %0002bc0f

0002bbd3:
0002bbdd: R2 := mem[R31 + 0x70, el]:u64
0002bbe3: R0 := R1 - 1
0002bbeb: mem := mem with [R2 + R1] <- 0
0002bbf3: R1 := pad:64[mem[R2 + R0]]
0002bbf9: #1388 := 31:0[R1] - 0xD
0002bbfe: VF := extend:64[#1388] <> extend:64[31:0[R1]] - 0xD
0002bc03: CF := pad:64[#1388] <> pad:64[31:0[R1]] + 0xFFFFFFF3
0002bc07: ZF := #1388 = 0
0002bc0b: NF := 31:31[#1388]
0002bc11: when ZF <> 1 goto %0002bc0f
0003479b: goto %0002f2b9

0002f2b9:
0002f2bf: mem := mem with [R2 + R0] <- 0
0002f2c3: goto %0002bc0f

0002bc0f:
0002bc17: R0 := 0xA
0002bc1c: R30 := 0x40311C
0002bc1f: call @putchar with return %0002bc21

0002bc21:
0002bc26: R0 := mem[R31 + 0x70, el]:u64
0002bc2d: R0 := pad:64[mem[R0]]
0002bc33: when 31:0[R0] <> 0 goto %0002bc31
0003479c: goto %0002f1c6

0002bc31:
0002bc3b: R0 := mem[R19 + 0x58, el]:u64
0002bc42: R0 := pad:64[mem[R0 + 0x130, el]:u32]
0002bc47: VF := 0
0002bc4a: CF := 1
0002bc4e: ZF := 31:0[R0] = 0
0002bc52: NF := 31:31[R0]
0002bc58: #1389 := ZF
0002bc5b: VF := 0
0002bc5f: CF := #1389
0002bc64: ZF := #1389 & 31:0[R20] = 0
0002bc69: NF := #1389 & 31:31[R20]
0002bc6f: when ZF goto %0002bc6d
0003479d: goto %0002f17b

0002f17b:
0002f180: R0 := mem[R31 + 0x70, el]:u64
0002f185: R30 := 0x403A40
0002f187: call @ntlm_hash_nt_password with return %0002f189

0002f189:
0002f18f: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f196: R1 := mem[R19 + 0x58, el]:u64
0002f19b: VF := 0
0002f19e: CF := 1
0002f1a2: ZF := R0 = 0
0002f1a6: NF := 63:63[R0]
0002f1ac: #1449 := ZF <> 1
0002f1af: VF := 0
0002f1b3: CF := #1449
0002f1b8: ZF := R1 = 0 | ~#1449
0002f1bd: NF := #1449 & 63:63[R1]
0002f1c2: when ZF <> 1 goto %0002dd20
0003479e: goto %0002dd4e

0002dd20:
0002dd25: R2 := mem[R0, el]:u64
0002dd2a: R3 := mem[R0 + 8, el]:u64
0002dd30: #1429 := R1 + 0xC8
0002dd36: mem := mem with [#1429, el]:u64 <- R2
0002dd3c: mem := mem with [#1429 + 8, el]:u64 <- R3
0002dd43: R2 := mem[R0 + 0xD, el]:u64
0002dd4b: mem := mem with [R1 + 0xD5, el]:u64 <- R2
0002dd50: goto %0002dd4e

0002dd4e:
0002dd54: R30 := 0x403A58
0002dd56: call @free with return %0002bc6d

0002bc6d:
0002bc77: R0 := mem[R19 + 0x58, el]:u64
0002bc7e: R0 := pad:64[mem[R0 + 0x134, el]:u32]
0002bc83: VF := 0
0002bc86: CF := 1
0002bc8a: ZF := 31:0[R0] = 0
0002bc8e: NF := 31:31[R0]
0002bc94: #1390 := ZF
0002bc97: VF := 0
0002bc9b: CF := #1390
0002bca0: ZF := #1390 & 31:0[R20] = 0
0002bca5: NF := #1390 & 31:31[R20]
0002bcab: when ZF goto %0002bca9
0003479f: goto %0002f130

0002f130:
0002f135: R0 := mem[R31 + 0x70, el]:u64
0002f13a: R30 := 0x403A74
0002f13c: call @ntlm_hash_lm_password with return %0002f13e

0002f13e:
0002f144: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f14b: R1 := mem[R19 + 0x58, el]:u64
0002f150: VF := 0
0002f153: CF := 1
0002f157: ZF := R0 = 0
0002f15b: NF := 63:63[R0]
0002f161: #1448 := ZF <> 1
0002f164: VF := 0
0002f168: CF := #1448
0002f16d: ZF := R1 = 0 | ~#1448
0002f172: NF := #1448 & 63:63[R1]
0002f177: when ZF <> 1 goto %0002dd58
000347a0: goto %0002dd88

0002dd58:
0002dd5c: R2 := R1 + 0x96
0002dd63: R4 := mem[R0, el]:u64
0002dd68: R5 := mem[R0 + 8, el]:u64
0002dd70: mem := mem with [R2, el]:u64 <- R4
0002dd76: mem := mem with [R2 + 8, el]:u64 <- R5
0002dd7d: R2 := mem[R0 + 0xD, el]:u64
0002dd85: mem := mem with [R1 + 0xA3, el]:u64 <- R2
0002dd8a: goto %0002dd88

0002dd88:
0002dd8e: R30 := 0x403A8C
0002dd90: call @free with return %0002bca9

0002bca9:
0002bcb3: R0 := mem[R19 + 0x58, el]:u64
0002bcba: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0002bcbf: VF := 0
0002bcc2: CF := 1
0002bcc6: ZF := 31:0[R0] = 0
0002bcca: NF := 31:31[R0]
0002bcd0: #1391 := ZF
0002bcd3: VF := 0
0002bcd7: CF := #1391
0002bcdc: ZF := #1391 & 31:0[R20] = 0
0002bce1: NF := #1391 & 31:31[R20]
0002bce7: when ZF goto %0002bce5
000347a1: goto %0002f0ae

0002f0ae:
0002f0b2: #1446 := R31 + 0x70
0002f0b7: R2 := mem[#1446, el]:u64
0002f0bc: R1 := mem[#1446 + 8, el]:u64
0002f0c3: R0 := mem[R31 + 0xA0, el]:u64
0002f0c8: R30 := 0x403AAC
0002f0ca: call @ntlm2_hash_password with return %0002f0cc

0002f0cc:
0002f0d2: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f0d9: R1 := mem[R19 + 0x58, el]:u64
0002f0de: VF := 0
0002f0e1: CF := 1
0002f0e5: ZF := R1 = 0
0002f0e9: NF := 63:63[R1]
0002f0ef: #1447 := ZF <> 1
0002f0f2: VF := 0
0002f0f6: CF := #1447
0002f0fb: ZF := R0 = 0 | ~#1447
0002f100: NF := #1447 & 63:63[R0]
0002f106: when ZF goto %0002f104
000347a2: goto %0002f110

0002f110:
0002f114: R1 := R1 + 0xFA
0002f11b: R2 := mem[R0, el]:u64
0002f120: R3 := mem[R0 + 8, el]:u64
0002f128: mem := mem with [R1, el]:u64 <- R2
0002f12e: mem := mem with [R1 + 8, el]:u64 <- R3
000347a3: goto %0002f104

0002f104:
0002f10c: R30 := 0x403AD0
0002f10e: call @free with return %0002bce5

0002bce5:
0002bcef: R20 := mem[R31 + 0x70, el]:u64
0002bcf5: R0 := R20
0002bcfa: R30 := 0x403ADC
0002bcfc: call @strlen with return %0002bcfe

0002bcfe:
0002bd01: R1 := 0
0002bd07: R2 := R0
0002bd0d: R0 := R20
0002bd12: R30 := 0x403AEC
0002bd14: call @memset with return %0002bd16

0002bd16:
0002bd19: goto %0002bd17

0002f1c6:
0002f1cb: R0 := mem[R31 + 0xC8, el]:u64
0002f1d2: R0 := pad:64[mem[R0]]
0002f1d8: when 31:0[R0] <> 0 goto %0002f1d6
000347a4: goto %0002f213

0002f1d6:
0002f1e0: R0 := mem[R31 + 0xC8, el]:u64
0002f1e5: R1 := 8
0002f1ea: R30 := 0x4040A8
0002f1ec: call @scanmem with return %0002f1ee

0002f1ee:
0002f1f4: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f1f9: when R0 = 0 goto %0002efa5
000347a5: goto %0002f1fd

0002efa5:
0002efa8: R1 := 0x414000
0002efae: R1 := R1 + 0xEB0
0002efb3: R0 := 3
0002efb8: R30 := 0x4041F0
0002efba: call @syslog with return %0002efbc

0002efbc:
0002efbf: R0 := 1
0002efc4: R30 := 0x4041F8
0002efc6: call @exit with return %0002efc8

0002f1fd:
0002f202: R1 := mem[R19 + 0x58, el]:u64
0002f208: when R1 = 0 goto %0002f206
000347a6: goto %0002f299

0002f299:
0002f29d: R1 := R1 + 0xFA
0002f2a4: R2 := mem[R0, el]:u64
0002f2a9: R3 := mem[R0 + 8, el]:u64
0002f2b1: mem := mem with [R1, el]:u64 <- R2
0002f2b7: mem := mem with [R1 + 8, el]:u64 <- R3
000347a7: goto %0002f206

0002f206:
0002f20e: R30 := 0x4040C8
0002f210: call @free with return %0002f212

0002f212:
0002f215: goto %0002f213

0002f213:
0002f21b: R0 := mem[R31 + 0xD0, el]:u64
0002f222: R0 := pad:64[mem[R0]]
0002f228: when 31:0[R0] <> 0 goto %0002f226
000347a8: goto %0002f263

0002f226:
0002f230: R0 := mem[R31 + 0xD0, el]:u64
0002f235: R1 := 8
0002f23a: R30 := 0x4040D8
0002f23c: call @scanmem with return %0002f23e

0002f23e:
0002f244: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f249: when R0 = 0 goto %0002efc8
000347a9: goto %0002f24d

0002efc8:
0002efcb: R1 := 0x414000
0002efd1: R1 := R1 + 0xED8
0002efd6: R0 := 3
0002efdb: R30 := 0x404208
0002efdd: call @syslog with return %0002efdf

0002efdf:
0002efe2: R0 := 1
0002efe7: R30 := 0x404210
0002efe9: call @exit with return %0002efeb

0002f24d:
0002f252: R1 := mem[R19 + 0x58, el]:u64
0002f258: when R1 = 0 goto %0002f256
000347aa: goto %0002f27b

0002f27b:
0002f280: R2 := mem[R0, el]:u64
0002f285: R3 := mem[R0 + 8, el]:u64
0002f28b: #1450 := R1 + 0xC8
0002f291: mem := mem with [#1450, el]:u64 <- R2
0002f297: mem := mem with [#1450 + 8, el]:u64 <- R3
000347ab: goto %0002f256

0002f256:
0002f25e: R30 := 0x4040F4
0002f260: call @free with return %0002f262

0002f262:
0002f265: goto %0002f263

0002f263:
0002f26b: R0 := mem[R31 + 0xD8, el]:u64
0002f272: R0 := pad:64[mem[R0]]
0002f277: when 31:0[R0] <> 0 goto %0002efeb
000347ac: goto %0002bd17

0002efeb:
0002eff0: R0 := mem[R31 + 0xD8, el]:u64
0002eff5: R1 := 8
0002effa: R30 := 0x40421C
0002effc: call @scanmem with return %0002effe

0002effe:
0002f004: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f009: when R0 = 0 goto %0002c707
000347ad: goto %0002f00d

0002c707:
0002c70a: R1 := 0x414000
0002c710: R1 := R1 + 0xF00
0002c715: R0 := 3
0002c71a: R30 := 0x4048E0
0002c71c: call @syslog with return %0002c71e

0002c71e:
0002c721: R0 := 1
0002c726: R30 := 0x4048E8
0002c728: call @exit with return %0002c72a

0002c72a:
0002c72e: R20 := R20 + 0xC48
0002c733: goto %0002c731

0002c731:
0002c738: R1 := R20
0002c73e: R0 := R22
0002c743: R30 := 0x403B74
0002c745: call @config_pop with return %0002c747

0002c747:
0002c74d: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c753: when R0 <> 0 goto %0002c751
000347ae: goto %0002c75d

0002c75d:
0002c760: R20 := 0x414000
0002c766: R20 := R20 + 0xC50
0002c76b: goto %0002c769

0002c769:
0002c770: R1 := R20
0002c776: R0 := R22
0002c77b: R30 := 0x403B98
0002c77d: call @config_pop with return %0002c77f

0002c77f:
0002c785: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c78b: when R0 <> 0 goto %0002c789
000347af: goto %0002c795

0002c795:
0002c798: goto %0002c796

0002c789:
0002c791: R30 := 0x403B8C
0002c793: call @free with return %0002c769

0002c751:
0002c759: R30 := 0x403B68
0002c75b: call @free with return %0002c731

0002f00d:
0002f012: R1 := mem[R19 + 0x58, el]:u64
0002f018: when R1 = 0 goto %0002f016
000347b0: goto %0002f026

0002f026:
0002f02a: R1 := R1 + 0x96
0002f031: R2 := mem[R0, el]:u64
0002f036: R3 := mem[R0 + 8, el]:u64
0002f03e: mem := mem with [R1, el]:u64 <- R2
0002f044: mem := mem with [R1 + 8, el]:u64 <- R3
000347b1: goto %0002f016

0002f016:
0002f01e: R30 := 0x40423C
0002f020: call @free with return %0002f022

0002f022:
0002f024: goto %0002bd17

0002bd17:
0002bd1f: R0 := mem[R19 + 0x58, el]:u64
0002bd26: R1 := mem[R31 + 0xA0, el]:u64
0002bd2b: VF := 0
0002bd2e: CF := 1
0002bd32: ZF := R0 = 0
0002bd36: NF := 63:63[R0]
0002bd3c: #1392 := ZF <> 1
0002bd3f: VF := 0
0002bd43: CF := #1392
0002bd48: ZF := R1 = 0 | ~#1392
0002bd4d: NF := #1392 & 63:63[R1]
0002bd53: when ZF goto %0002bd51
000347b2: goto %0002f0a2

0002f0a2:
0002f0a5: R2 := 0x32
0002f0aa: R30 := 0x403168
0002f0ac: call @strlcpy with return %0002bd51

0002bd51:
0002bd5b: R0 := mem[R19 + 0x58, el]:u64
0002bd62: R1 := mem[R31 + 0x78, el]:u64
0002bd67: VF := 0
0002bd6a: CF := 1
0002bd6e: ZF := R0 = 0
0002bd72: NF := 63:63[R0]
0002bd78: #1393 := ZF <> 1
0002bd7b: VF := 0
0002bd7f: CF := #1393
0002bd84: ZF := R1 = 0 | ~#1393
0002bd89: NF := #1393 & 63:63[R1]
0002bd8f: when ZF goto %0002bd8d
000347b3: goto %0002f090

0002f090:
0002f094: R0 := R0 + 0x32
0002f099: R2 := 0x32
0002f09e: R30 := 0x403188
0002f0a0: call @strlcpy with return %0002bd8d

0002bd8d:
0002bd97: R0 := mem[R19 + 0x58, el]:u64
0002bd9d: when R0 = 0 goto %0002bd9b
000347b4: goto %0002f077

0002f077:
0002f07c: R1 := mem[R31 + 0x90, el]:u64
0002f082: R0 := R0 + 0x64
0002f087: R2 := 0x32
0002f08c: R30 := 0x4031A0
0002f08e: call @strlcpy with return %0002bd9b

0002bd9b:
0002bda5: R0 := mem[R31 + 0xA0, el]:u64
0002bdaa: R30 := 0x4031A8
0002bdac: call @free with return %0002bdae

0002bdae:
0002bdb3: R0 := mem[R31 + 0x78, el]:u64
0002bdb8: R30 := 0x4031B0
0002bdba: call @free with return %0002bdbc

0002bdbc:
0002bdc1: R0 := mem[R31 + 0x90, el]:u64
0002bdc6: R30 := 0x4031B8
0002bdc8: call @free with return %0002bdca

0002bdca:
0002bdcf: R0 := mem[R31 + 0x70, el]:u64
0002bdd4: R30 := 0x4031C0
0002bdd6: call @free with return %0002bdd8

0002bdd8:
0002bddd: R0 := mem[R31 + 0xC8, el]:u64
0002bde2: R30 := 0x4031C8
0002bde4: call @free with return %0002bde6

0002bde6:
0002bdeb: R0 := mem[R31 + 0xD0, el]:u64
0002bdf0: R30 := 0x4031D0
0002bdf2: call @free with return %0002bdf4

0002bdf4:
0002bdf9: R0 := mem[R31 + 0xD8, el]:u64
0002bdfe: R30 := 0x4031D8
0002be00: call @free with return %0002be02

0002be02:
0002be07: R0 := mem[R31 + 0x98, el]:u64
0002be0c: R30 := 0x4031E0
0002be0e: call @free with return %0002be10

0002be10:
0002be15: R0 := mem[R31 + 0x80, el]:u64
0002be1b: when R0 <> 0 goto %0002be19
000347b5: goto %0002f046

0002be19:
0002be21: R30 := 0x403C88
0002be23: call @magic_auth_detect with return %0002be25

0002f046:
0002f04b: R0 := pad:64[mem[R31 + 0xC0, el]:u32]
0002f050: when 31:0[R0] <> 0 goto %0002bf86
000347b6: goto %0002f054

0002bf86:
0002bf8b: R20 := mem[R19 + 0x58, el]:u64
0002bf90: R1 := 0x32
0002bf96: R20 := R20 + 0x96
0002bf9c: R0 := R20
0002bfa1: R30 := 0x403F2C
0002bfa3: call @is_memory_all_zero with return %0002bfa5

0002bfa5:
0002bfa9: when 31:0[R0] = 0 goto %0002bfa7
000347b7: goto %0002bff2

0002bfa7:
0002bfb0: R0 := R20
0002bfb5: R2 := 8
0002bfba: R1 := 0x10
0002bfbf: R30 := 0x4041C0
0002bfc1: call @printmem with return %0002bfc3

0002bfc3:
0002bfc6: R2 := 0x413000
0002bfcc: R1 := R0
0002bfd2: R0 := R2 + 0x588
0002bfda: mem := mem with [R31 + 0x100, el]:u64 <- R1
0002bfdf: R30 := 0x4041D4
0002bfe1: call @printf with return %0002bfe3

0002bfe3:
0002bfe8: R0 := mem[R31 + 0x100, el]:u64
0002bfed: R30 := 0x4041DC
0002bfef: call @free with return %0002bff1

0002bff1:
0002bff4: goto %0002bff2

0002bff2:
0002bffa: R20 := mem[R19 + 0x58, el]:u64
0002bfff: R1 := 0x32
0002c005: R20 := R20 + 0xC8
0002c00b: R0 := R20
0002c010: R30 := 0x403F44
0002c012: call @is_memory_all_zero with return %0002c014

0002c014:
0002c018: when 31:0[R0] = 0 goto %0002c016
000347b8: goto %0002c061

0002c016:
0002c01f: R0 := R20
0002c024: R2 := 8
0002c029: R1 := 0x10
0002c02e: R30 := 0x404190
0002c030: call @printmem with return %0002c032

0002c032:
0002c035: R2 := 0x413000
0002c03b: R1 := R0
0002c041: R0 := R2 + 0x570
0002c049: mem := mem with [R31 + 0x100, el]:u64 <- R1
0002c04e: R30 := 0x4041A4
0002c050: call @printf with return %0002c052

0002c052:
0002c057: R0 := mem[R31 + 0x100, el]:u64
0002c05c: R30 := 0x4041AC
0002c05e: call @free with return %0002c060

0002c060:
0002c063: goto %0002c061

0002c061:
0002c069: R20 := mem[R19 + 0x58, el]:u64
0002c06e: R1 := 0x32
0002c074: R20 := R20 + 0xFA
0002c07a: R0 := R20
0002c07f: R30 := 0x403F5C
0002c081: call @is_memory_all_zero with return %0002c083

0002c083:
0002c086: when 31:0[R0] <> 0 goto %0002be25
000347b9: goto %0002c08a

0002c08a:
0002c08e: R0 := R20
0002c093: R2 := 8
0002c098: R1 := 0x10
0002c09d: R30 := 0x403F70
0002c09f: call @printmem with return %0002c0a1

0002c0a1:
0002c0a6: R2 := mem[R19 + 0x58, el]:u64
0002c0ab: R3 := 0x414000
0002c0b1: R1 := R0
0002c0b7: R0 := R3 + 0xF28
0002c0bd: R3 := R2 + 0x32
0002c0c5: mem := mem with [R31 + 0x100, el]:u64 <- R1
0002c0ca: R30 := 0x403F8C
0002c0cc: call @printf with return %0002c0ce

0002c0ce:
0002c0d3: R0 := mem[R31 + 0x100, el]:u64
0002c0d8: R30 := 0x403F94
0002c0da: call @free with return %0002c0dc

0002c0dc:
0002c0de: goto %0002be25

0002be25:
0002be28: R26 := 0
0002be2d: R25 := 0
000347ba: goto %0002be2f

0002f054:
0002f059: R0 := pad:64[mem[R19 + 0x60, el]:u32]
0002f05e: when 31:0[R0] <> 0 goto %0002df01
000347bb: goto %0002f062

0002f062:
0002f067: R20 := mem[R19 + 0x58, el]:u64
0002f06e: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0002f073: when 31:0[R0] <> 0 goto %0002ddad
000347bc: goto %0002dee7

0002ddad:
0002ddb1: R0 := R20 + 0xC8
0002ddb6: R1 := 0x32
0002ddbb: R30 := 0x404160
0002ddbd: call @is_memory_all_zero with return %0002ddbf

0002ddbf:
0002ddc3: when 31:0[R0] <> 0 goto %0002ddc1
000347bd: goto %0002dee6

0002dee6:
0002dee9: goto %0002dee7

0002dee7:
0002deef: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0002def5: when 31:0[R0] = 0 goto %0002def3
000347be: goto %0002dfec

0002dfec:
0002dff0: R0 := R20 + 0x96
0002dff5: R1 := 0x32
0002dffa: R30 := 0x403218
0002dffc: call @is_memory_all_zero with return %0002dffe

0002dffe:
0002e001: when 31:0[R0] <> 0 goto %0002ddc1
000347bf: goto %0002def3

0002def3:
0002defd: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
0002df03: when 31:0[R0] = 0 goto %0002df01
000347c0: goto %0002dfd3

0002dfd3:
0002dfd7: R0 := R20 + 0xFA
0002dfdc: R1 := 0x32
0002dfe1: R30 := 0x403230
0002dfe3: call @is_memory_all_zero with return %0002dfe5

0002dfe5:
0002dfe8: when 31:0[R0] = 0 goto %0002df01
000347c1: goto %0002ddc1

0002df01:
0002df0b: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0002df11: when 31:0[R0] = 0 goto %0002df0f
000347c2: goto %0002df47

0002df0f:
0002df19: R0 := mem[R31 + 0xE8, el]:u64
0002df1e: R2 := 0x18
0002df23: R1 := 0x23
0002df28: R30 := 0x404294
0002df2a: call @openlog with return %0002df2c

0002df2c:
0002df2f: R1 := 0x414000
0002df34: R0 := 6
0002df3a: R1 := R1 + 0xFA8
0002df3f: R30 := 0x4042A4
0002df41: call @syslog with return %0002df43

0002df43:
0002df45: goto %0002c652

0002df47:
0002df4c: R0 := pad:64[mem[R19 + 4, el]:u32]
0002df52: when 31:0[R0] <> 0 goto %0002df50
000347c3: goto %0002df68

0002df68:
0002df6e: R30 := 0x403DB8
0002df71: call @fork with return %0002df73

0002df73:
0002df77: #1430 := 31:0[R0] + 1
0002df7c: VF := extend:64[#1430] <> extend:64[31:0[R0]] + 1
0002df81: CF := pad:64[#1430] <> pad:64[31:0[R0]] + 1
0002df85: ZF := #1430 = 0
0002df89: NF := 31:31[#1430]
0002df8e: when ZF goto %0002c578
000347c4: goto %0002df92

0002c578:
0002c57b: R0 := 0x414000
0002c581: R0 := R0 + 0xFF8
0002c586: R30 := 0x4049D8
0002c589: call @perror with return %0002c58b

0002c58b:
0002c58e: R0 := 1
0002c593: R30 := 0x4049E0
0002c595: call @myexit with return %0002c597

0002df92:
0002df96: when 31:0[R0] <> 0 goto %0002df94
000347c5: goto %0002dfa5

0002df94:
0002df9c: R0 := 0
0002dfa1: R30 := 0x404170
0002dfa3: call @myexit with return %0002df50

0002df50:
0002df58: R0 := 0x414000
0002df5e: R0 := R0 + 0xFD0
0002df63: R30 := 0x40417C
0002df65: call @puts with return %0002df67

0002df67:
0002df6a: goto %0002df68

0002dfa5:
0002dfa8: R30 := 0x403DC8
0002dfab: call @setsid with return %0002dfad

0002dfad:
0002dfb0: R0 := 0
0002dfb5: R30 := 0x403DD0
0002dfb7: call @umask with return %0002dfb9

0002dfb9:
0002dfbc: R0 := 0x412000
0002dfc2: R0 := R0 + 0x888
0002dfc7: R30 := 0x403DDC
0002dfca: call @chdir with return %0002dfcc

0002dfcc:
0002dfcf: when 31:0[R0] <> 0 goto %0002c597
000347c6: goto %0002c5aa

0002c597:
0002c59a: R0 := 0x415000
0002c5a0: R0 := R0 + 0x18
0002c5a5: R30 := 0x4049EC
0002c5a7: call @perror with return %0002c5a9

0002c5a9:
0002c5ac: goto %0002c5aa

0002c5aa:
0002c5b0: R0 := 0x415000
0002c5b5: R1 := 2
0002c5bb: R0 := R0 + 0x30
0002c5c0: R30 := 0x403DF0
0002c5c2: call @open with return %0002c5c4

0002c5c4:
0002c5c8: R23 := pad:64[31:0[R0]]
0002c5ce: when ~31:31[R0] goto %0002c5cc
000347c7: goto %0002c61e

0002c5cc:
0002c5d4: R1 := 0
0002c5d9: R30 := 0x40484C
0002c5dc: call @dup2 with return %0002c5de

0002c5de:
0002c5e1: R1 := 1
0002c5e7: R0 := pad:64[31:0[R23]]
0002c5ec: R30 := 0x404858
0002c5ee: call @dup2 with return %0002c5f0

0002c5f0:
0002c5f4: R0 := pad:64[31:0[R23]]
0002c5f9: R1 := 2
0002c5fe: R30 := 0x404864
0002c600: call @dup2 with return %0002c602

0002c602:
0002c606: #1394 := 31:0[R23] - 2
0002c60b: VF := extend:64[#1394] <> extend:64[31:0[R23]] - 2
0002c610: CF := pad:64[#1394] <> pad:64[31:0[R23]] + 0xFFFFFFFE
0002c614: ZF := #1394 = 0
0002c618: NF := 31:31[#1394]
0002c620: when ~(NF = VF & ~ZF) goto %0002c61e
000347c8: goto %0002c66c

0002c66c:
0002c670: R0 := pad:64[31:0[R23]]
0002c675: R30 := 0x404874
0002c677: call @close with return %0002c679

0002c679:
0002c67b: goto %0002c61e

0002c61e:
0002c628: R0 := mem[R31 + 0xE8, el]:u64
0002c62d: R2 := 0x18
0002c632: R1 := 3
0002c637: R30 := 0x403E08
0002c639: call @openlog with return %0002c63b

0002c63b:
0002c63e: R1 := 0x415000
0002c643: R0 := 6
0002c649: R1 := R1 + 0x40
0002c64e: R30 := 0x403E18
0002c650: call @syslog with return %0002c652

0002c652:
0002c657: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0002c65c: when 31:0[R0] = 0 goto %0002c465
000347c9: goto %0002c660

0002c465:
0002c468: R0 := 0x7F
0002c46d: R30 := 0x4042D4
0002c470: call @setlogmask with return %0002c472

0002c472:
0002c475: goto %0002c473

0002c660:
0002c663: R0 := 0xFF
0002c668: R30 := 0x403E28
0002c66a: call @setlogmask with return %0002c473

0002c473:
0002c47b: R0 := mem[R31 + 0xB8, el]:u64
0002c482: R0 := pad:64[mem[R0]]
0002c488: when 31:0[R0] <> 0 goto %0002c486
000347ca: goto %0002d386

0002c486:
0002c48e: R30 := 0x404794
0002c491: call @getuid with return %0002c493

0002c493:
0002c497: when 31:0[R0] <> 0 goto %0002c495
000347cb: goto %0002c4a4

0002c495:
0002c49d: R30 := 0x404910
0002c4a0: call @geteuid with return %0002c4a2

0002c4a2:
0002c4a6: when 31:0[R0] = 0 goto %0002c4a4
000347cc: goto %0002e12b

0002e12b:
0002e12e: R30 := 0x404918
0002e130: call @getuid with return %0002e132

0002e132:
0002e136: R20 := pad:64[31:0[R0]]
0002e13b: R30 := 0x404920
0002e13e: call @getgid with return %0002e140

0002e140:
0002e144: R3 := pad:64[31:0[R0]]
0002e14a: R2 := pad:64[31:0[R20]]
0002e14f: R1 := 0x415000
0002e154: R0 := 4
0002e15a: R1 := R1 + 0x50
0002e15f: R30 := 0x404938
0002e161: call @syslog with return %0002e163

0002e163:
0002e165: goto %0002d386

0002c4a4:
0002c4ac: R30 := 0x40479C
0002c4ae: call @__ctype_b_loc with return %0002c4b0

0002c4b0:
0002c4b5: R3 := mem[R31 + 0xB8, el]:u64
0002c4bc: R0 := mem[R0, el]:u64
0002c4c3: R1 := pad:64[mem[R3]]
0002c4cb: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
0002c4d1: when ~11:11[R0] goto %0002c4cf
000347cd: goto %0002e0ef

0002c4cf:
0002c4d9: R0 := mem[R31 + 0xB8, el]:u64
0002c4de: R30 := 0x4048F8
0002c4e1: call @getpwnam with return %0002c4e3

0002c4e3:
0002c4e7: when R0 = 0 goto %0002c4e5
000347ce: goto %0002d304

0002d304:
0002d309: R21 := pad:64[mem[R0 + 0x10, el]:u32]
0002d30e: when 31:0[R21] = 0 goto %0002c4e5
000347cf: goto %0002d312

0002c4e5:
0002c4ef: R2 := mem[R31 + 0xB8, el]:u64
0002c4f4: R1 := 0x415000
0002c4fa: R1 := R1 + 0xA8
0002c4ff: R0 := 3
0002c504: R30 := 0x40498C
0002c506: call @syslog with return %0002c508

0002c508:
0002c50b: R0 := 1
0002c510: R30 := 0x404994
0002c512: call @myexit with return %0002c514

0002d312:
0002d317: R20 := pad:64[mem[R0 + 0x14, el]:u32]
0002d31c: goto %0002d31a

0002e0ef:
0002e0f3: R0 := R3
0002e0f8: R2 := 0xA
0002e0fd: R1 := 0
0002e102: R30 := 0x4047C0
0002e104: call @strtol with return %0002e106

0002e106:
0002e10a: R20 := R0
0002e110: R21 := pad:64[31:0[R0]]
0002e115: VF := 0
0002e118: CF := 1
0002e11c: ZF := 31:0[R0] = 0
0002e120: NF := 31:31[R0]
0002e127: when ~(NF = VF & ~ZF) goto %0002c537
000347d0: goto %0002d31a

0002d31a:
0002d321: R0 := pad:64[31:0[R20]]
0002d326: R30 := 0x4047D8
0002d329: call @setgid with return %0002d32b

0002d32b:
0002d32f: when 31:0[R0] = 0 goto %0002d32d
000347d1: goto %0002e0bd

0002d32d:
0002d336: R0 := pad:64[31:0[R21]]
0002d33b: R30 := 0x404944
0002d33e: call @setuid with return %0002d340

0002d340:
0002d344: R23 := pad:64[31:0[R0]]
0002d349: R30 := 0x40494C
0002d34b: call @__errno_location with return %0002d34d

0002d34d:
0002d352: R0 := pad:64[mem[R0, el]:u32]
0002d357: R30 := 0x404954
0002d359: call @strerror with return %0002d35b

0002d35b:
0002d35f: R4 := R0
0002d364: R1 := 0x415000
0002d36a: R3 := pad:64[31:0[R20]]
0002d370: R2 := pad:64[31:0[R21]]
0002d376: R1 := R1 + 0x100
0002d37b: R0 := 6
0002d380: R30 := 0x404970
0002d382: call @syslog with return %0002d384

0002d384:
0002d388: when 31:0[R23] = 0 goto %0002d386
000347d2: goto %0002e096

0002e096:
0002e099: goto %0002e097

0002e0bd:
0002e0c0: R30 := 0x4047E0
0002e0c2: call @__errno_location with return %0002e0c4

0002e0c4:
0002e0c9: R0 := pad:64[mem[R0, el]:u32]
0002e0ce: R30 := 0x4047E8
0002e0d0: call @strerror with return %0002e0d2

0002e0d2:
0002e0d6: R2 := R0
0002e0db: R1 := 0x415000
0002e0e0: R0 := 3
0002e0e6: R1 := R1 + 0xC8
0002e0eb: R30 := 0x4047FC
0002e0ed: call @syslog with return %0002e097

0002e097:
0002e09d: R1 := 0x415000
0002e0a3: R1 := R1 + 0xF0
0002e0a8: R0 := 3
0002e0ad: R30 := 0x40480C
0002e0af: call @syslog with return %0002e0b1

0002e0b1:
0002e0b4: R0 := 1
0002e0b9: R30 := 0x404814
0002e0bb: call @myexit with return %0002e020

0002d386:
0002d390: R20 := mem[R31 + 0xB0, el]:u64
0002d397: R0 := pad:64[mem[R20]]
0002d39d: when 31:0[R0] = 0 goto %0002d39b
000347d3: goto %0002dbc7

0002dbc7:
0002dbca: R0 := 0
0002dbcf: R30 := 0x403E48
0002dbd2: call @umask with return %0002dbd4

0002dbd4:
0002dbd8: R0 := R20
0002dbdd: R2 := 0x1A4
0002dbe2: R1 := 0x241
0002dbe7: R30 := 0x403E58
0002dbe9: call @open with return %0002dbeb

0002dbeb:
0002dbef: R20 := pad:64[31:0[R0]]
0002dbf4: when 31:31[R0] goto %0002c67d
000347d4: goto %0002dbf8

0002c67d:
0002c680: R30 := 0x40487C
0002c682: call @__errno_location with return %0002c684

0002c684:
0002c689: R0 := pad:64[mem[R0, el]:u32]
0002c68e: R30 := 0x404884
0002c690: call @strerror with return %0002c692

0002c692:
0002c696: R2 := R0
0002c69b: R1 := 0x415000
0002c6a1: R1 := R1 + 0x120
0002c6a6: R0 := 3
0002c6ab: R30 := 0x404898
0002c6ad: call @syslog with return %0002c6af

0002c6af:
0002c6b2: R0 := 1
0002c6b7: R30 := 0x4048A0
0002c6b9: call @myexit with return %0002c6bb

0002dbf8:
0002dbfb: R0 := 0x32
0002dc00: R30 := 0x403E68
0002dc02: call @zmalloc with return %0002dc04

0002dc04:
0002dc08: R21 := R0
0002dc10: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002dc15: R30 := 0x403E74
0002dc18: call @getpid with return %0002dc1a

0002dc1a:
0002dc1e: R3 := pad:64[31:0[R0]]
0002dc23: R1 := 0x32
0002dc29: R0 := R21
0002dc2e: R2 := 0x415000
0002dc34: R2 := R2 + 0x78
0002dc39: R30 := 0x403E8C
0002dc3b: call @snprintf with return %0002dc3d

0002dc3d:
0002dc42: R21 := mem[R31 + 0x100, el]:u64
0002dc48: R0 := R21
0002dc4d: R30 := 0x403E98
0002dc4f: call @strlen with return %0002dc51

0002dc51:
0002dc55: R1 := R21
0002dc5b: R21 := R0
0002dc61: R0 := pad:64[31:0[R20]]
0002dc67: R2 := extend:64[31:0[R21]]
0002dc6c: R30 := 0x403EAC
0002dc6e: call @write_wrapper with return %0002dc70

0002dc70:
0002dc74: #1427 := ~31:0[R0]
0002dc79: #1428 := 31:0[R21] + ~31:0[R0]
0002dc7f: VF := extend:64[#1428 + 1] <> extend:64[31:0[R21]] +
          extend:64[#1427] + 1
0002dc85: CF := pad:64[#1428 + 1] <> pad:64[31:0[R21]] + pad:64[#1427] + 1
0002dc89: ZF := #1428 + 1 = 0
0002dc8d: NF := 31:31[#1428 + 1]
0002dc93: when ZF goto %0002dc91
000347d5: goto %0002dcb1

0002dc91:
0002dc9b: R0 := mem[R31 + 0x100, el]:u64
0002dca0: R30 := 0x4042E0
0002dca2: call @free with return %0002dca4

0002dca4:
0002dca8: R0 := pad:64[31:0[R20]]
0002dcad: R30 := 0x4042E8
0002dcaf: call @close with return %0002d39b

0002d39b:
0002d3a3: R1 := 1
0002d3a8: R0 := 0xD
0002d3ad: R20 := 0x409000
0002d3b2: R30 := 0x4042F8
0002d3b5: call @signal with return %0002d3b7

0002d3b7:
0002d3bb: R20 := R20 + 0xAD0
0002d3c0: R0 := 2
0002d3c6: R1 := R20
0002d3cb: R30 := 0x404308
0002d3cd: call @signal with return %0002d3cf

0002d3cf:
0002d3d3: R1 := R20
0002d3d8: R0 := 0xF
0002d3dd: R30 := 0x404314
0002d3df: call @signal with return %0002d3e1

0002d3e1:
0002d3e4: R27 := 0x415000
0002d3ea: R1 := R20
0002d3f0: R27 := R27 + 0x1B0
0002d3f5: R26 := 0
0002d3fa: R25 := 0
0002d3ff: R0 := 1
0002d404: R30 := 0x404330
0002d406: call @signal with return %0002d408

0002d408:
0002d40b: R0 := 0
0002d410: R30 := 0x404338
0002d412: call @time with return %0002d414

0002d414:
0002d417: R30 := 0x40433C
0002d41a: call @srandom with return %0002d41c

0002d41c:
0002d421: R0 := pad:64[mem[R19, el]:u32]
0002d427: when 31:0[R0] = 0 goto %0002d425
000347d6: goto %0002db7f

0002db7f:
0002db83: #1423 := 31:0[R0] - 1
0002db88: VF := extend:64[#1423] <> extend:64[31:0[R0]] - 1
0002db8d: CF := pad:64[#1423] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002db91: ZF := #1423 = 0
0002db95: NF := 31:31[#1423]
0002db9b: #1424 := ~31:0[R26]
0002dba0: #1425 := 31:0[R25] + ~31:0[R26]
0002dba6: #1426 := ~(NF = VF & ~ZF)
0002dbad: VF := #1426 & extend:64[#1425 + 1] <> extend:64[31:0[R25]] +
          extend:64[#1424] + 1
0002dbb4: CF := #1426 & pad:64[#1425 + 1] <> pad:64[31:0[R25]] +
          pad:64[#1424] + 1
0002dbb9: ZF := #1425 + 1 = 0 | ~#1426
0002dbbe: NF := #1426 & 31:31[#1425 + 1]
0002dbc3: when ZF goto %0002be2f
000347d7: goto %0002d425

0002d425:
0002d42e: R0 := R31 + 0x250
0002d433: R4 := 1
0002d439: R20 := R0
0002d440: R1 := mem[R31 + 0x118, el]:u64
0002d447: mem := mem with [R0, el]:u64 <- 0
0002d44c: mem := mem with [R0 + 8, el]:u64 <- 0
0002d452: R0 := R31 + 0x260
0002d459: mem := mem with [R0, el]:u64 <- 0
0002d45e: mem := mem with [R0 + 8, el]:u64 <- 0
0002d464: R0 := R31 + 0x270
0002d46b: mem := mem with [R0, el]:u64 <- 0
0002d470: mem := mem with [R0 + 8, el]:u64 <- 0
0002d476: R0 := R31 + 0x280
0002d47d: mem := mem with [R0, el]:u64 <- 0
0002d482: mem := mem with [R0 + 8, el]:u64 <- 0
0002d488: R0 := R31 + 0x290
0002d48f: mem := mem with [R0, el]:u64 <- 0
0002d494: mem := mem with [R0 + 8, el]:u64 <- 0
0002d49a: R0 := R31 + 0x2A0
0002d4a1: mem := mem with [R0, el]:u64 <- 0
0002d4a6: mem := mem with [R0 + 8, el]:u64 <- 0
0002d4ac: R0 := R31 + 0x2B0
0002d4b3: mem := mem with [R0, el]:u64 <- 0
0002d4b8: mem := mem with [R0 + 8, el]:u64 <- 0
0002d4be: R0 := R31 + 0x2C0
0002d4c5: mem := mem with [R0, el]:u64 <- 0
0002d4ca: mem := mem with [R0 + 8, el]:u64 <- 0
0002d4d0: when R1 = 0 goto %0002d4ce
000347d8: goto %0002db45

0002db45:
0002db4a: R0 := mem[R1, el]:u64
0002db51: R1 := mem[R1 + 0x10, el]:u64
0002db57: R2 := pad:64[63:6[R0]]
0002db5e: R0 := R4 << pad:12[5:0[R0]]
0002db66: R3 := mem[R20 + (60:0[R2].0), el]:u64
0002db6d: R0 := R0 | R3
0002db76: mem := mem with [R20 + (60:0[R2].0), el]:u64 <- R0
0002db7b: when R1 <> 0 goto %0002db45
000347d9: goto %0002d4ce

0002d4ce:
0002d4d8: R1 := mem[R31 + 0x120, el]:u64
0002d4dd: R4 := 1
0002d4e3: when R1 = 0 goto %0002d4e1
000347da: goto %0002db09

0002db09:
000347db: goto %0002db0b

0002db0b:
0002db10: R0 := mem[R1, el]:u64
0002db17: R1 := mem[R1 + 0x10, el]:u64
0002db1d: R2 := pad:64[63:6[R0]]
0002db24: R0 := R4 << pad:12[5:0[R0]]
0002db2c: R3 := mem[R20 + (60:0[R2].0), el]:u64
0002db33: R0 := R0 | R3
0002db3c: mem := mem with [R20 + (60:0[R2].0), el]:u64 <- R0
0002db41: when R1 <> 0 goto %0002db0b
000347dc: goto %0002d4e1

0002d4e1:
0002d4eb: R1 := mem[R31 + 0x110, el]:u64
0002d4f0: R4 := 1
0002d4f6: when R1 = 0 goto %0002d4f4
000347dd: goto %0002dacd

0002dacd:
000347de: goto %0002dacf

0002dacf:
0002dad4: R0 := mem[R1, el]:u64
0002dadb: R1 := mem[R1 + 0x10, el]:u64
0002dae1: R2 := pad:64[63:6[R0]]
0002dae8: R0 := R4 << pad:12[5:0[R0]]
0002daf0: R3 := mem[R20 + (60:0[R2].0), el]:u64
0002daf7: R0 := R0 | R3
0002db00: mem := mem with [R20 + (60:0[R2].0), el]:u64 <- R0
0002db05: when R1 <> 0 goto %0002dacf
000347df: goto %0002d4f4

0002d4f4:
0002d4fc: R5 := 0x416000
0002d502: R4 := R31 + 0x130
0002d508: R1 := R20
0002d50d: R3 := 0
0002d514: V0 := mem[R5 + 0x380, el]:u128
0002d519: R2 := 0
0002d51e: R0 := 0x400
0002d526: mem := mem with [R31 + 0x130, el]:u128 <- V0
0002d52b: R30 := 0x404444
0002d52d: call @select with return %0002d52f

0002d52f:
0002d532: VF := 0
0002d535: CF := 1
0002d539: ZF := 31:0[R0] = 0
0002d53d: NF := 31:31[R0]
0002d545: when NF = VF & ~ZF goto %0002d543
000347e0: goto %0002dab8

0002d543:
0002d54b: R24 := 0x40A000
0002d550: R22 := 0
0002d556: R0 := R24 + 0x290
0002d55b: R23 := 0
0002d560: R21 := 1
0002d568: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002d56d: goto %0002d56b

0002d56b:
0002d572: R0 := pad:64[extend:32[31:6[R23]]]
0002d579: R1 := R21 << pad:12[5:0[R23]]
0002d581: R0 := mem[R20 + extend:64[31:0[R0].0], el]:u64
0002d586: VF := 0
0002d589: CF := 0
0002d58e: ZF := (R1 & R0) = 0
0002d593: NF := 63:63[R1] & 63:63[R0]
0002d599: when ZF goto %0002d597
000347e1: goto %0002d68b

0002d68b:
0002d68e: R3 := 0x1C
0002d694: R1 := R31 + 0x140
0002d69a: R2 := R31 + 0xFC
0002d6a0: R0 := pad:64[31:0[R23]]
0002d6a8: mem := mem with [R31 + 0xFC, el]:u32 <- 31:0[R3]
0002d6ad: R30 := 0x4045B0
0002d6b0: call @accept with return %0002d6b2

0002d6b2:
0002d6b6: R28 := pad:64[31:0[R0]]
0002d6bc: when 31:31[R0] goto %0002d6ba
000347e2: goto %0002d8c3

0002d6ba:
0002d6c2: R30 := 0x404664
0002d6c4: call @__errno_location with return %0002d6c6

0002d6c6:
0002d6cb: R0 := pad:64[mem[R0, el]:u32]
0002d6d0: R30 := 0x40466C
0002d6d2: call @strerror with return %0002d6d4

0002d6d4:
0002d6d8: R2 := R0
0002d6dd: R1 := 0x415000
0002d6e2: R0 := 3
0002d6e8: R1 := R1 + 0x168
0002d6ed: R30 := 0x404680
0002d6ef: call @syslog with return %0002d6f1

0002d6f1:
0002d6f3: goto %0002d597

0002d8c3:
0002d8c8: R0 := mem[R31 + 0x128, el]:u64
0002d8ce: R1 := R31 + 0x140
0002d8d3: R30 := 0x4045C4
0002d8d5: call @acl_check with return %0002d8d7

0002d8d7:
0002d8db: when 31:0[R0] <> 0 goto %0002d8d9
000347e3: goto %0002d9dc

0002d9dc:
0002d9e0: R0 := R31 + 0x210
0002d9e5: R30 := 0x4045D0
0002d9e8: call @pthread_attr_init with return %0002d9ea

0002d9ea:
0002d9ed: R1 := 0x20000
0002d9f3: R0 := R31 + 0x210
0002d9f8: R30 := 0x4045DC
0002d9fb: call @pthread_attr_setstacksize with return %0002d9fd

0002d9fd:
0002da00: R1 := 1
0002da06: R0 := R31 + 0x210
0002da0b: R30 := 0x4045E8
0002da0e: call @pthread_attr_setdetachstate with return %0002da10

0002da10:
0002da13: R1 := 0x100
0002da19: R0 := R31 + 0x210
0002da1e: R30 := 0x4045F4
0002da21: call @pthread_attr_setguardsize with return %0002da23

0002da23:
0002da28: R0 := mem[R31 + 0x118, el]:u64
0002da2e: R1 := R23
0002da33: R30 := 0x404600
0002da35: call @plist_in with return %0002da37

0002da37:
0002da3a: when 31:0[R0] = 0 goto %0002d6f5
000347e4: goto %0002da3e

0002d6f5:
0002d6fa: R0 := mem[R31 + 0x120, el]:u64
0002d700: R1 := R23
0002d705: R30 := 0x404690
0002d707: call @plist_in with return %0002d709

0002d709:
0002d70d: when 31:0[R0] = 0 goto %0002d70b
000347e5: goto %0002d845

0002d70b:
0002d713: R0 := 0x30
0002d718: R30 := 0x404704
0002d71a: call @zmalloc with return %0002d71c

0002d71c:
0002d720: R3 := R31 + 0x200
0002d726: R2 := R0
0002d72d: V1 := mem[R31 + 0x140, el]:u128
0002d733: R24 := R0
0002d73a: V0 := mem[R3 - 0xB4, el]:u128
0002d742: mem := mem with [R2, el]:u32 <- 31:0[R28]
0002d746: R2 := R2 + 0x10
0002d74d: R0 := mem[R31 + 0x110, el]:u64
0002d755: mem := mem with [R24 + 0x10, el]:u128 <- V1
0002d75b: R1 := R23
0002d763: mem := mem with [R2 + 0xC, el]:u128 <- V0
0002d768: R30 := 0x404730
0002d76a: call @plist_get with return %0002d76c

0002d76c:
0002d771: R1 := pad:64[mem[R19 + 0x10, el]:u32]
0002d779: mem := mem with [R24 + 8, el]:u64 <- R0
0002d77f: when 31:0[R1] <> 0 goto %0002d77d
000347e6: goto %0002d80f

0002d77d:
0002d786: R0 := R24
0002d78b: R30 := 0x404768
0002d78d: call @tunnel_thread with return %0002d78f

0002d78f:
0002d792: goto %0002d790

0002d80f:
0002d814: R2 := mem[R31 + 0x68, el]:u64
0002d81a: R3 := R24
0002d820: R1 := R31 + 0x210
0002d826: R0 := R31 + 0x108
0002d82b: R30 := 0x404750
0002d82e: call @pthread_create with return %0002d830

0002d830:
0002d834: R22 := pad:64[31:0[R0]]
0002d838: goto %0002d790

0002d845:
0002d848: R0 := 0x30
0002d84d: R30 := 0x40469C
0002d84f: call @zmalloc with return %0002d851

0002d851:
0002d855: R4 := R31 + 0x200
0002d85b: R1 := R0
0002d862: V1 := mem[R31 + 0x140, el]:u128
0002d868: R3 := R0
0002d86f: V0 := mem[R4 - 0xB4, el]:u128
0002d877: mem := mem with [R1, el]:u32 <- 31:0[R28]
0002d87b: R1 := R1 + 0x10
0002d882: R2 := pad:64[mem[R19 + 0x10, el]:u32]
0002d88a: mem := mem with [R0 + 0x10, el]:u128 <- V1
0002d892: mem := mem with [R1 + 0xC, el]:u128 <- V0
0002d897: when 31:0[R2] <> 0 goto %0002d83a
000347e7: goto %0002d89b

0002d83a:
0002d83d: R30 := 0x40475C
0002d83f: call @socks5_thread with return %0002d841

0002d841:
0002d843: goto %0002d790

0002d89b:
0002d89f: R1 := R31 + 0x210
0002d8a5: R0 := R31 + 0x108
0002d8aa: R2 := 0x40A000
0002d8b0: R2 := R2 + 0x370
0002d8b5: R30 := 0x4046D8
0002d8b7: call @pthread_create with return %0002d8b9

0002d8b9:
0002d8bd: R22 := pad:64[31:0[R0]]
0002d8c1: goto %0002d790

0002da3e:
0002da41: R0 := 0x30
0002da46: R30 := 0x40460C
0002da48: call @zmalloc with return %0002da4a

0002da4a:
0002da4e: R4 := R31 + 0x200
0002da54: R1 := R0
0002da5b: V1 := mem[R31 + 0x140, el]:u128
0002da61: R3 := R0
0002da68: V0 := mem[R4 - 0xB4, el]:u128
0002da70: mem := mem with [R1, el]:u32 <- 31:0[R28]
0002da74: R1 := R1 + 0x10
0002da7b: R2 := pad:64[mem[R19 + 0x10, el]:u32]
0002da83: mem := mem with [R0 + 0x10, el]:u128 <- V1
0002da8b: mem := mem with [R1 + 0xC, el]:u128 <- V0
0002da90: when 31:0[R2] <> 0 goto %0002d7c4
000347e8: goto %0002da94

0002d7c4:
0002d7c7: R30 := 0x4046F8
0002d7c9: call @proxy_thread with return %0002d7cb

0002d7cb:
0002d7cd: goto %0002d790

0002da94:
0002da98: R1 := R31 + 0x210
0002da9e: R0 := R31 + 0x108
0002daa3: R2 := 0x40A000
0002daa9: R2 := R2 + 0x80
0002daae: R30 := 0x404648
0002dab0: call @pthread_create with return %0002dab2

0002dab2:
0002dab6: R22 := pad:64[31:0[R0]]
000347e9: goto %0002d790

0002d790:
0002d797: R0 := R31 + 0x210
0002d79c: R30 := 0x404654
0002d79f: call @pthread_attr_destroy with return %0002d7a1

0002d7a1:
0002d7a5: when 31:0[R22] <> 0 goto %0002d7a3
000347ea: goto %0002d7cf

0002d7a3:
0002d7ac: R2 := pad:64[31:0[R22]]
0002d7b2: R1 := R27
0002d7b7: R0 := 3
0002d7bc: R30 := 0x4046F0
0002d7be: call @syslog with return %0002d7c0

0002d7c0:
0002d7c2: goto %0002d597

0002d7cf:
0002d7d3: R25 := pad:64[31:0[R25] + 1]
0002d7d7: goto %0002d597

0002d8d9:
0002d8e1: V0 := 0
0002d8e8: R0 := pad:64[mem[R31 + 0x140, el]:u16]
0002d8ee: R4 := R31 + 0x200
0002d8f4: R3 := R31 + 0x148
0002d8fa: #1421 := 31:0[R0] - 2
0002d8ff: VF := extend:64[#1421] <> extend:64[31:0[R0]] - 2
0002d904: CF := pad:64[#1421] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0002d908: ZF := #1421 = 0
0002d90c: NF := 31:31[#1421]
0002d912: R1 := R31 + 0x144
0002d920: when ZF <> 1 goto %0002d918
0002d921: goto %0002d91c

0002d91c:
0002d91d: R1 := R1
0002d923: goto %0002d91f

0002d918:
0002d919: R1 := R3
0002d922: goto %0002d91f

0002d91f:
0002d929: R2 := R31 + 0x160
0002d92f: #1422 := R31 + 0x160
0002d935: mem := mem with [#1422, el]:u128 <- V0
0002d93b: mem := mem with [#1422 + 0x10, el]:u128 <- V0
0002d940: R3 := 0x2E
0002d948: mem := mem with [R4 - 0x82, el]:u128 <- V0
0002d94d: R30 := 0x404520
0002d94f: call @inet_ntop with return %0002d951

0002d951:
0002d956: R3 := pad:64[mem[R31 + 0x142, el]:u16]
0002d95c: R2 := R31 + 0x160
0002d961: R1 := 0x415000
0002d96a: R3 := pad:64[23:16[R3].31:24[R3].7:0[R3].15:8[R3]]
0002d970: R1 := R1 + 0x190
0002d976: R3 := pad:64[15:0[R3]]
0002d97b: R0 := 4
0002d980: R30 := 0x404540
0002d982: call @syslog with return %0002d984

0002d984:
0002d988: R0 := R31 + 0x160
0002d98d: R30 := 0x404548
0002d98f: call @gen_denied_page with return %0002d991

0002d991:
0002d995: R24 := R0
0002d99d: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d9a2: R30 := 0x404554
0002d9a4: call @strlen with return %0002d9a6

0002d9a6:
0002d9aa: R1 := R24
0002d9b0: R2 := R0
0002d9b6: R0 := pad:64[31:0[R28]]
0002d9bb: R30 := 0x404564
0002d9bd: call @write_wrapper with return %0002d9bf

0002d9bf:
0002d9c4: R0 := mem[R31 + 0x100, el]:u64
0002d9c9: R30 := 0x40456C
0002d9cb: call @free with return %0002d9cd

0002d9cd:
0002d9d1: R0 := pad:64[31:0[R28]]
0002d9d6: R30 := 0x404574
0002d9d8: call @close with return %0002d9da

0002d9da:
000347eb: goto %0002d597

0002d597:
0002d5a0: R23 := R23 + 1
0002d5a6: #1420 := R23 - 0x400
0002d5ab: VF := extend:128[#1420] <> extend:128[R23] - 0x400
0002d5b0: CF := pad:128[#1420] <> pad:128[R23] + 0xFFFFFFFFFFFFFC00
0002d5b4: ZF := #1420 = 0
0002d5b8: NF := 63:63[#1420]
0002d5be: when ZF goto %0002d5bc
000347ec: goto %0002d56b

0002dab8:
0002dabb: when ZF goto %0002d5bc
000347ed: goto %0002dabf

0002dabf:
0002dac4: R0 := pad:64[mem[R19, el]:u32]
0002dac9: when 31:0[R0] = 0 goto %0002d7d9
000347ee: goto %0002d5bc

0002d7d9:
0002d7dc: R30 := 0x404770
0002d7de: call @__errno_location with return %0002d7e0

0002d7e0:
0002d7e5: R0 := pad:64[mem[R0, el]:u32]
0002d7ea: R30 := 0x404778
0002d7ec: call @strerror with return %0002d7ee

0002d7ee:
0002d7f2: R2 := R0
0002d7f7: R1 := 0x415000
0002d7fc: R0 := 3
0002d802: R1 := R1 + 0x1E0
0002d807: R30 := 0x40478C
0002d809: call @syslog with return %0002d80b

0002d80b:
0002d80d: goto %0002d5bc

0002d5bc:
0002d5c6: R0 := mem[R19 + 0x48, el]:u64
0002d5cb: when R0 = 0 goto %0002d41c
000347ef: goto %0002d5cf

0002d5cf:
0002d5d3: R0 := R19 + 0x18
0002d5d8: R30 := 0x404468
0002d5da: call @pthread_mutex_lock with return %0002d5dc

0002d5dc:
0002d5e1: R20 := mem[R19 + 0x48, el]:u64
0002d5e7: when R20 = 0 goto %0002d5e5
000347f0: goto %0002d602

0002d602:
0002d607: R0 := pad:64[mem[R19 + 4, el]:u32]
0002d60c: R22 := 0x415000
0002d613: R21 := mem[R20 + 0x10, el]:u64
0002d619: R22 := R22 + 0x208
0002d61f: R26 := pad:64[31:0[R26] + 1]
0002d625: when 31:0[R0] <> 0 goto %0002d623
000347f1: goto %0002d672

0002d672:
0002d67b: R0 := R20
0002d680: R30 := 0x404490
0002d682: call @free with return %0002d684

0002d684:
0002d687: when R21 = 0 goto %0002d5e5
000347f2: goto %0002d651

0002d651:
0002d65b: R0 := pad:64[mem[R19 + 4, el]:u32]
0002d661: R20 := R21
0002d667: R26 := pad:64[31:0[R26] + 1]
0002d66e: R21 := mem[R20 + 0x10, el]:u64
0002d674: when 31:0[R0] = 0 goto %0002d672
000347f3: goto %0002d623

0002d623:
0002d62d: R1 := mem[R20, el]:u64
0002d633: R2 := pad:64[31:0[R23]]
0002d639: R0 := R22
0002d63e: R30 := 0x4044B8
0002d640: call @printf with return %0002d642

0002d642:
0002d646: R0 := R20
0002d64b: R30 := 0x4044C0
0002d64d: call @free with return %0002d64f

0002d64f:
0002d653: when R21 <> 0 goto %0002d651
000347f4: goto %0002d5e5

0002d5e5:
0002d5ee: R0 := R19 + 0x18
0002d5f5: mem := mem with [R19 + 0x48, el]:u64 <- 0
0002d5fa: R30 := 0x4044D0
0002d5fc: call @pthread_mutex_unlock with return %0002d5fe

0002d5fe:
0002d600: goto %0002d41c

0002be2f:
0002be34: R0 := mem[R31 + 0xE0, el]:u64
0002be3a: R20 := R19 + 0x80
0002be3f: R30 := 0x403C9C
0002be41: call @free with return %0002be43

0002be43:
0002be48: R2 := pad:64[31:0[R25] + ~31:0[R26] + 1]
0002be4d: R1 := 0x415000
0002be53: R1 := R1 + 0x228
0002be58: R0 := 6
0002be5d: R30 := 0x403CB0
0002be5f: call @syslog with return %0002be61

0002be61:
0002be65: R0 := R20
0002be6a: R30 := 0x403CB8
0002be6c: call @pthread_mutex_lock with return %0002be6e

0002be6e:
0002be73: R0 := mem[R19 + 0xB0, el]:u64
0002be78: R30 := 0x403CC0
0002be7a: call @plist_free with return %0002be7c

0002be7c:
0002be80: R0 := R20
0002be85: R30 := 0x403CC8
0002be87: call @pthread_mutex_unlock with return %0002be89

0002be89:
0002be8e: R0 := mem[R19 + 0x78, el]:u64
0002be93: R30 := 0x403CD0
0002be95: call @hlist_free with return %0002be97

0002be97:
0002be9c: R0 := mem[R19 + 0x70, el]:u64
0002bea1: R30 := 0x403CD8
0002bea3: call @plist_free with return %0002bea5

0002bea5:
0002beaa: R0 := mem[R19 + 8, el]:u64
0002beaf: R30 := 0x403CE0
0002beb1: call @plist_free with return %0002beb3

0002beb3:
0002beb8: R0 := mem[R31 + 0x110, el]:u64
0002bebd: R30 := 0x403CE8
0002bebf: call @plist_free with return %0002bec1

0002bec1:
0002bec6: R0 := mem[R31 + 0x118, el]:u64
0002becb: R30 := 0x403CF0
0002becd: call @plist_free with return %0002becf

0002becf:
0002bed4: R0 := mem[R31 + 0x120, el]:u64
0002bed9: R30 := 0x403CF8
0002bedb: call @plist_free with return %0002bedd

0002bedd:
0002bee2: R0 := mem[R31 + 0x128, el]:u64
0002bee7: R30 := 0x403D00
0002bee9: call @plist_free with return %0002beeb

0002beeb:
0002bef0: R0 := mem[R31 + 0xB0, el]:u64
0002bef7: R0 := pad:64[mem[R0]]
0002befd: when 31:0[R0] <> 0 goto %0002befb
000347f5: goto %0002bf10

0002befb:
0002bf05: R0 := mem[R31 + 0xB0, el]:u64
0002bf0a: R30 := 0x403F14
0002bf0d: call @unlink with return %0002bf0f

0002bf0f:
0002bf12: goto %0002bf10

0002bf10:
0002bf18: R0 := mem[R31 + 0xB8, el]:u64
0002bf1d: R30 := 0x403D14
0002bf1f: call @free with return %0002bf21

0002bf21:
0002bf26: R0 := mem[R31 + 0xB0, el]:u64
0002bf2b: R30 := 0x403D1C
0002bf2d: call @free with return %0002bf2f

0002bf2f:
0002bf34: R0 := mem[R31 + 0x80, el]:u64
0002bf39: R30 := 0x403D24
0002bf3b: call @free with return %0002bf3d

0002bf3d:
0002bf42: R0 := mem[R19 + 0x58, el]:u64
0002bf47: R30 := 0x403D2C
0002bf49: call @free with return %0002bf4b

0002bf4b:
0002bf4e: R30 := 0x403D30
0002bf50: call @parent_free with return %0002bf52

0002bf52:
0002bf55: R0 := 0
0002bf5a: R30 := 0x403D38
0002bf5c: call @exit with return %0002bf5e

0002bf5e:
0002bf63: R21 := mem[R31 + 0x90, el]:u64
0002bf68: R1 := 0x32
0002bf6e: R0 := R21
0002bf73: R30 := 0x403D48
0002bf76: call @gethostname with return %0002bf78

0002bf78:
0002bf7d: R0 := pad:64[mem[R21]]
0002bf82: when 31:0[R0] = 0 goto %0002b991
000347f6: goto %0002b9ac

0002b991:
0002b996: R0 := mem[R31 + 0x90, el]:u64
0002b99b: R2 := 0x32
0002b9a2: R1 := mem[R31 + 0xE8, el]:u64
0002b9a7: R30 := 0x404270
0002b9a9: call @strlcpy with return %0002b9ab

0002b9ab:
0002b9ae: goto %0002b9ac

0002b9ac:
0002b9b4: R2 := mem[R31 + 0x90, el]:u64
0002b9b9: R1 := 0x414000
0002b9be: R0 := 6
0002b9c4: R1 := R1 + 0xDB0
0002b9c9: R30 := 0x403D64
0002b9cb: call @syslog with return %0002b9cd

0002b9cd:
0002b9d0: goto %0002b9ce

0002dcb1:
0002dcb4: R1 := 0x415000
0002dcba: R1 := R1 + 0x148
0002dcbf: R0 := 3
0002dcc4: R30 := 0x403EC4
0002dcc6: call @syslog with return %0002dcc8

0002dcc8:
0002dccb: R0 := 1
0002dcd0: R30 := 0x403ECC
0002dcd2: call @myexit with return %0002dcd4

0002dcd4:
0002dcd9: R1 := mem[R31 + 0x98, el]:u64
0002dcde: R0 := 0x415000
0002dce4: R0 := R0 + 0xA60
0002dce9: R30 := 0x403EDC
0002dceb: call @strcasecmp with return %0002dced

0002dced:
0002dcf1: when 31:0[R0] = 0 goto %0002dcef
000347f7: goto %0002e005

0002dcef:
0002dcf9: R0 := mem[R19 + 0x58, el]:u64
0002dcfe: R1 := 0x416000
0002dd05: V0 := pad:128[mem[R1 + 0x260, el]:u64]
0002dd0b: R1 := R0 + 0x200
0002dd12: mem := mem with [R0 + 0x134, el]:u32 <- 0
0002dd1a: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
0002dd1e: goto %0002b9e1

0002e005:
0002e00a: R1 := mem[R31 + 0x98, el]:u64
0002e00f: R0 := 0x414000
0002e015: R0 := R0 + 0xDD8
0002e01a: R30 := 0x403EF0
0002e01c: call @strcasecmp with return %0002e01e

0002e01e:
0002e022: when 31:0[R0] <> 0 goto %0002e020
000347f8: goto %0002e071

0002e020:
0002e02a: R1 := mem[R31 + 0x98, el]:u64
0002e02f: R0 := 0x414000
0002e035: R0 := R0 + 0xDE0
0002e03a: R30 := 0x404824
0002e03c: call @strcasecmp with return %0002e03e

0002e03e:
0002e041: when 31:0[R0] <> 0 goto %0002c6bb
000347f9: goto %0002e045

0002c6bb:
0002c6c0: R1 := mem[R31 + 0x98, el]:u64
0002c6c5: R0 := 0x414000
0002c6cb: R0 := R0 + 0xDE8
0002c6d0: R30 := 0x4048B0
0002c6d2: call @strcasecmp with return %0002c6d4

0002c6d4:
0002c6d7: when 31:0[R0] <> 0 goto %0002c514
000347fa: goto %0002c6db

0002c514:
0002c517: R1 := 0x414000
0002c51d: R1 := R1 + 0xDF0
0002c522: R0 := 3
0002c527: R30 := 0x4049A4
0002c529: call @syslog with return %0002c52b

0002c52b:
0002c52e: R0 := 1
0002c533: R30 := 0x4049AC
0002c535: call @myexit with return %0002c537

0002c537:
0002c53a: R1 := 0x415000
0002c540: R1 := R1 + 0x80
0002c545: R0 := 3
0002c54a: R30 := 0x4049BC
0002c54c: call @syslog with return %0002c54e

0002c54e:
0002c551: R0 := 1
0002c556: R30 := 0x4049C4
0002c558: call @myexit with return %0002c55a

0002c55a:
0002c55d: R20 := 0
0002c562: goto %0002c560

0002c6db:
0002c6e0: R0 := mem[R19 + 0x58, el]:u64
0002c6e5: R1 := 0x416000
0002c6ec: V0 := pad:128[mem[R1 + 0x268, el]:u64]
0002c6f2: R1 := R0 + 0x200
0002c6f9: mem := mem with [R0 + 0x134, el]:u32 <- 0
0002c701: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
0002c705: goto %0002b9e1

0002e045:
0002e04a: R0 := mem[R19 + 0x58, el]:u64
0002e04f: R1 := 0x416000
0002e056: V0 := pad:128[mem[R1 + 0x380, el]:u64]
0002e05c: R1 := R0 + 0x200
0002e063: mem := mem with [R0 + 0x134, el]:u32 <- 0
0002e06b: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
0002e06f: goto %0002b9e1

0002e071:
0002e076: R0 := mem[R19 + 0x58, el]:u64
0002e07b: R2 := 1
0002e081: R1 := R0 + 0x200
0002e089: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
0002e090: mem := mem with [R1 - 0xD4, el]:u64 <- 0
0002e094: goto %0002b9e1

0002ddc1:
0002ddc9: R1 := 0x414000
0002ddcf: R1 := R1 + 0xF68
0002ddd4: R0 := 3
0002ddd9: R30 := 0x403244
0002dddb: call @syslog with return %0002dddd

0002dddd:
0002dde0: R0 := 1
0002dde5: R30 := 0x40324C
0002dde7: call @myexit with return %0002dde9

0002edea:
0002edef: R0 := mem[R19 + 0x68, el]:u64
0002edf7: mem := mem with [R19 + 0x64, el]:u32 <- 31:0[R24]
0002edfd: when R0 <> 0 goto %0002edfb
000347fb: goto %0002eea8

0002eea8:
0002eeae: mem := mem with [R19 + 0x68, el]:u64 <- R26
000347fc: goto %0002edfb

0002edfb:
0002ee04: R0 := R21
0002ee09: R30 := 0x40392C
0002ee0b: call @strlen with return %0002ee0d

0002ee0d:
0002ee11: R23 := pad:64[31:0[R0]]
0002ee17: when 31:0[R0] = 0 goto %0002ee15
000347fd: goto %0002ee27

0002ee27:
0002ee2b: R0 := pad:64[31:0[R0] + 3]
0002ee31: R21 := extend:64[31:0[R0]]
0002ee37: R0 := R21
0002ee3c: R30 := 0x403944
0002ee3e: call @zmalloc with return %0002ee40

0002ee40:
0002ee45: R3 := mem[R31 + 0x100, el]:u64
0002ee4b: R1 := R21
0002ee51: R2 := R25
0002ee57: R21 := R0
0002ee5c: R30 := 0x403958
0002ee5e: call @snprintf with return %0002ee60

0002ee60:
0002ee65: R0 := mem[R19 + 0x70, el]:u64
0002ee6b: R2 := R21
0002ee70: R1 := 0
0002ee75: R30 := 0x403968
0002ee77: call @plist_add with return %0002ee79

0002ee79:
0002ee7f: mem := mem with [R19 + 0x70, el]:u64 <- R0
0002ee86: R21 := mem[R31 + 0x100, el]:u64
0002ee8a: goto %0002ee15

0002ee15:
0002ee1e: R0 := R21
0002ee23: R30 := 0x4038FC
0002ee25: call @free with return %0002c2c5

0002ef24:
0002ef29: R0 := pad:64[mem[R1]]
0002ef2f: when 31:0[R0] = 0 goto %0002ef2d
000347fe: goto %0002ef3f

0002ef3f:
0002ef44: R0 := mem[R19 + 8, el]:u64
0002ef49: R30 := 0x4034A4
0002ef4b: call @noproxy_add with return %0002ef4d

0002ef4d:
0002ef53: mem := mem with [R19 + 8, el]:u64 <- R0
0002ef5a: R1 := mem[R31 + 0x100, el]:u64
0002ef5e: goto %0002ef2d

0002ef2d:
0002ef36: R0 := R1
0002ef3b: R30 := 0x40347C
0002ef3d: call @free with return %0002c23b

0002dde9:
0002ddec: R1 := 0
0002ddf1: R30 := 0x403254
0002ddf3: call @parent_add with return %0002ddf5

0002ddf5:
0002ddfa: R0 := mem[R31 + 0x100, el]:u64
0002ddff: R30 := 0x40325C
0002de01: call @free with return %0002de03

0002ebd3:
0002ebd6: R30 := 0x402FA8
0002ebd8: call @is_http_header with return %0002ebda

0002ebda:
0002ebde: when 31:0[R0] <> 0 goto %0002ebdc
000347ff: goto %0002ec6f

0002ec6f:
0002ec74: R2 := mem[R31 + 0x100, el]:u64
0002ec7a: R1 := R25
0002ec7f: R0 := 3
0002ec84: R30 := 0x402FBC
0002ec86: call @syslog with return %0002ec88

0002ec88:
0002ec8a: goto %0002ec61

0002ebdc:
0002ebe6: R0 := mem[R31 + 0x100, el]:u64
0002ebeb: R30 := 0x402F6C
0002ebed: call @get_http_header_name with return %0002ebef

0002ebef:
0002ebf3: R20 := R0
0002ebf9: R1 := R0
0002ec00: R0 := mem[R19 + 0x78, el]:u64
0002ec05: R30 := 0x402F7C
0002ec07: call @hlist_in with return %0002ec09

0002ec09:
0002ec0d: when 31:0[R0] = 0 goto %0002ec0b
00034800: goto %0002ec51

0002ec0b:
0002ec15: R0 := mem[R31 + 0x100, el]:u64
0002ec1c: R26 := mem[R19 + 0x78, el]:u64
0002ec21: R30 := 0x4034C4
0002ec23: call @get_http_header_value with return %0002ec25

0002ec25:
0002ec29: R2 := R0
0002ec2f: R1 := R20
0002ec35: R0 := R26
0002ec3a: R4 := 0
0002ec3f: R3 := 1
0002ec44: R30 := 0x4034DC
0002ec46: call @hlist_add with return %0002ec48

0002ec48:
0002ec4e: mem := mem with [R19 + 0x78, el]:u64 <- R0
0002ec53: goto %0002ec51

0002ec51:
0002ec58: R0 := R20
0002ec5d: R30 := 0x402F88
0002ec5f: call @free with return %0002ec61

0002ec61:
0002ec66: R0 := mem[R31 + 0x100, el]:u64
0002ec6b: R30 := 0x402F90
0002ec6d: call @free with return %0002ebae

0002eb6b:
0002eb74: R0 := R24
0002eb7a: R3 := pad:64[31:0[R25]]
0002eb80: R1 := R31 + 0x120
0002eb85: R30 := 0x402F30
0002eb87: call @listen_add with return %0002eb89

0002eb89:
0002eb8e: R0 := mem[R31 + 0x100, el]:u64
0002eb93: R30 := 0x402F38
0002eb95: call @free with return %0002eb45

0002eb02:
0002eb0b: R0 := R21
0002eb11: R3 := pad:64[31:0[R25]]
0002eb17: R1 := R31 + 0x118
0002eb1c: R30 := 0x402EEC
0002eb1e: call @listen_add with return %0002eb20

0002eb20:
0002eb25: R0 := mem[R31 + 0x100, el]:u64
0002eb2a: R30 := 0x402EF4
0002eb2c: call @free with return %0002eadc

0002ea9f:
0002eaa8: R0 := R31 + 0x110
0002eaae: R2 := pad:64[31:0[R25]]
0002eab3: R30 := 0x402EA8
0002eab5: call @tunnel_add with return %0002eab7

0002eab7:
0002eabc: R0 := mem[R31 + 0x100, el]:u64
0002eac1: R30 := 0x402EB0
0002eac3: call @free with return %0002ea79

00034801: sub malloc(malloc_size, malloc_result)
00034bf6: malloc_size :: in u64 = R0
00034bf7: malloc_result :: out u64 = R0

00016fca:
0002fd38: R16 := 0x430000
0002fd3f: R17 := mem[R16 + 0xE8, el]:u64
0002fd45: R16 := R16 + 0xE8
0002fd4a: call R17 with noreturn

00034802: sub md4_buffer(md4_buffer_result)
00034bf8: md4_buffer_result :: out u32 = low:32[R0]

00012cd6:
00012cda: #165 := R31 - 0xD0
00012ce0: mem := mem with [#165, el]:u64 <- R29
00012ce6: mem := mem with [#165 + 8, el]:u64 <- R30
00012cea: R31 := #165
00012cef: R3 := 0x416000
00012cf5: R29 := R31
00012cfc: V0 := mem[R3 + 0x3A0, el]:u128
00012d02: #166 := R31 + 0x10
00012d08: mem := mem with [#166, el]:u64 <- R19
00012d0e: mem := mem with [#166 + 8, el]:u64 <- R20
00012d16: mem := mem with [R31 + 0x20, el]:u64 <- R21
00012d1c: R21 := R2
00012d22: R2 := R31 + 0x30
00012d2a: mem := mem with [R31 + 0x30, el]:u128 <- V0
00012d31: mem := mem with [R31 + 0x40, el]:u64 <- 0
00012d38: mem := mem with [R31 + 0x48, el]:u32 <- 0
00012d3d: R30 := 0x411200
00012d3f: call @md4_process_bytes with return %00012d41

00012d41:
00012d46: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00012d4d: R1 := pad:64[mem[R31 + 0x48, el]:u32]
00012d54: #167 := 31:0[R1] + 31:0[R0]
00012d59: #168 := pad:64[31:0[R1] + 31:0[R0]]
00012d5f: VF := extend:64[#167] <> extend:64[31:0[R1]] + extend:64[31:0[R0]]
00012d65: CF := #168 <> pad:64[31:0[R1]] + pad:64[31:0[R0]]
00012d69: ZF := #167 = 0
00012d6d: NF := 31:31[#167]
00012d71: R0 := #168
00012d79: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00012d7f: when CF <> 1 goto %00012d7d
00034803: goto %000159f5

000159f5:
000159fa: R0 := pad:64[mem[R31 + 0x44, el]:u32]
00015a00: R0 := pad:64[31:0[R0] + 1]
00015a08: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R0]
00034804: goto %00012d7d

00012d7d:
00012d86: #169 := 31:0[R1] - 0x38
00012d8b: VF := extend:64[#169] <> extend:64[31:0[R1]] - 0x38
00012d90: CF := pad:64[#169] <> pad:64[31:0[R1]] + 0xFFFFFFC8
00012d94: ZF := #169 = 0
00012d98: NF := 31:31[#169]
00012d9d: R0 := 0x78
00012da2: R20 := 0x38
00012da9: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
00012db0: R20 := pad:64[31:0[R20] + ~31:0[R1] + 1]
00012db6: R19 := pad:64[31:0[R1]]
00012dc4: when CF <> 1 goto %00012dbc
00012dc5: goto %00012dc0

00012dc0:
00012dc1: R20 := R0
00012dc7: goto %00012dc3

00012dbc:
00012dbd: R20 := R20
00012dc6: goto %00012dc3

00012dc3:
00012dcc: R1 := 0x416000
00012dd2: R0 := R31 + 0x4C
00012dd8: R1 := R1 + 0x810
00012dde: R2 := R20
00012de4: R1 := R1 + 0xA90
00012deb: R0 := R0 + R19
00012df0: R30 := 0x411258
00012df2: call @memcpy with return %00012df4

00012df4:
00012df8: #170 := R31 + 0x40
00012dfd: R6 := pad:64[mem[#170, el]:u32]
00012e02: R4 := pad:64[mem[#170 + 4, el]:u32]
00012e09: R1 := R19 + R20
00012e0f: R5 := R31 + 0x3C
00012e15: R2 := R31 + 0x30
00012e1b: R0 := pad:64[63:2[R1]]
00012e21: R1 := R1 + 8
00012e27: R7 := R0 + 4
00012e2d: R3 := R0 + 5
00012e33: R8 := pad:64[28:0[R6].0]
00012e3a: R4 := pad:64[28:0[R4].31:29[R6]]
00012e40: R0 := R31 + 0x4C
00012e49: mem := mem with [R5 + (61:0[R7].0), el]:u32 <- 31:0[R8]
00012e52: mem := mem with [R5 + (61:0[R3].0), el]:u32 <- 31:0[R4]
00012e57: R30 := 0x411290
00012e59: call @md4_process_block with return %00012e5b

00012e5b:
00012e60: V0 := mem[R31 + 0x30, el]:u128
00012e66: R0 := R21
00012e6c: #171 := R31 + 0x10
00012e71: R19 := mem[#171, el]:u64
00012e76: R20 := mem[#171 + 8, el]:u64
00012e7e: mem := mem with [R21, el]:u128 <- V0
00012e85: R21 := mem[R31 + 0x20, el]:u64
00012e8c: R29 := mem[R31, el]:u64
00012e91: R30 := mem[R31 + 8, el]:u64
00012e95: R31 := R31 + 0xD0
00012e9a: call R30 with noreturn

00034805: sub md4_finish_ctx(md4_finish_ctx_result)
00034bf9: md4_finish_ctx_result :: out u32 = low:32[R0]

000126ad:
000126b1: #138 := R31 - 0x40
000126b7: mem := mem with [#138, el]:u64 <- R29
000126bd: mem := mem with [#138 + 8, el]:u64 <- R30
000126c1: R31 := #138
000126c7: R29 := R31
000126cd: #139 := R31 + 0x10
000126d3: mem := mem with [#139, el]:u64 <- R19
000126d9: mem := mem with [#139 + 8, el]:u64 <- R20
000126df: R19 := R0
000126e6: R0 := pad:64[mem[R0 + 0x10, el]:u32]
000126ec: #140 := R31 + 0x20
000126f2: mem := mem with [#140, el]:u64 <- R21
000126f8: mem := mem with [#140 + 8, el]:u64 <- R22
000126fe: R21 := R1
00012705: R3 := pad:64[mem[R19 + 0x18, el]:u32]
0001270d: mem := mem with [R31 + 0x30, el]:u64 <- R23
00012714: #141 := 31:0[R0] + 31:0[R3]
00012719: #142 := pad:64[31:0[R0] + 31:0[R3]]
0001271f: VF := extend:64[#141] <> extend:64[31:0[R0]] + extend:64[31:0[R3]]
00012725: CF := #142 <> pad:64[31:0[R0]] + pad:64[31:0[R3]]
00012729: ZF := #141 = 0
0001272d: NF := 31:31[#141]
00012731: R0 := #142
00012739: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R0]
0001273f: when CF <> 1 goto %0001273d
00034806: goto %00015bbc

00015bbc:
00015bc1: R0 := pad:64[mem[R19 + 0x14, el]:u32]
00015bc7: R0 := pad:64[31:0[R0] + 1]
00015bcf: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R0]
00034807: goto %0001273d

0001273d:
00012746: #143 := 31:0[R3] - 0x38
0001274b: VF := extend:64[#143] <> extend:64[31:0[R3]] - 0x38
00012750: CF := pad:64[#143] <> pad:64[31:0[R3]] + 0xFFFFFFC8
00012754: ZF := #143 = 0
00012758: NF := 31:31[#143]
0001275d: R0 := 0x78
00012762: R22 := 0x38
00012769: R0 := pad:64[31:0[R0] + ~31:0[R3] + 1]
00012770: R22 := pad:64[31:0[R22] + ~31:0[R3] + 1]
00012776: R20 := pad:64[31:0[R3]]
00012784: when CF <> 1 goto %0001277c
00012785: goto %00012780

00012780:
00012781: R22 := R0
00012787: goto %00012783

0001277c:
0001277d: R22 := R22
00012786: goto %00012783

00012783:
0001278d: R23 := R19 + 0x1C
00012792: R1 := 0x416000
00012798: R1 := R1 + 0x810
0001279e: R2 := R22
000127a5: R0 := R23 + R20
000127ab: R1 := R1 + 0xA90
000127b0: R30 := 0x410EA4
000127b3: call @memcpy with return %000127b5

000127b5:
000127ba: R1 := R20 + R22
000127c1: R5 := pad:64[mem[R19 + 0x10, el]:u32]
000127c7: R4 := pad:64[32:2[R1].0]
000127cd: R0 := R23
000127d4: R4 := R19 + R4
000127da: R2 := R19
000127e0: R3 := pad:64[28:0[R5].0]
000127e6: R1 := R1 + 8
000127ee: mem := mem with [R4 + 0x1C, el]:u32 <- 31:0[R3]
000127f5: R3 := pad:64[mem[R19 + 0x14, el]:u32]
000127fc: R3 := pad:64[28:0[R3].31:29[R5]]
00012804: mem := mem with [R4 + 0x20, el]:u32 <- 31:0[R3]
00012809: R30 := 0x410ED8
0001280b: call @md4_process_block with return %0001280d

0001280d:
00012812: R0 := pad:64[mem[R19, el]:u32]
00012819: R23 := mem[R31 + 0x30, el]:u64
00012821: mem := mem with [R21, el]:u32 <- 31:0[R0]
00012827: R0 := R21
0001282e: R1 := pad:64[mem[R19 + 4, el]:u32]
00012836: mem := mem with [R21 + 4, el]:u32 <- 31:0[R1]
0001283d: R1 := pad:64[mem[R19 + 8, el]:u32]
00012845: mem := mem with [R21 + 8, el]:u32 <- 31:0[R1]
0001284c: R1 := pad:64[mem[R19 + 0xC, el]:u32]
00012852: #144 := R31 + 0x10
00012857: R19 := mem[#144, el]:u64
0001285c: R20 := mem[#144 + 8, el]:u64
00012864: mem := mem with [R21 + 0xC, el]:u32 <- 31:0[R1]
0001286a: #145 := R31 + 0x20
0001286f: R21 := mem[#145, el]:u64
00012874: R22 := mem[#145 + 8, el]:u64
0001287b: R29 := mem[R31, el]:u64
00012880: R30 := mem[R31 + 8, el]:u64
00012884: R31 := R31 + 0x40
00012889: call R30 with noreturn

00034808: sub md4_init_ctx(md4_init_ctx_result)
00034bfa: md4_init_ctx_result :: out u32 = low:32[R0]

00012635:
00012638: R1 := 0x416000
0001263f: mem := mem with [R0 + 0x10, el]:u64 <- 0
00012646: mem := mem with [R0 + 0x18, el]:u32 <- 0
0001264d: V0 := mem[R1 + 0x3A0, el]:u128
00012655: mem := mem with [R0, el]:u128 <- V0
0001265a: call R30 with noreturn

00034809: sub md4_process_block(md4_process_block_result)
00034bfb: md4_process_block_result :: out u32 = low:32[R0]

0001255b:
0001255f: #132 := R31 - 0x70
00012565: mem := mem with [#132, el]:u64 <- R29
0001256b: mem := mem with [#132 + 8, el]:u64 <- R30
0001256f: R31 := #132
00012575: R4 := R2
0001257b: R5 := R2
00012581: R29 := R31
00012588: R2 := pad:64[mem[R2 + 0x10, el]:u32]
0001258e: R3 := 63:2[R1].0
00012594: #133 := R4 + 4
00012599: R8 := pad:64[mem[#133, el]:u32]
0001259e: R9 := pad:64[mem[#133 + 4, el]:u32]
000125a5: R2 := pad:64[31:0[R2] + 31:0[R1]]
000125ac: R10 := pad:64[mem[R4 + 0xC, el]:u32]
000125b3: R3 := R0 + R3
000125ba: R4 := pad:64[mem[R4, el]:u32]
000125c2: mem := mem with [R5 + 0x10, el]:u32 <- 31:0[R2]
000125ca: mem := mem with [R31 + 0x68, el]:u64 <- R3
000125d0: #134 := pad:64[31:0[R2]]
000125d5: #135 := R1 + ~pad:64[31:0[R2]]
000125db: VF := extend:128[#135 + 1] <> extend:128[R1] + extend:128[~#134] +
          1
000125e1: CF := pad:128[#135 + 1] <> pad:128[R1] + pad:128[~#134] + 1
000125e5: ZF := #135 + 1 = 0
000125e9: NF := 63:63[#135 + 1]
000125f0: when ~(CF & ~ZF) goto %000125ee
0003480a: goto %0001665f

0001665f:
00016664: R1 := pad:64[mem[R5 + 0x14, el]:u32]
0001666a: R1 := pad:64[31:0[R1] + 1]
00016672: mem := mem with [R5 + 0x14, el]:u32 <- 31:0[R1]
0003480b: goto %000125ee

000125ee:
000125f8: R1 := mem[R31 + 0x68, el]:u64
000125fe: #136 := ~R1
00012603: #137 := R0 + ~R1
00012609: VF := extend:128[#137 + 1] <> extend:128[R0] + extend:128[#136] + 1
0001260f: CF := pad:128[#137 + 1] <> pad:128[R0] + pad:128[#136] + 1
00012613: ZF := #137 + 1 = 0
00012617: NF := 63:63[#137 + 1]
0001261d: when CF goto %0001261b
0003480c: goto %00015bd1

00015bd1:
00015bd4: R3 := 0x7999
00015bd9: R2 := 0xEBA1
00015bdf: #308 := R31 + 0x40
00015be5: mem := mem with [#308, el]:u64 <- R25
00015beb: mem := mem with [#308 + 8, el]:u64 <- R26
00015bf1: R25 := pad:64[31:0[R4]]
00015bf7: R26 := R5
00015bfd: R3 := pad:64[0x5A82.15:0[R3]]
00015c03: R2 := pad:64[0x6ED9.15:0[R2]]
00015c09: #309 := R31 + 0x10
00015c0f: mem := mem with [#309, el]:u64 <- R19
00015c15: mem := mem with [#309 + 8, el]:u64 <- R20
00015c1b: #310 := R31 + 0x20
00015c21: mem := mem with [#310, el]:u64 <- R21
00015c27: mem := mem with [#310 + 8, el]:u64 <- R22
00015c2d: #311 := R31 + 0x30
00015c33: mem := mem with [#311, el]:u64 <- R23
00015c39: mem := mem with [#311 + 8, el]:u64 <- R24
00015c3f: #312 := R31 + 0x50
00015c45: mem := mem with [#312, el]:u64 <- R27
00015c4b: mem := mem with [#312 + 8, el]:u64 <- R28
0003480d: goto %00015c4d

00015c4d:
00015c52: R1 := pad:64[31:0[R9] ^ 31:0[R10]]
00015c59: R7 := pad:64[mem[R0, el]:u32]
00015c5e: R18 := pad:64[mem[R0 + 4, el]:u32]
00015c65: R1 := pad:64[31:0[R1] & 31:0[R8]]
00015c6c: R1 := pad:64[31:0[R1] ^ 31:0[R10]]
00015c73: R5 := pad:64[31:0[R8] ^ 31:0[R9]]
00015c7a: R1 := pad:64[31:0[R1] + 31:0[R7]]
00015c81: R4 := pad:64[31:0[R18] + 31:0[R10]]
00015c88: R1 := pad:64[31:0[R1] + 31:0[R25]]
00015c8f: R28 := pad:64[31:0[R7] + 31:0[R3]]
00015c95: #313 := R0 + 8
00015c9a: R22 := pad:64[mem[#313, el]:u32]
00015c9f: R14 := pad:64[mem[#313 + 4, el]:u32]
00015ca6: R1 := pad:64[28:0[R1].31:29[R1]]
00015cad: R5 := pad:64[31:0[R5] & 31:0[R1]]
00015cb4: R6 := pad:64[31:0[R1] ^ 31:0[R8]]
00015cbb: R5 := pad:64[31:0[R5] ^ 31:0[R9]]
00015cc2: R11 := pad:64[31:0[R22] + 31:0[R9]]
00015cc9: R5 := pad:64[31:0[R5] + 31:0[R4]]
00015cd0: R7 := pad:64[31:0[R7] + 31:0[R2]]
00015cd8: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R7]
00015cdf: R12 := pad:64[31:0[R14] + 31:0[R8]]
00015ce6: R5 := pad:64[24:0[R5].31:25[R5]]
00015ced: R6 := pad:64[31:0[R6] & 31:0[R5]]
00015cf4: R7 := pad:64[31:0[R1] ^ 31:0[R5]]
00015cfb: R6 := pad:64[31:0[R6] ^ 31:0[R8]]
00015d02: R4 := pad:64[mem[R0 + 0x10, el]:u32]
00015d09: R6 := pad:64[31:0[R6] + 31:0[R11]]
00015d10: R24 := pad:64[mem[R0 + 0x20, el]:u32]
00015d16: #314 := R0 + 0x14
00015d1b: R16 := pad:64[mem[#314, el]:u32]
00015d20: R20 := pad:64[mem[#314 + 4, el]:u32]
00015d27: R6 := pad:64[20:0[R6].31:21[R6]]
00015d2e: R7 := pad:64[31:0[R7] & 31:0[R6]]
00015d35: R11 := pad:64[31:0[R5] ^ 31:0[R6]]
00015d3c: R7 := pad:64[31:0[R7] ^ 31:0[R1]]
00015d43: R13 := pad:64[31:0[R5] + 31:0[R16]]
00015d4a: R7 := pad:64[31:0[R7] + 31:0[R12]]
00015d51: R17 := pad:64[31:0[R1] + 31:0[R4]]
00015d58: R15 := pad:64[31:0[R6] + 31:0[R20]]
00015d5f: R12 := pad:64[mem[R0 + 0x1C, el]:u32]
00015d66: R21 := pad:64[mem[R0 + 0x28, el]:u32]
00015d6d: R7 := pad:64[12:0[R7].31:13[R7]]
00015d74: R11 := pad:64[31:0[R11] & 31:0[R7]]
00015d7b: R1 := pad:64[31:0[R6] ^ 31:0[R7]]
00015d82: R5 := pad:64[31:0[R11] ^ 31:0[R5]]
00015d89: R19 := pad:64[31:0[R7] + 31:0[R12]]
00015d90: R5 := pad:64[31:0[R5] + 31:0[R17]]
00015d97: R17 := pad:64[mem[R0 + 0x24, el]:u32]
00015d9e: R23 := pad:64[mem[R0 + 0x30, el]:u32]
00015da5: R5 := pad:64[28:0[R5].31:29[R5]]
00015dac: R1 := pad:64[31:0[R1] & 31:0[R5]]
00015db3: R11 := pad:64[31:0[R7] ^ 31:0[R5]]
00015dba: R1 := pad:64[31:0[R1] ^ 31:0[R6]]
00015dc1: R27 := pad:64[31:0[R5] + 31:0[R24]]
00015dc8: R1 := pad:64[31:0[R1] + 31:0[R13]]
00015dcf: R13 := pad:64[mem[R0 + 0x2C, el]:u32]
00015dd6: R1 := pad:64[24:0[R1].31:25[R1]]
00015ddd: R6 := pad:64[31:0[R11] & 31:0[R1]]
00015de4: R30 := pad:64[31:0[R5] ^ 31:0[R1]]
00015deb: R6 := pad:64[31:0[R6] ^ 31:0[R7]]
00015df2: R11 := pad:64[31:0[R1] + 31:0[R17]]
00015df9: R6 := pad:64[31:0[R6] + 31:0[R15]]
00015e00: R15 := pad:64[mem[R0 + 0x34, el]:u32]
00015e07: R6 := pad:64[20:0[R6].31:21[R6]]
00015e0e: R30 := pad:64[31:0[R30] & 31:0[R6]]
00015e15: R7 := pad:64[31:0[R1] ^ 31:0[R6]]
00015e1c: R5 := pad:64[31:0[R30] ^ 31:0[R5]]
00015e23: R30 := pad:64[31:0[R6] + 31:0[R21]]
00015e2a: R5 := pad:64[31:0[R5] + 31:0[R19]]
00015e31: R5 := pad:64[12:0[R5].31:13[R5]]
00015e38: R7 := pad:64[31:0[R7] & 31:0[R5]]
00015e3f: R1 := pad:64[31:0[R7] ^ 31:0[R1]]
00015e46: R7 := pad:64[31:0[R6] ^ 31:0[R5]]
00015e4d: R1 := pad:64[31:0[R1] + 31:0[R27]]
00015e54: R27 := pad:64[31:0[R5] + 31:0[R13]]
00015e5b: R1 := pad:64[28:0[R1].31:29[R1]]
00015e62: R7 := pad:64[31:0[R7] & 31:0[R1]]
00015e69: R6 := pad:64[31:0[R7] ^ 31:0[R6]]
00015e70: R7 := pad:64[31:0[R5] ^ 31:0[R1]]
00015e77: R6 := pad:64[31:0[R6] + 31:0[R11]]
00015e7e: R11 := pad:64[31:0[R1] + 31:0[R23]]
00015e85: R6 := pad:64[24:0[R6].31:25[R6]]
00015e8c: R7 := pad:64[31:0[R7] & 31:0[R6]]
00015e93: R5 := pad:64[31:0[R7] ^ 31:0[R5]]
00015e9a: R7 := pad:64[31:0[R1] ^ 31:0[R6]]
00015ea1: R5 := pad:64[31:0[R5] + 31:0[R30]]
00015ea8: R30 := pad:64[31:0[R6] + 31:0[R15]]
00015eaf: R5 := pad:64[20:0[R5].31:21[R5]]
00015eb6: R7 := pad:64[31:0[R7] & 31:0[R5]]
00015ebd: R1 := pad:64[31:0[R7] ^ 31:0[R1]]
00015ec4: R7 := pad:64[31:0[R6] ^ 31:0[R5]]
00015ecb: R1 := pad:64[31:0[R1] + 31:0[R27]]
00015ed2: R1 := pad:64[12:0[R1].31:13[R1]]
00015ed9: R7 := pad:64[31:0[R7] & 31:0[R1]]
00015ee0: R7 := pad:64[31:0[R7] ^ 31:0[R6]]
00015ee7: R6 := pad:64[31:0[R5] ^ 31:0[R1]]
00015eee: R7 := pad:64[31:0[R7] + 31:0[R11]]
00015ef4: #315 := R0 + 0x38
00015ef9: R19 := pad:64[mem[#315, el]:u32]
00015efe: R11 := pad:64[mem[#315 + 4, el]:u32]
00015f05: R7 := pad:64[28:0[R7].31:29[R7]]
00015f0c: R6 := pad:64[31:0[R6] & 31:0[R7]]
00015f12: R0 := R0 + 0x40
00015f19: R6 := pad:64[31:0[R6] ^ 31:0[R5]]
00015f20: R27 := pad:64[31:0[R5] + 31:0[R19]]
00015f27: R6 := pad:64[31:0[R6] + 31:0[R30]]
00015f2e: R5 := pad:64[31:0[R1] ^ 31:0[R7]]
00015f35: R30 := pad:64[31:0[R1] + 31:0[R11]]
00015f3c: R6 := pad:64[24:0[R6].31:25[R6]]
00015f43: R5 := pad:64[31:0[R5] & 31:0[R6]]
00015f4a: R5 := pad:64[31:0[R5] ^ 31:0[R1]]
00015f51: R1 := pad:64[31:0[R7] ^ 31:0[R6]]
00015f58: R5 := pad:64[31:0[R5] + 31:0[R27]]
00015f5f: R27 := pad:64[31:0[R4] + 31:0[R3]]
00015f66: R4 := pad:64[31:0[R4] + 31:0[R2]]
00015f6e: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R4]
00015f75: R5 := pad:64[20:0[R5].31:21[R5]]
00015f7c: R4 := pad:64[31:0[R1] & 31:0[R5]]
00015f83: R1 := pad:64[31:0[R6] | 31:0[R5]]
00015f8a: R4 := pad:64[31:0[R4] ^ 31:0[R7]]
00015f91: R4 := pad:64[31:0[R4] + 31:0[R30]]
00015f98: R30 := pad:64[31:0[R6] & 31:0[R5]]
00015f9f: R4 := pad:64[12:0[R4].31:13[R4]]
00015fa6: R1 := pad:64[31:0[R1] & 31:0[R4]]
00015fad: R1 := pad:64[31:0[R1] | 31:0[R30]]
00015fb4: R30 := pad:64[31:0[R5] | 31:0[R4]]
00015fbb: R7 := pad:64[31:0[R1] + 31:0[R7]]
00015fc2: R1 := pad:64[31:0[R5] & 31:0[R4]]
00015fc9: R7 := pad:64[31:0[R7] + 31:0[R28]]
00015fd0: R7 := pad:64[28:0[R7].31:29[R7]]
00015fd7: R28 := pad:64[31:0[R30] & 31:0[R7]]
00015fde: R28 := pad:64[31:0[R28] | 31:0[R1]]
00015fe5: R1 := pad:64[31:0[R4] | 31:0[R7]]
00015fec: R6 := pad:64[31:0[R28] + 31:0[R6]]
00015ff3: R28 := pad:64[31:0[R4] & 31:0[R7]]
00015ffa: R6 := pad:64[31:0[R6] + 31:0[R27]]
00016001: R27 := pad:64[31:0[R24] + 31:0[R3]]
00016008: R24 := pad:64[31:0[R24] + 31:0[R2]]
0001600f: R6 := pad:64[26:0[R6].31:27[R6]]
00016016: R1 := pad:64[31:0[R1] & 31:0[R6]]
0001601d: R1 := pad:64[31:0[R1] | 31:0[R28]]
00016024: R28 := pad:64[31:0[R7] | 31:0[R6]]
0001602b: R1 := pad:64[31:0[R1] + 31:0[R5]]
00016032: R5 := pad:64[31:0[R7] & 31:0[R6]]
00016039: R1 := pad:64[31:0[R1] + 31:0[R27]]
00016040: R27 := pad:64[31:0[R23] + 31:0[R3]]
00016047: R23 := pad:64[31:0[R23] + 31:0[R2]]
0001604e: R1 := pad:64[22:0[R1].31:23[R1]]
00016055: R28 := pad:64[31:0[R28] & 31:0[R1]]
0001605c: R28 := pad:64[31:0[R28] | 31:0[R5]]
00016063: R5 := pad:64[31:0[R6] | 31:0[R1]]
0001606a: R4 := pad:64[31:0[R28] + 31:0[R4]]
00016071: R28 := pad:64[31:0[R6] & 31:0[R1]]
00016078: R4 := pad:64[31:0[R4] + 31:0[R27]]
0001607f: R27 := pad:64[31:0[R18] + 31:0[R3]]
00016086: R18 := pad:64[31:0[R18] + 31:0[R2]]
0001608d: R4 := pad:64[18:0[R4].31:19[R4]]
00016094: R5 := pad:64[31:0[R5] & 31:0[R4]]
0001609b: R5 := pad:64[31:0[R5] | 31:0[R28]]
000160a2: R28 := pad:64[31:0[R1] | 31:0[R4]]
000160a9: R5 := pad:64[31:0[R5] + 31:0[R7]]
000160b0: R7 := pad:64[31:0[R1] & 31:0[R4]]
000160b7: R5 := pad:64[31:0[R5] + 31:0[R27]]
000160be: R27 := pad:64[31:0[R16] + 31:0[R3]]
000160c5: R16 := pad:64[31:0[R16] + 31:0[R2]]
000160cc: R5 := pad:64[28:0[R5].31:29[R5]]
000160d3: R28 := pad:64[31:0[R28] & 31:0[R5]]
000160da: R28 := pad:64[31:0[R28] | 31:0[R7]]
000160e1: R7 := pad:64[31:0[R4] | 31:0[R5]]
000160e8: R6 := pad:64[31:0[R28] + 31:0[R6]]
000160ef: R28 := pad:64[31:0[R4] & 31:0[R5]]
000160f6: R6 := pad:64[31:0[R6] + 31:0[R27]]
000160fd: R27 := pad:64[31:0[R17] + 31:0[R3]]
00016104: R17 := pad:64[31:0[R17] + 31:0[R2]]
0001610b: R6 := pad:64[26:0[R6].31:27[R6]]
00016112: R7 := pad:64[31:0[R7] & 31:0[R6]]
00016119: R7 := pad:64[31:0[R7] | 31:0[R28]]
00016120: R28 := pad:64[31:0[R5] | 31:0[R6]]
00016127: R1 := pad:64[31:0[R7] + 31:0[R1]]
0001612e: R7 := pad:64[31:0[R5] & 31:0[R6]]
00016135: R1 := pad:64[31:0[R1] + 31:0[R27]]
0001613c: R27 := pad:64[31:0[R15] + 31:0[R3]]
00016143: R15 := pad:64[31:0[R15] + 31:0[R2]]
0001614a: R1 := pad:64[22:0[R1].31:23[R1]]
00016151: R28 := pad:64[31:0[R28] & 31:0[R1]]
00016158: R28 := pad:64[31:0[R28] | 31:0[R7]]
0001615f: R7 := pad:64[31:0[R6] | 31:0[R1]]
00016166: R4 := pad:64[31:0[R28] + 31:0[R4]]
0001616d: R28 := pad:64[31:0[R6] & 31:0[R1]]
00016174: R4 := pad:64[31:0[R4] + 31:0[R27]]
0001617b: R27 := pad:64[31:0[R22] + 31:0[R3]]
00016182: R22 := pad:64[31:0[R22] + 31:0[R2]]
00016189: R4 := pad:64[18:0[R4].31:19[R4]]
00016190: R7 := pad:64[31:0[R7] & 31:0[R4]]
00016197: R7 := pad:64[31:0[R7] | 31:0[R28]]
0001619e: R28 := pad:64[31:0[R1] | 31:0[R4]]
000161a5: R5 := pad:64[31:0[R7] + 31:0[R5]]
000161ac: R7 := pad:64[31:0[R1] & 31:0[R4]]
000161b3: R5 := pad:64[31:0[R5] + 31:0[R27]]
000161ba: R27 := pad:64[31:0[R20] + 31:0[R3]]
000161c1: R20 := pad:64[31:0[R20] + 31:0[R2]]
000161c8: R5 := pad:64[28:0[R5].31:29[R5]]
000161cf: R28 := pad:64[31:0[R28] & 31:0[R5]]
000161d6: R28 := pad:64[31:0[R28] | 31:0[R7]]
000161dd: R7 := pad:64[31:0[R4] | 31:0[R5]]
000161e4: R6 := pad:64[31:0[R28] + 31:0[R6]]
000161eb: R28 := pad:64[31:0[R4] & 31:0[R5]]
000161f2: R6 := pad:64[31:0[R6] + 31:0[R27]]
000161f9: R27 := pad:64[31:0[R21] + 31:0[R3]]
00016200: R21 := pad:64[31:0[R21] + 31:0[R2]]
00016207: R6 := pad:64[26:0[R6].31:27[R6]]
0001620e: R7 := pad:64[31:0[R7] & 31:0[R6]]
00016215: R7 := pad:64[31:0[R7] | 31:0[R28]]
0001621c: R28 := pad:64[31:0[R5] | 31:0[R6]]
00016223: R1 := pad:64[31:0[R7] + 31:0[R1]]
0001622a: R7 := pad:64[31:0[R5] & 31:0[R6]]
00016231: R1 := pad:64[31:0[R1] + 31:0[R27]]
00016238: R27 := pad:64[31:0[R19] + 31:0[R3]]
0001623f: R19 := pad:64[31:0[R19] + 31:0[R2]]
00016246: R1 := pad:64[22:0[R1].31:23[R1]]
0001624d: R28 := pad:64[31:0[R28] & 31:0[R1]]
00016254: R28 := pad:64[31:0[R28] | 31:0[R7]]
0001625b: R7 := pad:64[31:0[R6] | 31:0[R1]]
00016262: R4 := pad:64[31:0[R28] + 31:0[R4]]
00016269: R28 := pad:64[31:0[R6] & 31:0[R1]]
00016270: R4 := pad:64[31:0[R4] + 31:0[R27]]
00016277: R27 := pad:64[31:0[R14] + 31:0[R3]]
0001627e: R14 := pad:64[31:0[R14] + 31:0[R2]]
00016285: R4 := pad:64[18:0[R4].31:19[R4]]
0001628c: R7 := pad:64[31:0[R7] & 31:0[R4]]
00016293: R7 := pad:64[31:0[R7] | 31:0[R28]]
0001629a: R28 := pad:64[31:0[R1] | 31:0[R4]]
000162a1: R5 := pad:64[31:0[R7] + 31:0[R5]]
000162a8: R7 := pad:64[31:0[R1] & 31:0[R4]]
000162af: R5 := pad:64[31:0[R5] + 31:0[R27]]
000162b6: R27 := pad:64[31:0[R12] + 31:0[R3]]
000162bd: R12 := pad:64[31:0[R12] + 31:0[R2]]
000162c4: R5 := pad:64[28:0[R5].31:29[R5]]
000162cb: R28 := pad:64[31:0[R28] & 31:0[R5]]
000162d2: R28 := pad:64[31:0[R28] | 31:0[R7]]
000162d9: R7 := pad:64[31:0[R4] | 31:0[R5]]
000162e0: R6 := pad:64[31:0[R28] + 31:0[R6]]
000162e7: R28 := pad:64[31:0[R4] & 31:0[R5]]
000162ee: R6 := pad:64[31:0[R6] + 31:0[R27]]
000162f5: R27 := pad:64[31:0[R13] + 31:0[R3]]
000162fc: R13 := pad:64[31:0[R13] + 31:0[R2]]
00016303: R6 := pad:64[26:0[R6].31:27[R6]]
0001630a: R7 := pad:64[31:0[R7] & 31:0[R6]]
00016311: R7 := pad:64[31:0[R7] | 31:0[R28]]
00016318: R28 := pad:64[31:0[R5] | 31:0[R6]]
0001631f: R1 := pad:64[31:0[R7] + 31:0[R1]]
00016326: R7 := pad:64[31:0[R5] & 31:0[R6]]
0001632d: R1 := pad:64[31:0[R1] + 31:0[R27]]
00016334: R27 := pad:64[31:0[R11] + 31:0[R3]]
0001633b: R11 := pad:64[31:0[R11] + 31:0[R2]]
00016342: R1 := pad:64[22:0[R1].31:23[R1]]
00016349: R28 := pad:64[31:0[R28] & 31:0[R1]]
00016350: R28 := pad:64[31:0[R28] | 31:0[R7]]
00016357: R7 := pad:64[31:0[R6] ^ 31:0[R1]]
0001635e: R28 := pad:64[31:0[R28] + 31:0[R4]]
00016365: R28 := pad:64[31:0[R28] + 31:0[R27]]
0001636c: R27 := pad:64[18:0[R28].31:19[R28]]
00016373: R7 := pad:64[31:0[R7] ^ 31:0[R27]]
0001637a: R4 := pad:64[31:0[R1] ^ 31:0[R27]]
00016381: R7 := pad:64[31:0[R7] + 31:0[R5]]
00016388: R5 := pad:64[mem[R31 + 0x60, el]:u32]
0001638f: R5 := pad:64[31:0[R7] + 31:0[R5]]
00016396: R5 := pad:64[28:0[R5].31:29[R5]]
0001639d: R7 := pad:64[31:0[R4] ^ 31:0[R5]]
000163a4: R28 := pad:64[31:0[R27] ^ 31:0[R5]]
000163ab: R7 := pad:64[31:0[R7] + 31:0[R6]]
000163b2: R7 := pad:64[31:0[R7] + 31:0[R24]]
000163b9: R7 := pad:64[22:0[R7].31:23[R7]]
000163c0: R6 := pad:64[31:0[R28] ^ 31:0[R7]]
000163c7: R4 := pad:64[31:0[R5] ^ 31:0[R7]]
000163ce: R1 := pad:64[31:0[R6] + 31:0[R1]]
000163d5: R6 := pad:64[mem[R31 + 0x64, el]:u32]
000163dc: R1 := pad:64[31:0[R1] + 31:0[R6]]
000163e3: R1 := pad:64[20:0[R1].31:21[R1]]
000163ea: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
000163f1: R6 := pad:64[31:0[R7] ^ 31:0[R1]]
000163f8: R4 := pad:64[31:0[R4] + 31:0[R27]]
000163ff: R4 := pad:64[31:0[R4] + 31:0[R23]]
00016406: R4 := pad:64[16:0[R4].31:17[R4]]
0001640d: R6 := pad:64[31:0[R6] ^ 31:0[R4]]
00016414: R23 := pad:64[31:0[R1] ^ 31:0[R4]]
0001641b: R6 := pad:64[31:0[R6] + 31:0[R5]]
00016422: R6 := pad:64[31:0[R6] + 31:0[R22]]
00016429: R6 := pad:64[28:0[R6].31:29[R6]]
00016430: R5 := pad:64[31:0[R23] ^ 31:0[R6]]
00016437: R22 := pad:64[31:0[R4] ^ 31:0[R6]]
0001643e: R5 := pad:64[31:0[R5] + 31:0[R7]]
00016445: R5 := pad:64[31:0[R5] + 31:0[R21]]
0001644c: R5 := pad:64[22:0[R5].31:23[R5]]
00016453: R21 := pad:64[31:0[R22] ^ 31:0[R5]]
0001645a: R7 := pad:64[31:0[R6] ^ 31:0[R5]]
00016461: R1 := pad:64[31:0[R21] + 31:0[R1]]
00016468: R1 := pad:64[31:0[R1] + 31:0[R20]]
0001646f: R1 := pad:64[20:0[R1].31:21[R1]]
00016476: R20 := pad:64[31:0[R7] ^ 31:0[R1]]
0001647d: R7 := pad:64[31:0[R5] ^ 31:0[R1]]
00016484: R4 := pad:64[31:0[R20] + 31:0[R4]]
0001648b: R4 := pad:64[31:0[R4] + 31:0[R19]]
00016492: R4 := pad:64[16:0[R4].31:17[R4]]
00016499: R19 := pad:64[31:0[R7] ^ 31:0[R4]]
000164a0: R7 := pad:64[31:0[R1] ^ 31:0[R4]]
000164a7: R6 := pad:64[31:0[R19] + 31:0[R6]]
000164ae: R6 := pad:64[31:0[R6] + 31:0[R18]]
000164b5: R6 := pad:64[28:0[R6].31:29[R6]]
000164bc: R18 := pad:64[31:0[R7] ^ 31:0[R6]]
000164c3: R7 := pad:64[31:0[R4] ^ 31:0[R6]]
000164ca: R5 := pad:64[31:0[R18] + 31:0[R5]]
000164d1: R17 := pad:64[31:0[R5] + 31:0[R17]]
000164d8: R17 := pad:64[22:0[R17].31:23[R17]]
000164df: R7 := pad:64[31:0[R7] ^ 31:0[R17]]
000164e6: R5 := pad:64[31:0[R6] ^ 31:0[R17]]
000164ed: R7 := pad:64[31:0[R7] + 31:0[R1]]
000164f4: R7 := pad:64[31:0[R7] + 31:0[R16]]
000164fb: R7 := pad:64[20:0[R7].31:21[R7]]
00016502: R5 := pad:64[31:0[R5] ^ 31:0[R7]]
00016509: R1 := pad:64[31:0[R17] ^ 31:0[R7]]
00016510: R4 := pad:64[31:0[R5] + 31:0[R4]]
00016517: R4 := pad:64[31:0[R4] + 31:0[R15]]
0001651e: R4 := pad:64[16:0[R4].31:17[R4]]
00016525: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0001652c: R5 := pad:64[31:0[R7] ^ 31:0[R4]]
00016533: R1 := pad:64[31:0[R1] + 31:0[R6]]
0001653a: R1 := pad:64[31:0[R1] + 31:0[R14]]
00016541: R1 := pad:64[28:0[R1].31:29[R1]]
00016548: R5 := pad:64[31:0[R5] ^ 31:0[R1]]
0001654f: R6 := pad:64[31:0[R4] ^ 31:0[R1]]
00016556: R5 := pad:64[31:0[R5] + 31:0[R17]]
0001655d: R25 := pad:64[31:0[R25] + 31:0[R1]]
00016564: R5 := pad:64[31:0[R5] + 31:0[R13]]
0001656b: R5 := pad:64[22:0[R5].31:23[R5]]
00016572: R6 := pad:64[31:0[R6] ^ 31:0[R5]]
00016579: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
00016580: R6 := pad:64[31:0[R6] + 31:0[R7]]
00016587: R10 := pad:64[31:0[R10] + 31:0[R5]]
0001658e: R5 := pad:64[31:0[R6] + 31:0[R12]]
00016595: R5 := pad:64[20:0[R5].31:21[R5]]
0001659c: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
000165a3: R9 := pad:64[31:0[R9] + 31:0[R5]]
000165aa: R1 := pad:64[31:0[R1] + 31:0[R4]]
000165b0: #316 := R26 + 8
000165b6: mem := mem with [#316, el]:u32 <- 31:0[R9]
000165bc: mem := mem with [#316 + 4, el]:u32 <- 31:0[R10]
000165c3: R1 := pad:64[31:0[R1] + 31:0[R11]]
000165ca: R1 := pad:64[16:0[R1].31:17[R1]]
000165d1: R8 := pad:64[31:0[R8] + 31:0[R1]]
000165d9: mem := mem with [R26, el]:u32 <- 31:0[R25]
000165df: mem := mem with [R26 + 4, el]:u32 <- 31:0[R8]
000165e6: R1 := mem[R31 + 0x68, el]:u64
000165ec: #317 := ~R0
000165f1: #318 := R1 + ~R0
000165f7: VF := extend:128[#318 + 1] <> extend:128[R1] + extend:128[#317] + 1
000165fd: CF := pad:128[#318 + 1] <> pad:128[R1] + pad:128[#317] + 1
00016601: ZF := #318 + 1 = 0
00016605: NF := 63:63[#318 + 1]
0001660b: when CF & ~ZF goto %00015c4d
0003480e: goto %0001660f

0001660f:
00016613: #319 := R31 + 0x10
00016618: R19 := mem[#319, el]:u64
0001661d: R20 := mem[#319 + 8, el]:u64
00016623: #320 := R31 + 0x20
00016628: R21 := mem[#320, el]:u64
0001662d: R22 := mem[#320 + 8, el]:u64
00016633: #321 := R31 + 0x30
00016638: R23 := mem[#321, el]:u64
0001663d: R24 := mem[#321 + 8, el]:u64
00016643: #322 := R31 + 0x40
00016648: R25 := mem[#322, el]:u64
0001664d: R26 := mem[#322 + 8, el]:u64
00016653: #323 := R31 + 0x50
00016658: R27 := mem[#323, el]:u64
0001665d: R28 := mem[#323 + 8, el]:u64
0003480f: goto %0001261b

0001261b:
00012625: R29 := mem[R31, el]:u64
0001262a: R30 := mem[R31 + 8, el]:u64
0001262e: R31 := R31 + 0x70
00012633: call R30 with noreturn

00034810: sub md4_process_bytes(md4_process_bytes_result)
00034bfc: md4_process_bytes_result :: out u32 = low:32[R0]

0001288b:
0001288f: #146 := R31 - 0x50
00012895: mem := mem with [#146, el]:u64 <- R29
0001289b: mem := mem with [#146 + 8, el]:u64 <- R30
0001289f: R31 := #146
000128a5: R29 := R31
000128ab: #147 := R31 + 0x10
000128b1: mem := mem with [#147, el]:u64 <- R19
000128b7: mem := mem with [#147 + 8, el]:u64 <- R20
000128bd: R19 := R0
000128c4: R0 := pad:64[mem[R2 + 0x18, el]:u32]
000128ca: #148 := R31 + 0x20
000128d0: mem := mem with [#148, el]:u64 <- R21
000128d6: mem := mem with [#148 + 8, el]:u64 <- R22
000128dc: R21 := R2
000128e2: R22 := R1
000128e8: when 31:0[R0] <> 0 goto %000128e6
00034811: goto %00012a16

000128e6:
000128ef: #149 := R31 + 0x30
000128f5: mem := mem with [#149, el]:u64 <- R23
000128fb: mem := mem with [#149 + 8, el]:u64 <- R24
00012901: R23 := pad:64[31:0[R0]]
00012906: R24 := 0x80
0001290d: R24 := R24 + ~R23 + 1
00012913: R20 := R2 + 0x1C
00012919: #150 := ~R1
0001291e: #151 := R24 + ~R1
00012924: VF := extend:128[#151 + 1] <> extend:128[R24] + extend:128[#150] +
          1
0001292a: CF := pad:128[#151 + 1] <> pad:128[R24] + pad:128[#150] + 1
0001292e: ZF := #151 + 1 = 0
00012932: NF := 63:63[#151 + 1]
00012939: R0 := R20 + R23
00012948: when ~(CF & ~ZF) goto %00012940
00012949: goto %00012944

00012944:
00012945: R24 := R1
0001294b: goto %00012947

00012940:
00012941: R24 := R24
0001294a: goto %00012947

00012947:
00012951: R1 := R19
00012957: R2 := R24
0001295f: mem := mem with [R31 + 0x40, el]:u64 <- R25
00012964: R30 := 0x411034
00012966: call @memcpy with return %00012968

00012968:
0001296d: R25 := pad:64[mem[R21 + 0x18, el]:u32]
00012974: R25 := pad:64[31:0[R25] + 31:0[R24]]
0001297c: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R25]
00012982: #152 := 31:0[R25] - 0x40
00012987: VF := extend:64[#152] <> extend:64[31:0[R25]] - 0x40
0001298c: CF := pad:64[#152] <> pad:64[31:0[R25]] + 0xFFFFFFC0
00012990: ZF := #152 = 0
00012994: NF := 31:31[#152]
0001299b: when CF & ~ZF goto %00012999
00034812: goto %000129ed

00012999:
000129a2: R2 := R21
000129a8: R1 := pad:64[31:6[R25].0]
000129ae: R0 := R20
000129b3: R30 := 0x4110B8
000129b5: call @md4_process_block with return %000129b7

000129b7:
000129bc: R0 := R23 + R24
000129c2: R2 := pad:64[5:0[R25]]
000129ca: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
000129d0: R1 := 63:6[R0].0
000129d7: R1 := R20 + R1
000129dd: R0 := R20
000129e3: R2 := pad:64[5:0[R2]]
000129e8: R30 := 0x4110D8
000129ea: call @memcpy with return %000129ec

000129ec:
000129ef: goto %000129ed

000129ed:
000129f5: R25 := mem[R31 + 0x40, el]:u64
000129fc: R19 := R19 + R24
00012a03: R22 := R22 + ~R24 + 1
00012a09: #153 := R31 + 0x30
00012a0e: R23 := mem[#153, el]:u64
00012a13: R24 := mem[#153 + 8, el]:u64
00012a18: goto %00012a16

00012a16:
00012a1d: #154 := R22 - 0x3F
00012a22: VF := extend:128[#154] <> extend:128[R22] - 0x3F
00012a27: CF := pad:128[#154] <> pad:128[R22] + 0xFFFFFFFFFFFFFFC1
00012a2b: ZF := #154 = 0
00012a2f: NF := 63:63[#154]
00012a36: when ~(CF & ~ZF) goto %00012a34
00034813: goto %00015a71

00015a71:
00015a74: VF := 0
00015a77: CF := 0
00015a7b: ZF := pad:64[1:0[R19]] = 0
00015a7e: NF := 0
00015a83: when ZF goto %00012b32
00034814: goto %00015a87

00012b32:
00012b36: R20 := 63:6[R22].0
00012b3c: R0 := R19
00012b42: R22 := pad:64[5:0[R22]]
00012b49: R19 := R19 + R20
00012b4f: R2 := R21
00012b55: R1 := R20
00012b5a: R30 := 0x410FF0
00012b5c: call @md4_process_block with return %00012a34

00012a34:
00012a3d: when R22 <> 0 goto %00012a3b
00034815: goto %00015a3c

00012a3b:
00012a44: R20 := R21 + 0x1C
00012a4a: #155 := R31 + 0x30
00012a50: mem := mem with [#155, el]:u64 <- R23
00012a56: mem := mem with [#155 + 8, el]:u64 <- R24
00012a5c: R23 := R19
00012a61: goto %00012a5f

00015a3c:
00015a40: #298 := R31 + 0x10
00015a45: R19 := mem[#298, el]:u64
00015a4a: R20 := mem[#298 + 8, el]:u64
00015a50: #299 := R31 + 0x20
00015a55: R21 := mem[#299, el]:u64
00015a5a: R22 := mem[#299 + 8, el]:u64
00015a61: R29 := mem[R31, el]:u64
00015a66: R30 := mem[R31 + 8, el]:u64
00015a6a: R31 := R31 + 0x50
00015a6f: call R30 with noreturn

00015a87:
00015a8b: #300 := R22 - 0x40
00015a90: VF := extend:128[#300] <> extend:128[R22] - 0x40
00015a95: CF := pad:128[#300] <> pad:128[R22] + 0xFFFFFFFFFFFFFFC0
00015a99: ZF := #300 = 0
00015a9d: NF := 63:63[#300]
00015aa3: when ZF goto %00015aa1
00034816: goto %00015afc

00015aa1:
00015aab: R22 := pad:64[mem[R21 + 0x18, el]:u32]
00015ab1: R20 := R21 + 0x1C
00015ab8: V0 := mem[R19, el]:u128
00015abd: V1 := mem[R19 + 0x10, el]:u128
00015ac4: R0 := R20 + R22
00015aca: R22 := R22 + 0x40
00015ad2: mem := mem with [R0, el]:u128 <- V0
00015ad8: mem := mem with [R0 + 0x10, el]:u128 <- V1
00015ade: #301 := R19 + 0x20
00015ae3: V0 := mem[#301, el]:u128
00015ae8: V1 := mem[#301 + 0x10, el]:u128
00015aee: #302 := R0 + 0x20
00015af4: mem := mem with [#302, el]:u128 <- V0
00015afa: mem := mem with [#302 + 0x10, el]:u128 <- V1
00034817: goto %00012ab5

00015afc:
00015b00: #303 := R31 + 0x30
00015b06: mem := mem with [#303, el]:u64 <- R23
00015b0c: mem := mem with [#303 + 8, el]:u64 <- R24
00015b12: R24 := R22 - 0x41
00015b18: R20 := R21 + 0x1C
00015b1e: R24 := pad:64[63:6[R24]]
00015b24: R23 := R24 + 1
00015b2b: R23 := R19 + (57:0[R23].0)
00034818: goto %00015b2f

00015b2f:
00015b34: V0 := mem[R19, el]:u128
00015b39: V1 := mem[R19 + 0x10, el]:u128
00015b3f: R2 := R21
00015b45: R0 := R20
00015b4a: R1 := 0x40
00015b52: mem := mem with [R20, el]:u128 <- V0
00015b58: mem := mem with [R20 + 0x10, el]:u128 <- V1
00015b5e: #304 := R19 + 0x20
00015b63: V0 := mem[#304, el]:u128
00015b68: V1 := mem[#304 + 0x10, el]:u128
00015b6e: R19 := R19 + 0x40
00015b74: #305 := R20 + 0x20
00015b7a: mem := mem with [#305, el]:u128 <- V0
00015b80: mem := mem with [#305 + 0x10, el]:u128 <- V1
00015b85: R30 := 0x410F8C
00015b87: call @md4_process_block with return %00015b89

00015b89:
00015b8d: #306 := ~R23
00015b92: #307 := R19 + ~R23
00015b98: VF := extend:128[#307 + 1] <> extend:128[R19] + extend:128[#306] +
          1
00015b9e: CF := pad:128[#307 + 1] <> pad:128[R19] + pad:128[#306] + 1
00015ba2: ZF := #307 + 1 = 0
00015ba6: NF := 63:63[#307 + 1]
00015bab: when ZF <> 1 goto %00015b2f
00034819: goto %00015baf

00015baf:
00015bb3: R22 := R22 - 0x40
00015bba: R22 := R22 + ~(57:0[R24].0) + 1
0003481a: goto %00012a5f

00012a5f:
00012a67: R19 := pad:64[mem[R21 + 0x18, el]:u32]
00012a6d: R1 := R23
00012a73: R2 := R22
00012a7a: R0 := R20 + R19
00012a81: R22 := R19 + R22
00012a86: R30 := 0x410FB4
00012a88: call @memcpy with return %00012a8a

00012a8a:
00012a8e: #156 := R31 + 0x30
00012a93: R23 := mem[#156, el]:u64
00012a98: R24 := mem[#156 + 8, el]:u64
00012a9e: #157 := R22 - 0x3F
00012aa3: VF := extend:128[#157] <> extend:128[R22] - 0x3F
00012aa8: CF := pad:128[#157] <> pad:128[R22] + 0xFFFFFFFFFFFFFFC1
00012aac: ZF := #157 = 0
00012ab0: NF := 63:63[#157]
00012ab7: when CF & ~ZF goto %00012ab5
0003481b: goto %00012b5e

00012ab5:
00012abe: R2 := R21
00012ac4: R0 := R20
00012aca: R22 := R22 - 0x40
00012acf: R1 := 0x40
00012ad4: R30 := 0x411090
00012ad6: call @md4_process_block with return %00012ad8

00012ad8:
00012adc: R0 := R20
00012ae2: R2 := R22
00012ae8: R1 := R21 + 0x5C
00012aed: R30 := 0x4110A0
00012aef: call @memcpy with return %00012af1

00012af1:
00012af7: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R22]
00012afc: goto %00012afa

00012b5e:
00012b64: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R22]
0003481c: goto %00012afa

00012afa:
00012b01: #158 := R31 + 0x10
00012b06: R19 := mem[#158, el]:u64
00012b0b: R20 := mem[#158 + 8, el]:u64
00012b11: #159 := R31 + 0x20
00012b16: R21 := mem[#159, el]:u64
00012b1b: R22 := mem[#159 + 8, el]:u64
00012b22: R29 := mem[R31, el]:u64
00012b27: R30 := mem[R31 + 8, el]:u64
00012b2b: R31 := R31 + 0x50
00012b30: call R30 with noreturn

0003481d: sub md4_read_ctx(md4_read_ctx_result)
00034bfd: md4_read_ctx_result :: out u32 = low:32[R0]

0001265e:
00012662: R2 := R0
00012668: R0 := R1
0001266f: R1 := pad:64[mem[R2, el]:u32]
00012677: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001267e: R1 := pad:64[mem[R2 + 4, el]:u32]
00012686: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
0001268d: R1 := pad:64[mem[R2 + 8, el]:u32]
00012695: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
0001269c: R1 := pad:64[mem[R2 + 0xC, el]:u32]
000126a4: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
000126a9: call R30 with noreturn

0003481e: sub md4_stream(md4_stream_result)
00034bfe: md4_stream_result :: out u32 = low:32[R0]

00012b68:
00012b6b: R12 := 0x1120
00012b72: R31 := R31 + ~R12 + 1
00012b77: R2 := 0x416000
00012b7f: mem := mem with [R31, el]:u64 <- R29
00012b85: mem := mem with [R31 + 8, el]:u64 <- R30
00012b8b: R29 := R31
00012b92: V0 := mem[R2 + 0x3A0, el]:u128
00012b98: #160 := R31 + 0x10
00012b9e: mem := mem with [#160, el]:u64 <- R19
00012ba4: mem := mem with [#160 + 8, el]:u64 <- R20
00012baa: R20 := R0
00012bb0: #161 := R31 + 0x20
00012bb6: mem := mem with [#161, el]:u64 <- R21
00012bbc: mem := mem with [#161 + 8, el]:u64 <- R22
00012bc2: R22 := R1
00012bc7: R21 := 0x1000
00012bce: mem := mem with [R31 + 0x40, el]:u64 <- 0
00012bd5: mem := mem with [R31 + 0x48, el]:u32 <- 0
00012bdd: mem := mem with [R31 + 0x30, el]:u128 <- V0
0003481f: goto %00012bdf

00012bdf:
00012be2: R19 := 0
00012be7: goto %00012be5

00012be5:
00012bed: R2 := R21 + ~R19 + 1
00012bf3: R0 := R31 + 0xD8
00012bfa: R0 := R0 + R19
00012c00: R3 := R20
00012c05: R1 := 1
00012c0a: R30 := 0x411154
00012c0d: call @fread with return %00012c0f

00012c0f:
00012c13: R2 := R0
00012c19: R0 := R20
00012c20: R19 := R19 + R2
00012c26: #162 := R19 - 0x1000
00012c2b: VF := extend:128[#162] <> extend:128[R19] - 0x1000
00012c30: CF := pad:128[#162] <> pad:128[R19] + 0xFFFFFFFFFFFFF000
00012c34: ZF := #162 = 0
00012c38: NF := 63:63[#162]
00012c3e: when ZF <> 1 goto %00012c3c
00034820: goto %00015a1f

00015a1f:
00015a23: R1 := R19
00015a29: R2 := R31 + 0x30
00015a2f: R0 := R31 + 0xD8
00015a34: R30 := 0x411178
00015a36: call @md4_process_block with return %00015a38

00015a38:
00015a3a: goto %00012bdf

00012c3c:
00012c45: when R2 = 0 goto %00012c43
00034821: goto %00015a11

00012c43:
00012c4b: R30 := 0x411180
00012c4e: call @ferror with return %00012c50

00012c50:
00012c54: R1 := pad:64[31:0[R0]]
00012c59: R0 := 1
00012c5f: when 31:0[R1] <> 0 goto %00012c5d
00034822: goto %00015a0a

00015a11:
00015a14: R30 := 0x411138
00015a16: call @feof with return %00015a18

00015a18:
00015a1b: when 31:0[R0] <> 0 goto %00015a0a
00034823: goto %00012be5

00015a0a:
00015a0d: when R19 <> 0 goto %00012c9f
00034824: goto %00012cb9

00012c9f:
00012ca3: R1 := R19
00012ca9: R0 := R31 + 0xD8
00012caf: R2 := R31 + 0x30
00012cb4: R30 := 0x4111C8
00012cb6: call @md4_process_bytes with return %00012cb8

00012cb8:
00012cbb: goto %00012cb9

00012cb9:
00012cc0: R1 := R22
00012cc6: R0 := R31 + 0x30
00012ccb: R30 := 0x41119C
00012ccd: call @md4_finish_ctx with return %00012ccf

00012ccf:
00012cd2: R0 := 0
00034825: goto %00012c5d

00012c5d:
00012c67: R29 := mem[R31, el]:u64
00012c6c: R30 := mem[R31 + 8, el]:u64
00012c71: R12 := 0x1120
00012c77: #163 := R31 + 0x10
00012c7c: R19 := mem[#163, el]:u64
00012c81: R20 := mem[#163 + 8, el]:u64
00012c87: #164 := R31 + 0x20
00012c8c: R21 := mem[#164, el]:u64
00012c91: R22 := mem[#164 + 8, el]:u64
00012c98: R31 := R31 + R12
00012c9d: call R30 with noreturn

00034826: sub md5_buffer(md5_buffer_result)
00034bff: md5_buffer_result :: out u32 = low:32[R0]

00014042:
00014046: #247 := R31 - 0xC0
0001404c: mem := mem with [#247, el]:u64 <- R29
00014052: mem := mem with [#247 + 8, el]:u64 <- R30
00014056: R31 := #247
0001405b: R3 := 0x416000
00014061: R29 := R31
00014068: V0 := mem[R3 + 0x3A0, el]:u128
0001406e: #248 := R31 + 0x10
00014074: mem := mem with [#248, el]:u64 <- R19
0001407a: mem := mem with [#248 + 8, el]:u64 <- R20
00014080: R19 := R2
00014086: R2 := R31 + 0x20
0001408d: mem := mem with [R31 + 0x30, el]:u64 <- 0
00014095: mem := mem with [R31 + 0x20, el]:u128 <- V0
0001409a: R20 := 0x80
000140a1: mem := mem with [R31 + 0x38, el]:u32 <- 0
000140a6: R30 := 0x4127A0
000140a8: call @md5_process_bytes with return %000140aa

000140aa:
000140af: R0 := pad:64[mem[R31 + 0x38, el]:u32]
000140b4: R1 := 0x40
000140ba: #249 := R31 + 0x30
000140bf: R3 := pad:64[mem[#249, el]:u32]
000140c4: R6 := pad:64[mem[#249 + 4, el]:u32]
000140ca: #250 := 31:0[R0] - 0x37
000140cf: VF := extend:64[#250] <> extend:64[31:0[R0]] - 0x37
000140d4: CF := pad:64[#250] <> pad:64[31:0[R0]] + 0xFFFFFFC9
000140d8: ZF := #250 = 0
000140dc: NF := 31:31[#250]
000140eb: when CF & ~ZF goto %000140e3
000140ec: goto %000140e7

000140e7:
000140e8: R20 := R1
000140ee: goto %000140ea

000140e3:
000140e4: R20 := R20
000140ed: goto %000140ea

000140ea:
000140f3: R1 := 0x38
000140f8: R2 := 0x78
00014107: when CF & ~ZF goto %000140ff
00014108: goto %00014103

00014103:
00014104: R2 := R1
0001410a: goto %00014106

000140ff:
00014100: R2 := R2
00014109: goto %00014106

00014106:
0001410f: R1 := 0xF
00014114: R4 := 0x1F
00014119: R5 := 0x1E
00014128: when CF & ~ZF goto %00014120
00014129: goto %00014124

00014124:
00014125: R4 := R1
0001412b: goto %00014127

00014120:
00014121: R4 := R4
0001412a: goto %00014127

00014127:
00014130: R1 := 0xE
0001413f: when CF & ~ZF goto %00014137
00014140: goto %0001413b

0001413b:
0001413c: R5 := R1
00014142: goto %0001413e

00014137:
00014138: R5 := R5
00014141: goto %0001413e

0001413e:
00014149: #251 := 31:0[R0] + 31:0[R3]
0001414e: #252 := pad:64[31:0[R0] + 31:0[R3]]
00014154: VF := extend:64[#251] <> extend:64[31:0[R0]] + extend:64[31:0[R3]]
0001415a: CF := #252 <> pad:64[31:0[R0]] + pad:64[31:0[R3]]
0001415e: ZF := #251 = 0
00014162: NF := 31:31[#251]
00014166: R3 := #252
0001416e: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R3]
00014174: when CF <> 1 goto %00014172
00034827: goto %0001422d

0001422d:
00014231: R6 := pad:64[31:0[R6] + 1]
00014239: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R6]
00034828: goto %00014172

00014172:
0001417b: R7 := R31 + 0x2C
00014181: R5 := R5 + 4
00014187: R8 := pad:64[28:0[R3].0]
0001418e: R6 := pad:64[28:0[R6].31:29[R3]]
00014194: R4 := R4 + 4
0001419a: R3 := R31 + 0x3C
000141a0: R0 := pad:64[31:0[R0]]
000141a5: R1 := 0x416000
000141ab: R1 := R1 + 0x810
000141b4: mem := mem with [R7 + (61:0[R5].0), el]:u32 <- 31:0[R8]
000141bb: R2 := R2 + ~R0 + 1
000141c1: R1 := R1 + 0xA90
000141c8: R0 := R3 + R0
000141d1: mem := mem with [R7 + (61:0[R4].0), el]:u32 <- 31:0[R6]
000141d6: R30 := 0x412828
000141d8: call @memcpy with return %000141da

000141da:
000141de: R2 := R31 + 0x20
000141e4: R1 := R20
000141ea: R0 := R31 + 0x3C
000141ef: R30 := 0x412838
000141f1: call @md5_process_block with return %000141f3

000141f3:
000141f8: V0 := mem[R31 + 0x20, el]:u128
000141fe: R0 := R19
00014206: mem := mem with [R19, el]:u128 <- V0
0001420c: #253 := R31 + 0x10
00014211: R19 := mem[#253, el]:u64
00014216: R20 := mem[#253 + 8, el]:u64
0001421d: R29 := mem[R31, el]:u64
00014222: R30 := mem[R31 + 8, el]:u64
00014226: R31 := R31 + 0xC0
0001422b: call R30 with noreturn

00034829: sub md5_finish_ctx(md5_finish_ctx_result)
00034c00: md5_finish_ctx_result :: out u32 = low:32[R0]

000132e0:
000132e4: #192 := R31 - 0x30
000132ea: mem := mem with [#192, el]:u64 <- R29
000132f0: mem := mem with [#192 + 8, el]:u64 <- R30
000132f4: R31 := #192
000132f9: R6 := 0xE
000132fe: R5 := 0x1E
00013304: R29 := R31
0001330a: #193 := R31 + 0x10
00013310: mem := mem with [#193, el]:u64 <- R19
00013316: mem := mem with [#193 + 8, el]:u64 <- R20
0001331c: R19 := R0
00013323: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00013329: #194 := R31 + 0x20
0001332f: mem := mem with [#194, el]:u64 <- R21
00013335: mem := mem with [#194 + 8, el]:u64 <- R22
0001333a: R9 := 0x40
00013340: #195 := 31:0[R0] - 0x37
00013345: VF := extend:64[#195] <> extend:64[31:0[R0]] - 0x37
0001334a: CF := pad:64[#195] <> pad:64[31:0[R0]] + 0xFFFFFFC9
0001334e: ZF := #195 = 0
00013352: NF := 31:31[#195]
00013361: when CF & ~ZF goto %00013359
00013362: goto %0001335d

0001335d:
0001335e: R5 := R6
00013364: goto %00013360

00013359:
0001335a: R5 := R5
00013363: goto %00013360

00013360:
00013369: R21 := 0x80
0001336f: #196 := R19 + 0x10
00013374: R3 := pad:64[mem[#196, el]:u32]
00013379: R6 := pad:64[mem[#196 + 4, el]:u32]
00013388: when CF & ~ZF goto %00013380
00013389: goto %00013384

00013384:
00013385: R21 := R9
0001338b: goto %00013387

00013380:
00013381: R21 := R21
0001338a: goto %00013387

00013387:
00013390: R2 := 0x78
00013395: R8 := 0x38
0001339a: R4 := 0x1F
000133a9: when CF & ~ZF goto %000133a1
000133aa: goto %000133a5

000133a5:
000133a6: R2 := R8
000133ac: goto %000133a8

000133a1:
000133a2: R2 := R2
000133ab: goto %000133a8

000133a8:
000133b1: R7 := 0xF
000133c0: when CF & ~ZF goto %000133b8
000133c1: goto %000133bc

000133bc:
000133bd: R4 := R7
000133c3: goto %000133bf

000133b8:
000133b9: R4 := R4
000133c2: goto %000133bf

000133bf:
000133ca: #197 := 31:0[R3] + 31:0[R0]
000133cf: #198 := pad:64[31:0[R3] + 31:0[R0]]
000133d5: VF := extend:64[#197] <> extend:64[31:0[R3]] + extend:64[31:0[R0]]
000133db: CF := #198 <> pad:64[31:0[R3]] + pad:64[31:0[R0]]
000133df: ZF := #197 = 0
000133e3: NF := 31:31[#197]
000133e7: R3 := #198
000133ef: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R3]
000133f5: R20 := R1
000133fb: when CF <> 1 goto %000133f9
0003482a: goto %00014794

00014794:
00014798: R6 := pad:64[31:0[R6] + 1]
000147a0: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R6]
0003482b: goto %000133f9

000133f9:
00013403: R5 := R19 + (61:0[R5].0)
0001340a: R4 := R19 + (61:0[R4].0)
00013410: R7 := pad:64[28:0[R3].0]
00013417: R6 := pad:64[28:0[R6].31:29[R3]]
0001341d: R22 := R19 + 0x1C
00013423: R0 := pad:64[31:0[R0]]
0001342b: mem := mem with [R5 + 0x1C, el]:u32 <- 31:0[R7]
00013430: R1 := 0x416000
00013438: mem := mem with [R4 + 0x1C, el]:u32 <- 31:0[R6]
0001343e: R1 := R1 + 0x810
00013445: R2 := R2 + ~R0 + 1
0001344b: R1 := R1 + 0xA90
00013452: R0 := R22 + R0
00013457: R30 := 0x411F80
00013459: call @memcpy with return %0001345b

0001345b:
0001345f: R2 := R19
00013465: R1 := R21
0001346b: R0 := R22
00013470: R30 := 0x411F90
00013472: call @md5_process_block with return %00013474

00013474:
00013479: R1 := pad:64[mem[R19, el]:u32]
0001347f: R0 := R20
00013485: #199 := R31 + 0x20
0001348a: R21 := mem[#199, el]:u64
0001348f: R22 := mem[#199 + 8, el]:u64
00013497: mem := mem with [R20, el]:u32 <- 31:0[R1]
0001349e: R1 := pad:64[mem[R19 + 4, el]:u32]
000134a6: mem := mem with [R20 + 4, el]:u32 <- 31:0[R1]
000134ad: R1 := pad:64[mem[R19 + 8, el]:u32]
000134b5: mem := mem with [R20 + 8, el]:u32 <- 31:0[R1]
000134bc: R1 := pad:64[mem[R19 + 0xC, el]:u32]
000134c4: mem := mem with [R20 + 0xC, el]:u32 <- 31:0[R1]
000134ca: #200 := R31 + 0x10
000134cf: R19 := mem[#200, el]:u64
000134d4: R20 := mem[#200 + 8, el]:u64
000134db: R29 := mem[R31, el]:u64
000134e0: R30 := mem[R31 + 8, el]:u64
000134e4: R31 := R31 + 0x30
000134e9: call R30 with noreturn

0003482c: sub md5_init_ctx(md5_init_ctx_result)
00034c01: md5_init_ctx_result :: out u32 = low:32[R0]

00013163:
00013166: R1 := 0x416000
0001316d: mem := mem with [R0 + 0x10, el]:u64 <- 0
00013174: mem := mem with [R0 + 0x18, el]:u32 <- 0
0001317b: V0 := mem[R1 + 0x3A0, el]:u128
00013183: mem := mem with [R0, el]:u128 <- V0
00013188: call R30 with noreturn

0003482d: sub md5_process_block(md5_process_block_result)
00034c02: md5_process_block_result :: out u32 = low:32[R0]

000131dd:
000131e1: #183 := R31 - 0x70
000131e7: mem := mem with [#183, el]:u64 <- R29
000131ed: mem := mem with [#183 + 8, el]:u64 <- R30
000131f1: R31 := #183
000131f7: R4 := 63:2[R1].0
000131fe: R4 := R0 + R4
00013204: R29 := R31
0001320b: R3 := pad:64[mem[R2 + 0x10, el]:u32]
00013211: #184 := R31 + 0x40
00013217: mem := mem with [#184, el]:u64 <- R25
0001321d: mem := mem with [#184 + 8, el]:u64 <- R26
00013224: R3 := pad:64[31:0[R3] + 31:0[R1]]
0001322c: mem := mem with [R2 + 0x10, el]:u32 <- 31:0[R3]
00013233: R26 := pad:64[mem[R2, el]:u32]
00013238: R8 := pad:64[mem[R2 + 4, el]:u32]
0001323e: #185 := R2 + 8
00013243: R9 := pad:64[mem[#185, el]:u32]
00013248: R10 := pad:64[mem[#185 + 4, el]:u32]
0001324e: #186 := pad:64[31:0[R3]]
00013253: #187 := R1 + ~pad:64[31:0[R3]]
00013259: VF := extend:128[#187 + 1] <> extend:128[R1] + extend:128[~#186] +
          1
0001325f: CF := pad:128[#187 + 1] <> pad:128[R1] + pad:128[~#186] + 1
00013263: ZF := #187 + 1 = 0
00013267: NF := 63:63[#187 + 1]
0001326e: when ~(CF & ~ZF) goto %0001326c
0003482e: goto %000158cb

000158cb:
000158d0: R1 := pad:64[mem[R2 + 0x14, el]:u32]
000158d6: R1 := pad:64[31:0[R1] + 1]
000158de: mem := mem with [R2 + 0x14, el]:u32 <- 31:0[R1]
0003482f: goto %0001326c

0001326c:
00013275: #188 := ~R4
0001327a: #189 := R0 + ~R4
00013280: VF := extend:128[#189 + 1] <> extend:128[R0] + extend:128[#188] + 1
00013286: CF := pad:128[#189 + 1] <> pad:128[R0] + pad:128[#188] + 1
0001328a: ZF := #189 + 1 = 0
0001328e: NF := 63:63[#189 + 1]
00013294: when CF goto %00013292
00034830: goto %000147a2

000147a2:
000147a6: #275 := R31 + 0x50
000147ac: mem := mem with [#275, el]:u64 <- R27
000147b2: mem := mem with [#275 + 8, el]:u64 <- R28
000147b8: R27 := R4
000147be: #276 := R31 + 0x10
000147c4: mem := mem with [#276, el]:u64 <- R19
000147ca: mem := mem with [#276 + 8, el]:u64 <- R20
000147d0: #277 := R31 + 0x20
000147d6: mem := mem with [#277, el]:u64 <- R21
000147dc: mem := mem with [#277 + 8, el]:u64 <- R22
000147e2: #278 := R31 + 0x30
000147e8: mem := mem with [#278, el]:u64 <- R23
000147ee: mem := mem with [#278 + 8, el]:u64 <- R24
000147f6: mem := mem with [R31 + 0x68, el]:u64 <- R2
00034831: goto %000147fa

000147fa:
000147ff: R25 := pad:64[mem[R0, el]:u32]
00014804: R19 := pad:64[mem[R0 + 4, el]:u32]
0001480b: R5 := pad:64[31:0[R9] ^ 31:0[R10]]
00014812: R5 := pad:64[31:0[R5] & 31:0[R8]]
00014817: R1 := 0xA478
0001481e: R5 := pad:64[31:0[R5] ^ 31:0[R10]]
00014824: R1 := pad:64[0xD76A.15:0[R1]]
0001482b: R5 := pad:64[31:0[R5] + 31:0[R25]]
00014832: R1 := pad:64[31:0[R26] + 31:0[R1]]
00014839: R5 := pad:64[31:0[R5] + 31:0[R1]]
00014840: R3 := pad:64[31:0[R8] ^ 31:0[R9]]
00014845: R1 := 0xB756
0001484a: R2 := 0x70DB
00014850: R1 := pad:64[0xE8C7.15:0[R1]]
00014857: R5 := pad:64[24:0[R5].31:25[R5]]
0001485e: R5 := pad:64[31:0[R5] + 31:0[R8]]
00014865: R1 := pad:64[31:0[R10] + 31:0[R1]]
0001486c: R3 := pad:64[31:0[R3] & 31:0[R5]]
00014873: R21 := pad:64[31:0[R5] ^ 31:0[R8]]
0001487a: R3 := pad:64[31:0[R3] ^ 31:0[R9]]
00014880: R2 := pad:64[0x2420.15:0[R2]]
00014887: R3 := pad:64[31:0[R3] + 31:0[R19]]
0001488e: R2 := pad:64[31:0[R9] + 31:0[R2]]
00014895: R3 := pad:64[31:0[R3] + 31:0[R1]]
0001489a: R1 := 0xFAF
000148a0: #279 := R0 + 8
000148a5: R12 := pad:64[mem[#279, el]:u32]
000148aa: R20 := pad:64[mem[#279 + 4, el]:u32]
000148b1: R3 := pad:64[19:0[R3].31:20[R3]]
000148b8: R3 := pad:64[31:0[R5] + 31:0[R3]]
000148be: R1 := pad:64[0xF57C.15:0[R1]]
000148c5: R21 := pad:64[31:0[R21] & 31:0[R3]]
000148ca: R4 := 0xCEEE
000148d0: #280 := R0 + 0x10
000148d5: R14 := pad:64[mem[#280, el]:u32]
000148da: R22 := pad:64[mem[#280 + 4, el]:u32]
000148e1: R21 := pad:64[31:0[R21] ^ 31:0[R8]]
000148e8: R21 := pad:64[31:0[R21] + 31:0[R12]]
000148ee: R4 := pad:64[0xC1BD.15:0[R4]]
000148f5: R21 := pad:64[31:0[R21] + 31:0[R2]]
000148fc: R15 := pad:64[31:0[R14] + 31:0[R1]]
00014901: R1 := 0xC62A
00014908: R13 := pad:64[31:0[R8] + 31:0[R4]]
0001490e: R1 := pad:64[0x4787.15:0[R1]]
00014915: R21 := pad:64[14:0[R21].31:15[R21]]
0001491c: R21 := pad:64[31:0[R3] + 31:0[R21]]
00014923: R23 := pad:64[31:0[R22] + 31:0[R1]]
0001492a: R1 := pad:64[31:0[R5] ^ 31:0[R3]]
00014931: R28 := pad:64[31:0[R3] ^ 31:0[R21]]
00014938: R1 := pad:64[31:0[R1] & 31:0[R21]]
0001493d: R4 := 0x4613
00014944: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0001494a: R4 := pad:64[0xA830.15:0[R4]]
00014951: R1 := pad:64[31:0[R1] + 31:0[R20]]
00014956: R2 := 0x9501
0001495d: R1 := pad:64[31:0[R1] + 31:0[R13]]
00014963: R2 := pad:64[0xFD46.15:0[R2]]
00014969: #281 := R0 + 0x18
0001496e: R16 := pad:64[mem[#281, el]:u32]
00014973: R24 := pad:64[mem[#281 + 4, el]:u32]
0001497a: R1 := pad:64[9:0[R1].31:10[R1]]
00014981: R1 := pad:64[31:0[R21] + 31:0[R1]]
00014988: R6 := pad:64[mem[R0 + 0x28, el]:u32]
0001498f: R28 := pad:64[31:0[R28] & 31:0[R1]]
00014996: R17 := pad:64[31:0[R16] + 31:0[R4]]
0001499d: R28 := pad:64[31:0[R28] ^ 31:0[R3]]
000149a4: R4 := pad:64[31:0[R24] + 31:0[R2]]
000149ab: R5 := pad:64[31:0[R28] + 31:0[R5]]
000149b2: R28 := pad:64[31:0[R21] ^ 31:0[R1]]
000149b9: R15 := pad:64[31:0[R15] + 31:0[R5]]
000149be: R2 := 0x98D8
000149c4: #282 := R0 + 0x20
000149c9: R18 := pad:64[mem[#282, el]:u32]
000149ce: R11 := pad:64[mem[#282 + 4, el]:u32]
000149d5: R15 := pad:64[24:0[R15].31:25[R15]]
000149dc: R15 := pad:64[31:0[R1] + 31:0[R15]]
000149e2: R2 := pad:64[0x6980.15:0[R2]]
000149e9: R28 := pad:64[31:0[R28] & 31:0[R15]]
000149f0: R7 := pad:64[31:0[R18] + 31:0[R2]]
000149f7: R28 := pad:64[31:0[R28] ^ 31:0[R21]]
000149fc: R2 := 0xF7AF
00014a03: R3 := pad:64[31:0[R28] + 31:0[R3]]
00014a0a: R28 := pad:64[31:0[R1] ^ 31:0[R15]]
00014a11: R23 := pad:64[31:0[R23] + 31:0[R3]]
00014a17: R2 := pad:64[0x8B44.15:0[R2]]
00014a1e: R2 := pad:64[31:0[R11] + 31:0[R2]]
00014a23: R5 := 0xFFFF5BB1
00014a2a: R5 := pad:64[31:0[R6] + 31:0[R5]]
00014a31: R23 := pad:64[19:0[R23].31:20[R23]]
00014a38: R23 := pad:64[31:0[R15] + 31:0[R23]]
00014a3d: R3 := 0xD7BE
00014a44: R28 := pad:64[31:0[R28] & 31:0[R23]]
00014a4a: R3 := pad:64[0x895C.15:0[R3]]
00014a51: R28 := pad:64[31:0[R28] ^ 31:0[R1]]
00014a58: R21 := pad:64[31:0[R28] + 31:0[R21]]
00014a5f: R28 := pad:64[31:0[R15] ^ 31:0[R23]]
00014a66: R17 := pad:64[31:0[R17] + 31:0[R21]]
00014a6c: #283 := R0 + 0x2C
00014a71: R13 := pad:64[mem[#283, el]:u32]
00014a76: R21 := pad:64[mem[#283 + 4, el]:u32]
00014a7d: R17 := pad:64[14:0[R17].31:15[R17]]
00014a84: R17 := pad:64[31:0[R23] + 31:0[R17]]
00014a8b: R28 := pad:64[31:0[R28] & 31:0[R17]]
00014a92: R3 := pad:64[31:0[R13] + 31:0[R3]]
00014a99: R28 := pad:64[31:0[R28] ^ 31:0[R15]]
00014aa0: R1 := pad:64[31:0[R28] + 31:0[R1]]
00014aa7: R28 := pad:64[31:0[R23] ^ 31:0[R17]]
00014aae: R1 := pad:64[31:0[R4] + 31:0[R1]]
00014ab3: R4 := 0x1122
00014ab9: R4 := pad:64[0x6B90.15:0[R4]]
00014ac0: R4 := pad:64[31:0[R21] + 31:0[R4]]
00014ac7: R1 := pad:64[9:0[R1].31:10[R1]]
00014ace: R1 := pad:64[31:0[R17] + 31:0[R1]]
00014ad5: R28 := pad:64[31:0[R28] & 31:0[R1]]
00014adc: R28 := pad:64[31:0[R28] ^ 31:0[R23]]
00014ae3: R15 := pad:64[31:0[R28] + 31:0[R15]]
00014aea: R28 := pad:64[31:0[R17] ^ 31:0[R1]]
00014af1: R7 := pad:64[31:0[R7] + 31:0[R15]]
00014af8: R7 := pad:64[24:0[R7].31:25[R7]]
00014aff: R7 := pad:64[31:0[R1] + 31:0[R7]]
00014b06: R28 := pad:64[31:0[R28] & 31:0[R7]]
00014b0d: R28 := pad:64[31:0[R28] ^ 31:0[R17]]
00014b14: R28 := pad:64[31:0[R28] + 31:0[R23]]
00014b1b: R23 := pad:64[31:0[R1] ^ 31:0[R7]]
00014b22: R2 := pad:64[31:0[R2] + 31:0[R28]]
00014b27: R28 := 0x7193
00014b2d: R28 := pad:64[0xFD98.15:0[R28]]
00014b34: R2 := pad:64[19:0[R2].31:20[R2]]
00014b3b: R2 := pad:64[31:0[R7] + 31:0[R2]]
00014b42: R23 := pad:64[31:0[R23] & 31:0[R2]]
00014b49: R23 := pad:64[31:0[R23] ^ 31:0[R1]]
00014b50: R23 := pad:64[31:0[R23] + 31:0[R17]]
00014b57: R17 := pad:64[31:0[R7] ^ 31:0[R2]]
00014b5e: R5 := pad:64[31:0[R5] + 31:0[R23]]
00014b64: #284 := R0 + 0x34
00014b69: R15 := pad:64[mem[#284, el]:u32]
00014b6e: R23 := pad:64[mem[#284 + 4, el]:u32]
00014b75: R5 := pad:64[14:0[R5].31:15[R5]]
00014b7c: R5 := pad:64[31:0[R2] + 31:0[R5]]
00014b82: R0 := R0 + 0x40
00014b89: R17 := pad:64[31:0[R17] & 31:0[R5]]
00014b90: R30 := pad:64[31:0[R15] + 31:0[R28]]
00014b97: R17 := pad:64[31:0[R17] ^ 31:0[R7]]
00014b9e: R1 := pad:64[31:0[R17] + 31:0[R1]]
00014ba5: R17 := pad:64[31:0[R2] ^ 31:0[R5]]
00014bac: R1 := pad:64[31:0[R3] + 31:0[R1]]
00014bb1: R3 := 0x438E
00014bb7: R3 := pad:64[0xA679.15:0[R3]]
00014bbe: R3 := pad:64[31:0[R23] + 31:0[R3]]
00014bc5: R1 := pad:64[9:0[R1].31:10[R1]]
00014bcc: R1 := pad:64[31:0[R5] + 31:0[R1]]
00014bd3: R17 := pad:64[31:0[R17] & 31:0[R1]]
00014bda: R17 := pad:64[31:0[R17] ^ 31:0[R2]]
00014be1: R17 := pad:64[31:0[R17] + 31:0[R7]]
00014be8: R7 := pad:64[31:0[R5] ^ 31:0[R1]]
00014bef: R4 := pad:64[31:0[R4] + 31:0[R17]]
00014bf6: R17 := pad:64[mem[R0 - 4, el]:u32]
00014bfd: R4 := pad:64[24:0[R4].31:25[R4]]
00014c04: R4 := pad:64[31:0[R1] + 31:0[R4]]
00014c0b: R7 := pad:64[31:0[R7] & 31:0[R4]]
00014c12: R7 := pad:64[31:0[R7] ^ 31:0[R5]]
00014c19: R2 := pad:64[31:0[R7] + 31:0[R2]]
00014c20: R7 := pad:64[31:0[R1] ^ 31:0[R4]]
00014c27: R30 := pad:64[31:0[R30] + 31:0[R2]]
00014c2c: R2 := 0x821
00014c32: R2 := pad:64[0x49B4.15:0[R2]]
00014c39: R2 := pad:64[31:0[R17] + 31:0[R2]]
00014c40: R30 := pad:64[19:0[R30].31:20[R30]]
00014c47: R30 := pad:64[31:0[R4] + 31:0[R30]]
00014c4e: R7 := pad:64[31:0[R7] & 31:0[R30]]
00014c55: R7 := pad:64[31:0[R7] ^ 31:0[R1]]
00014c5c: R7 := pad:64[31:0[R7] + 31:0[R5]]
00014c63: R5 := pad:64[31:0[R4] ^ 31:0[R30]]
00014c6a: R3 := pad:64[31:0[R3] + 31:0[R7]]
00014c6f: R7 := 0x2562
00014c75: R7 := pad:64[0xF61E.15:0[R7]]
00014c7c: R7 := pad:64[31:0[R19] + 31:0[R7]]
00014c83: R3 := pad:64[14:0[R3].31:15[R3]]
00014c8a: R3 := pad:64[31:0[R30] + 31:0[R3]]
00014c91: R5 := pad:64[31:0[R5] & 31:0[R3]]
00014c98: R5 := pad:64[31:0[R5] ^ 31:0[R4]]
00014c9f: R5 := pad:64[31:0[R5] + 31:0[R1]]
00014ca4: R1 := 0xB340
00014cab: R2 := pad:64[31:0[R2] + 31:0[R5]]
00014cb1: R1 := pad:64[0xC040.15:0[R1]]
00014cb8: R28 := pad:64[31:0[R16] + 31:0[R1]]
00014cbd: R1 := 0x5A51
00014cc3: R1 := pad:64[0x265E.15:0[R1]]
00014cca: R2 := pad:64[9:0[R2].31:10[R2]]
00014cd1: R2 := pad:64[31:0[R3] + 31:0[R2]]
00014cd8: R1 := pad:64[31:0[R13] + 31:0[R1]]
00014cdf: R5 := pad:64[31:0[R3] ^ 31:0[R2]]
00014ce6: R5 := pad:64[31:0[R5] & 31:0[R30]]
00014ced: R5 := pad:64[31:0[R5] ^ 31:0[R3]]
00014cf4: R5 := pad:64[31:0[R5] + 31:0[R4]]
00014cf9: R4 := 0xC7AA
00014d00: R7 := pad:64[31:0[R7] + 31:0[R5]]
00014d06: R4 := pad:64[0xE9B6.15:0[R4]]
00014d0d: R5 := pad:64[31:0[R25] + 31:0[R4]]
00014d14: R7 := pad:64[26:0[R7].31:27[R7]]
00014d1b: R7 := pad:64[31:0[R2] + 31:0[R7]]
00014d22: R4 := pad:64[31:0[R2] ^ 31:0[R7]]
00014d29: R4 := pad:64[31:0[R4] & 31:0[R3]]
00014d30: R4 := pad:64[31:0[R4] ^ 31:0[R2]]
00014d37: R4 := pad:64[31:0[R4] + 31:0[R30]]
00014d3e: R28 := pad:64[31:0[R28] + 31:0[R4]]
00014d43: R4 := 0x105D
00014d49: R4 := pad:64[0xD62F.15:0[R4]]
00014d50: R4 := pad:64[31:0[R22] + 31:0[R4]]
00014d57: R28 := pad:64[22:0[R28].31:23[R28]]
00014d5e: R28 := pad:64[31:0[R7] + 31:0[R28]]
00014d65: R30 := pad:64[31:0[R7] ^ 31:0[R28]]
00014d6c: R30 := pad:64[31:0[R30] & 31:0[R2]]
00014d73: R30 := pad:64[31:0[R30] ^ 31:0[R7]]
00014d7a: R30 := pad:64[31:0[R30] + 31:0[R3]]
00014d7f: R3 := 0x1453
00014d86: R1 := pad:64[31:0[R1] + 31:0[R30]]
00014d8c: R3 := pad:64[0x244.15:0[R3]]
00014d93: R3 := pad:64[31:0[R6] + 31:0[R3]]
00014d9a: R1 := pad:64[17:0[R1].31:18[R1]]
00014da1: R1 := pad:64[31:0[R28] + 31:0[R1]]
00014da8: R30 := pad:64[31:0[R28] ^ 31:0[R1]]
00014daf: R30 := pad:64[31:0[R30] & 31:0[R7]]
00014db6: R30 := pad:64[31:0[R30] ^ 31:0[R28]]
00014dbd: R30 := pad:64[31:0[R30] + 31:0[R2]]
00014dc2: R2 := 0xE681
00014dc9: R5 := pad:64[31:0[R5] + 31:0[R30]]
00014dcf: R2 := pad:64[0xD8A1.15:0[R2]]
00014dd6: R2 := pad:64[31:0[R17] + 31:0[R2]]
00014ddd: R5 := pad:64[11:0[R5].31:12[R5]]
00014de4: R5 := pad:64[31:0[R1] + 31:0[R5]]
00014deb: R30 := pad:64[31:0[R1] ^ 31:0[R5]]
00014df2: R30 := pad:64[31:0[R30] & 31:0[R28]]
00014df9: R30 := pad:64[31:0[R30] ^ 31:0[R1]]
00014e00: R30 := pad:64[31:0[R30] + 31:0[R7]]
00014e05: R7 := 0xFBC8
00014e0c: R4 := pad:64[31:0[R4] + 31:0[R30]]
00014e12: R7 := pad:64[0xE7D3.15:0[R7]]
00014e19: R7 := pad:64[31:0[R14] + 31:0[R7]]
00014e20: R4 := pad:64[26:0[R4].31:27[R4]]
00014e27: R4 := pad:64[31:0[R5] + 31:0[R4]]
00014e2e: R30 := pad:64[31:0[R5] ^ 31:0[R4]]
00014e35: R30 := pad:64[31:0[R30] & 31:0[R1]]
00014e3c: R30 := pad:64[31:0[R30] ^ 31:0[R5]]
00014e43: R30 := pad:64[31:0[R30] + 31:0[R28]]
00014e48: R28 := 0xCDE6
00014e4f: R3 := pad:64[31:0[R3] + 31:0[R30]]
00014e55: R28 := pad:64[0x21E1.15:0[R28]]
00014e5c: R28 := pad:64[31:0[R11] + 31:0[R28]]
00014e63: R3 := pad:64[22:0[R3].31:23[R3]]
00014e6a: R3 := pad:64[31:0[R4] + 31:0[R3]]
00014e71: R30 := pad:64[31:0[R4] ^ 31:0[R3]]
00014e78: R30 := pad:64[31:0[R30] & 31:0[R5]]
00014e7f: R30 := pad:64[31:0[R30] ^ 31:0[R4]]
00014e86: R30 := pad:64[31:0[R30] + 31:0[R1]]
00014e8b: R1 := 0x7D6
00014e92: R2 := pad:64[31:0[R2] + 31:0[R30]]
00014e98: R1 := pad:64[0xC337.15:0[R1]]
00014e9f: R30 := pad:64[31:0[R23] + 31:0[R1]]
00014ea6: R2 := pad:64[17:0[R2].31:18[R2]]
00014ead: R2 := pad:64[31:0[R3] + 31:0[R2]]
00014eb4: R1 := pad:64[31:0[R3] ^ 31:0[R2]]
00014ebb: R1 := pad:64[31:0[R1] & 31:0[R4]]
00014ec2: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
00014ec9: R1 := pad:64[31:0[R1] + 31:0[R5]]
00014ed0: R1 := pad:64[31:0[R7] + 31:0[R1]]
00014ed5: R7 := 0xD87
00014edb: R7 := pad:64[0xF4D5.15:0[R7]]
00014ee2: R7 := pad:64[31:0[R20] + 31:0[R7]]
00014ee9: R1 := pad:64[11:0[R1].31:12[R1]]
00014ef0: R1 := pad:64[31:0[R2] + 31:0[R1]]
00014ef7: R5 := pad:64[31:0[R2] ^ 31:0[R1]]
00014efe: R5 := pad:64[31:0[R5] & 31:0[R3]]
00014f05: R5 := pad:64[31:0[R5] ^ 31:0[R2]]
00014f0c: R5 := pad:64[31:0[R5] + 31:0[R4]]
00014f13: R5 := pad:64[31:0[R28] + 31:0[R5]]
00014f18: R28 := 0x14ED
00014f1e: R28 := pad:64[0x455A.15:0[R28]]
00014f25: R28 := pad:64[31:0[R18] + 31:0[R28]]
00014f2c: R5 := pad:64[26:0[R5].31:27[R5]]
00014f33: R5 := pad:64[31:0[R1] + 31:0[R5]]
00014f3a: R4 := pad:64[31:0[R1] ^ 31:0[R5]]
00014f41: R4 := pad:64[31:0[R4] & 31:0[R2]]
00014f48: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00014f4f: R4 := pad:64[31:0[R4] + 31:0[R3]]
00014f56: R4 := pad:64[31:0[R30] + 31:0[R4]]
00014f5b: R30 := 0xE905
00014f61: R30 := pad:64[0xA9E3.15:0[R30]]
00014f68: R30 := pad:64[31:0[R15] + 31:0[R30]]
00014f6f: R4 := pad:64[22:0[R4].31:23[R4]]
00014f76: R4 := pad:64[31:0[R5] + 31:0[R4]]
00014f7d: R3 := pad:64[31:0[R5] ^ 31:0[R4]]
00014f84: R3 := pad:64[31:0[R3] & 31:0[R1]]
00014f8b: R3 := pad:64[31:0[R3] ^ 31:0[R5]]
00014f92: R3 := pad:64[31:0[R3] + 31:0[R2]]
00014f99: R3 := pad:64[31:0[R7] + 31:0[R3]]
00014f9e: R7 := 0xA3F8
00014fa4: R7 := pad:64[0xFCEF.15:0[R7]]
00014fab: R7 := pad:64[31:0[R12] + 31:0[R7]]
00014fb2: R3 := pad:64[17:0[R3].31:18[R3]]
00014fb9: R3 := pad:64[31:0[R4] + 31:0[R3]]
00014fc0: R2 := pad:64[31:0[R4] ^ 31:0[R3]]
00014fc7: R2 := pad:64[31:0[R2] & 31:0[R5]]
00014fce: R2 := pad:64[31:0[R2] ^ 31:0[R4]]
00014fd5: R2 := pad:64[31:0[R2] + 31:0[R1]]
00014fdc: R2 := pad:64[31:0[R28] + 31:0[R2]]
00014fe1: R28 := 0x2D9
00014fe7: R28 := pad:64[0x676F.15:0[R28]]
00014fee: R28 := pad:64[31:0[R24] + 31:0[R28]]
00014ff5: R2 := pad:64[11:0[R2].31:12[R2]]
00014ffc: R2 := pad:64[31:0[R3] + 31:0[R2]]
00015003: R1 := pad:64[31:0[R3] ^ 31:0[R2]]
0001500a: R1 := pad:64[31:0[R1] & 31:0[R4]]
00015011: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
00015018: R1 := pad:64[31:0[R1] + 31:0[R5]]
0001501d: R5 := 0x4C8A
00015024: R1 := pad:64[31:0[R30] + 31:0[R1]]
0001502a: R5 := pad:64[0x8D2A.15:0[R5]]
00015031: R5 := pad:64[31:0[R21] + 31:0[R5]]
00015038: R1 := pad:64[26:0[R1].31:27[R1]]
0001503f: R1 := pad:64[31:0[R2] + 31:0[R1]]
00015046: R30 := pad:64[31:0[R2] ^ 31:0[R1]]
0001504d: R30 := pad:64[31:0[R30] & 31:0[R3]]
00015054: R30 := pad:64[31:0[R30] ^ 31:0[R2]]
0001505b: R30 := pad:64[31:0[R30] + 31:0[R4]]
00015061: R4 := pad:64[31:0[R22] - 0x5C000]
00015068: R7 := pad:64[31:0[R7] + 31:0[R30]]
0001506e: R4 := pad:64[31:0[R4] - 0x6BE]
00015075: R7 := pad:64[22:0[R7].31:23[R7]]
0001507c: R7 := pad:64[31:0[R1] + 31:0[R7]]
00015083: R30 := pad:64[31:0[R1] ^ 31:0[R7]]
0001508a: R30 := pad:64[31:0[R30] & 31:0[R2]]
00015091: R30 := pad:64[31:0[R30] ^ 31:0[R1]]
00015098: R30 := pad:64[31:0[R30] + 31:0[R3]]
0001509f: R28 := pad:64[31:0[R28] + 31:0[R30]]
000150a6: R28 := pad:64[17:0[R28].31:18[R28]]
000150ad: R28 := pad:64[31:0[R7] + 31:0[R28]]
000150b4: R3 := pad:64[31:0[R7] ^ 31:0[R28]]
000150bb: R30 := pad:64[31:0[R3] & 31:0[R1]]
000150c2: R30 := pad:64[31:0[R30] ^ 31:0[R7]]
000150c9: R30 := pad:64[31:0[R30] + 31:0[R2]]
000150ce: R2 := 0xF681
000150d5: R30 := pad:64[31:0[R5] + 31:0[R30]]
000150db: R2 := pad:64[0x8771.15:0[R2]]
000150e2: R2 := pad:64[31:0[R18] + 31:0[R2]]
000150e9: R30 := pad:64[11:0[R30].31:12[R30]]
000150f0: R30 := pad:64[31:0[R28] + 31:0[R30]]
000150f7: R3 := pad:64[31:0[R3] ^ 31:0[R30]]
000150fe: R5 := pad:64[31:0[R28] ^ 31:0[R30]]
00015105: R3 := pad:64[31:0[R3] + 31:0[R1]]
0001510c: R1 := pad:64[31:0[R4] + 31:0[R3]]
00015111: R4 := 0x6122
00015117: R4 := pad:64[0x6D9D.15:0[R4]]
0001511e: R4 := pad:64[31:0[R13] + 31:0[R4]]
00015125: R1 := pad:64[27:0[R1].31:28[R1]]
0001512c: R1 := pad:64[31:0[R30] + 31:0[R1]]
00015133: R5 := pad:64[31:0[R5] ^ 31:0[R1]]
0001513a: R3 := pad:64[31:0[R30] ^ 31:0[R1]]
00015141: R5 := pad:64[31:0[R5] + 31:0[R7]]
00015146: R7 := 0x380C
0001514d: R2 := pad:64[31:0[R2] + 31:0[R5]]
00015153: R7 := pad:64[0xFDE5.15:0[R7]]
0001515a: R7 := pad:64[31:0[R23] + 31:0[R7]]
00015161: R2 := pad:64[20:0[R2].31:21[R2]]
00015168: R2 := pad:64[31:0[R1] + 31:0[R2]]
0001516f: R3 := pad:64[31:0[R3] ^ 31:0[R2]]
00015176: R5 := pad:64[31:0[R1] ^ 31:0[R2]]
0001517d: R3 := pad:64[31:0[R3] + 31:0[R28]]
00015184: R3 := pad:64[31:0[R4] + 31:0[R3]]
00015189: R4 := 0xEA44
0001518f: R4 := pad:64[0xA4BE.15:0[R4]]
00015196: R4 := pad:64[31:0[R19] + 31:0[R4]]
0001519d: R3 := pad:64[15:0[R3].31:16[R3]]
000151a4: R3 := pad:64[31:0[R2] + 31:0[R3]]
000151ab: R5 := pad:64[31:0[R5] ^ 31:0[R3]]
000151b2: R28 := pad:64[31:0[R2] ^ 31:0[R3]]
000151b9: R5 := pad:64[31:0[R5] + 31:0[R30]]
000151be: R30 := 0x4B60
000151c5: R5 := pad:64[31:0[R7] + 31:0[R5]]
000151ca: R7 := 0xCFA9
000151d0: R7 := pad:64[0x4BDE.15:0[R7]]
000151d7: R7 := pad:64[31:0[R14] + 31:0[R7]]
000151dd: R30 := pad:64[0xF6BB.15:0[R30]]
000151e4: R5 := pad:64[8:0[R5].31:9[R5]]
000151eb: R5 := pad:64[31:0[R3] + 31:0[R5]]
000151f2: R30 := pad:64[31:0[R24] + 31:0[R30]]
000151f9: R28 := pad:64[31:0[R28] ^ 31:0[R5]]
00015200: R28 := pad:64[31:0[R28] + 31:0[R1]]
00015207: R1 := pad:64[31:0[R3] ^ 31:0[R5]]
0001520e: R4 := pad:64[31:0[R4] + 31:0[R28]]
00015213: R28 := 0x7EC6
00015219: R28 := pad:64[0x289B.15:0[R28]]
00015220: R28 := pad:64[31:0[R15] + 31:0[R28]]
00015227: R4 := pad:64[27:0[R4].31:28[R4]]
0001522e: R4 := pad:64[31:0[R5] + 31:0[R4]]
00015235: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0001523c: R1 := pad:64[31:0[R1] + 31:0[R2]]
00015243: R2 := pad:64[31:0[R5] ^ 31:0[R4]]
0001524a: R1 := pad:64[31:0[R7] + 31:0[R1]]
0001524f: R7 := 0xBC70
00015255: R7 := pad:64[0xBEBF.15:0[R7]]
0001525c: R7 := pad:64[31:0[R6] + 31:0[R7]]
00015262: R6 := pad:64[31:0[R6] - 0x100000]
00015269: R1 := pad:64[20:0[R1].31:21[R1]]
00015270: R1 := pad:64[31:0[R4] + 31:0[R1]]
00015276: R6 := pad:64[31:0[R6] - 0xB83]
0001527d: R2 := pad:64[31:0[R2] ^ 31:0[R1]]
00015284: R2 := pad:64[31:0[R2] + 31:0[R3]]
0001528b: R3 := pad:64[31:0[R4] ^ 31:0[R1]]
00015292: R2 := pad:64[31:0[R30] + 31:0[R2]]
00015299: R2 := pad:64[15:0[R2].31:16[R2]]
000152a0: R2 := pad:64[31:0[R1] + 31:0[R2]]
000152a7: R3 := pad:64[31:0[R3] ^ 31:0[R2]]
000152ae: R3 := pad:64[31:0[R3] + 31:0[R5]]
000152b5: R5 := pad:64[31:0[R1] ^ 31:0[R2]]
000152bc: R3 := pad:64[31:0[R7] + 31:0[R3]]
000152c1: R7 := 0x27FA
000152c7: R7 := pad:64[0xEAA1.15:0[R7]]
000152ce: R7 := pad:64[31:0[R25] + 31:0[R7]]
000152d5: R3 := pad:64[8:0[R3].31:9[R3]]
000152dc: R3 := pad:64[31:0[R2] + 31:0[R3]]
000152e3: R5 := pad:64[31:0[R5] ^ 31:0[R3]]
000152ea: R5 := pad:64[31:0[R5] + 31:0[R4]]
000152f1: R4 := pad:64[31:0[R2] ^ 31:0[R3]]
000152f8: R5 := pad:64[31:0[R28] + 31:0[R5]]
000152fd: R28 := 0x3085
00015303: R28 := pad:64[0xD4EF.15:0[R28]]
0001530a: R28 := pad:64[31:0[R20] + 31:0[R28]]
00015311: R5 := pad:64[27:0[R5].31:28[R5]]
00015318: R5 := pad:64[31:0[R3] + 31:0[R5]]
0001531f: R4 := pad:64[31:0[R4] ^ 31:0[R5]]
00015326: R4 := pad:64[31:0[R4] + 31:0[R1]]
0001532d: R1 := pad:64[31:0[R3] ^ 31:0[R5]]
00015334: R4 := pad:64[31:0[R7] + 31:0[R4]]
00015339: R7 := 0x1D05
0001533f: R7 := pad:64[0x488.15:0[R7]]
00015346: R7 := pad:64[31:0[R16] + 31:0[R7]]
0001534d: R4 := pad:64[20:0[R4].31:21[R4]]
00015354: R4 := pad:64[31:0[R5] + 31:0[R4]]
0001535b: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00015362: R1 := pad:64[31:0[R1] + 31:0[R2]]
00015369: R2 := pad:64[31:0[R5] ^ 31:0[R4]]
00015370: R1 := pad:64[31:0[R28] + 31:0[R1]]
00015375: R28 := 0xD039
0001537b: R28 := pad:64[0xD9D4.15:0[R28]]
00015382: R28 := pad:64[31:0[R11] + 31:0[R28]]
00015389: R1 := pad:64[15:0[R1].31:16[R1]]
00015390: R1 := pad:64[31:0[R4] + 31:0[R1]]
00015397: R2 := pad:64[31:0[R2] ^ 31:0[R1]]
0001539e: R2 := pad:64[31:0[R2] + 31:0[R3]]
000153a5: R3 := pad:64[31:0[R4] ^ 31:0[R1]]
000153ac: R2 := pad:64[31:0[R7] + 31:0[R2]]
000153b1: R7 := 0x99E5
000153b7: R7 := pad:64[0xE6DB.15:0[R7]]
000153be: R7 := pad:64[31:0[R21] + 31:0[R7]]
000153c5: R2 := pad:64[8:0[R2].31:9[R2]]
000153cc: R2 := pad:64[31:0[R1] + 31:0[R2]]
000153d3: R3 := pad:64[31:0[R3] ^ 31:0[R2]]
000153da: R3 := pad:64[31:0[R3] + 31:0[R5]]
000153e1: R5 := pad:64[31:0[R1] ^ 31:0[R2]]
000153e8: R3 := pad:64[31:0[R28] + 31:0[R3]]
000153ed: R28 := 0x7CF8
000153f3: R28 := pad:64[0x1FA2.15:0[R28]]
000153fa: R28 := pad:64[31:0[R17] + 31:0[R28]]
00015401: R3 := pad:64[27:0[R3].31:28[R3]]
00015408: R3 := pad:64[31:0[R2] + 31:0[R3]]
0001540f: R5 := pad:64[31:0[R5] ^ 31:0[R3]]
00015416: R5 := pad:64[31:0[R5] + 31:0[R4]]
0001541d: R4 := pad:64[31:0[R2] ^ 31:0[R3]]
00015424: R5 := pad:64[31:0[R7] + 31:0[R5]]
00015429: R7 := 0x5665
0001542f: R7 := pad:64[0xC4AC.15:0[R7]]
00015436: R7 := pad:64[31:0[R12] + 31:0[R7]]
0001543d: R5 := pad:64[20:0[R5].31:21[R5]]
00015444: R5 := pad:64[31:0[R3] + 31:0[R5]]
0001544b: R4 := pad:64[31:0[R4] ^ 31:0[R5]]
00015452: R4 := pad:64[31:0[R4] + 31:0[R1]]
00015459: R1 := pad:64[31:0[R3] ^ 31:0[R5]]
00015460: R4 := pad:64[31:0[R28] + 31:0[R4]]
00015465: R28 := 0x2244
0001546b: R28 := pad:64[0xF429.15:0[R28]]
00015472: R28 := pad:64[31:0[R25] + 31:0[R28]]
00015477: R25 := 0xFF97
0001547e: R4 := pad:64[15:0[R4].31:16[R4]]
00015485: R4 := pad:64[31:0[R5] + 31:0[R4]]
0001548b: R25 := pad:64[0x432A.15:0[R25]]
00015492: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00015499: R25 := pad:64[31:0[R24] + 31:0[R25]]
000154a0: R1 := pad:64[31:0[R1] + 31:0[R2]]
000154a5: R24 := 0x23A7
000154ac: R7 := pad:64[31:0[R7] + 31:0[R1]]
000154b1: R1 := 0xA039
000154b7: R1 := pad:64[0xFC93.15:0[R1]]
000154be: R22 := pad:64[31:0[R22] + 31:0[R1]]
000154c3: R1 := 0x59C3
000154ca: R7 := pad:64[8:0[R7].31:9[R7]]
000154d1: R7 := pad:64[31:0[R4] + 31:0[R7]]
000154d7: R1 := pad:64[0x655B.15:0[R1]]
000154de: R21 := pad:64[31:0[R21] + 31:0[R1]]
000154e5: R1 := pad:64[31:0[R7] | ~31:0[R5]]
000154ec: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
000154f2: R24 := pad:64[0xAB94.15:0[R24]]
000154f9: R1 := pad:64[31:0[R1] + 31:0[R3]]
00015500: R23 := pad:64[31:0[R23] + 31:0[R24]]
00015507: R28 := pad:64[31:0[R28] + 31:0[R1]]
0001550c: R1 := 0x7E4F
00015512: R1 := pad:64[0x6FA8.15:0[R1]]
00015519: R18 := pad:64[31:0[R18] + 31:0[R1]]
0001551e: R2 := 0xCC92
00015525: R28 := pad:64[25:0[R28].31:26[R28]]
0001552c: R28 := pad:64[31:0[R7] + 31:0[R28]]
00015532: R2 := pad:64[0x8F0C.15:0[R2]]
00015539: R1 := pad:64[31:0[R28] | ~31:0[R4]]
00015540: R20 := pad:64[31:0[R20] + 31:0[R2]]
00015547: R1 := pad:64[31:0[R1] ^ 31:0[R7]]
0001554c: R2 := 0x5DD1
00015553: R1 := pad:64[31:0[R1] + 31:0[R5]]
00015559: R2 := pad:64[0x8584.15:0[R2]]
00015560: R25 := pad:64[31:0[R25] + 31:0[R1]]
00015567: R19 := pad:64[31:0[R19] + 31:0[R2]]
0001556c: R2 := 0xE6E0
00015571: R1 := 0x7E82
00015577: R2 := pad:64[0xFE2C.15:0[R2]]
0001557e: R25 := pad:64[21:0[R25].31:22[R25]]
00015585: R25 := pad:64[31:0[R28] + 31:0[R25]]
0001558c: R17 := pad:64[31:0[R17] + 31:0[R2]]
00015593: R3 := pad:64[31:0[R25] | ~31:0[R7]]
00015598: R2 := 0x4314
0001559f: R3 := pad:64[31:0[R3] ^ 31:0[R28]]
000155a5: R2 := pad:64[0xA301.15:0[R2]]
000155ac: R4 := pad:64[31:0[R3] + 31:0[R4]]
000155b3: R5 := pad:64[31:0[R16] + 31:0[R2]]
000155ba: R23 := pad:64[31:0[R23] + 31:0[R4]]
000155bf: R4 := 0xD391
000155c5: R4 := pad:64[0xEB86.15:0[R4]]
000155cc: R11 := pad:64[31:0[R11] + 31:0[R4]]
000155d1: R2 := 0x11A1
000155d8: R23 := pad:64[16:0[R23].31:17[R23]]
000155df: R23 := pad:64[31:0[R25] + 31:0[R23]]
000155e5: R2 := pad:64[0x4E08.15:0[R2]]
000155ec: R4 := pad:64[31:0[R23] | ~31:0[R28]]
000155f3: R2 := pad:64[31:0[R15] + 31:0[R2]]
000155fa: R4 := pad:64[31:0[R4] ^ 31:0[R25]]
00015600: R1 := pad:64[0xF753.15:0[R1]]
00015607: R4 := pad:64[31:0[R4] + 31:0[R7]]
0001560e: R1 := pad:64[31:0[R14] + 31:0[R1]]
00015615: R22 := pad:64[31:0[R22] + 31:0[R4]]
0001561a: R14 := 0xF235
00015620: R14 := pad:64[0xBD3A.15:0[R14]]
00015627: R13 := pad:64[31:0[R13] + 31:0[R14]]
0001562c: R3 := 0xD2BB
00015633: R22 := pad:64[10:0[R22].31:11[R22]]
0001563a: R22 := pad:64[31:0[R23] + 31:0[R22]]
00015640: R3 := pad:64[0x2AD7.15:0[R3]]
00015647: R4 := pad:64[31:0[R22] | ~31:0[R25]]
0001564e: R3 := pad:64[31:0[R12] + 31:0[R3]]
00015655: R4 := pad:64[31:0[R4] ^ 31:0[R23]]
0001565c: R4 := pad:64[31:0[R4] + 31:0[R28]]
00015663: R21 := pad:64[31:0[R21] + 31:0[R4]]
0001566a: R21 := pad:64[25:0[R21].31:26[R21]]
00015671: R21 := pad:64[31:0[R22] + 31:0[R21]]
00015678: R4 := pad:64[31:0[R21] | ~31:0[R23]]
0001567f: R4 := pad:64[31:0[R4] ^ 31:0[R22]]
00015686: R4 := pad:64[31:0[R4] + 31:0[R25]]
0001568d: R20 := pad:64[31:0[R20] + 31:0[R4]]
00015694: R20 := pad:64[21:0[R20].31:22[R20]]
0001569b: R20 := pad:64[31:0[R21] + 31:0[R20]]
000156a2: R4 := pad:64[31:0[R20] | ~31:0[R22]]
000156a9: R4 := pad:64[31:0[R4] ^ 31:0[R21]]
000156b0: R4 := pad:64[31:0[R4] + 31:0[R23]]
000156b7: R6 := pad:64[31:0[R6] + 31:0[R4]]
000156be: R6 := pad:64[16:0[R6].31:17[R6]]
000156c5: R6 := pad:64[31:0[R20] + 31:0[R6]]
000156cc: R4 := pad:64[31:0[R6] | ~31:0[R21]]
000156d3: R4 := pad:64[31:0[R4] ^ 31:0[R20]]
000156da: R4 := pad:64[31:0[R4] + 31:0[R22]]
000156e1: R19 := pad:64[31:0[R19] + 31:0[R4]]
000156e8: R19 := pad:64[10:0[R19].31:11[R19]]
000156ef: R19 := pad:64[31:0[R6] + 31:0[R19]]
000156f6: R4 := pad:64[31:0[R19] | ~31:0[R20]]
000156fd: R4 := pad:64[31:0[R4] ^ 31:0[R6]]
00015704: R4 := pad:64[31:0[R4] + 31:0[R21]]
0001570b: R18 := pad:64[31:0[R18] + 31:0[R4]]
00015712: R18 := pad:64[25:0[R18].31:26[R18]]
00015719: R18 := pad:64[31:0[R19] + 31:0[R18]]
00015720: R4 := pad:64[31:0[R18] | ~31:0[R6]]
00015727: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
0001572e: R4 := pad:64[31:0[R4] + 31:0[R20]]
00015735: R17 := pad:64[31:0[R17] + 31:0[R4]]
0001573c: R17 := pad:64[21:0[R17].31:22[R17]]
00015743: R17 := pad:64[31:0[R18] + 31:0[R17]]
0001574a: R4 := pad:64[31:0[R17] | ~31:0[R19]]
00015751: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
00015758: R4 := pad:64[31:0[R4] + 31:0[R6]]
0001575f: R4 := pad:64[31:0[R5] + 31:0[R4]]
00015766: R4 := pad:64[16:0[R4].31:17[R4]]
0001576d: R4 := pad:64[31:0[R17] + 31:0[R4]]
00015774: R5 := pad:64[31:0[R4] | ~31:0[R18]]
0001577b: R5 := pad:64[31:0[R5] ^ 31:0[R17]]
00015782: R5 := pad:64[31:0[R5] + 31:0[R19]]
00015789: R2 := pad:64[31:0[R2] + 31:0[R5]]
00015790: R2 := pad:64[10:0[R2].31:11[R2]]
00015797: R2 := pad:64[31:0[R4] + 31:0[R2]]
0001579e: R5 := pad:64[31:0[R2] | ~31:0[R17]]
000157a5: R5 := pad:64[31:0[R5] ^ 31:0[R4]]
000157ac: R5 := pad:64[31:0[R5] + 31:0[R18]]
000157b3: R1 := pad:64[31:0[R1] + 31:0[R5]]
000157ba: R1 := pad:64[25:0[R1].31:26[R1]]
000157c1: R1 := pad:64[31:0[R2] + 31:0[R1]]
000157c8: R5 := pad:64[31:0[R1] | ~31:0[R4]]
000157cf: R26 := pad:64[31:0[R26] + 31:0[R1]]
000157d6: R5 := pad:64[31:0[R5] ^ 31:0[R2]]
000157dd: R5 := pad:64[31:0[R5] + 31:0[R17]]
000157e4: R13 := pad:64[31:0[R13] + 31:0[R5]]
000157eb: R13 := pad:64[21:0[R13].31:22[R13]]
000157f2: R13 := pad:64[31:0[R1] + 31:0[R13]]
000157f9: R5 := pad:64[31:0[R13] | ~31:0[R2]]
00015800: R10 := pad:64[31:0[R10] + 31:0[R13]]
00015807: R5 := pad:64[31:0[R5] ^ 31:0[R1]]
0001580e: R4 := pad:64[31:0[R5] + 31:0[R4]]
00015815: R3 := pad:64[31:0[R3] + 31:0[R4]]
0001581c: R3 := pad:64[16:0[R3].31:17[R3]]
00015823: R3 := pad:64[31:0[R13] + 31:0[R3]]
0001582a: R1 := pad:64[31:0[R3] | ~31:0[R1]]
00015831: R8 := pad:64[31:0[R3] + 31:0[R8]]
00015838: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
0001583f: R9 := pad:64[31:0[R9] + 31:0[R3]]
00015846: R1 := pad:64[31:0[R1] + 31:0[R2]]
0001584d: R11 := pad:64[31:0[R11] + 31:0[R1]]
00015854: R11 := pad:64[10:0[R11].31:11[R11]]
0001585b: R8 := pad:64[31:0[R11] + 31:0[R8]]
00015861: #285 := ~R0
00015866: #286 := R27 + ~R0
0001586c: VF := extend:128[#286 + 1] <> extend:128[R27] + extend:128[#285] +
          1
00015872: CF := pad:128[#286 + 1] <> pad:128[R27] + pad:128[#285] + 1
00015876: ZF := #286 + 1 = 0
0001587a: NF := 63:63[#286 + 1]
00015880: when CF & ~ZF goto %000147fa
00034832: goto %00015884

00015884:
00015888: #287 := R31 + 0x10
0001588d: R19 := mem[#287, el]:u64
00015892: R20 := mem[#287 + 8, el]:u64
00015898: #288 := R31 + 0x20
0001589d: R21 := mem[#288, el]:u64
000158a2: R22 := mem[#288 + 8, el]:u64
000158a8: #289 := R31 + 0x30
000158ad: R23 := mem[#289, el]:u64
000158b2: R24 := mem[#289 + 8, el]:u64
000158b8: #290 := R31 + 0x50
000158bd: R27 := mem[#290, el]:u64
000158c2: R28 := mem[#290 + 8, el]:u64
000158c9: R2 := mem[R31 + 0x68, el]:u64
00034833: goto %00013292

00013292:
0001329d: mem := mem with [R2, el]:u32 <- 31:0[R26]
000132a3: mem := mem with [R2 + 4, el]:u32 <- 31:0[R8]
000132a9: #190 := R2 + 8
000132af: mem := mem with [#190, el]:u32 <- 31:0[R9]
000132b5: mem := mem with [#190 + 4, el]:u32 <- 31:0[R10]
000132bb: #191 := R31 + 0x40
000132c0: R25 := mem[#191, el]:u64
000132c5: R26 := mem[#191 + 8, el]:u64
000132cc: R29 := mem[R31, el]:u64
000132d1: R30 := mem[R31 + 8, el]:u64
000132d5: R31 := R31 + 0x70
000132da: call R30 with noreturn

00034834: sub md5_process_bytes(md5_process_bytes_result)
00034c03: md5_process_bytes_result :: out u32 = low:32[R0]

000134eb:
000134ef: #201 := R31 - 0x50
000134f5: mem := mem with [#201, el]:u64 <- R29
000134fb: mem := mem with [#201 + 8, el]:u64 <- R30
000134ff: R31 := #201
00013505: R29 := R31
0001350b: #202 := R31 + 0x10
00013511: mem := mem with [#202, el]:u64 <- R19
00013517: mem := mem with [#202 + 8, el]:u64 <- R20
0001351d: R19 := R0
00013524: R0 := pad:64[mem[R2 + 0x18, el]:u32]
0001352a: #203 := R31 + 0x20
00013530: mem := mem with [#203, el]:u64 <- R21
00013536: mem := mem with [#203 + 8, el]:u64 <- R22
0001353c: R21 := R2
00013542: R22 := R1
00013548: when 31:0[R0] <> 0 goto %00013546
00034835: goto %00013676

00013546:
0001354f: #204 := R31 + 0x30
00013555: mem := mem with [#204, el]:u64 <- R23
0001355b: mem := mem with [#204 + 8, el]:u64 <- R24
00013561: R23 := pad:64[31:0[R0]]
00013566: R24 := 0x80
0001356d: R24 := R24 + ~R23 + 1
00013573: R20 := R2 + 0x1C
00013579: #205 := ~R1
0001357e: #206 := R24 + ~R1
00013584: VF := extend:128[#206 + 1] <> extend:128[R24] + extend:128[#205] +
          1
0001358a: CF := pad:128[#206 + 1] <> pad:128[R24] + pad:128[#205] + 1
0001358e: ZF := #206 + 1 = 0
00013592: NF := 63:63[#206 + 1]
00013599: R0 := R20 + R23
000135a8: when ~(CF & ~ZF) goto %000135a0
000135a9: goto %000135a4

000135a4:
000135a5: R24 := R1
000135ab: goto %000135a7

000135a0:
000135a1: R24 := R24
000135aa: goto %000135a7

000135a7:
000135b1: R1 := R19
000135b7: R2 := R24
000135bf: mem := mem with [R31 + 0x40, el]:u64 <- R25
000135c4: R30 := 0x4120E4
000135c6: call @memcpy with return %000135c8

000135c8:
000135cd: R25 := pad:64[mem[R21 + 0x18, el]:u32]
000135d4: R25 := pad:64[31:0[R25] + 31:0[R24]]
000135dc: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R25]
000135e2: #207 := 31:0[R25] - 0x40
000135e7: VF := extend:64[#207] <> extend:64[31:0[R25]] - 0x40
000135ec: CF := pad:64[#207] <> pad:64[31:0[R25]] + 0xFFFFFFC0
000135f0: ZF := #207 = 0
000135f4: NF := 31:31[#207]
000135fb: when CF & ~ZF goto %000135f9
00034836: goto %0001364d

000135f9:
00013602: R2 := R21
00013608: R1 := pad:64[31:6[R25].0]
0001360e: R0 := R20
00013613: R30 := 0x412168
00013615: call @md5_process_block with return %00013617

00013617:
0001361c: R0 := R23 + R24
00013622: R2 := pad:64[5:0[R25]]
0001362a: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
00013630: R1 := 63:6[R0].0
00013637: R1 := R20 + R1
0001363d: R0 := R20
00013643: R2 := pad:64[5:0[R2]]
00013648: R30 := 0x412188
0001364a: call @memcpy with return %0001364c

0001364c:
0001364f: goto %0001364d

0001364d:
00013655: R25 := mem[R31 + 0x40, el]:u64
0001365c: R19 := R19 + R24
00013663: R22 := R22 + ~R24 + 1
00013669: #208 := R31 + 0x30
0001366e: R23 := mem[#208, el]:u64
00013673: R24 := mem[#208 + 8, el]:u64
00013678: goto %00013676

00013676:
0001367d: #209 := R22 - 0x3F
00013682: VF := extend:128[#209] <> extend:128[R22] - 0x3F
00013687: CF := pad:128[#209] <> pad:128[R22] + 0xFFFFFFFFFFFFFFC1
0001368b: ZF := #209 = 0
0001368f: NF := 63:63[#209]
00013696: when ~(CF & ~ZF) goto %00013694
00034837: goto %0001464b

0001464b:
0001464e: VF := 0
00014651: CF := 0
00014655: ZF := pad:64[1:0[R19]] = 0
00014658: NF := 0
0001465d: when ZF goto %00013792
00034838: goto %00014661

00013792:
00013796: R20 := 63:6[R22].0
0001379c: R0 := R19
000137a2: R22 := pad:64[5:0[R22]]
000137a9: R19 := R19 + R20
000137af: R2 := R21
000137b5: R1 := R20
000137ba: R30 := 0x4120A0
000137bc: call @md5_process_block with return %00013694

00013694:
0001369d: when R22 <> 0 goto %0001369b
00034839: goto %00014616

0001369b:
000136a4: R20 := R21 + 0x1C
000136aa: #210 := R31 + 0x30
000136b0: mem := mem with [#210, el]:u64 <- R23
000136b6: mem := mem with [#210 + 8, el]:u64 <- R24
000136bc: R23 := R19
000136c1: goto %000136bf

00014616:
0001461a: #265 := R31 + 0x10
0001461f: R19 := mem[#265, el]:u64
00014624: R20 := mem[#265 + 8, el]:u64
0001462a: #266 := R31 + 0x20
0001462f: R21 := mem[#266, el]:u64
00014634: R22 := mem[#266 + 8, el]:u64
0001463b: R29 := mem[R31, el]:u64
00014640: R30 := mem[R31 + 8, el]:u64
00014644: R31 := R31 + 0x50
00014649: call R30 with noreturn

00014661:
00014665: #267 := R22 - 0x40
0001466a: VF := extend:128[#267] <> extend:128[R22] - 0x40
0001466f: CF := pad:128[#267] <> pad:128[R22] + 0xFFFFFFFFFFFFFFC0
00014673: ZF := #267 = 0
00014677: NF := 63:63[#267]
0001467d: when ZF goto %0001467b
0003483a: goto %000146d6

0001467b:
00014685: R22 := pad:64[mem[R21 + 0x18, el]:u32]
0001468b: R20 := R21 + 0x1C
00014692: V0 := mem[R19, el]:u128
00014697: V1 := mem[R19 + 0x10, el]:u128
0001469e: R0 := R20 + R22
000146a4: R22 := R22 + 0x40
000146ac: mem := mem with [R0, el]:u128 <- V0
000146b2: mem := mem with [R0 + 0x10, el]:u128 <- V1
000146b8: #268 := R19 + 0x20
000146bd: V0 := mem[#268, el]:u128
000146c2: V1 := mem[#268 + 0x10, el]:u128
000146c8: #269 := R0 + 0x20
000146ce: mem := mem with [#269, el]:u128 <- V0
000146d4: mem := mem with [#269 + 0x10, el]:u128 <- V1
0003483b: goto %00013715

000146d6:
000146da: #270 := R31 + 0x30
000146e0: mem := mem with [#270, el]:u64 <- R23
000146e6: mem := mem with [#270 + 8, el]:u64 <- R24
000146ec: R24 := R22 - 0x41
000146f2: R20 := R21 + 0x1C
000146f8: R24 := pad:64[63:6[R24]]
000146fe: R23 := R24 + 1
00014705: R23 := R19 + (57:0[R23].0)
0003483c: goto %00014707

00014707:
0001470c: V0 := mem[R19, el]:u128
00014711: V1 := mem[R19 + 0x10, el]:u128
00014717: R2 := R21
0001471d: R0 := R20
00014722: R1 := 0x40
0001472a: mem := mem with [R20, el]:u128 <- V0
00014730: mem := mem with [R20 + 0x10, el]:u128 <- V1
00014736: #271 := R19 + 0x20
0001473b: V0 := mem[#271, el]:u128
00014740: V1 := mem[#271 + 0x10, el]:u128
00014746: R19 := R19 + 0x40
0001474c: #272 := R20 + 0x20
00014752: mem := mem with [#272, el]:u128 <- V0
00014758: mem := mem with [#272 + 0x10, el]:u128 <- V1
0001475d: R30 := 0x41203C
0001475f: call @md5_process_block with return %00014761

00014761:
00014765: #273 := ~R23
0001476a: #274 := R19 + ~R23
00014770: VF := extend:128[#274 + 1] <> extend:128[R19] + extend:128[#273] +
          1
00014776: CF := pad:128[#274 + 1] <> pad:128[R19] + pad:128[#273] + 1
0001477a: ZF := #274 + 1 = 0
0001477e: NF := 63:63[#274 + 1]
00014783: when ZF <> 1 goto %00014707
0003483d: goto %00014787

00014787:
0001478b: R22 := R22 - 0x40
00014792: R22 := R22 + ~(57:0[R24].0) + 1
0003483e: goto %000136bf

000136bf:
000136c7: R19 := pad:64[mem[R21 + 0x18, el]:u32]
000136cd: R1 := R23
000136d3: R2 := R22
000136da: R0 := R20 + R19
000136e1: R22 := R19 + R22
000136e6: R30 := 0x412064
000136e8: call @memcpy with return %000136ea

000136ea:
000136ee: #211 := R31 + 0x30
000136f3: R23 := mem[#211, el]:u64
000136f8: R24 := mem[#211 + 8, el]:u64
000136fe: #212 := R22 - 0x3F
00013703: VF := extend:128[#212] <> extend:128[R22] - 0x3F
00013708: CF := pad:128[#212] <> pad:128[R22] + 0xFFFFFFFFFFFFFFC1
0001370c: ZF := #212 = 0
00013710: NF := 63:63[#212]
00013717: when CF & ~ZF goto %00013715
0003483f: goto %000137be

00013715:
0001371e: R2 := R21
00013724: R0 := R20
0001372a: R22 := R22 - 0x40
0001372f: R1 := 0x40
00013734: R30 := 0x412140
00013736: call @md5_process_block with return %00013738

00013738:
0001373c: R0 := R20
00013742: R2 := R22
00013748: R1 := R21 + 0x5C
0001374d: R30 := 0x412150
0001374f: call @memcpy with return %00013751

00013751:
00013757: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R22]
0001375c: goto %0001375a

000137be:
000137c4: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R22]
00034840: goto %0001375a

0001375a:
00013761: #213 := R31 + 0x10
00013766: R19 := mem[#213, el]:u64
0001376b: R20 := mem[#213 + 8, el]:u64
00013771: #214 := R31 + 0x20
00013776: R21 := mem[#214, el]:u64
0001377b: R22 := mem[#214 + 8, el]:u64
00013782: R29 := mem[R31, el]:u64
00013787: R30 := mem[R31 + 8, el]:u64
0001378b: R31 := R31 + 0x50
00013790: call R30 with noreturn

00034841: sub md5_read_ctx(md5_read_ctx_result)
00034c04: md5_read_ctx_result :: out u32 = low:32[R0]

0001318e:
00013192: R2 := R0
00013198: R0 := R1
0001319f: R1 := pad:64[mem[R2, el]:u32]
000131a7: mem := mem with [R0, el]:u32 <- 31:0[R1]
000131ae: R1 := pad:64[mem[R2 + 4, el]:u32]
000131b6: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
000131bd: R1 := pad:64[mem[R2 + 8, el]:u32]
000131c5: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
000131cc: R1 := pad:64[mem[R2 + 0xC, el]:u32]
000131d4: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
000131d9: call R30 with noreturn

00034842: sub md5_stream(md5_stream_result)
00034c05: md5_stream_result :: out u32 = low:32[R0]

00013ed8:
00013edb: R12 := 0x1120
00013ee2: R31 := R31 + ~R12 + 1
00013ee7: R2 := 0x416000
00013eef: mem := mem with [R31, el]:u64 <- R29
00013ef5: mem := mem with [R31 + 8, el]:u64 <- R30
00013efb: R29 := R31
00013f02: V0 := mem[R2 + 0x3A0, el]:u128
00013f08: #242 := R31 + 0x10
00013f0e: mem := mem with [#242, el]:u64 <- R19
00013f14: mem := mem with [#242 + 8, el]:u64 <- R20
00013f1a: R20 := R0
00013f20: #243 := R31 + 0x20
00013f26: mem := mem with [#243, el]:u64 <- R21
00013f2c: mem := mem with [#243 + 8, el]:u64 <- R22
00013f32: R22 := R1
00013f37: R21 := 0x1000
00013f3e: mem := mem with [R31 + 0x40, el]:u64 <- 0
00013f45: mem := mem with [R31 + 0x48, el]:u32 <- 0
00013f4d: mem := mem with [R31 + 0x30, el]:u128 <- V0
00034843: goto %00013f4f

00013f4f:
00013f52: R19 := 0
00013f57: goto %00013f55

00013f55:
00013f5d: R2 := R21 + ~R19 + 1
00013f63: R0 := R31 + 0xD8
00013f6a: R0 := R0 + R19
00013f70: R3 := R20
00013f75: R1 := 1
00013f7a: R30 := 0x4126F8
00013f7c: call @fread with return %00013f7e

00013f7e:
00013f82: R2 := R0
00013f88: R0 := R20
00013f8f: R19 := R19 + R2
00013f95: #244 := R19 - 0x1000
00013f9a: VF := extend:128[#244] <> extend:128[R19] - 0x1000
00013f9f: CF := pad:128[#244] <> pad:128[R19] + 0xFFFFFFFFFFFFF000
00013fa3: ZF := #244 = 0
00013fa7: NF := 63:63[#244]
00013fad: when ZF <> 1 goto %00013fab
00034844: goto %00014251

00014251:
00014255: R1 := R19
0001425b: R2 := R31 + 0x30
00014261: R0 := R31 + 0xD8
00014266: R30 := 0x41271C
00014268: call @md5_process_block with return %0001426a

0001426a:
0001426c: goto %00013f4f

00013fab:
00013fb4: when R2 = 0 goto %00013fb2
00034845: goto %00014242

00013fb2:
00013fba: R30 := 0x412724
00013fbc: call @ferror with return %00013fbe

00013fbe:
00013fc2: R1 := pad:64[31:0[R0]]
00013fc7: R0 := 1
00013fcd: when 31:0[R1] <> 0 goto %00013fcb
00034846: goto %0001423b

00014242:
00014245: R30 := 0x4126DC
00014248: call @feof with return %0001424a

0001424a:
0001424d: when 31:0[R0] <> 0 goto %0001423b
00034847: goto %00013f55

0001423b:
0001423e: when R19 <> 0 goto %0001400d
00034848: goto %00014027

0001400d:
00014011: R1 := R19
00014017: R0 := R31 + 0xD8
0001401d: R2 := R31 + 0x30
00014022: R30 := 0x41276C
00014024: call @md5_process_bytes with return %00014026

00014026:
00014029: goto %00014027

00014027:
0001402e: R1 := R22
00014034: R0 := R31 + 0x30
00014039: R30 := 0x412740
0001403b: call @md5_finish_ctx with return %0001403d

0001403d:
00014040: R0 := 0
00034849: goto %00013fcb

00013fcb:
00013fd5: R29 := mem[R31, el]:u64
00013fda: R30 := mem[R31 + 8, el]:u64
00013fdf: R12 := 0x1120
00013fe5: #245 := R31 + 0x10
00013fea: R19 := mem[#245, el]:u64
00013fef: R20 := mem[#245 + 8, el]:u64
00013ff5: #246 := R31 + 0x20
00013ffa: R21 := mem[#246, el]:u64
00013fff: R22 := mem[#246 + 8, el]:u64
00014006: R31 := R31 + R12
0001400b: call R30 with noreturn

0003484a: sub memcmp(memcmp_s1, memcmp_s2, memcmp_n, memcmp_result)
00034c06: memcmp_s1 :: in out u64 = R0
00034c07: memcmp_s2 :: in out u64 = R1
00034c08: memcmp_n :: in u64 = R2
00034c09: memcmp_result :: out u32 = low:32[R0]

0001126a:
0002ff8a: R16 := 0x430000
0002ff91: R17 := mem[R16 + 0x1C0, el]:u64
0002ff97: R16 := R16 + 0x1C0
0002ff9c: call R17 with noreturn

0003484b: sub memcpy(memcpy_dst, memcpy_src, memcpy_n, memcpy_result)
00034c0a: memcpy_dst :: in out u64 = R0
00034c0b: memcpy_src :: in out u64 = R1
00034c0c: memcpy_n :: in u64 = R2
00034c0d: memcpy_result :: out u64 = R0

000127b1:
0002faba: R16 := 0x430000
0002fac1: R17 := mem[R16, el]:u64
0002fac7: R16 := R16
0002facc: call R17 with noreturn

0003484c: sub memset(memset_buf, memset_c, memset_n, memset_result)
00034c0e: memset_buf :: in out u64 = R0
00034c0f: memset_c :: in u32 = low:32[R1]
00034c10: memset_n :: in u64 = R2
00034c11: memset_result :: out u64 = R0

0001b98b:
0002fd90: R16 := 0x430000
0002fd97: R17 := mem[R16 + 0x108, el]:u64
0002fd9d: R16 := R16 + 0x108
0002fda2: call R17 with noreturn

0003484d: sub memxor(memxor_result)
00034c12: memxor_result :: out u32 = low:32[R0]

00012e9e:
00012ea2: when R2 = 0 goto %00012ea0
0003484e: goto %0001599b

0001599b:
0001599f: R5 := R2 - 1
000159a5: #296 := R5 - 6
000159aa: VF := extend:128[#296] <> extend:128[R5] - 6
000159af: CF := pad:128[#296] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFA
000159b3: ZF := #296 = 0
000159b7: NF := 63:63[#296]
000159bd: when ~(CF & ~ZF) goto %000130c0
0003484f: goto %000159c1

000130c0:
000130c3: R3 := 0
000130cb: R4 := pad:64[mem[R1 + R3]]
000130d3: R5 := pad:64[mem[R0 + R3]]
000130da: R4 := pad:64[31:0[R4] ^ 31:0[R5]]
000130e3: mem := mem with [R0 + R3] <- 7:0[R4]
000130e9: R3 := R3 + 1
000130ef: #179 := ~R3
000130f4: #180 := R2 + ~R3
000130fa: VF := extend:128[#180 + 1] <> extend:128[R2] + extend:128[#179] + 1
00013100: CF := pad:128[#180 + 1] <> pad:128[R2] + pad:128[#179] + 1
00013104: ZF := #180 + 1 = 0
00013108: NF := 63:63[#180 + 1]
0001310e: when ZF <> 1 goto %0001310c
00034850: goto %0001315d

0001315d:
0001315f: goto %00012ea0

000159c1:
000159c5: R4 := R1 + 1
000159ca: R3 := 0
000159d1: R4 := R0 + ~R4 + 1
000159d7: #297 := R4 - 0xE
000159dc: VF := extend:128[#297] <> extend:128[R4] - 0xE
000159e1: CF := pad:128[#297] <> pad:128[R4] + 0xFFFFFFFFFFFFFFF2
000159e5: ZF := #297 = 0
000159e9: NF := 63:63[#297]
000159ef: when CF & ~ZF goto %00012eaa
00034851: goto %000159f3

00012eaa:
00012eae: #172 := R5 - 0xE
00012eb3: VF := extend:128[#172] <> extend:128[R5] - 0xE
00012eb8: CF := pad:128[#172] <> pad:128[R5] + 0xFFFFFFFFFFFFFFF2
00012ebc: ZF := #172 = 0
00012ec0: NF := 63:63[#172]
00012ec7: when ~(CF & ~ZF) goto %00012ec5
00034852: goto %000158e0

00012ec5:
00012ece: R3 := R0
00012ed4: R6 := R1
00012eda: R5 := R2
00012edf: R4 := 0
00012ee4: goto %00012ee2

000158e0:
000158e4: R4 := 63:4[R2].0
00034853: goto %000158e8

000158e8:
000158ee: V0 := mem[R1 + R3, el]:u128
000158f6: V1 := mem[R0 + R3, el]:u128
000158fd: V0 := V1 ^ V0
00015906: mem := mem with [R0 + R3, el]:u128 <- V0
0001590c: R3 := R3 + 0x10
00015912: #291 := ~R3
00015917: #292 := R4 + ~R3
0001591d: VF := extend:128[#292 + 1] <> extend:128[R4] + extend:128[#291] + 1
00015923: CF := pad:128[#292 + 1] <> pad:128[R4] + pad:128[#291] + 1
00015927: ZF := #292 + 1 = 0
0001592b: NF := 63:63[#292 + 1]
00015930: when ZF <> 1 goto %000158e8
00034854: goto %00015934

00015934:
00015939: R5 := R2 + ~R4 + 1
00015940: R6 := R1 + R4
00015947: R3 := R0 + R4
0001594d: #293 := ~R4
00015952: #294 := R2 + ~R4
00015958: VF := extend:128[#294 + 1] <> extend:128[R2] + extend:128[#293] + 1
0001595e: CF := pad:128[#294 + 1] <> pad:128[R2] + pad:128[#293] + 1
00015962: ZF := #294 + 1 = 0
00015966: NF := 63:63[#294 + 1]
0001596b: when ZF goto %00012ea0
00034855: goto %0001596f

0001596f:
00015973: R7 := R5 - 1
00015979: R2 := R5
0001597f: #295 := R7 - 6
00015984: VF := extend:128[#295] <> extend:128[R7] - 6
00015989: CF := pad:128[#295] <> pad:128[R7] + 0xFFFFFFFFFFFFFFFA
0001598d: ZF := #295 = 0
00015991: NF := 63:63[#295]
00015997: when ~(CF & ~ZF) goto %00012f36
00034856: goto %00012ee2

00012ee2:
00012eeb: V0 := pad:128[mem[R1 + R4, el]:u64]
00012ef1: R1 := 63:3[R2].0
00012ef9: V1 := pad:128[mem[R0 + R4, el]:u64]
00012f00: R5 := R5 + ~R1 + 1
00012f07: R6 := R6 + R1
00012f0e: R3 := R3 + R1
00012f15: V0 := pad:128[63:0[V1] ^ 63:0[V0]]
00012f1e: mem := mem with [R0 + R4, el]:u64 <- 63:0[V0]
00012f23: VF := 0
00012f26: CF := 0
00012f2a: ZF := pad:64[2:0[R2]] = 0
00012f2d: NF := 0
00012f32: when ZF goto %00012ea0
00034857: goto %00012f36

00012f36:
00012f3b: R1 := pad:64[mem[R3]]
00012f42: R2 := pad:64[mem[R6]]
00012f49: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00012f51: mem := mem with [R3] <- 7:0[R1]
00012f57: #173 := R5 - 1
00012f5c: VF := extend:128[#173] <> extend:128[R5] - 1
00012f61: CF := pad:128[#173] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFF
00012f65: ZF := #173 = 0
00012f69: NF := 63:63[#173]
00012f6e: when ZF goto %00012ea0
00034858: goto %00012f72

00012f72:
00012f77: R1 := pad:64[mem[R6 + 1]]
00012f7e: R2 := pad:64[mem[R3 + 1]]
00012f85: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00012f8d: mem := mem with [R3 + 1] <- 7:0[R1]
00012f93: #174 := R5 - 2
00012f98: VF := extend:128[#174] <> extend:128[R5] - 2
00012f9d: CF := pad:128[#174] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFE
00012fa1: ZF := #174 = 0
00012fa5: NF := 63:63[#174]
00012faa: when ZF goto %00012ea0
00034859: goto %00012fae

00012fae:
00012fb3: R1 := pad:64[mem[R6 + 2]]
00012fba: R2 := pad:64[mem[R3 + 2]]
00012fc1: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00012fc9: mem := mem with [R3 + 2] <- 7:0[R1]
00012fcf: #175 := R5 - 3
00012fd4: VF := extend:128[#175] <> extend:128[R5] - 3
00012fd9: CF := pad:128[#175] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFD
00012fdd: ZF := #175 = 0
00012fe1: NF := 63:63[#175]
00012fe6: when ZF goto %00012ea0
0003485a: goto %00012fea

00012fea:
00012fef: R1 := pad:64[mem[R6 + 3]]
00012ff6: R2 := pad:64[mem[R3 + 3]]
00012ffd: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00013005: mem := mem with [R3 + 3] <- 7:0[R1]
0001300b: #176 := R5 - 4
00013010: VF := extend:128[#176] <> extend:128[R5] - 4
00013015: CF := pad:128[#176] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFC
00013019: ZF := #176 = 0
0001301d: NF := 63:63[#176]
00013022: when ZF goto %00012ea0
0003485b: goto %00013026

00013026:
0001302b: R1 := pad:64[mem[R6 + 4]]
00013032: R2 := pad:64[mem[R3 + 4]]
00013039: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
00013041: mem := mem with [R3 + 4] <- 7:0[R1]
00013047: #177 := R5 - 5
0001304c: VF := extend:128[#177] <> extend:128[R5] - 5
00013051: CF := pad:128[#177] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFB
00013055: ZF := #177 = 0
00013059: NF := 63:63[#177]
0001305e: when ZF goto %00012ea0
0003485c: goto %00013062

00013062:
00013067: R1 := pad:64[mem[R6 + 5]]
0001306e: R2 := pad:64[mem[R3 + 5]]
00013075: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
0001307d: mem := mem with [R3 + 5] <- 7:0[R1]
00013083: #178 := R5 - 6
00013088: VF := extend:128[#178] <> extend:128[R5] - 6
0001308d: CF := pad:128[#178] <> pad:128[R5] + 0xFFFFFFFFFFFFFFFA
00013091: ZF := #178 = 0
00013095: NF := 63:63[#178]
0001309a: when ZF goto %00012ea0
0003485d: goto %0001309e

0001309e:
000130a3: R1 := pad:64[mem[R6 + 6]]
000130aa: R2 := pad:64[mem[R3 + 6]]
000130b1: R1 := pad:64[31:0[R1] ^ 31:0[R2]]
000130b9: mem := mem with [R3 + 6] <- 7:0[R1]
000130be: call R30 with noreturn

000159f3:
0003485e: goto %0001310c

0001310c:
00013117: R4 := pad:64[mem[R1 + R3]]
0001311f: R5 := pad:64[mem[R0 + R3]]
00013126: R4 := pad:64[31:0[R4] ^ 31:0[R5]]
0001312f: mem := mem with [R0 + R3] <- 7:0[R4]
00013135: R3 := R3 + 1
0001313b: #181 := ~R3
00013140: #182 := R2 + ~R3
00013146: VF := extend:128[#182 + 1] <> extend:128[R2] + extend:128[#181] + 1
0001314c: CF := pad:128[#182 + 1] <> pad:128[R2] + pad:128[#181] + 1
00013150: ZF := #182 + 1 = 0
00013154: NF := 63:63[#182 + 1]
00013159: when ZF <> 1 goto %0001310c
0003485f: goto %00012ea0

00012ea0:
00012ea8: call R30 with noreturn

00034860: sub myexit(myexit_result)
00034c13: myexit_result :: out u32 = low:32[R0]

00019d6c:
00019d70: #574 := R31 - 0x20
00019d76: mem := mem with [#574, el]:u64 <- R29
00019d7c: mem := mem with [#574 + 8, el]:u64 <- R30
00019d80: R31 := #574
00019d86: R29 := R31
00019d8e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00019d94: R19 := pad:64[31:0[R0]]
00019d9a: when 31:0[R0] <> 0 goto %00019d98
00034861: goto %00019dc6

00019dc6:
00019dcd: R0 := pad:64[31:0[R19]]
00019dd2: R30 := 0x40E34C
00019dd5: call @exit with return %00019d98

00019d98:
00019da0: R1 := 0x430000
00019da5: R0 := 0x415000
00019daa: R2 := 0x36
00019db0: R0 := R0 + 0xFF8
00019db7: R3 := mem[R1 + 0x330, el]:u64
00019dbc: R1 := 1
00019dc1: R30 := 0x40E368
00019dc3: call @fwrite with return %00019dc5

00019dc5:
00019dc8: goto %00019dc6

00034862: sub new_auth(new_auth_result)
00034c14: new_auth_result :: out u32 = low:32[R0]

00016fa2:
00016fa9: #373 := R31 - 0x10
00016faf: mem := mem with [#373, el]:u64 <- R29
00016fb5: mem := mem with [#373 + 8, el]:u64 <- R30
00016fb9: R31 := #373
00016fbe: R0 := 0x13C
00016fc4: R29 := R31
00016fc9: R30 := 0x404E50
00016fcc: call @malloc with return %00016fce

00016fce:
00016fd2: when R0 = 0 goto %00016fd0
00034863: goto %0002b13a

0002b13a:
0002b13d: V0 := 0
0002b143: R5 := R0 + 0x32
0002b14a: mem := mem with [R0 + 0x30, el]:u16 <- 0
0002b150: R4 := R0 + 0x64
0002b156: R3 := R0 + 0xFA
0002b15c: R2 := R0 + 0xC8
0002b162: R1 := R0 + 0x96
0002b168: R6 := R0 + 0x200
0002b170: mem := mem with [R0, el]:u128 <- V0
0002b176: mem := mem with [R0 + 0x10, el]:u128 <- V0
0002b17b: R7 := 0x416000
0002b183: mem := mem with [R0 + 0x20, el]:u128 <- V0
0002b18a: V1 := pad:128[mem[R7 + 0x258, el]:u64]
0002b192: mem := mem with [R5, el]:u128 <- V0
0002b198: mem := mem with [R5 + 0x10, el]:u128 <- V0
0002b1a0: mem := mem with [R5 + 0x20, el]:u128 <- V0
0002b1a7: mem := mem with [R5 + 0x30, el]:u16 <- 0
0002b1ae: mem := mem with [R0 + 0x94, el]:u16 <- 0
0002b1b6: mem := mem with [R4, el]:u128 <- V0
0002b1bc: mem := mem with [R4 + 0x10, el]:u128 <- V0
0002b1c4: mem := mem with [R4 + 0x20, el]:u128 <- V0
0002b1cc: mem := mem with [R3, el]:u128 <- V0
0002b1d2: mem := mem with [R3 + 0x10, el]:u128 <- V0
0002b1da: mem := mem with [R3 + 0x20, el]:u128 <- V0
0002b1e1: mem := mem with [R3 + 0x30, el]:u16 <- 0
0002b1e8: mem := mem with [R0 + 0xF8, el]:u16 <- 0
0002b1f0: mem := mem with [R2, el]:u128 <- V0
0002b1f6: mem := mem with [R2 + 0x10, el]:u128 <- V0
0002b1fe: mem := mem with [R2 + 0x20, el]:u128 <- V0
0002b206: mem := mem with [R1, el]:u128 <- V0
0002b20c: mem := mem with [R1 + 0x10, el]:u128 <- V0
0002b214: mem := mem with [R1 + 0x20, el]:u128 <- V0
0002b21b: mem := mem with [R1 + 0x30, el]:u16 <- 0
0002b222: mem := mem with [R6 - 0xCC, el]:u64 <- 0
0002b22a: mem := mem with [R6 - 0xD4, el]:u64 <- 63:0[V1]
00034864: goto %00016fd0

00016fd0:
00016fda: R29 := mem[R31, el]:u64
00016fdf: R30 := mem[R31 + 8, el]:u64
00016fe3: R31 := R31 + 0x10
00016fe8: call R30 with noreturn

00034865: sub new_rr_data(new_rr_data_result)
00034c15: new_rr_data_result :: out u32 = low:32[R0]

00018022:
00018026: #458 := R31 - 0x10
0001802c: mem := mem with [#458, el]:u64 <- R29
00018032: mem := mem with [#458 + 8, el]:u64 <- R30
00018036: R31 := #458
0001803b: R0 := 0x68
00018041: R29 := R31
00018046: R30 := 0x40EDF0
00018048: call @malloc with return %0001804a

0001804a:
0001804e: R2 := R0 + 0x28
00018053: R1 := 0x416000
00018058: V1 := 0xFFFFFFFF00000000
0001805d: V0 := 0
00018064: mem := mem with [R0, el]:u32 <- 0
0001806b: V2 := mem[R1 + 0x390, el]:u128
00018072: mem := mem with [R0 + 8, el]:u64 <- 0
0001807a: mem := mem with [R0 + 0x20, el]:u64 <- 63:0[V1]
00018082: mem := mem with [R0 + 0x10, el]:u128 <- V2
0001808a: mem := mem with [R2, el]:u128 <- V0
00018090: mem := mem with [R2 + 0x10, el]:u128 <- V0
00018096: #459 := R2 + 0x20
0001809c: mem := mem with [#459, el]:u128 <- V0
000180a2: mem := mem with [#459 + 0x10, el]:u128 <- V0
000180a9: R29 := mem[R31, el]:u64
000180ae: R30 := mem[R31 + 8, el]:u64
000180b2: R31 := R31 + 0x10
000180b7: call R30 with noreturn

00034866: sub noproxy_add(noproxy_add_result)
00034c16: noproxy_add_result :: out u32 = low:32[R0]

000200e0:
000200e4: #933 := R31 - 0x50
000200ea: mem := mem with [#933, el]:u64 <- R29
000200f0: mem := mem with [#933 + 8, el]:u64 <- R30
000200f4: R31 := #933
000200fa: R29 := R31
00020100: #934 := R31 + 0x20
00020106: mem := mem with [#934, el]:u64 <- R21
0002010c: mem := mem with [#934 + 8, el]:u64 <- R22
00020111: R21 := 0x413000
00020117: R21 := R21 + 0xBB8
0002011d: R2 := R31 + 0x48
00020123: #935 := R31 + 0x10
00020129: mem := mem with [#935, el]:u64 <- R19
0002012f: mem := mem with [#935 + 8, el]:u64 <- R20
00020135: R20 := R0
0002013b: R0 := R1
00020141: R1 := R21
00020146: R30 := 0x409F3C
00020149: call @strtok_r with return %0002014b

0002014b:
0002014f: when R0 = 0 goto %0002014d
00034867: goto %00028922

00028922:
00028925: R22 := 0x430000
0002892b: R19 := R0
00028931: R22 := R22 + 0x370
00028939: mem := mem with [R31 + 0x30, el]:u64 <- R23
0002893e: R23 := 0x413000
00028944: R23 := R23 + 0xBC0
00028949: goto %00028947

00028947:
0002894f: R1 := pad:64[mem[R22 + 4, el]:u32]
00028955: R0 := R19
0002895b: when 31:0[R1] = 0 goto %00028959
00034868: goto %000289af

000289af:
000289b3: R1 := R19
000289b9: R0 := R23
000289be: R30 := 0x409FA4
000289c0: call @printf with return %000289c2

000289c2:
000289c6: R0 := R19
000289ca: goto %00028959

00028959:
00028961: R30 := 0x409F60
00028963: call @strdup with return %00028965

00028965:
00028969: R2 := R0
0002896e: R1 := 0
00028974: R0 := R20
00028979: R30 := 0x409F70
0002897b: call @plist_add with return %0002897d

0002897d:
00028981: R20 := R0
00028987: R2 := R31 + 0x48
0002898d: R1 := R21
00028992: R0 := 0
00028997: R30 := 0x409F84
00028999: call @strtok_r with return %0002899b

0002899b:
0002899f: R19 := R0
000289a5: when R0 = 0 goto %000289a3
00034869: goto %00028947

000289a3:
000289ad: R23 := mem[R31 + 0x30, el]:u64
0003486a: goto %0002014d

0002014d:
00020156: R0 := R20
0002015c: #936 := R31 + 0x10
00020161: R19 := mem[#936, el]:u64
00020166: R20 := mem[#936 + 8, el]:u64
0002016c: #937 := R31 + 0x20
00020171: R21 := mem[#937, el]:u64
00020176: R22 := mem[#937 + 8, el]:u64
0002017d: R29 := mem[R31, el]:u64
00020182: R30 := mem[R31 + 8, el]:u64
00020186: R31 := R31 + 0x50
0002018b: call R30 with noreturn

0003486b: sub noproxy_match(noproxy_match_result)
00034c17: noproxy_match_result :: out u32 = low:32[R0]

0002018d:
00020191: #938 := R31 - 0x30
00020197: mem := mem with [#938, el]:u64 <- R29
0002019d: mem := mem with [#938 + 8, el]:u64 <- R30
000201a1: R31 := #938
000201a7: R29 := R31
000201ad: #939 := R31 + 0x10
000201b3: mem := mem with [#939, el]:u64 <- R19
000201b9: mem := mem with [#939 + 8, el]:u64 <- R20
000201be: R20 := 0x430000
000201c4: R20 := R20 + 0x370
000201cb: R19 := mem[R20 + 8, el]:u64
000201d1: when R19 = 0 goto %000201cf
0003486c: goto %000288ff

000288ff:
00028903: #1292 := R31 + 0x20
00028909: mem := mem with [#1292, el]:u64 <- R21
0002890f: mem := mem with [#1292 + 8, el]:u64 <- R22
00028914: R22 := 0x413000
0002891a: R21 := R0
00028920: R22 := R22 + 0xBF0
0003486d: goto %00020221

00020221:
0002022b: R0 := mem[R19 + 8, el]:u64
00020231: when R0 = 0 goto %0002022f
0003486e: goto %00020260

00020260:
00020265: R2 := pad:64[mem[R0]]
0002026b: when 31:0[R2] <> 0 goto %00020269
0003486f: goto %0002022f

00020269:
00020272: R1 := R21
00020277: R2 := 0
0002027c: R30 := 0x40A050
0002027f: call @fnmatch with return %00020281

00020281:
00020284: when 31:0[R0] <> 0 goto %0002022f
00034870: goto %00020288

00020288:
0002028d: R0 := pad:64[mem[R20 + 4, el]:u32]
00020293: when 31:0[R0] <> 0 goto %00020291
00034871: goto %000202b6

00020291:
0002029b: R2 := mem[R19 + 8, el]:u64
000202a1: R1 := R21
000202a6: R0 := 0x413000
000202ac: R0 := R0 + 0xBE0
000202b1: R30 := 0x40A07C
000202b3: call @printf with return %000202b5

000202b5:
000202b8: goto %000202b6

000202b6:
000202bd: #942 := R31 + 0x20
000202c2: R21 := mem[#942, el]:u64
000202c7: R22 := mem[#942 + 8, el]:u64
000202cc: R0 := 1
000202d0: goto %000201d9

0002022f:
00020239: R2 := pad:64[mem[R20 + 4, el]:u32]
0002023e: when 31:0[R2] <> 0 goto %000201fe
00034872: goto %00020242

000201fe:
00020203: R2 := mem[R19 + 8, el]:u64
00020209: R1 := R21
0002020f: R0 := R22
00020214: R30 := 0x40A034
00020216: call @printf with return %00020218

00020218:
0002021d: R19 := mem[R19 + 0x10, el]:u64
00020223: when R19 <> 0 goto %00020221
00034873: goto %000288eb

000288eb:
000288ef: #1291 := R31 + 0x20
000288f4: R21 := mem[#1291, el]:u64
000288f9: R22 := mem[#1291 + 8, el]:u64
000288fd: goto %000201cf

00020242:
00020247: R19 := mem[R19 + 0x10, el]:u64
0002024c: when R19 <> 0 goto %00020221
00034874: goto %00020250

00020250:
00020254: #941 := R31 + 0x20
00020259: R21 := mem[#941, el]:u64
0002025e: R22 := mem[#941 + 8, el]:u64
00034875: goto %000201cf

000201cf:
000201d7: R0 := 0
00034876: goto %000201d9

000201d9:
000201dd: #940 := R31 + 0x10
000201e2: R19 := mem[#940, el]:u64
000201e7: R20 := mem[#940 + 8, el]:u64
000201ee: R29 := mem[R31, el]:u64
000201f3: R30 := mem[R31 + 8, el]:u64
000201f7: R31 := R31 + 0x30
000201fc: call R30 with noreturn

00034877: sub ntlm2_hash_password(ntlm2_hash_password_result)
00034c18: ntlm2_hash_password_result :: out u32 = low:32[R0]

0001b9ca:
0001b9ce: #687 := R31 - 0x50
0001b9d4: mem := mem with [#687, el]:u64 <- R29
0001b9da: mem := mem with [#687 + 8, el]:u64 <- R30
0001b9de: R31 := #687
0001b9e4: R29 := R31
0001b9ea: #688 := R31 + 0x10
0001b9f0: mem := mem with [#688, el]:u64 <- R19
0001b9f6: mem := mem with [#688 + 8, el]:u64 <- R20
0001b9fc: R19 := R2
0001ba02: #689 := R31 + 0x20
0001ba08: mem := mem with [#689, el]:u64 <- R21
0001ba0e: mem := mem with [#689 + 8, el]:u64 <- R22
0001ba14: R22 := R1
0001ba1c: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001ba22: R23 := R0
0001ba27: R0 := 0x16
0001ba2c: R30 := 0x40AC78
0001ba2e: call @zmalloc with return %0001ba30

0001ba30:
0001ba34: R1 := R19
0001ba3a: R20 := R0
0001ba40: R0 := R31 + 0x48
0001ba45: R30 := 0x40AC88
0001ba47: call @unicode with return %0001ba49

0001ba49:
0001ba4d: R19 := extend:64[31:0[R0]]
0001ba53: R2 := R20
0001ba5a: R0 := mem[R31 + 0x48, el]:u64
0001ba60: R1 := R19
0001ba65: R30 := 0x40AC9C
0001ba67: call @md4_buffer with return %0001ba69

0001ba69:
0001ba6e: mem := mem with [R20 + 0x10, el]:u32 <- 0
0001ba75: R0 := mem[R31 + 0x48, el]:u64
0001ba7c: mem := mem with [R20 + 0x14] <- 0
0001ba82: R2 := R19
0001ba87: R1 := 0
0001ba8c: R30 := 0x40ACB4
0001ba8e: call @memset with return %0001ba90

0001ba90:
0001ba95: R0 := mem[R31 + 0x48, el]:u64
0001ba9a: R30 := 0x40ACBC
0001ba9c: call @free with return %0001ba9e

0001ba9e:
0001baa2: R0 := R23
0001baa7: R30 := 0x40ACC4
0001baa9: call @strlen with return %0001baab

0001baab:
0001baaf: R19 := R0
0001bab5: R0 := R22
0001baba: R30 := 0x40ACD0
0001babc: call @strlen with return %0001babe

0001babe:
0001bac3: R19 := R19 + R0
0001bac9: R19 := R19 + 1
0001bacf: R0 := R19
0001bad4: R30 := 0x40ACE0
0001bad6: call @zmalloc with return %0001bad8

0001bad8:
0001badc: R1 := R23
0001bae2: R21 := R0
0001bae8: R2 := R19
0001baed: R30 := 0x40ACF0
0001baf0: call @strlcat with return %0001baf2

0001baf2:
0001baf6: R2 := R19
0001bafc: R1 := R22
0001bb02: R0 := R21
0001bb07: R30 := 0x40AD00
0001bb09: call @strlcat with return %0001bb0b

0001bb0b:
0001bb0f: R0 := R21
0001bb14: R30 := 0x40AD08
0001bb16: call @uppercase with return %0001bb18

0001bb18:
0001bb1c: R1 := R21
0001bb22: R0 := R31 + 0x48
0001bb27: R30 := 0x40AD14
0001bb29: call @unicode with return %0001bb2b

0001bb2b:
0001bb2f: R19 := pad:64[31:0[R0]]
0001bb34: R0 := 0x11
0001bb39: R30 := 0x40AD20
0001bb3b: call @zmalloc with return %0001bb3d

0001bb3d:
0001bb41: R4 := R0
0001bb48: R2 := mem[R31 + 0x48, el]:u64
0001bb4e: R3 := extend:64[31:0[R19]]
0001bb53: R1 := 0x10
0001bb59: R19 := R0
0001bb5f: R0 := R20
0001bb64: R30 := 0x40AD3C
0001bb66: call @hmac_md5 with return %0001bb68

0001bb68:
0001bb6c: R0 := R20
0001bb71: R30 := 0x40AD44
0001bb73: call @free with return %0001bb75

0001bb75:
0001bb7a: R0 := mem[R31 + 0x48, el]:u64
0001bb7f: R30 := 0x40AD4C
0001bb81: call @free with return %0001bb83

0001bb83:
0001bb87: R0 := R21
0001bb8c: R30 := 0x40AD54
0001bb8e: call @free with return %0001bb90

0001bb90:
0001bb94: #690 := R31 + 0x20
0001bb99: R21 := mem[#690, el]:u64
0001bb9e: R22 := mem[#690 + 8, el]:u64
0001bba4: R0 := R19
0001bbaa: #691 := R31 + 0x10
0001bbaf: R19 := mem[#691, el]:u64
0001bbb4: R20 := mem[#691 + 8, el]:u64
0001bbbb: R23 := mem[R31 + 0x30, el]:u64
0001bbc2: R29 := mem[R31, el]:u64
0001bbc7: R30 := mem[R31 + 8, el]:u64
0001bbcb: R31 := R31 + 0x50
0001bbd0: call R30 with noreturn

00034878: sub ntlm_hash_lm_password(ntlm_hash_lm_password_result)
00034c19: ntlm_hash_lm_password_result :: out u32 = low:32[R0]

0001b75a:
0001b75d: R1 := 0x474B
0001b763: #679 := R31 - 0x140
0001b769: mem := mem with [#679, el]:u64 <- R29
0001b76f: mem := mem with [#679 + 8, el]:u64 <- R30
0001b773: R31 := #679
0001b77a: R1 := 63:32[R1].0x2153.15:0[R1]
0001b781: R1 := 63:48[R1].0x2340.31:0[R1]
0001b787: R29 := R31
0001b78d: R1 := 0x2524.47:0[R1]
0001b793: #680 := R31 + 0x10
0001b799: mem := mem with [#680, el]:u64 <- R19
0001b79f: mem := mem with [#680 + 8, el]:u64 <- R20
0001b7a7: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001b7ad: R21 := R0
0001b7b2: R0 := 0x16
0001b7ba: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001b7bf: R30 := 0x40AB44
0001b7c1: call @zmalloc with return %0001b7c3

0001b7c3:
0001b7c7: R19 := R0
0001b7cc: R0 := 0xF
0001b7d1: R30 := 0x40AB50
0001b7d3: call @zmalloc with return %0001b7d5

0001b7d5:
0001b7d9: R20 := R0
0001b7df: R0 := R21
0001b7e4: R30 := 0x40AB5C
0001b7e6: call @strlen with return %0001b7e8

0001b7e8:
0001b7ec: R2 := R0
0001b7f1: R3 := 0xE
0001b7f7: #681 := ~R3
0001b7fc: #682 := R0 + ~R3
0001b802: VF := extend:128[#682 + 1] <> extend:128[R0] + extend:128[#681] + 1
0001b808: CF := pad:128[#682 + 1] <> pad:128[R0] + pad:128[#681] + 1
0001b80c: ZF := #682 + 1 = 0
0001b810: NF := 63:63[#682 + 1]
0001b81f: when ~(CF & ~ZF) goto %0001b817
0001b820: goto %0001b81b

0001b81b:
0001b81c: R2 := R3
0001b822: goto %0001b81e

0001b817:
0001b818: R2 := R2
0001b821: goto %0001b81e

0001b81e:
0001b828: R1 := R21
0001b82e: R0 := R20
0001b833: R30 := 0x40AB78
0001b836: call @strncpy with return %0001b838

0001b838:
0001b83b: R30 := 0x40AB7C
0001b83d: call @uppercase with return %0001b83f

0001b83f:
0001b843: R1 := R31 + 0x40
0001b849: R0 := R20
0001b84e: R30 := 0x40AB88
0001b850: call @ntlm_set_key with return %0001b852

0001b852:
0001b856: R2 := R19
0001b85b: R3 := 0
0001b861: R1 := R31 + 0x38
0001b867: R0 := R31 + 0x40
0001b86c: R30 := 0x40AB9C
0001b86e: call @gl_des_ecb_crypt with return %0001b870

0001b870:
0001b874: R1 := R31 + 0x40
0001b87a: R0 := R20 + 7
0001b87f: R30 := 0x40ABA8
0001b881: call @ntlm_set_key with return %0001b883

0001b883:
0001b887: R1 := R31 + 0x38
0001b88d: R2 := R19 + 8
0001b893: R0 := R31 + 0x40
0001b898: R3 := 0
0001b89d: R30 := 0x40ABBC
0001b89f: call @gl_des_ecb_crypt with return %0001b8a1

0001b8a1:
0001b8a6: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001b8ad: mem := mem with [R19 + 0x14] <- 0
0001b8b3: R0 := R20
0001b8b8: R30 := 0x40ABCC
0001b8ba: call @free with return %0001b8bc

0001b8bc:
0001b8c1: R21 := mem[R31 + 0x20, el]:u64
0001b8c7: R0 := R19
0001b8cd: #683 := R31 + 0x10
0001b8d2: R19 := mem[#683, el]:u64
0001b8d7: R20 := mem[#683 + 8, el]:u64
0001b8de: R29 := mem[R31, el]:u64
0001b8e3: R30 := mem[R31 + 8, el]:u64
0001b8e7: R31 := R31 + 0x140
0001b8ec: call R30 with noreturn

00034879: sub ntlm_hash_nt_password(ntlm_hash_nt_password_result)
00034c1a: ntlm_hash_nt_password_result :: out u32 = low:32[R0]

0001b8ee:
0001b8f2: #684 := R31 - 0x30
0001b8f8: mem := mem with [#684, el]:u64 <- R29
0001b8fe: mem := mem with [#684 + 8, el]:u64 <- R30
0001b902: R31 := #684
0001b908: R29 := R31
0001b90e: #685 := R31 + 0x10
0001b914: mem := mem with [#685, el]:u64 <- R19
0001b91a: mem := mem with [#685 + 8, el]:u64 <- R20
0001b920: R19 := R0
0001b925: R0 := 0x16
0001b92a: R30 := 0x40ABF8
0001b92c: call @zmalloc with return %0001b92e

0001b92e:
0001b932: R1 := R19
0001b938: R19 := R0
0001b93e: R0 := R31 + 0x28
0001b943: R30 := 0x40AC08
0001b945: call @unicode with return %0001b947

0001b947:
0001b94b: R20 := extend:64[31:0[R0]]
0001b951: R2 := R19
0001b958: R0 := mem[R31 + 0x28, el]:u64
0001b95e: R1 := R20
0001b963: R30 := 0x40AC1C
0001b965: call @md4_buffer with return %0001b967

0001b967:
0001b96c: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001b973: R0 := mem[R31 + 0x28, el]:u64
0001b97a: mem := mem with [R19 + 0x14] <- 0
0001b980: R2 := R20
0001b985: R1 := 0
0001b98a: R30 := 0x40AC34
0001b98d: call @memset with return %0001b98f

0001b98f:
0001b994: R0 := mem[R31 + 0x28, el]:u64
0001b999: R30 := 0x40AC3C
0001b99b: call @free with return %0001b99d

0001b99d:
0001b9a1: R0 := R19
0001b9a7: #686 := R31 + 0x10
0001b9ac: R19 := mem[#686, el]:u64
0001b9b1: R20 := mem[#686 + 8, el]:u64
0001b9b8: R29 := mem[R31, el]:u64
0001b9bd: R30 := mem[R31 + 8, el]:u64
0001b9c1: R31 := R31 + 0x30
0001b9c6: call R30 with noreturn

0003487a: sub ntlm_request(ntlm_request_result)
00034c1b: ntlm_request_result :: out u32 = low:32[R0]

0001ae95:
0001ae9c: #655 := R31 - 0x50
0001aea2: mem := mem with [#655, el]:u64 <- R29
0001aea8: mem := mem with [#655 + 8, el]:u64 <- R30
0001aeac: R31 := #655
0001aeb2: R29 := R31
0001aeb8: #656 := R31 + 0x20
0001aebe: mem := mem with [#656, el]:u64 <- R21
0001aec4: mem := mem with [#656 + 8, el]:u64 <- R22
0001aeca: R22 := R0
0001aed0: #657 := R31 + 0x10
0001aed6: mem := mem with [#657, el]:u64 <- R19
0001aedc: mem := mem with [#657 + 8, el]:u64 <- R20
0001aee2: R19 := R1
0001aee8: #658 := R31 + 0x30
0001aeee: mem := mem with [#658, el]:u64 <- R23
0001aef4: mem := mem with [#658 + 8, el]:u64 <- R24
0001aefa: R24 := R1 + 0x64
0001af00: #659 := R31 + 0x40
0001af06: mem := mem with [#659, el]:u64 <- R25
0001af0c: mem := mem with [#659 + 8, el]:u64 <- R26
0001af12: R25 := R1 + 0x32
0001af18: R0 := R25
0001af1f: mem := mem with [R22, el]:u64 <- 0
0001af24: R30 := 0x40ADA4
0001af26: call @strlen with return %0001af28

0001af28:
0001af2c: R20 := R0
0001af32: R0 := R24
0001af37: R30 := 0x40ADB0
0001af39: call @strlen with return %0001af3b

0001af3b:
0001af40: R23 := pad:64[mem[R19 + 0x138, el]:u32]
0001af45: R1 := 0x430000
0001af4b: R21 := R0
0001af52: R0 := pad:64[mem[R1 + 0x374, el]:u32]
0001af58: when 31:0[R23] <> 0 goto %0001af56
0003487b: goto %0002a536

0002a536:
0002a53b: R1 := pad:64[mem[R19 + 0x12C, el]:u32]
0002a540: when 31:0[R1] = 0 goto %0001b168
0003487c: goto %0002a544

0001b168:
0001b16d: R1 := pad:64[mem[R19 + 0x130, el]:u32]
0001b173: #667 := 31:0[R1] - 2
0001b178: VF := extend:64[#667] <> extend:64[31:0[R1]] - 2
0001b17d: CF := pad:64[#667] <> pad:64[31:0[R1]] + 0xFFFFFFFE
0001b181: ZF := #667 = 0
0001b185: NF := 31:31[#667]
0001b18b: when ZF goto %0001b189
0003487d: goto %0002a4f2

0001b189:
0001b191: R23 := 0xB207
0001b197: R23 := pad:64[0xA208.15:0[R23]]
0001b19b: goto %0001af56

0002a4f2:
0002a4f7: R26 := pad:64[mem[R19 + 0x134, el]:u32]
0002a4fc: when 31:0[R1] <> 0 goto %0001b19d
0003487e: goto %0002a500

0001b19d:
0001b1a0: VF := 0
0001b1a3: CF := 1
0001b1a7: ZF := 31:0[R26] = 0
0001b1ab: NF := 31:31[R26]
0001b1b0: R23 := 0xB205
0001b1b5: R1 := 0xB207
0001b1c3: when ZF goto %0001b1bb
0001b1c4: goto %0001b1bf

0001b1bf:
0001b1c0: R23 := pad:64[31:0[R1]]
0001b1c6: goto %0001b1c2

0001b1bb:
0001b1bc: R23 := pad:64[31:0[R23]]
0001b1c5: goto %0001b1c2

0001b1c2:
0001b1ca: goto %0001af56

0002a500:
0002a503: R23 := 0xB206
0002a508: when 31:0[R26] <> 0 goto %0001af56
0003487f: goto %0002a50c

0002a50c:
0002a50f: when 31:0[R0] = 0 goto %0001b10d
00034880: goto %0002a513

0002a513:
0002a516: R0 := 0x415000
0002a51c: R0 := R0 + 0x250
0002a521: R30 := 0x40AEDC
0002a523: call @puts with return %0002a525

0002a525:
0002a529: R0 := R19
0002a52e: R30 := 0x40AEE4
0002a530: call @dump_auth with return %0002a532

0002a532:
0002a534: goto %0001b10d

0002a544:
0002a547: R23 := 0xB205
0002a54d: R23 := pad:64[0xA208.15:0[R23]]
00034881: goto %0001af56

0001af56:
0001af5f: when 31:0[R0] <> 0 goto %0001af5d
00034882: goto %0001afbd

0001af5d:
0001af65: R0 := 0x415000
0001af6b: R0 := R0 + 0x278
0001af70: R30 := 0x40AEF4
0001af72: call @puts with return %0001af74

0001af74:
0001af78: R1 := R25
0001af7d: R0 := 0x415000
0001af83: R0 := R0 + 0x288
0001af88: R30 := 0x40AF04
0001af8a: call @printf with return %0001af8c

0001af8c:
0001af90: R1 := R24
0001af95: R0 := 0x415000
0001af9b: R0 := R0 + 0x298
0001afa0: R30 := 0x40AF14
0001afa2: call @printf with return %0001afa4

0001afa4:
0001afa8: R1 := pad:64[31:0[R23]]
0001afad: R0 := 0x415000
0001afb3: R0 := R0 + 0x2A8
0001afb8: R30 := 0x40AF24
0001afba: call @printf with return %0001afbc

0001afbc:
0001afbf: goto %0001afbd

0001afbd:
0001afc3: R0 := 0x400
0001afc8: R30 := 0x40ADE0
0001afca: call @zmalloc with return %0001afcc

0001afcc:
0001afd0: R4 := pad:64[15:0[R20]]
0001afd6: R3 := pad:64[15:0[R21]]
0001afdb: R2 := 0
0001afe0: R1 := 0
0001afe6: R19 := R0
0001afed: R2 := pad:64[31:16[R2].15:0[R4]]
0001aff4: R1 := pad:64[31:16[R1].15:0[R3]]
0001aff9: R6 := 0x544E
0001b000: R6 := 63:32[R6].0x4D4C.15:0[R6]
0001b007: R2 := pad:64[15:0[R4].15:0[R2]]
0001b00e: R1 := pad:64[15:0[R3].15:0[R1]]
0001b014: R4 := pad:64[31:0[R21] + 0x20]
0001b01b: R6 := 63:48[R6].0x5353.31:0[R6]
0001b020: R5 := 1
0001b026: R6 := 0x50.47:0[R6]
0001b02b: R3 := 0x20
0001b033: mem := mem with [R19, el]:u64 <- R6
0001b039: R0 := R24
0001b03f: #660 := R19 + 8
0001b045: mem := mem with [#660, el]:u32 <- 31:0[R5]
0001b04b: mem := mem with [#660 + 4, el]:u32 <- 31:0[R23]
0001b051: R23 := extend:64[31:0[R21]]
0001b057: #661 := R19 + 0x10
0001b05d: mem := mem with [#661, el]:u32 <- 31:0[R2]
0001b063: mem := mem with [#661 + 4, el]:u32 <- 31:0[R4]
0001b069: #662 := R19 + 0x18
0001b06f: mem := mem with [#662, el]:u32 <- 31:0[R1]
0001b075: mem := mem with [#662 + 4, el]:u32 <- 31:0[R3]
0001b07a: R30 := 0x40AE3C
0001b07c: call @strdup with return %0001b07e

0001b07e:
0001b081: R30 := 0x40AE40
0001b083: call @uppercase with return %0001b085

0001b085:
0001b089: R24 := R0
0001b08f: R2 := R23
0001b095: R1 := R24
0001b09b: R0 := R19 + 0x20
0001b0a0: R30 := 0x40AE54
0001b0a2: call @memcpy with return %0001b0a4

0001b0a4:
0001b0a8: R0 := R24
0001b0ad: R30 := 0x40AE5C
0001b0af: call @free with return %0001b0b1

0001b0b1:
0001b0b5: R0 := R25
0001b0ba: R30 := 0x40AE64
0001b0bc: call @strdup with return %0001b0be

0001b0be:
0001b0c1: R30 := 0x40AE68
0001b0c3: call @uppercase with return %0001b0c5

0001b0c5:
0001b0c9: R2 := R23 + 0x20
0001b0cf: R23 := R0
0001b0d5: R1 := R23
0001b0dc: R0 := R19 + R2
0001b0e2: R2 := extend:64[31:0[R20]]
0001b0e8: R20 := pad:64[31:0[R20] + 0x20]
0001b0ed: R30 := 0x40AE84
0001b0ef: call @memcpy with return %0001b0f1

0001b0f1:
0001b0f6: R26 := pad:64[31:0[R20] + 31:0[R21]]
0001b0fc: R0 := R23
0001b101: R30 := 0x40AE90
0001b103: call @free with return %0001b105

0001b105:
0001b10b: mem := mem with [R22, el]:u64 <- R19
00034883: goto %0001b10d

0001b10d:
0001b111: #663 := R31 + 0x10
0001b116: R19 := mem[#663, el]:u64
0001b11b: R20 := mem[#663 + 8, el]:u64
0001b121: R0 := pad:64[31:0[R26]]
0001b127: #664 := R31 + 0x20
0001b12c: R21 := mem[#664, el]:u64
0001b131: R22 := mem[#664 + 8, el]:u64
0001b137: #665 := R31 + 0x30
0001b13c: R23 := mem[#665, el]:u64
0001b141: R24 := mem[#665 + 8, el]:u64
0001b147: #666 := R31 + 0x40
0001b14c: R25 := mem[#666, el]:u64
0001b151: R26 := mem[#666 + 8, el]:u64
0001b158: R29 := mem[R31, el]:u64
0001b15d: R30 := mem[R31 + 8, el]:u64
0001b161: R31 := R31 + 0x50
0001b166: call R30 with noreturn

00034884: sub ntlm_response(ntlm_response_result)
00034c1c: ntlm_response_result :: out u32 = low:32[R0]

0001b1d0:
0001b1d4: #668 := R31 - 0x1A0
0001b1da: mem := mem with [#668, el]:u64 <- R29
0001b1e0: mem := mem with [#668 + 8, el]:u64 <- R30
0001b1e4: R31 := #668
0001b1e9: R4 := 0x430000
0001b1ef: R29 := R31
0001b1f6: R4 := pad:64[mem[R4 + 0x374, el]:u32]
0001b1fc: #669 := R31 + 0x10
0001b202: mem := mem with [#669, el]:u64 <- R19
0001b208: mem := mem with [#669 + 8, el]:u64 <- R20
0001b20e: R19 := R1
0001b214: R20 := R3
0001b21a: #670 := R31 + 0x20
0001b220: mem := mem with [#670, el]:u64 <- R21
0001b226: mem := mem with [#670 + 8, el]:u64 <- R22
0001b22c: #671 := R31 + 0x30
0001b232: mem := mem with [#671, el]:u64 <- R23
0001b238: mem := mem with [#671 + 8, el]:u64 <- R24
0001b23e: R23 := pad:64[31:0[R2]]
0001b244: #672 := R31 + 0x40
0001b24a: mem := mem with [#672, el]:u64 <- R25
0001b250: mem := mem with [#672 + 8, el]:u64 <- R26
0001b256: #673 := R31 + 0x50
0001b25c: mem := mem with [#673, el]:u64 <- R27
0001b262: mem := mem with [#673 + 8, el]:u64 <- R28
0001b26a: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001b270: when 31:0[R4] <> 0 goto %0001b26e
00034885: goto %0001b2e7

0001b26e:
0001b276: R0 := 0x415000
0001b27c: R0 := R0 + 0x2C0
0001b281: R30 := 0x40B924
0001b283: call @puts with return %0001b285

0001b285:
0001b289: R0 := R19 + 0x18
0001b28e: R2 := 7
0001b293: R1 := 8
0001b298: R30 := 0x40B934
0001b29a: call @printmem with return %0001b29c

0001b29c:
0001b2a0: R2 := pad:64[31:0[R23]]
0001b2a6: R1 := R0
0001b2ac: R21 := R0
0001b2b1: R0 := 0x415000
0001b2b7: R0 := R0 + 0x2D0
0001b2bc: R30 := 0x40B94C
0001b2be: call @printf with return %0001b2c0

0001b2c0:
0001b2c4: R0 := R21
0001b2c9: R30 := 0x40B954
0001b2cb: call @free with return %0001b2cd

0001b2cd:
0001b2d2: R1 := pad:64[mem[R19 + 0x14, el]:u32]
0001b2d7: R0 := 0x415000
0001b2dd: R0 := R0 + 0x2A8
0001b2e2: R30 := 0x40B964
0001b2e4: call @printf with return %0001b2e6

0001b2e6:
0001b2e9: goto %0001b2e7

0001b2e7:
0001b2ee: #674 := 31:0[R23] - 0x27
0001b2f3: VF := extend:64[#674] <> extend:64[31:0[R23]] - 0x27
0001b2f8: CF := pad:64[#674] <> pad:64[31:0[R23]] + 0xFFFFFFD9
0001b2fc: ZF := #674 = 0
0001b300: NF := 31:31[#674]
0001b308: when ~(NF = VF & ~ZF) goto %0001b306
00034886: goto %0002a48c

0001b306:
0001b30e: R22 := 0
0001b315: mem := mem with [R31 + 0x7C, el]:u32 <- 0
00034887: goto %0001b317

0002a48c:
0002a48f: R1 := 0x430000
0002a496: R0 := pad:64[mem[R19 + 0x2C, el]:u16]
0002a49e: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0002a4a3: R22 := 0
0002a4aa: R4 := pad:64[mem[R1 + 0x374, el]:u32]
0002a4b0: R1 := R1 + 0x374
0002a4b8: mem := mem with [R31 + 0x68, el]:u64 <- R1
0002a4be: R1 := pad:64[31:0[R0] + 3]
0002a4c4: R21 := pad:64[31:0[R0]]
0002a4c9: R25 := 0xFFFF
0002a4cf: #1365 := ~31:0[R23]
0002a4d4: #1366 := 31:0[R1] + ~31:0[R23]
0002a4da: VF := extend:64[#1366 + 1] <> extend:64[31:0[R1]] +
          extend:64[#1365] + 1
0002a4e0: CF := pad:64[#1366 + 1] <> pad:64[31:0[R1]] + pad:64[#1365] + 1
0002a4e4: ZF := #1366 + 1 = 0
0002a4e8: NF := 31:31[#1366 + 1]
0002a4ee: when NF = VF goto %0001c177
00034888: goto %0001c15b

0001c15b:
0001c166: R25 := pad:64[mem[R19 + pad:64[31:0[R21]], el]:u16]
0001c16c: R24 := pad:64[31:0[R21]]
0001c172: when 31:0[R25] = 0 goto %0001c170
00034889: goto %0001c57f

0001c170:
0001c179: when 31:0[R22] = 0 goto %0001c177
0003488a: goto %0001c568

0001c568:
0001c56c: R22 := pad:64[31:0[R22] + 4]
0001c572: R22 := pad:64[15:0[R22]]
0001c577: when 31:0[R4] = 0 goto %0001b317
0003488b: goto %0001c57b

0001c57b:
0001c57d: goto %0001c183

0001c57f:
0001c584: R2 := R19 + R24
0001c58a: R0 := pad:64[31:0[R0] + 4]
0001c591: R28 := pad:64[mem[R2 + 2, el]:u16]
0001c598: R0 := pad:64[31:0[R0] + 31:0[R28]]
0001c59e: #704 := ~31:0[R23]
0001c5a3: #705 := 31:0[R0] + ~31:0[R23]
0001c5a9: VF := extend:64[#705 + 1] <> extend:64[31:0[R0]] + extend:64[#704]
          + 1
0001c5af: CF := pad:64[#705 + 1] <> pad:64[31:0[R0]] + pad:64[#704] + 1
0001c5b3: ZF := #705 + 1 = 0
0001c5b7: NF := 31:31[#705 + 1]
0001c5be: when NF = VF & ~ZF goto %0001c177
0003488c: goto %0001c5c2

0001c5c2:
0001c5c5: when 31:0[R4] = 0 goto %0001c107
0003488d: goto %0001c5c9

0001c5c9:
0001c5cd: #706 := 31:0[R25] - 3
0001c5d2: VF := extend:64[#706] <> extend:64[31:0[R25]] - 3
0001c5d7: CF := pad:64[#706] <> pad:64[31:0[R25]] + 0xFFFFFFFD
0001c5db: ZF := #706 = 0
0001c5df: NF := 31:31[#706]
0001c5e5: when ZF goto %0001c5e3
0003488e: goto %0001c5fe

0001c5e3:
0001c5eb: R0 := 0x415000
0001c5f1: R0 := R0 + 0x310
0001c5f6: R30 := 0x40B914
0001c5f8: call @printf with return %0001c5fa

0001c5fa:
0001c5fc: goto %0001c0a4

0001c5fe:
0001c602: when CF & ~ZF goto %0001c072
0003488f: goto %0001c606

0001c072:
0001c076: #698 := 31:0[R25] - 4
0001c07b: VF := extend:64[#698] <> extend:64[31:0[R25]] - 4
0001c080: CF := pad:64[#698] <> pad:64[31:0[R25]] + 0xFFFFFFFC
0001c084: ZF := #698 = 0
0001c088: NF := 31:31[#698]
0001c08e: when ZF goto %0001c08c
00034890: goto %0001ca37

0001c08c:
0001c094: R0 := 0x415000
0001c09a: R0 := R0 + 0x320
0001c09f: R30 := 0x40B904
0001c0a1: call @printf with return %0001c0a3

0001c0a3:
0001c0a6: goto %0001c0a4

0001ca37:
0001ca3b: #726 := 31:0[R25] - 5
0001ca40: VF := extend:64[#726] <> extend:64[31:0[R25]] - 5
0001ca45: CF := pad:64[#726] <> pad:64[31:0[R25]] + 0xFFFFFFFB
0001ca49: ZF := #726 = 0
0001ca4d: NF := 31:31[#726]
0001ca53: when ZF <> 1 goto %0001ca51
00034891: goto %0001ca72

0001ca51:
0001ca5a: R1 := pad:64[31:0[R25]]
0001ca5f: R0 := 0x415000
0001ca65: R0 := R0 + 0x340
0001ca6a: R30 := 0x40B8BC
0001ca6c: call @printf with return %0001ca6e

0001ca6e:
0001ca70: goto %0001c0a4

0001ca72:
0001ca75: R0 := 0x415000
0001ca7b: R0 := R0 + 0x330
0001ca80: R30 := 0x40B750
0001ca82: call @printf with return %0001ca84

0001ca84:
0001ca86: goto %0001c0a4

0001c606:
0001c60a: #707 := 31:0[R25] - 1
0001c60f: VF := extend:64[#707] <> extend:64[31:0[R25]] - 1
0001c614: CF := pad:64[#707] <> pad:64[31:0[R25]] + 0xFFFFFFFF
0001c618: ZF := #707 = 0
0001c61c: NF := 31:31[#707]
0001c622: when ZF goto %0001c620
00034892: goto %0001c63b

0001c620:
0001c628: R0 := 0x415000
0001c62e: R0 := R0 + 0x2F0
0001c633: R30 := 0x40B8F4
0001c635: call @printf with return %0001c637

0001c637:
0001c639: goto %0001c0a4

0001c63b:
0001c63e: R0 := 0x415000
0001c644: R0 := R0 + 0x300
0001c649: R30 := 0x40B008
0001c64b: call @printf with return %0001c0a4

0001c0a4:
0001c0ab: R0 := pad:64[31:0[R28] + 1]
0001c0b1: R26 := R24 + 4
0001c0b7: R0 := pad:64[extend:32[31:1[R0]]]
0001c0bd: R0 := pad:64[31:0[R0] + 1]
0001c0c3: R0 := pad:64[16:0[R0]]
0001c0c8: R30 := 0x40B020
0001c0ca: call @zmalloc with return %0001c0cc

0001c0cc:
0001c0d0: R7 := pad:64[extend:32[31:1[R28]]]
0001c0d6: R27 := R0
0001c0dc: when 31:0[R7] = 0 goto %0001c0da
00034893: goto %0001c64d

0001c64d:
0001c651: R2 := pad:64[31:0[R7] - 1]
0001c657: #708 := 31:0[R2] - 0xF
0001c65c: VF := extend:64[#708] <> extend:64[31:0[R2]] - 0xF
0001c661: CF := pad:64[#708] <> pad:64[31:0[R2]] + 0xFFFFFFF1
0001c665: ZF := #708 = 0
0001c669: NF := 31:31[#708]
0001c670: when ~(CF & ~ZF) goto %0001c66e
00034894: goto %0001c8f5

0001c66e:
0001c678: R26 := R19 + R26
0001c67d: R6 := 0
0001c682: R0 := 0
0001c687: goto %0001c685

0001c8f5:
0001c8f9: R6 := pad:64[31:4[R2]]
0001c900: R26 := R19 + R26
0001c906: R0 := R26
0001c90c: R4 := R27
0001c913: R6 := R27 + pad:64[31:0[R6].0]
00034895: goto %0001c917

0001c917:
0001c91d: V0 := 127:8[V0].mem[R0]
0001c923: V1 := 127:8[V1].mem[R0 + 1]
0001c92a: V0 := 127:16[V0].mem[R0 + 2].7:0[V0]
0001c931: V1 := 127:16[V1].mem[R0 + 3].7:0[V1]
0001c938: V0 := 127:24[V0].mem[R0 + 4].15:0[V0]
0001c93f: V1 := 127:24[V1].mem[R0 + 5].15:0[V1]
0001c946: V0 := 127:32[V0].mem[R0 + 6].23:0[V0]
0001c94d: V1 := 127:32[V1].mem[R0 + 7].23:0[V1]
0001c954: V0 := 127:40[V0].mem[R0 + 8].31:0[V0]
0001c95b: V1 := 127:40[V1].mem[R0 + 9].31:0[V1]
0001c962: V0 := 127:48[V0].mem[R0 + 0xA].39:0[V0]
0001c969: V1 := 127:48[V1].mem[R0 + 0xB].39:0[V1]
0001c970: V0 := 127:56[V0].mem[R0 + 0xC].47:0[V0]
0001c977: V1 := 127:56[V1].mem[R0 + 0xD].47:0[V1]
0001c97e: V0 := 127:64[V0].mem[R0 + 0xE].55:0[V0]
0001c985: V1 := 127:64[V1].mem[R0 + 0xF].55:0[V1]
0001c98c: V0 := 127:72[V0].mem[R0 + 0x10].63:0[V0]
0001c993: V1 := 127:72[V1].mem[R0 + 0x11].63:0[V1]
0001c99a: V0 := 127:80[V0].mem[R0 + 0x12].71:0[V0]
0001c9a1: V1 := 127:80[V1].mem[R0 + 0x13].71:0[V1]
0001c9a8: V0 := 127:88[V0].mem[R0 + 0x14].79:0[V0]
0001c9af: V1 := 127:88[V1].mem[R0 + 0x15].79:0[V1]
0001c9b6: V0 := 127:96[V0].mem[R0 + 0x16].87:0[V0]
0001c9bd: V1 := 127:96[V1].mem[R0 + 0x17].87:0[V1]
0001c9c4: V0 := 127:104[V0].mem[R0 + 0x18].95:0[V0]
0001c9cb: V1 := 127:104[V1].mem[R0 + 0x19].95:0[V1]
0001c9d2: V0 := 127:112[V0].mem[R0 + 0x1A].103:0[V0]
0001c9d9: V1 := 127:112[V1].mem[R0 + 0x1B].103:0[V1]
0001c9e0: V0 := 127:120[V0].mem[R0 + 0x1C].111:0[V0]
0001c9e7: V1 := 127:120[V1].mem[R0 + 0x1D].111:0[V1]
0001c9ed: V0 := mem[R0 + 0x1E].119:0[V0]
0001c9f3: V1 := mem[R0 + 0x1F].119:0[V1]
0001c9f7: R0 := R0 + 0x20
0001c9ff: mem := mem with [R4, el]:u128 <- V0
0001ca03: R4 := R4 + 0x10
0001ca09: #724 := ~R4
0001ca0e: #725 := R6 + ~R4
0001ca14: VF := extend:128[#725 + 1] <> extend:128[R6] + extend:128[#724] + 1
0001ca1a: CF := pad:128[#725 + 1] <> pad:128[R6] + pad:128[#724] + 1
0001ca1e: ZF := #725 + 1 = 0
0001ca22: NF := 63:63[#725 + 1]
0001ca27: when ZF <> 1 goto %0001c917
00034896: goto %0001ca2b

0001ca2b:
0001ca2f: R6 := pad:64[31:4[R2].0]
0001ca35: R0 := pad:64[31:0[R6]]
00034897: goto %0001c685

0001c685:
0001c68d: R4 := pad:64[31:0[R2] + ~31:0[R6] + 1]
0001c693: #709 := 31:0[R4] - 7
0001c698: VF := extend:64[#709] <> extend:64[31:0[R4]] - 7
0001c69d: CF := pad:64[#709] <> pad:64[31:0[R4]] + 0xFFFFFFF9
0001c6a1: ZF := #709 = 0
0001c6a5: NF := 31:31[#709]
0001c6ac: when ~(CF & ~ZF) goto %0001c6aa
00034898: goto %0001c8a9

0001c8a9:
0001c8ad: R2 := pad:64[31:0[R6]]
0001c8b3: R4 := pad:64[31:3[R4].0]
0001c8b9: R2 := R2 + 2
0001c8c0: R0 := pad:64[31:0[R0] + 31:0[R4]]
0001c8c7: R2 := R24 + (62:0[R2].0)
0001c8ce: R3 := R19 + R2
0001c8d6: V0 := pad:128[mem[R19 + R2, el]:u64]
0001c8dd: V1 := pad:128[mem[R3 + 8, el]:u64]
0001c8ea: V0 :=
          pad:128[55:48[V1].39:32[V1].23:16[V1].7:0[V1].55:48[V0].39:32[V0].23:16[V0].7:0[V0]]
0001c8f3: mem := mem with [R27 + pad:64[31:0[R6]], el]:u64 <- 63:0[V0]
00034899: goto %0001c6aa

0001c6aa:
0001c6b3: R2 := pad:64[30:0[R0].0]
0001c6b9: R4 := pad:64[31:0[R0] + 1]
0001c6c1: R3 := pad:64[mem[R26 + extend:64[31:0[R2]]]]
0001c6ca: mem := mem with [R27 + extend:64[31:0[R0]]] <- 7:0[R3]
0001c6d0: #710 := ~31:0[R4]
0001c6d5: #711 := 31:0[R7] + ~31:0[R4]
0001c6db: VF := extend:64[#711 + 1] <> extend:64[31:0[R7]] + extend:64[#710]
          + 1
0001c6e1: CF := pad:64[#711 + 1] <> pad:64[31:0[R7]] + pad:64[#710] + 1
0001c6e5: ZF := #711 + 1 = 0
0001c6e9: NF := 31:31[#711 + 1]
0001c6f0: when ~(NF = VF & ~ZF) goto %0001c0da
0003489a: goto %0001c6f4

0001c6f4:
0001c6f8: R3 := pad:64[31:0[R2] + 2]
0001c6fe: R6 := pad:64[31:0[R0] + 2]
0001c706: R3 := pad:64[mem[R26 + extend:64[31:0[R3]]]]
0001c70f: mem := mem with [R27 + extend:64[31:0[R4]]] <- 7:0[R3]
0001c715: #712 := ~31:0[R6]
0001c71a: #713 := 31:0[R7] + ~31:0[R6]
0001c720: VF := extend:64[#713 + 1] <> extend:64[31:0[R7]] + extend:64[#712]
          + 1
0001c726: CF := pad:64[#713 + 1] <> pad:64[31:0[R7]] + pad:64[#712] + 1
0001c72a: ZF := #713 + 1 = 0
0001c72e: NF := 31:31[#713 + 1]
0001c735: when ~(NF = VF & ~ZF) goto %0001c0da
0003489b: goto %0001c739

0001c739:
0001c73d: R3 := pad:64[31:0[R2] + 4]
0001c743: R4 := pad:64[31:0[R0] + 3]
0001c74b: R3 := pad:64[mem[R26 + extend:64[31:0[R3]]]]
0001c754: mem := mem with [R27 + extend:64[31:0[R6]]] <- 7:0[R3]
0001c75a: #714 := ~31:0[R4]
0001c75f: #715 := 31:0[R7] + ~31:0[R4]
0001c765: VF := extend:64[#715 + 1] <> extend:64[31:0[R7]] + extend:64[#714]
          + 1
0001c76b: CF := pad:64[#715 + 1] <> pad:64[31:0[R7]] + pad:64[#714] + 1
0001c76f: ZF := #715 + 1 = 0
0001c773: NF := 31:31[#715 + 1]
0001c77a: when ~(NF = VF & ~ZF) goto %0001c0da
0003489c: goto %0001c77e

0001c77e:
0001c782: R3 := pad:64[31:0[R2] + 6]
0001c788: R6 := pad:64[31:0[R0] + 4]
0001c790: R3 := pad:64[mem[R26 + extend:64[31:0[R3]]]]
0001c799: mem := mem with [R27 + extend:64[31:0[R4]]] <- 7:0[R3]
0001c79f: #716 := ~31:0[R6]
0001c7a4: #717 := 31:0[R7] + ~31:0[R6]
0001c7aa: VF := extend:64[#717 + 1] <> extend:64[31:0[R7]] + extend:64[#716]
          + 1
0001c7b0: CF := pad:64[#717 + 1] <> pad:64[31:0[R7]] + pad:64[#716] + 1
0001c7b4: ZF := #717 + 1 = 0
0001c7b8: NF := 31:31[#717 + 1]
0001c7bf: when ~(NF = VF & ~ZF) goto %0001c0da
0003489d: goto %0001c7c3

0001c7c3:
0001c7c7: R3 := pad:64[31:0[R2] + 8]
0001c7cd: R4 := pad:64[31:0[R0] + 5]
0001c7d5: R3 := pad:64[mem[R26 + extend:64[31:0[R3]]]]
0001c7de: mem := mem with [R27 + extend:64[31:0[R6]]] <- 7:0[R3]
0001c7e4: #718 := ~31:0[R4]
0001c7e9: #719 := 31:0[R7] + ~31:0[R4]
0001c7ef: VF := extend:64[#719 + 1] <> extend:64[31:0[R7]] + extend:64[#718]
          + 1
0001c7f5: CF := pad:64[#719 + 1] <> pad:64[31:0[R7]] + pad:64[#718] + 1
0001c7f9: ZF := #719 + 1 = 0
0001c7fd: NF := 31:31[#719 + 1]
0001c804: when ~(NF = VF & ~ZF) goto %0001c0da
0003489e: goto %0001c808

0001c808:
0001c80c: R3 := pad:64[31:0[R2] + 0xA]
0001c812: R6 := pad:64[31:0[R0] + 6]
0001c81a: R3 := pad:64[mem[R26 + extend:64[31:0[R3]]]]
0001c823: mem := mem with [R27 + extend:64[31:0[R4]]] <- 7:0[R3]
0001c829: #720 := ~31:0[R6]
0001c82e: #721 := 31:0[R7] + ~31:0[R6]
0001c834: VF := extend:64[#721 + 1] <> extend:64[31:0[R7]] + extend:64[#720]
          + 1
0001c83a: CF := pad:64[#721 + 1] <> pad:64[31:0[R7]] + pad:64[#720] + 1
0001c83e: ZF := #721 + 1 = 0
0001c842: NF := 31:31[#721 + 1]
0001c849: when ~(NF = VF & ~ZF) goto %0001c0da
0003489f: goto %0001c84d

0001c84d:
0001c851: R3 := pad:64[31:0[R2] + 0xC]
0001c857: R0 := pad:64[31:0[R0] + 7]
0001c85f: R3 := pad:64[mem[R26 + extend:64[31:0[R3]]]]
0001c868: mem := mem with [R27 + extend:64[31:0[R6]]] <- 7:0[R3]
0001c86e: #722 := ~31:0[R0]
0001c873: #723 := 31:0[R7] + ~31:0[R0]
0001c879: VF := extend:64[#723 + 1] <> extend:64[31:0[R7]] + extend:64[#722]
          + 1
0001c87f: CF := pad:64[#723 + 1] <> pad:64[31:0[R7]] + pad:64[#722] + 1
0001c883: ZF := #723 + 1 = 0
0001c887: NF := 31:31[#723 + 1]
0001c88e: when ~(NF = VF & ~ZF) goto %0001c0da
000348a0: goto %0001c892

0001c892:
0001c896: R2 := pad:64[31:0[R2] + 0xE]
0001c89e: R2 := pad:64[mem[R26 + extend:64[31:0[R2]]]]
0001c8a7: mem := mem with [R27 + extend:64[31:0[R0]]] <- 7:0[R2]
000348a1: goto %0001c0da

0001c0da:
0001c0e3: R0 := R27
0001c0e8: R30 := 0x40B158
0001c0ea: call @puts with return %0001c0ec

0001c0ec:
0001c0f0: R0 := R27
0001c0f5: R30 := 0x40B160
0001c0f7: call @free with return %0001c0f9

0001c0f9:
0001c0fe: R0 := mem[R31 + 0x68, el]:u64
0001c105: R4 := pad:64[mem[R0, el]:u32]
000348a2: goto %0001c107

0001c107:
0001c10b: R21 := pad:64[31:0[R21] + 4]
0001c111: R22 := pad:64[31:0[R22] + 4]
0001c118: R21 := pad:64[31:0[R28] + pad:32[15:0[R21]]]
0001c11f: R22 := pad:64[31:0[R28] + pad:32[15:0[R22]]]
0001c125: R21 := pad:64[15:0[R21]]
0001c12b: R22 := pad:64[15:0[R22]]
0001c131: R2 := pad:64[31:0[R21] + 3]
0001c137: R0 := pad:64[31:0[R21]]
0001c13d: #699 := ~31:0[R23]
0001c142: #700 := 31:0[R2] + ~31:0[R23]
0001c148: VF := extend:64[#700 + 1] <> extend:64[31:0[R2]] + extend:64[#699]
          + 1
0001c14e: CF := pad:64[#700 + 1] <> pad:64[31:0[R2]] + pad:64[#699] + 1
0001c152: ZF := #700 + 1 = 0
0001c156: NF := 31:31[#700 + 1]
0001c15d: when NF <> VF goto %0001c15b
000348a3: goto %0001c177

0001c177:
0001c17f: when 31:0[R4] = 0 goto %0001b317
000348a4: goto %0001c183

0001b317:
0001b31c: R26 := pad:64[mem[R20 + 0x12C, el]:u32]
0001b322: when 31:0[R26] <> 0 goto %0001b320
000348a5: goto %0001c1b1

0001c183:
0001c188: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c18e: R3 := pad:64[31:0[R25]]
0001c194: R2 := pad:64[31:0[R22]]
0001c199: R0 := 0x415000
0001c19f: R0 := R0 + 0x350
0001c1a4: R30 := 0x40B1AC
0001c1a6: call @printf with return %0001c1a8

0001c1a8:
0001c1ad: R26 := pad:64[mem[R20 + 0x12C, el]:u32]
0001c1b3: when 31:0[R26] = 0 goto %0001c1b1
000348a6: goto %0001c566

0001c1b1:
0001c1bb: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001c1c0: R27 := 0
0001c1c5: R23 := 0
0001c1ca: R25 := 0
0001c1cf: R24 := 0
0001c1d5: #701 := 31:0[R0] - 2
0001c1da: VF := extend:64[#701] <> extend:64[31:0[R0]] - 2
0001c1df: CF := pad:64[#701] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0001c1e3: ZF := #701 = 0
0001c1e7: NF := 31:31[#701]
0001c1ed: when ZF goto %0001c1eb
000348a7: goto %0001b5fc

0001c566:
000348a8: goto %0001b320

0001b320:
0001b328: R0 := 9
0001b32d: R30 := 0x40B1C0
0001b32f: call @zmalloc with return %0001b331

0001b331:
0001b335: R21 := R0
0001b33a: R30 := 0x40B1C8
0001b33c: call @getrandom64 with return %0001b33e

0001b33e:
0001b342: R1 := R0
0001b347: R0 := 0
0001b34d: R23 := R20 + 0xFA
0001b355: mem := mem with [R21, el]:u64 <- R1
0001b35a: R30 := 0x40B1DC
0001b35d: call @time with return %0001b35f

0001b35f:
0001b362: R1 := 0x430000
0001b367: R2 := 0x8000
0001b36e: R2 := 63:32[R2].0xD53E.15:0[R2]
0001b373: R3 := 0x9680
0001b37a: R1 := pad:64[mem[R1 + 0x374, el]:u32]
0001b381: R2 := 63:48[R2].0xB1DE.31:0[R2]
0001b388: R3 := 63:32[R3].0x98.15:0[R3]
0001b38e: R2 := 0x19D.47:0[R2]
0001b396: R25 := R2 + R0 * R3
0001b39c: when 31:0[R1] <> 0 goto %0001b39a
000348a9: goto %0001b3e8

0001b39a:
0001b3a3: R0 := R21
0001b3a8: R2 := 7
0001b3ad: R1 := 8
0001b3b2: R30 := 0x40B9D4
0001b3b4: call @printmem with return %0001b3b6

0001b3b6:
0001b3ba: R26 := R0
0001b3c0: R2 := R25
0001b3c6: R1 := R26
0001b3cb: R0 := 0x415000
0001b3d1: R0 := R0 + 0x380
0001b3d6: R30 := 0x40B9EC
0001b3d8: call @printf with return %0001b3da

0001b3da:
0001b3de: R0 := R26
0001b3e3: R30 := 0x40B9F4
0001b3e5: call @free with return %0001b3e7

0001b3e7:
0001b3ea: goto %0001b3e8

0001b3e8:
0001b3ef: R0 := pad:64[31:0[R22] + 0x21]
0001b3f5: R27 := pad:64[31:0[R22]]
0001b3fb: R0 := pad:64[16:0[R0]]
0001b400: R30 := 0x40B214
0001b402: call @zmalloc with return %0001b404

0001b404:
0001b407: R1 := 0x416000
0001b40d: R26 := R0
0001b414: R3 := mem[R21, el]:u64
0001b41a: R2 := R27
0001b421: V0 := pad:128[mem[R1 + 0x270, el]:u64]
0001b428: R0 := pad:64[mem[R31 + 0x7C, el]:u16]
0001b42e: #675 := R26 + 8
0001b434: mem := mem with [#675, el]:u64 <- R25
0001b43a: mem := mem with [#675 + 8, el]:u64 <- R3
0001b441: mem := mem with [R26 + 0x18, el]:u32 <- 0
0001b448: R1 := R19 + pad:64[15:0[R0]]
0001b44e: R0 := R26 + 0x1C
0001b456: mem := mem with [R26, el]:u64 <- 63:0[V0]
0001b45b: R30 := 0x40B244
0001b45d: call @memcpy with return %0001b45f

0001b45f:
0001b463: R1 := R27 + 0x1C
0001b469: R0 := pad:64[31:0[R22] + 0x31]
0001b46f: R0 := pad:64[16:0[R0]]
0001b475: R27 := pad:64[31:0[R22] + 0x30]
0001b47d: mem := mem with [R26 + R1, el]:u32 <- 0
0001b482: R30 := 0x40B25C
0001b484: call @zmalloc with return %0001b486

0001b486:
0001b48a: R25 := R0
0001b490: R1 := pad:64[31:0[R22] + 0x29]
0001b496: R0 := pad:64[16:0[R1]]
0001b49b: R30 := 0x40B26C
0001b49d: call @zmalloc with return %0001b49f

0001b49f:
0001b4a3: R24 := R0
0001b4a9: R5 := pad:64[31:0[R22] + 0x20]
0001b4af: R1 := R26
0001b4b6: R2 := mem[R19 + 0x18, el]:u64
0001b4bc: R5 := extend:64[31:0[R5]]
0001b4c4: mem := mem with [R0, el]:u64 <- R2
0001b4c8: R0 := R0 + 8
0001b4ce: R2 := R5
0001b4d6: mem := mem with [R31 + 0x68, el]:u64 <- R5
0001b4db: R30 := 0x40B290
0001b4dd: call @memcpy with return %0001b4df

0001b4df:
0001b4e3: R3 := pad:64[31:0[R22] + 0x28]
0001b4e9: R4 := R25
0001b4ef: R3 := pad:64[16:0[R3]]
0001b4f5: R2 := R24
0001b4fb: R0 := R23
0001b500: R1 := 0x10
0001b505: R30 := 0x40B2AC
0001b507: call @hmac_md5 with return %0001b509

0001b509:
0001b50e: R5 := mem[R31 + 0x68, el]:u64
0001b514: R1 := R26
0001b51a: R0 := R25 + 0x10
0001b520: R2 := R5
0001b525: R30 := 0x40B2C0
0001b527: call @memcpy with return %0001b529

0001b529:
0001b52d: R0 := R24
0001b532: R30 := 0x40B2C8
0001b534: call @free with return %0001b536

0001b536:
0001b539: R0 := 0x19
0001b53e: R30 := 0x40B2D0
0001b540: call @zmalloc with return %0001b542

0001b542:
0001b546: R24 := R0
0001b54b: R0 := 0x11
0001b550: R30 := 0x40B2DC
0001b552: call @zmalloc with return %0001b554

0001b554:
0001b558: R22 := R0
0001b55f: R5 := mem[R21, el]:u64
0001b564: R3 := 0x10
0001b56b: R6 := mem[R19 + 0x18, el]:u64
0001b573: mem := mem with [R22, el]:u64 <- R6
0001b579: mem := mem with [R22 + 8, el]:u64 <- R5
0001b57f: R4 := R24
0001b585: R2 := R22
0001b58b: R1 := R3
0001b591: R0 := R23
0001b596: R30 := 0x40B304
0001b598: call @hmac_md5 with return %0001b59a

0001b59a:
0001b59f: R0 := mem[R21, el]:u64
0001b5a7: mem := mem with [R24 + 0x10, el]:u64 <- R0
0001b5ad: R0 := R22
0001b5b2: R23 := 0x18
0001b5b7: R30 := 0x40B318
0001b5b9: call @free with return %0001b5bb

0001b5bb:
0001b5bf: R0 := R26
0001b5c4: R30 := 0x40B320
0001b5c6: call @free with return %0001b5c8

0001b5c8:
0001b5cc: R0 := R21
0001b5d1: R30 := 0x40B328
0001b5d3: call @free with return %0001b5d5

0001b5d5:
0001b5da: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001b5e0: R26 := pad:64[31:0[R23]]
0001b5e6: #676 := 31:0[R0] - 2
0001b5eb: VF := extend:64[#676] <> extend:64[31:0[R0]] - 2
0001b5f0: CF := pad:64[#676] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0001b5f4: ZF := #676 = 0
0001b5f8: NF := 31:31[#676]
0001b5fe: when ZF <> 1 goto %0001b5fc
000348aa: goto %0001c1eb

0001b5fc:
0001b605: #677 := 31:0[R0] - 1
0001b60a: VF := extend:64[#677] <> extend:64[31:0[R0]] - 1
0001b60f: CF := pad:64[#677] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0001b613: ZF := #677 = 0
0001b617: NF := 31:31[#677]
0001b61d: when ZF goto %0001b61b
000348ab: goto %0001c388

0001c1eb:
0001c1f3: R0 := 9
0001c1f8: R30 := 0x40B340
0001c1fa: call @zmalloc with return %0001c1fc

0001c1fc:
0001c200: R23 := R0
0001c205: R30 := 0x40B348
0001c207: call @getrandom64 with return %0001c209

0001c209:
0001c20d: R25 := R0
0001c212: R0 := 0x19
0001c217: R30 := 0x40B354
0001c219: call @zmalloc with return %0001c21b

0001c21b:
0001c21f: R24 := R0
0001c224: R0 := 0x11
0001c22c: mem := mem with [R24, el]:u64 <- R25
0001c232: #702 := R24 + 8
0001c237: mem := mem with [#702, el]:u64 <- 0
0001c23c: mem := mem with [#702 + 8, el]:u64 <- 0
0001c241: R30 := 0x40B368
0001c243: call @zmalloc with return %0001c245

0001c245:
0001c249: R22 := R0
0001c24e: R0 := 0x11
0001c253: R30 := 0x40B374
0001c255: call @zmalloc with return %0001c257

0001c257:
0001c25c: R3 := mem[R19 + 0x18, el]:u64
0001c262: R2 := R0
0001c26a: mem := mem with [R22, el]:u64 <- R3
0001c270: mem := mem with [R22 + 8, el]:u64 <- R25
0001c275: R1 := 0x10
0001c27b: R21 := R0
0001c281: R0 := R22
0001c286: R30 := 0x40B390
0001c288: call @md5_buffer with return %0001c28a

0001c28a:
0001c28e: R0 := R22
0001c293: R30 := 0x40B398
0001c295: call @free with return %0001c297

0001c297:
0001c29a: R0 := 0x19
0001c29f: R30 := 0x40B3A0
0001c2a1: call @zmalloc with return %0001c2a3

0001c2a3:
0001c2a7: R1 := R31 + 0xA0
0001c2ad: R25 := R0
0001c2b3: R0 := R20 + 0xC8
0001c2b8: R30 := 0x40B3B0
0001c2ba: call @ntlm_set_key with return %0001c2bc

0001c2bc:
0001c2c0: R2 := R25
0001c2c5: R3 := 0
0001c2cb: R1 := R21
0001c2d1: R0 := R31 + 0xA0
0001c2d6: R30 := 0x40B3C4
0001c2d8: call @gl_des_ecb_crypt with return %0001c2da

0001c2da:
0001c2de: R1 := R31 + 0xA0
0001c2e4: R0 := R20 + 0xCF
0001c2e9: R30 := 0x40B3D0
0001c2eb: call @ntlm_set_key with return %0001c2ed

0001c2ed:
0001c2f1: R2 := R25 + 8
0001c2f6: R3 := 0
0001c2fc: R1 := R21
0001c302: R0 := R31 + 0xA0
0001c307: R30 := 0x40B3E4
0001c309: call @gl_des_ecb_crypt with return %0001c30b

0001c30b:
0001c30f: R1 := R31 + 0xA0
0001c315: R0 := R20 + 0xD6
0001c31a: R30 := 0x40B3F0
0001c31c: call @ntlm_set_key with return %0001c31e

0001c31e:
0001c322: R2 := R25 + 0x10
0001c328: R1 := R21
0001c32d: R3 := 0
0001c333: R0 := R31 + 0xA0
0001c338: R30 := 0x40B404
0001c33a: call @gl_des_ecb_crypt with return %0001c33c

0001c33c:
0001c340: R0 := R21
0001c345: R30 := 0x40B40C
0001c347: call @free with return %0001c349

0001c349:
0001c34d: R0 := R23
0001c352: R30 := 0x40B414
0001c354: call @free with return %0001c356

0001c356:
0001c35b: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001c360: R23 := 0x18
0001c366: R27 := pad:64[31:0[R23]]
0001c36c: R26 := pad:64[31:0[R23]]
0001c372: #703 := 31:0[R0] - 1
0001c377: VF := extend:64[#703] <> extend:64[31:0[R0]] - 1
0001c37c: CF := pad:64[#703] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0001c380: ZF := #703 = 0
0001c384: NF := 31:31[#703]
0001c38a: when ZF <> 1 goto %0001c388
000348ac: goto %0001b61b

0001c388:
0001c391: R0 := pad:64[15:0[R27]]
0001c399: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001c39f: R0 := pad:64[31:0[R0] + 0x40]
0001c3a5: R21 := pad:64[15:0[R0]]
0001c3ac: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0001c3b2: when 31:0[R0] <> 0 goto %0001c3b0
000348ad: goto %0001bc75

0001b61b:
0001b623: R0 := 0x19
0001b628: R30 := 0x40B434
0001b62a: call @zmalloc with return %0001b62c

0001b62c:
0001b630: R1 := R31 + 0xA0
0001b636: R25 := R0
0001b63c: R0 := R20 + 0xC8
0001b641: R30 := 0x40B444
0001b644: call @ntlm_set_key with return %0001bbd4

0001bbd4:
0001bbd8: R2 := R25
0001bbde: R21 := R19 + 0x18
0001bbe3: R3 := 0
0001bbe9: R1 := R21
0001bbef: R0 := R31 + 0xA0
0001bbf4: R30 := 0x40B45C
0001bbf6: call @gl_des_ecb_crypt with return %0001bbf8

0001bbf8:
0001bbfc: R1 := R31 + 0xA0
0001bc02: R0 := R20 + 0xCF
0001bc07: R30 := 0x40B468
0001bc09: call @ntlm_set_key with return %0001bc0b

0001bc0b:
0001bc0e: R27 := 0x18
0001bc14: R2 := R25 + 8
0001bc19: R3 := 0
0001bc1f: R1 := R21
0001bc25: R0 := R31 + 0xA0
0001bc2a: R30 := 0x40B480
0001bc2c: call @gl_des_ecb_crypt with return %0001bc2e

0001bc2e:
0001bc32: R1 := R31 + 0xA0
0001bc38: R0 := R20 + 0xD6
0001bc3d: R30 := 0x40B48C
0001bc3f: call @ntlm_set_key with return %0001bc41

0001bc41:
0001bc45: R1 := R21
0001bc4b: R0 := R31 + 0xA0
0001bc51: R2 := R25 + 0x10
0001bc56: R3 := 0
0001bc5b: R30 := 0x40B4A0
0001bc5d: call @gl_des_ecb_crypt with return %0001bc5f

0001bc5f:
0001bc65: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R27]
0001bc6c: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0001bc71: R21 := 0x58
0001bc77: when 31:0[R0] = 0 goto %0001bc75
000348ae: goto %0001c3b0

0001bc75:
0001bc7f: R1 := pad:64[mem[R20 + 0x130, el]:u32]
0001bc86: R0 := pad:64[31:0[R21] + 31:0[R23]]
0001bc8c: R0 := pad:64[15:0[R0]]
0001bc94: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0001bc9a: when 31:0[R1] <> 0 goto %0001bc98
000348af: goto %0001c489

0001c3b0:
0001c3b8: R0 := 0x19
0001c3bd: R30 := 0x40B4B8
0001c3bf: call @zmalloc with return %0001c3c1

0001c3c1:
0001c3c5: R1 := R31 + 0xA0
0001c3cb: R24 := R0
0001c3d1: R0 := R20 + 0x96
0001c3d6: R30 := 0x40B4C8
0001c3d8: call @ntlm_set_key with return %0001c3da

0001c3da:
0001c3de: R2 := R24
0001c3e4: R22 := R19 + 0x18
0001c3e9: R3 := 0
0001c3ef: R1 := R22
0001c3f5: R0 := R31 + 0xA0
0001c3fa: R30 := 0x40B4E0
0001c3fc: call @gl_des_ecb_crypt with return %0001c3fe

0001c3fe:
0001c402: R1 := R31 + 0xA0
0001c408: R0 := R20 + 0x9D
0001c40d: R30 := 0x40B4EC
0001c40f: call @ntlm_set_key with return %0001c411

0001c411:
0001c414: R23 := 0x18
0001c41a: R2 := R24 + 8
0001c41f: R3 := 0
0001c425: R1 := R22
0001c42b: R0 := R31 + 0xA0
0001c430: R30 := 0x40B504
0001c432: call @gl_des_ecb_crypt with return %0001c434

0001c434:
0001c438: R26 := pad:64[31:0[R23]]
0001c43e: R1 := R31 + 0xA0
0001c444: R0 := R20 + 0xA4
0001c449: R30 := 0x40B514
0001c44b: call @ntlm_set_key with return %0001c44d

0001c44d:
0001c451: R1 := R22
0001c457: R0 := R31 + 0xA0
0001c45d: R2 := R24 + 0x10
0001c462: R3 := 0
0001c467: R30 := 0x40B528
0001c469: call @gl_des_ecb_crypt with return %0001c46b

0001c46b:
0001c470: R1 := pad:64[mem[R20 + 0x130, el]:u32]
0001c477: R0 := pad:64[31:0[R21] + 31:0[R23]]
0001c47d: R0 := pad:64[15:0[R0]]
0001c485: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0001c48b: when 31:0[R1] = 0 goto %0001c489
000348b0: goto %0001c564

0001c489:
0001c493: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
0001c498: when 31:0[R0] <> 0 goto %0001bc98
000348b1: goto %0001c49c

0001c49c:
0001c4a0: R21 := R20 + 0x32
0001c4a8: mem := mem with [R31 + 0x80, el]:u64 <- R21
0001c4ae: R0 := R21
0001c4b3: R30 := 0x40B7CC
0001c4b5: call @strdup with return %0001c4b7

0001c4b7:
0001c4ba: R30 := 0x40B7D0
0001c4bc: call @uppercase with return %0001c4be

0001c4be:
0001c4c2: R1 := R0
0001c4c8: R22 := R20 + 0x64
0001c4ce: R0 := R20
0001c4d6: mem := mem with [R31 + 0x90, el]:u64 <- R1
0001c4db: R30 := 0x40B7E4
0001c4dd: call @strdup with return %0001c4df

0001c4df:
0001c4e2: R30 := 0x40B7E8
0001c4e4: call @uppercase with return %0001c4e6

0001c4e6:
0001c4ec: mem := mem with [R31 + 0x88, el]:u64 <- R22
0001c4f4: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001c4fa: R0 := R22
0001c4ff: R30 := 0x40B7F8
0001c501: call @strdup with return %0001c503

0001c503:
0001c506: R30 := 0x40B7FC
0001c508: call @uppercase with return %0001c50a

0001c50a:
0001c50e: R1 := R0
0001c514: R0 := R21
0001c51c: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0001c521: R30 := 0x40B80C
0001c523: call @strlen with return %0001c525

0001c525:
0001c529: R21 := pad:64[31:0[R0]]
0001c52f: R0 := R20
0001c534: R30 := 0x40B818
0001c536: call @strlen with return %0001c538

0001c538:
0001c53c: R28 := pad:64[31:0[R0]]
0001c542: R0 := R22
0001c547: R30 := 0x40B824
0001c549: call @strlen with return %0001c54b

0001c54b:
0001c54f: R22 := pad:64[31:0[R0]]
0001c554: R0 := 0x430000
0001c55b: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001c560: when 31:0[R0] = 0 goto %0001be13
000348b2: goto %0001bd60

0001c564:
000348b3: goto %0001bc98

0001bc98:
0001bca1: R0 := R20 + 0x32
0001bca9: mem := mem with [R31 + 0x80, el]:u64 <- R0
0001bcae: R30 := 0x40B54C
0001bcb0: call @strdup with return %0001bcb2

0001bcb2:
0001bcb5: R30 := 0x40B550
0001bcb7: call @uppercase with return %0001bcb9

0001bcb9:
0001bcbd: R22 := R0
0001bcc3: R1 := R22
0001bcc9: R0 := R31 + 0x90
0001bcce: R30 := 0x40B560
0001bcd0: call @unicode with return %0001bcd2

0001bcd2:
0001bcd6: R21 := pad:64[31:0[R0]]
0001bcdc: R0 := R22
0001bce1: R30 := 0x40B56C
0001bce3: call @free with return %0001bce5

0001bce5:
0001bce9: R1 := R20
0001bcef: R0 := R31 + 0x98
0001bcf4: R30 := 0x40B578
0001bcf6: call @unicode with return %0001bcf8

0001bcf8:
0001bcfc: R28 := pad:64[31:0[R0]]
0001bd02: R1 := R20 + 0x64
0001bd0a: mem := mem with [R31 + 0x88, el]:u64 <- R1
0001bd10: R0 := R1
0001bd15: R30 := 0x40B58C
0001bd17: call @strdup with return %0001bd19

0001bd19:
0001bd1c: R30 := 0x40B590
0001bd1e: call @uppercase with return %0001bd20

0001bd20:
0001bd24: R22 := R0
0001bd2a: R1 := R22
0001bd30: R0 := R31 + 0xA0
0001bd35: R30 := 0x40B5A0
0001bd37: call @unicode with return %0001bd39

0001bd39:
0001bd3d: R1 := pad:64[31:0[R0]]
0001bd43: R0 := R22
0001bd49: R22 := pad:64[31:0[R1]]
0001bd4e: R30 := 0x40B5B0
0001bd50: call @free with return %0001bd52

0001bd52:
0001bd55: R0 := 0x430000
0001bd5c: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001bd62: when 31:0[R0] <> 0 goto %0001bd60
000348b4: goto %0001be13

0001bd60:
0001bd68: R0 := 0x415000
0001bd6e: R0 := R0 + 0x3A8
0001bd73: R30 := 0x40B840
0001bd75: call @puts with return %0001bd77

0001bd77:
0001bd7c: R1 := mem[R31 + 0x88, el]:u64
0001bd81: R0 := 0x415000
0001bd87: R0 := R0 + 0x3B8
0001bd8c: R30 := 0x40B850
0001bd8e: call @printf with return %0001bd90

0001bd90:
0001bd95: R1 := mem[R31 + 0x80, el]:u64
0001bd9a: R0 := 0x415000
0001bda0: R0 := R0 + 0x3D0
0001bda5: R30 := 0x40B860
0001bda7: call @printf with return %0001bda9

0001bda9:
0001bdac: R0 := 0x415000
0001bdb2: R1 := R20
0001bdb8: R0 := R0 + 0x3E8
0001bdbd: R30 := 0x40B870
0001bdbf: call @printf with return %0001bdc1

0001bdc1:
0001bdc5: when 31:0[R27] <> 0 goto %0001bdc3
000348b5: goto %0001cb7e

0001bdc3:
0001bdcc: R1 := extend:64[31:0[R27]]
0001bdd1: R2 := 7
0001bdd7: R0 := R25
0001bddc: R30 := 0x40B98C
0001bdde: call @printmem with return %0001bde0

0001bde0:
0001bde4: R20 := R0
0001bdea: R2 := pad:64[31:0[R27]]
0001bdf0: R1 := R20
0001bdf5: R0 := 0x415000
0001bdfb: R0 := R0 + 0x400
0001be00: R30 := 0x40B9A4
0001be02: call @printf with return %0001be04

0001be04:
0001be08: R0 := R20
0001be0d: R30 := 0x40B9AC
0001be0f: call @free with return %0001be11

0001be11:
0001be15: when 31:0[R26] = 0 goto %0001be13
000348b6: goto %0001cb2f

0001cb2f:
0001cb32: goto %0001cb30

0001cb7e:
0001cb81: when 31:0[R26] = 0 goto %0001be13
000348b7: goto %0001cb30

0001cb30:
0001cb37: R0 := R24
0001cb3c: R2 := 7
0001cb41: R1 := 0x18
0001cb46: R30 := 0x40B888
0001cb48: call @printmem with return %0001cb4a

0001cb4a:
0001cb4d: R1 := 0x415000
0001cb53: R20 := R0
0001cb59: R0 := R1 + 0x400
0001cb5f: R1 := R20
0001cb64: R2 := 0x18
0001cb69: R30 := 0x40B8A0
0001cb6b: call @printf with return %0001cb6d

0001cb6d:
0001cb71: R0 := R20
0001cb76: R30 := 0x40B8A8
0001cb78: call @free with return %0001cb7a

0001cb7a:
0001cb7c: goto %0001be13

0001be13:
0001be1b: R0 := 0x400
0001be20: R30 := 0x40B5C4
0001be22: call @zmalloc with return %0001be24

0001be24:
0001be28: R7 := pad:64[15:0[R21]]
0001be2e: R6 := pad:64[15:0[R28]]
0001be35: R2 := pad:64[mem[R31 + 0x68, el]:u32]
0001be3b: R20 := R0
0001be42: R0 := pad:64[31:0[R7] + 31:0[R6]]
0001be48: R9 := pad:64[31:0[R21] + 0x40]
0001be4f: R3 := pad:64[31:0[R2] + 31:0[R0]]
0001be54: R2 := 0x544E
0001be5b: R8 := pad:64[31:0[R9] + 31:0[R28]]
0001be62: R2 := 63:32[R2].0x4D4C.15:0[R2]
0001be69: R1 := mem[R31 + 0x90, el]:u64
0001be6f: R5 := pad:64[15:0[R22]]
0001be76: R0 := pad:64[31:0[R8] + 31:0[R22]]
0001be7d: R10 := pad:64[mem[R19 + 0x14, el]:u32]
0001be84: R2 := 63:48[R2].0x5353.31:0[R2]
0001be8b: R3 := pad:64[31:0[R5] + 31:0[R3]]
0001be92: R19 := pad:64[31:0[R0] + 31:0[R26]]
0001be98: R2 := 0x50.47:0[R2]
0001bea0: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R0]
0001bea5: R11 := 0x40
0001beac: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001beb2: R21 := extend:64[31:0[R21]]
0001beba: mem := mem with [R20, el]:u64 <- R2
0001bebf: R2 := 3
0001bec7: mem := mem with [R20 + 8, el]:u32 <- 31:0[R2]
0001becd: R2 := R21
0001bed5: mem := mem with [R20 + 0xC, el]:u16 <- 15:0[R23]
0001bedb: R22 := extend:64[31:0[R22]]
0001bee3: mem := mem with [R20 + 0xE, el]:u16 <- 15:0[R23]
0001bee9: R23 := extend:64[31:0[R28]]
0001bef1: mem := mem with [R20 + 0x14, el]:u16 <- 15:0[R0]
0001bef9: mem := mem with [R20 + 0x16, el]:u16 <- 15:0[R0]
0001beff: R0 := R20 + 0x40
0001bf07: mem := mem with [R20 + 0x18, el]:u32 <- 31:0[R19]
0001bf0f: mem := mem with [R20 + 0x1C, el]:u16 <- 15:0[R7]
0001bf17: mem := mem with [R20 + 0x1E, el]:u16 <- 15:0[R7]
0001bf1f: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R11]
0001bf27: mem := mem with [R20 + 0x24, el]:u16 <- 15:0[R6]
0001bf2f: mem := mem with [R20 + 0x26, el]:u16 <- 15:0[R6]
0001bf37: mem := mem with [R20 + 0x28, el]:u32 <- 31:0[R9]
0001bf3f: mem := mem with [R20 + 0x2C, el]:u16 <- 15:0[R5]
0001bf47: mem := mem with [R20 + 0x2E, el]:u16 <- 15:0[R5]
0001bf4d: #692 := R20 + 0x30
0001bf53: mem := mem with [#692, el]:u32 <- 31:0[R8]
0001bf58: mem := mem with [#692 + 4, el]:u32 <- 0
0001bf60: mem := mem with [R20 + 0x38, el]:u16 <- 15:0[R3]
0001bf68: mem := mem with [R20 + 0x3C, el]:u32 <- 31:0[R10]
0001bf6d: R30 := 0x40B67C
0001bf6f: call @memcpy with return %0001bf71

0001bf71:
0001bf76: R1 := mem[R31 + 0x98, el]:u64
0001bf7c: R0 := R21 + 0x40
0001bf82: R2 := R23
0001bf89: R21 := R21 + R23
0001bf90: R0 := R20 + R0
0001bf95: R30 := 0x40B694
0001bf97: call @memcpy with return %0001bf99

0001bf99:
0001bf9e: R23 := mem[R31 + 0xA0, el]:u64
0001bfa4: R0 := R21 + 0x40
0001bfaa: R2 := R22
0001bfb1: R0 := R20 + R0
0001bfb7: R1 := R23
0001bfbc: R30 := 0x40B6AC
0001bfbe: call @memcpy with return %0001bfc0

0001bfc0:
0001bfc4: when R24 = 0 goto %0001bfc2
000348b8: goto %0001cac0

0001bfc2:
0001bfcb: when R25 = 0 goto %0001bfc9
000348b9: goto %0001ca88

0001ca88:
0001ca8c: R22 := R22 + 0x58
0001ca92: R2 := extend:64[31:0[R27]]
0001ca98: R1 := R25
0001ca9f: R0 := R22 + R21
0001caa6: R0 := R20 + R0
0001caab: R30 := 0x40B8DC
0001caad: call @memcpy with return %0001caaf

0001caaf:
0001cab3: R0 := R25
0001cab8: R30 := 0x40B8E4
0001caba: call @free with return %0001cabc

0001cabc:
0001cabe: goto %0001bfc9

0001cac0:
0001cac4: R0 := R22 + 0x40
0001caca: R2 := extend:64[31:0[R26]]
0001cad1: R0 := R0 + R21
0001cad7: R1 := R24
0001cade: R0 := R20 + R0
0001cae3: R30 := 0x40B6C8
0001cae5: call @memcpy with return %0001cae7

0001cae7:
0001caeb: when R25 = 0 goto %0001cae9
000348ba: goto %0001cafb

0001cafb:
0001caff: R22 := R22 + 0x58
0001cb05: R2 := extend:64[31:0[R27]]
0001cb0b: R1 := R25
0001cb12: R0 := R22 + R21
0001cb19: R0 := R20 + R0
0001cb1e: R30 := 0x40B6E4
0001cb20: call @memcpy with return %0001cb22

0001cb22:
0001cb26: R0 := R25
0001cb2b: R30 := 0x40B6EC
0001cb2d: call @free with return %0001cae9

0001cae9:
0001caf2: R0 := R24
0001caf7: R30 := 0x40B6F4
0001caf9: call @free with return %0001bfc9

0001bfc9:
0001bfd2: R0 := R23
0001bfd7: R30 := 0x40B6FC
0001bfd9: call @free with return %0001bfdb

0001bfdb:
0001bfe0: R0 := mem[R31 + 0x98, el]:u64
0001bfe5: R30 := 0x40B704
0001bfe7: call @free with return %0001bfe9

0001bfe9:
0001bfee: R0 := mem[R31 + 0x90, el]:u64
0001bff3: R30 := 0x40B70C
0001bff5: call @free with return %0001bff7

0001bff7:
0001bffc: R1 := mem[R31 + 0x70, el]:u64
0001c003: R0 := pad:64[31:0[R19] + 31:0[R27]]
0001c009: #693 := R31 + 0x20
0001c00e: R21 := mem[#693, el]:u64
0001c013: R22 := mem[#693 + 8, el]:u64
0001c019: #694 := R31 + 0x30
0001c01e: R23 := mem[#694, el]:u64
0001c023: R24 := mem[#694 + 8, el]:u64
0001c029: #695 := R31 + 0x40
0001c02e: R25 := mem[#695, el]:u64
0001c033: R26 := mem[#695 + 8, el]:u64
0001c039: #696 := R31 + 0x50
0001c03e: R27 := mem[#696, el]:u64
0001c043: R28 := mem[#696 + 8, el]:u64
0001c04b: mem := mem with [R1, el]:u64 <- R20
0001c051: #697 := R31 + 0x10
0001c056: R19 := mem[#697, el]:u64
0001c05b: R20 := mem[#697 + 8, el]:u64
0001c062: R29 := mem[R31, el]:u64
0001c067: R30 := mem[R31 + 8, el]:u64
0001c06b: R31 := R31 + 0x1A0
0001c070: call R30 with noreturn

000348bb: sub ntlm_set_key(ntlm_set_key_result)
00034c1d: ntlm_set_key_result :: out u32 = low:32[R0]

0001b642:
0001b649: R3 := R0
0001b64f: #678 := R31 - 0x20
0001b655: mem := mem with [#678, el]:u64 <- R29
0001b65b: mem := mem with [#678 + 8, el]:u64 <- R30
0001b65f: R31 := #678
0001b665: R0 := R1
0001b66b: R29 := R31
0001b672: R8 := pad:64[mem[R3]]
0001b678: R1 := R31 + 0x18
0001b67f: R6 := pad:64[mem[R3 + 1]]
0001b685: V0 := pad:128[R8]
0001b68c: R4 := pad:64[mem[R3 + 2]]
0001b692: R2 := pad:64[0:0[R8].0]
0001b699: R5 := pad:64[mem[R3 + 3]]
0001b6a0: R2 := pad:64[31:0[R2] | pad:32[31:1[R6]]]
0001b6a6: R6 := pad:64[1:0[R6].0]
0001b6ad: R7 := pad:64[31:0[R6] | pad:32[31:2[R4]]]
0001b6b3: R4 := pad:64[2:0[R4].0]
0001b6bb: V0 := 127:16[V0].7:0[R2].7:0[V0]
0001b6c2: R6 := pad:64[31:0[R4] | pad:32[31:3[R5]]]
0001b6c9: R4 := pad:64[mem[R3 + 4]]
0001b6cf: R5 := pad:64[3:0[R5].0]
0001b6d6: R2 := pad:64[mem[R3 + 5]]
0001b6dd: R3 := pad:64[mem[R3 + 6]]
0001b6e5: V0 := 127:24[V0].7:0[R7].15:0[V0]
0001b6ec: R5 := pad:64[31:0[R5] | pad:32[31:4[R4]]]
0001b6f2: R4 := pad:64[4:0[R4].0]
0001b6f9: R4 := pad:64[31:0[R4] | pad:32[31:5[R2]]]
0001b6ff: R2 := pad:64[5:0[R2].0]
0001b706: R2 := pad:64[31:0[R2] | pad:32[31:6[R3]]]
0001b70c: R3 := pad:64[6:0[R3].0]
0001b714: V0 := 127:32[V0].7:0[R6].23:0[V0]
0001b71c: V0 := 127:40[V0].7:0[R5].31:0[V0]
0001b724: V0 := 127:48[V0].7:0[R4].39:0[V0]
0001b72c: V0 := 127:56[V0].7:0[R2].47:0[V0]
0001b734: V0 := 127:64[V0].7:0[R3].55:0[V0]
0001b73c: mem := mem with [R31 + 0x18, el]:u64 <- 63:0[V0]
0001b741: R30 := 0x40AB0C
0001b743: call @gl_des_setkey with return %0001b745

0001b745:
0001b74a: R29 := mem[R31, el]:u64
0001b74f: R30 := mem[R31 + 8, el]:u64
0001b753: R31 := R31 + 0x20
0001b758: call R30 with noreturn

000348bc: sub open(open_pathname, open_flags, open_result)
00034c1e: open_pathname :: in u64 = R0
00034c1f: open_flags :: in u32 = low:32[R1]
00034c20: open_result :: out u32 = low:32[R0]

0002c41a:
0002fd64: R16 := 0x430000
0002fd6b: R17 := mem[R16 + 0xF8, el]:u64
0002fd71: R16 := R16 + 0xF8
0002fd76: call R17 with noreturn

000348bd: sub openlog(openlog_result)
00034c21: openlog_result :: out u32 = low:32[R0]

0002b35f:
0002ff1c: R16 := 0x430000
0002ff23: R17 := mem[R16 + 0x198, el]:u64
0002ff29: R16 := R16 + 0x198
0002ff2e: call R17 with noreturn

000348be: sub paclist_create(paclist_create_result)
00034c22: paclist_create_result :: out u32 = low:32[R0]

0001d172:
0001d176: #750 := R31 - 0xA0
0001d17c: mem := mem with [#750, el]:u64 <- R29
0001d182: mem := mem with [#750 + 8, el]:u64 <- R30
0001d186: R31 := #750
0001d18c: R29 := R31
0001d194: mem := mem with [R31 + 0x80, el]:u64 <- R0
0001d19a: #751 := R31 + 0x90
0001d19f: mem := mem with [#751, el]:u64 <- 0
0001d1a4: mem := mem with [#751 + 8, el]:u64 <- 0
0001d1aa: when R0 = 0 goto %0001d1a8
000348bf: goto %00029e69

0001d1a8:
0001d1b0: R0 := 0
0001d1b7: R29 := mem[R31, el]:u64
0001d1bc: R30 := mem[R31 + 8, el]:u64
0001d1c0: R31 := R31 + 0xA0
0001d1c5: call R30 with noreturn

00029e69:
00029e6d: #1346 := R31 + 0x10
00029e73: mem := mem with [#1346, el]:u64 <- R19
00029e79: mem := mem with [#1346 + 8, el]:u64 <- R20
00029e7f: #1347 := R31 + 0x20
00029e85: mem := mem with [#1347, el]:u64 <- R21
00029e8b: mem := mem with [#1347 + 8, el]:u64 <- R22
00029e91: #1348 := R31 + 0x30
00029e97: mem := mem with [#1348, el]:u64 <- R23
00029e9d: mem := mem with [#1348 + 8, el]:u64 <- R24
00029ea2: R30 := 0x40BFB4
00029ea4: call @strdup with return %00029ea6

00029ea6:
00029eaa: R2 := R0
00029eaf: R24 := 0x415000
00029eb5: R24 := R24 + 0x808
00029ebb: R1 := R24
00029ec1: R0 := R31 + 0x90
00029ec7: #1349 := R31 + 0x88
00029ecd: mem := mem with [#1349, el]:u64 <- R2
00029ed3: mem := mem with [#1349 + 8, el]:u64 <- R2
00029ed8: R30 := 0x40BFD0
00029eda: call @strsep with return %00029edc

00029edc:
00029edf: R1 := 0x430000
00029ee7: mem := mem with [R31 + 0x98, el]:u64 <- R0
00029eee: R1 := pad:64[mem[R1 + 0x374, el]:u32]
00029ef3: when 31:0[R1] <> 0 goto %0001d729
000348c0: goto %00029ef7

0001d729:
0001d72c: R0 := 0x415000
0001d732: R0 := R0 + 0x810
0001d737: R30 := 0x40C2F0
0001d739: call @puts with return %0001d73b

0001d73b:
0001d740: R0 := mem[R31 + 0x98, el]:u64
0001d746: when R0 <> 0 goto %0001d744
000348c1: goto %0001d7cb

0001d7cb:
0001d7ce: R0 := 0x430000
0001d7d5: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001d7db: when 31:0[R0] = 0 goto %0001d7d9
000348c2: goto %0001d7ec

0001d7ec:
0001d7ef: R0 := 0x415000
0001d7f4: R1 := 0
0001d7fa: R0 := R0 + 0x848
0001d7ff: R30 := 0x40C314
0001d801: call @printf with return %0001d7d9

00029ef7:
00029efa: when R0 = 0 goto %0001d7d9
000348c3: goto %0001d744

0001d7d9:
0001d7e1: R21 := 0
0001d7e6: R20 := 0
0001d7ea: goto %0001d47a

0001d744:
0001d74c: R22 := 0x430000
0001d752: R22 := R22 + 0x430
0001d758: #763 := R31 + 0x40
0001d75e: mem := mem with [#763, el]:u64 <- R25
0001d764: mem := mem with [#763 + 8, el]:u64 <- R26
0001d769: R26 := 0x413000
0001d76e: R25 := 0x415000
0001d774: R26 := R26 + 0x358
0001d77a: R25 := R25 + 0x828
0001d780: #764 := R31 + 0x50
0001d786: mem := mem with [#764, el]:u64 <- R27
0001d78c: mem := mem with [#764 + 8, el]:u64 <- R28
0001d791: R27 := 0x430000
0001d797: R27 := R27 + 0x374
0001d79c: R2 := 0x413000
0001d7a1: R1 := 0x415000
0001d7a7: R2 := R2 + 0x640
0001d7ad: R1 := R1 + 0x830
0001d7b2: R20 := 0
0001d7b7: R21 := 0
0001d7bd: #765 := R31 + 0x68
0001d7c3: mem := mem with [#765, el]:u64 <- R2
0001d7c9: mem := mem with [#765 + 8, el]:u64 <- R1
000348c4: goto %0001d2a3

0001d2a3:
0001d2ad: R1 := pad:64[mem[R0]]
0001d2b3: #754 := 31:0[R1] - 0x20
0001d2b8: VF := extend:64[#754] <> extend:64[31:0[R1]] - 0x20
0001d2bd: CF := pad:64[#754] <> pad:64[31:0[R1]] + 0xFFFFFFE0
0001d2c1: ZF := #754 = 0
0001d2c5: NF := 31:31[#754]
0001d2cb: when ZF <> 1 goto %0001d2c9
000348c5: goto %0001d878

0001d878:
0001d87c: R0 := R0 + 1
0001d884: mem := mem with [R31 + 0x98, el]:u64 <- R0
000348c6: goto %0001d2c9

0001d2c9:
0001d2d2: R1 := R26
0001d2d8: R0 := R31 + 0x98
0001d2dd: R30 := 0x40C048
0001d2df: call @strsep with return %0001d2e1

0001d2e1:
0001d2e5: R19 := R0
0001d2eb: R1 := R25
0001d2f0: R30 := 0x40C054
0001d2f3: call @strcmp with return %0001d2f5

0001d2f5:
0001d2f9: when 31:0[R0] = 0 goto %0001d2f7
000348c7: goto %0001d84b

0001d2f7:
0001d301: R1 := mem[R31 + 0x68, el]:u64
0001d307: R0 := R31 + 0x98
0001d30c: R30 := 0x40C194
0001d30e: call @strsep with return %0001d310

0001d310:
0001d314: R23 := R0
0001d31b: R1 := pad:64[mem[R27, el]:u32]
0001d322: R28 := mem[R31 + 0x98, el]:u64
0001d328: when 31:0[R1] = 0 goto %0001d326
000348c8: goto %0001d82b

0001d82b:
0001d82f: R2 := R0
0001d835: R1 := R19
0001d83c: R0 := mem[R31 + 0x70, el]:u64
0001d842: R3 := R28
0001d847: R30 := 0x40C1B8
0001d849: call @printf with return %0001d326

0001d326:
0001d330: R19 := mem[R22, el]:u64
0001d336: R0 := R28
0001d33b: R2 := 0xA
0001d340: R1 := 0
0001d345: R30 := 0x40C1CC
0001d348: call @strtol with return %0001d34a

0001d34a:
0001d350: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001d356: R28 := pad:64[31:0[R0]]
0001d35c: when R19 <> 0 goto %0001d35a
000348c9: goto %0001d827

0001d35a:
0001d364: R0 := mem[R19 + 8, el]:u64
0001d36b: R1 := pad:64[mem[R0, el]:u32]
0001d371: #755 := 31:0[R1] - 1
0001d376: VF := extend:64[#755] <> extend:64[31:0[R1]] - 1
0001d37b: CF := pad:64[#755] <> pad:64[31:0[R1]] + 0xFFFFFFFF
0001d37f: ZF := #755 = 0
0001d383: NF := 31:31[#755]
0001d389: when ZF <> 1 goto %0001d387
000348ca: goto %0001d39a

0001d39a:
0001d39f: R1 := pad:64[mem[R0 + 0x44, el]:u32]
0001d3a5: #756 := ~31:0[R28]
0001d3aa: #757 := 31:0[R1] + ~31:0[R28]
0001d3b0: VF := extend:64[#757 + 1] <> extend:64[31:0[R1]] + extend:64[#756]
          + 1
0001d3b6: CF := pad:64[#757 + 1] <> pad:64[31:0[R1]] + pad:64[#756] + 1
0001d3ba: ZF := #757 + 1 = 0
0001d3be: NF := 31:31[#757 + 1]
0001d3c3: when ZF <> 1 goto %0001d387
000348cb: goto %0001d3c7

0001d3c7:
0001d3cb: R0 := R0 + 4
0001d3d1: R1 := R23
0001d3d6: R30 := 0x40C20C
0001d3d8: call @strcmp with return %0001d3da

0001d3da:
0001d3dd: when 31:0[R0] <> 0 goto %0001d387
000348cc: goto %0001d3e1

0001d387:
0001d391: R19 := mem[R19 + 0x10, el]:u64
0001d396: when R19 = 0 goto %0001d1c7
000348cd: goto %0001d35a

0001d827:
0001d829: goto %0001d1c7

0001d1c7:
0001d1cb: R0 := R22 + 0x18
0001d1d0: R30 := 0x40C358
0001d1d3: call @pthread_mutex_lock with return %0001d1d5

0001d1d5:
0001d1da: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001d1e0: R0 := R23
0001d1e5: R30 := 0x40C364
0001d1e7: call @parent_add with return %0001d1e9

0001d1e9:
0001d1ee: R23 := extend:64[mem[R22 + 8, el]:u32]
0001d1f5: R19 := mem[R22, el]:u64
0001d1fb: when R19 <> 0 goto %0001d1f9
000348ce: goto %00029e65

0001d1f9:
0001d203: R0 := mem[R19, el]:u64
0001d209: #752 := ~R0
0001d20e: #753 := R23 + ~R0
0001d214: VF := extend:128[#753 + 1] <> extend:128[R23] + extend:128[#752] +
          1
0001d21a: CF := pad:128[#753 + 1] <> pad:128[R23] + pad:128[#752] + 1
0001d21e: ZF := #753 + 1 = 0
0001d222: NF := 63:63[#753 + 1]
0001d228: when ZF <> 1 goto %0001d226
000348cf: goto %00029e5e

00029e5e:
00029e63: R19 := mem[R19 + 8, el]:u64
000348d0: goto %0001d234

0001d226:
0001d230: R19 := mem[R19 + 0x10, el]:u64
0001d236: when R19 = 0 goto %0001d234
000348d1: goto %0001d1f9

00029e65:
00029e67: goto %0001d234

0001d234:
0001d23c: R0 := 0x18
0001d241: R30 := 0x40C394
0001d243: call @malloc with return %0001d245

0001d245:
0001d24b: mem := mem with [R0, el]:u64 <- R23
0001d251: mem := mem with [R0 + 8, el]:u64 <- R19
0001d257: R2 := R0
0001d25e: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001d264: when R21 = 0 goto %0001d262
000348d2: goto %00029e38

0001d262:
0001d26b: R21 := R0
0001d270: goto %0001d26e

00029e38:
00029e3c: R0 := R21
000348d3: goto %00029e3e

00029e3e:
00029e42: R1 := R0
00029e49: R0 := mem[R0 + 0x10, el]:u64
00029e4e: when R0 <> 0 goto %00029e3e
000348d4: goto %00029e52

00029e52:
00029e58: mem := mem with [R1 + 0x10, el]:u64 <- R2
00029e5c: goto %0001d26e

0001d84b:
0001d850: R0 := pad:64[mem[R27, el]:u32]
0001d855: when 31:0[R0] = 0 goto %0001d584
000348d5: goto %0001d859

0001d584:
0001d589: R19 := mem[R22, el]:u64
0001d58e: goto %0001d58c

0001d859:
0001d85d: R1 := R19
0001d862: R0 := 0x415000
0001d868: R0 := R0 + 0x840
0001d86d: R30 := 0x40C070
0001d86f: call @printf with return %0001d871

0001d871:
0001d876: R19 := mem[R22, el]:u64
000348d6: goto %0001d58c

0001d58c:
0001d593: when R19 = 0 goto %0001d591
000348d7: goto %0001d6cb

0001d6cb:
0001d6d0: R0 := mem[R19 + 8, el]:u64
0001d6d7: R0 := pad:64[mem[R0, el]:u32]
0001d6dc: when 31:0[R0] = 0 goto %0001d3e1
000348d8: goto %0001d6e0

0001d3e1:
0001d3e6: R23 := mem[R19, el]:u64
0001d3eb: R19 := mem[R19 + 8, el]:u64
0001d3f0: R0 := 0x18
0001d3f5: R30 := 0x40C21C
0001d3f7: call @malloc with return %0001d3f9

0001d3f9:
0001d3ff: mem := mem with [R0, el]:u64 <- R23
0001d405: mem := mem with [R0 + 8, el]:u64 <- R19
0001d40c: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001d412: when R21 = 0 goto %0001d410
000348d9: goto %0001d803

0001d410:
0001d419: R21 := R0
0001d41e: goto %0001d41c

0001d803:
0001d807: R1 := R21
000348da: goto %0001d80b

0001d80b:
0001d80f: R2 := R1
0001d816: R1 := mem[R1 + 0x10, el]:u64
0001d81b: when R1 <> 0 goto %0001d80b
000348db: goto %0001d81f

0001d81f:
0001d825: mem := mem with [R2 + 0x10, el]:u64 <- R0
000348dc: goto %0001d41c

0001d41c:
0001d423: R1 := R24
0001d429: R0 := R31 + 0x90
0001d42e: R30 := 0x40C24C
0001d430: call @strsep with return %0001d432

0001d432:
0001d438: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d43e: R20 := pad:64[31:0[R20] + 1]
0001d443: when R0 <> 0 goto %0001d2a3
000348dd: goto %0001d447

0001d447:
0001d44a: R0 := 0x430000
0001d451: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001d457: when 31:0[R0] = 0 goto %0001d455
000348de: goto %0001d504

0001d6e0:
0001d6e5: R19 := mem[R19 + 0x10, el]:u64
0001d6ea: when R19 <> 0 goto %0001d6cb
000348df: goto %0001d591

0001d591:
0001d599: R0 := 0x198
0001d59e: R30 := 0x40C094
0001d5a0: call @zmalloc with return %0001d5a2

0001d5a2:
0001d5a6: R23 := R0
0001d5ac: R0 := R22 + 0x18
0001d5b3: mem := mem with [R23, el]:u32 <- 0
0001d5b8: R30 := 0x40C0A4
0001d5ba: call @pthread_mutex_lock with return %0001d5bc

0001d5bc:
0001d5c1: R19 := pad:64[mem[R22 + 8, el]:u32]
0001d5c8: R3 := mem[R22, el]:u64
0001d5ce: R19 := pad:64[31:0[R19] + 1]
0001d5d3: R0 := 0x18
0001d5db: mem := mem with [R22 + 8, el]:u32 <- 31:0[R19]
0001d5e3: mem := mem with [R31 + 0x78, el]:u64 <- R3
0001d5e9: R19 := extend:64[31:0[R19]]
0001d5ee: R30 := 0x40C0C4
0001d5f0: call @malloc with return %0001d5f2

0001d5f2:
0001d5f8: mem := mem with [R0, el]:u64 <- R19
0001d5fe: mem := mem with [R0 + 8, el]:u64 <- R23
0001d605: R3 := mem[R31 + 0x78, el]:u64
0001d60c: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001d612: when R3 = 0 goto %0001d610
000348e0: goto %0001d679

0001d610:
0001d619: R3 := R0
0001d61e: R0 := 0x18
0001d626: mem := mem with [R22, el]:u64 <- R3
0001d62b: R30 := 0x40C330
0001d62d: call @malloc with return %0001d62f

0001d62f:
0001d635: mem := mem with [R0, el]:u64 <- R19
0001d63b: mem := mem with [R0 + 8, el]:u64 <- R23
0001d642: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001d648: when R21 <> 0 goto %0001d646
000348e1: goto %0001d66f

0001d679:
0001d67d: R1 := R3
000348e2: goto %0001d67f

0001d67f:
0001d683: R2 := R1
0001d68a: R1 := mem[R1 + 0x10, el]:u64
0001d68f: when R1 <> 0 goto %0001d67f
000348e3: goto %0001d693

0001d693:
0001d699: mem := mem with [R2 + 0x10, el]:u64 <- R0
0001d69e: R0 := 0x18
0001d6a6: mem := mem with [R22, el]:u64 <- R3
0001d6ab: R30 := 0x40C0F4
0001d6ad: call @malloc with return %0001d6af

0001d6af:
0001d6b5: mem := mem with [R0, el]:u64 <- R19
0001d6bb: mem := mem with [R0 + 8, el]:u64 <- R23
0001d6c2: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001d6c7: when R21 = 0 goto %0001d66f
000348e4: goto %0001d646

0001d66f:
0001d673: R21 := R0
0001d677: goto %0001d26e

0001d646:
0001d64f: R1 := R21
000348e5: goto %0001d653

0001d653:
0001d657: R2 := R1
0001d65e: R1 := mem[R1 + 0x10, el]:u64
0001d663: when R1 <> 0 goto %0001d653
000348e6: goto %0001d667

0001d667:
0001d66d: mem := mem with [R2 + 0x10, el]:u64 <- R0
000348e7: goto %0001d26e

0001d26e:
0001d275: R0 := R22 + 0x18
0001d27a: R30 := 0x40C120
0001d27d: call @pthread_mutex_unlock with return %0001d27f

0001d27f:
0001d283: R1 := R24
0001d289: R0 := R31 + 0x90
0001d28e: R30 := 0x40C12C
0001d291: call @strsep with return %0001d293

0001d293:
0001d299: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d29f: R20 := pad:64[31:0[R20] + 1]
0001d2a5: when R0 <> 0 goto %0001d2a3
000348e8: goto %0001d886

0001d886:
0001d889: R0 := 0x430000
0001d890: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001d895: when 31:0[R0] <> 0 goto %0001d504
000348e9: goto %0001d899

0001d504:
0001d507: R23 := 0x415000
0001d50c: R22 := 0x415000
0001d512: R19 := R21
0001d518: R23 := R23 + 0x798
0001d51e: R22 := R22 + 0x778
0001d524: R1 := pad:64[31:0[R20]]
0001d529: R0 := 0x415000
0001d52f: R0 := R0 + 0x848
0001d534: R30 := 0x40C288
0001d536: call @printf with return %0001d538

0001d538:
0001d53d: R1 := mem[R19, el]:u64
0001d542: R3 := mem[R19 + 8, el]:u64
0001d548: R0 := R22
0001d54f: R4 := pad:64[mem[R3, el]:u32]
0001d555: R2 := R3 + 4
0001d55b: when 31:0[R4] <> 0 goto %0001d559
000348ea: goto %0001d6ee

0001d6ee:
0001d6f1: R30 := 0x40C2A0
0001d6f3: call @printf with return %0001d6f5

0001d6f5:
0001d6fa: R19 := mem[R19 + 0x10, el]:u64
0001d6ff: when R19 = 0 goto %0001d455
000348eb: goto %0001d703

0001d703:
0001d708: R1 := mem[R19, el]:u64
0001d70d: R3 := mem[R19 + 8, el]:u64
0001d713: R0 := R22
0001d71a: R4 := pad:64[mem[R3, el]:u32]
0001d720: R2 := R3 + 4
0001d725: when 31:0[R4] = 0 goto %0001d6ee
000348ec: goto %0001d559

0001d559:
0001d563: R3 := pad:64[mem[R3 + 0x44, el]:u32]
0001d569: R0 := R23
0001d56e: R30 := 0x40C2C8
0001d570: call @printf with return %0001d572

0001d572:
0001d577: R19 := mem[R19 + 0x10, el]:u64
0001d57c: when R19 <> 0 goto %0001d538
000348ed: goto %0001d580

0001d580:
0001d582: goto %0001d455

0001d899:
000348ee: goto %0001d455

0001d455:
0001d45e: #758 := R31 + 0x40
0001d463: R25 := mem[#758, el]:u64
0001d468: R26 := mem[#758 + 8, el]:u64
0001d46e: #759 := R31 + 0x50
0001d473: R27 := mem[#759, el]:u64
0001d478: R28 := mem[#759 + 8, el]:u64
000348ef: goto %0001d47a

0001d47a:
0001d47f: R0 := mem[R31 + 0x88, el]:u64
0001d484: R30 := 0x40C158
0001d486: call @free with return %0001d488

0001d488:
0001d48b: R0 := 0x28
0001d490: R30 := 0x40C160
0001d492: call @malloc with return %0001d494

0001d494:
0001d499: R1 := mem[R31 + 0x80, el]:u64
0001d49f: #760 := R31 + 0x30
0001d4a4: R23 := mem[#760, el]:u64
0001d4a9: R24 := mem[#760 + 8, el]:u64
0001d4b1: mem := mem with [R0, el]:u64 <- R1
0001d4b7: mem := mem with [R0 + 8, el]:u64 <- R21
0001d4be: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001d4c6: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R20]
0001d4cd: mem := mem with [R0 + 0x20, el]:u64 <- 0
0001d4d3: #761 := R31 + 0x10
0001d4d8: R19 := mem[#761, el]:u64
0001d4dd: R20 := mem[#761 + 8, el]:u64
0001d4e3: #762 := R31 + 0x20
0001d4e8: R21 := mem[#762, el]:u64
0001d4ed: R22 := mem[#762 + 8, el]:u64
0001d4f4: R29 := mem[R31, el]:u64
0001d4f9: R30 := mem[R31 + 8, el]:u64
0001d4fd: R31 := R31 + 0xA0
0001d502: call R30 with noreturn

000348f0: sub paclist_free(paclist_free_result)
00034c23: paclist_free_result :: out u32 = low:32[R0]

0001da1f:
0001da23: when R0 = 0 goto %0001da21
000348f1: goto %00029d51

0001da21:
0001da29: call R30 with noreturn

00029d51:
00029d55: #1343 := R31 - 0x30
00029d5b: mem := mem with [#1343, el]:u64 <- R29
00029d61: mem := mem with [#1343 + 8, el]:u64 <- R30
00029d65: R31 := #1343
00029d6b: R29 := R31
00029d71: #1344 := R31 + 0x10
00029d77: mem := mem with [#1344, el]:u64 <- R19
00029d7d: mem := mem with [#1344 + 8, el]:u64 <- R20
00029d83: R20 := R0
00029d8b: mem := mem with [R31 + 0x20, el]:u64 <- R21
000348f2: goto %00029d8f

00029d8f:
00029d93: R21 := R20
00029d9a: R20 := mem[R20 + 0x20, el]:u64
00029da1: R19 := mem[R21 + 8, el]:u64
00029da7: when R19 = 0 goto %00029da5
000348f3: goto %00029dea

00029dea:
00029dee: R0 := R19
00029df5: R19 := mem[R19 + 0x10, el]:u64
00029dfa: R30 := 0x40C4DC
00029dfc: call @free with return %00029dfe

00029dfe:
00029e01: when R19 <> 0 goto %00029dea
000348f4: goto %00029da5

00029da5:
00029dae: R0 := R21
00029db3: R30 := 0x40C4E8
00029db5: call @free with return %00029db7

00029db7:
00029dba: when R20 <> 0 goto %00029d8f
000348f5: goto %00029dbe

00029dbe:
00029dc2: #1345 := R31 + 0x10
00029dc7: R19 := mem[#1345, el]:u64
00029dcc: R20 := mem[#1345 + 8, el]:u64
00029dd3: R21 := mem[R31 + 0x20, el]:u64
00029dda: R29 := mem[R31, el]:u64
00029ddf: R30 := mem[R31 + 8, el]:u64
00029de3: R31 := R31 + 0x30
00029de8: call R30 with noreturn

000348f6: sub paclist_get(paclist_get_result)
00034c24: paclist_get_result :: out u32 = low:32[R0]

0001d89b:
0001d89f: #766 := R31 - 0x30
0001d8a5: mem := mem with [#766, el]:u64 <- R29
0001d8ab: mem := mem with [#766 + 8, el]:u64 <- R30
0001d8af: R31 := #766
0001d8b5: R29 := R31
0001d8bd: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001d8c2: R21 := 0x430000
0001d8c8: R21 := R21 + 0x430
0001d8ce: #767 := R31 + 0x10
0001d8d4: mem := mem with [#767, el]:u64 <- R19
0001d8da: mem := mem with [#767 + 8, el]:u64 <- R20
0001d8e0: R20 := R0
0001d8e7: R19 := mem[R21 + 0x10, el]:u64
0001d8ed: when R19 <> 0 goto %0001d8eb
000348f7: goto %00029e34

0001d8eb:
0001d8f5: R1 := mem[R19, el]:u64
0001d8fb: R0 := R20
0001d900: R30 := 0x40C400
0001d902: call @strcmp with return %0001d904

0001d904:
0001d908: when 31:0[R0] <> 0 goto %0001d906
000348f8: goto %00029e21

00029e21:
00029e24: R0 := 0x430000
00029e2b: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00029e30: when 31:0[R0] <> 0 goto %0001d9d5
000348f9: goto %0001d954

0001d9d5:
0001d9d9: R1 := R20
0001d9de: R0 := 0x415000
0001d9e4: R0 := R0 + 0x870
0001d9e9: R30 := 0x40C490
0001d9eb: call @printf with return %0001d9ed

0001d9ed:
0001d9f2: R21 := mem[R31 + 0x20, el]:u64
0001d9f8: R0 := R19
0001d9fe: #770 := R31 + 0x10
0001da03: R19 := mem[#770, el]:u64
0001da08: R20 := mem[#770 + 8, el]:u64
0001da0f: R29 := mem[R31, el]:u64
0001da14: R30 := mem[R31 + 8, el]:u64
0001da18: R31 := R31 + 0x30
0001da1d: call R30 with noreturn

0001d906:
0001d910: R19 := mem[R19 + 0x20, el]:u64
0001d916: when R19 = 0 goto %0001d914
000348fa: goto %0001d8eb

00029e34:
00029e36: goto %0001d914

0001d914:
0001d91d: R0 := R20
0001d922: R30 := 0x40C42C
0001d924: call @paclist_create with return %0001d926

0001d926:
0001d92b: R1 := mem[R21 + 0x10, el]:u64
0001d931: R19 := R0
0001d937: when R1 = 0 goto %0001d935
000348fb: goto %00029e05

0001d935:
0001d940: mem := mem with [R21 + 0x10, el]:u64 <- R0
0001d945: goto %0001d943

00029e05:
00029e09: R0 := R1
00029e10: R1 := mem[R1 + 0x20, el]:u64
00029e15: when R1 <> 0 goto %00029e05
000348fc: goto %00029e19

00029e19:
00029e1f: mem := mem with [R0 + 0x20, el]:u64 <- R19
000348fd: goto %0001d943

0001d943:
0001d949: R0 := 0x430000
0001d950: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001d956: when 31:0[R0] = 0 goto %0001d954
000348fe: goto %0001d98b

0001d98b:
0001d98f: R1 := R20
0001d994: R0 := 0x415000
0001d99a: R0 := R0 + 0x890
0001d99f: R30 := 0x40C464
0001d9a1: call @printf with return %0001d9a3

0001d9a3:
0001d9a8: R21 := mem[R31 + 0x20, el]:u64
0001d9ae: R0 := R19
0001d9b4: #769 := R31 + 0x10
0001d9b9: R19 := mem[#769, el]:u64
0001d9be: R20 := mem[#769 + 8, el]:u64
0001d9c5: R29 := mem[R31, el]:u64
0001d9ca: R30 := mem[R31 + 8, el]:u64
0001d9ce: R31 := R31 + 0x30
0001d9d3: call R30 with noreturn

0001d954:
0001d95e: R21 := mem[R31 + 0x20, el]:u64
0001d964: R0 := R19
0001d96a: #768 := R31 + 0x10
0001d96f: R19 := mem[#768, el]:u64
0001d974: R20 := mem[#768 + 8, el]:u64
0001d97b: R29 := mem[R31, el]:u64
0001d980: R30 := mem[R31 + 8, el]:u64
0001d984: R31 := R31 + 0x30
0001d989: call R30 with noreturn

000348ff: sub parent_add(parent_add_result)
00034c25: parent_add_result :: out u32 = low:32[R0]

0001cfcb:
0001cfcf: #740 := R31 - 0x50
0001cfd5: mem := mem with [#740, el]:u64 <- R29
0001cfdb: mem := mem with [#740 + 8, el]:u64 <- R30
0001cfdf: R31 := #740
0001cfe5: R29 := R31
0001cfeb: #741 := R31 + 0x10
0001cff1: mem := mem with [#741, el]:u64 <- R19
0001cff7: mem := mem with [#741 + 8, el]:u64 <- R20
0001cffd: #742 := R31 + 0x20
0001d003: mem := mem with [#742, el]:u64 <- R21
0001d009: mem := mem with [#742 + 8, el]:u64 <- R22
0001d00f: R21 := pad:64[31:0[R1]]
0001d015: #743 := R31 + 0x30
0001d01b: mem := mem with [#743, el]:u64 <- R23
0001d021: mem := mem with [#743 + 8, el]:u64 <- R24
0001d029: mem := mem with [R31 + 0x40, el]:u64 <- R25
0001d02e: R30 := 0x40BD54
0001d030: call @strdup with return %0001d032

0001d032:
0001d035: R1 := 0x3A
0001d03b: R19 := R0
0001d040: R30 := 0x40BD60
0001d043: call @strrchr with return %0001d045

0001d045:
0001d048: VF := 0
0001d04b: CF := 1
0001d04f: ZF := R0 = 0
0001d053: NF := 63:63[R0]
0001d059: #744 := ZF
0001d05c: VF := 0
0001d060: CF := #744
0001d065: ZF := #744 & 31:0[R21] = 0
0001d06a: NF := #744 & 31:31[R21]
0001d070: when ZF goto %0001d06e
00034900: goto %00029f8f

00029f8f:
00029f93: R20 := R0
00029f9a: R23 := pad:64[31:0[R0] + ~31:0[R19] + 1]
00029fa0: when R0 = 0 goto %00029f9e
00034901: goto %00029fb7

00029f9e:
00029fa7: R0 := R19
00029fac: R30 := 0x40BE78
00029fae: call @strlen with return %00029fb0

00029fb0:
00029fb4: R23 := pad:64[31:0[R0]]
00029fb9: goto %00029fb7

00029fb7:
00029fbf: R0 := pad:64[mem[R19]]
00029fc5: #1350 := 31:0[R0] - 0x5B
00029fca: VF := extend:64[#1350] <> extend:64[31:0[R0]] - 0x5B
00029fcf: CF := pad:64[#1350] <> pad:64[31:0[R0]] + 0xFFFFFFA5
00029fd3: ZF := #1350 = 0
00029fd7: NF := 31:31[#1350]
00029fdd: when ZF <> 1 goto %00029fdb
00034902: goto %0002a1a2

0002a1a2:
0002a1a7: R0 := R19 + extend:64[31:0[R23]]
0002a1ae: R0 := pad:64[mem[R0 - 1]]
0002a1b4: #1354 := 31:0[R0] - 0x5D
0002a1b9: VF := extend:64[#1354] <> extend:64[31:0[R0]] - 0x5D
0002a1be: CF := pad:64[#1354] <> pad:64[31:0[R0]] + 0xFFFFFFA3
0002a1c2: ZF := #1354 = 0
0002a1c6: NF := 31:31[#1354]
0002a1cc: when ZF goto %0002a1ca
00034903: goto %00029fdb

0002a1ca:
0002a1d3: R2 := pad:64[31:0[R23] - 2]
0002a1d9: R0 := R19
0002a1de: R1 := 1
0002a1e3: R30 := 0x40BE90
0002a1e5: call @substr with return %0002a1e7

0002a1e7:
0002a1eb: R22 := R0
0002a1ef: goto %00029ffe

00029fdb:
00029fe4: R2 := pad:64[31:0[R23]]
00029fea: R0 := R19
00029fef: R1 := 0
00029ff4: R30 := 0x40BDA4
00029ff6: call @substr with return %00029ff8

00029ff8:
00029ffc: R22 := R0
00034904: goto %00029ffe

00029ffe:
0002a002: when R20 = 0 goto %0002a000
00034905: goto %0002a178

0002a178:
0002a17c: R0 := extend:64[31:0[R23]]
0002a181: R2 := 0xA
0002a187: R0 := R0 + 1
0002a18c: R1 := 0
0002a193: R0 := R19 + R0
0002a198: R30 := 0x40BDC4
0002a19a: call @strtol with return %0002a19c

0002a19c:
0002a1a0: R21 := pad:64[31:0[R0]]
00034906: goto %0002a000

0002a000:
0002a009: when 31:0[R21] = 0 goto %0002a007
00034907: goto %0002a035

0002a007:
0002a010: R2 := R19
0002a015: R1 := 0x415000
0002a01b: R1 := R1 + 0x7B8
0002a020: R0 := 3
0002a025: R30 := 0x40BEB4
0002a027: call @syslog with return %0002a029

0002a029:
0002a02c: R0 := 1
0002a031: R30 := 0x40BEBC
0002a033: call @myexit with return %0001d06e

0001d06e:
0001d077: R2 := R19
0001d07c: R1 := 0x415000
0001d082: R1 := R1 + 0x7E0
0001d087: R0 := 3
0001d08c: R30 := 0x40BED0
0001d08e: call @syslog with return %0001d090

0001d090:
0001d093: R0 := 1
0001d098: R30 := 0x40BED8
0001d09a: call @myexit with return %0001d09c

0001d09c:
00034908: call @parent_available with noreturn

0002a035:
0002a038: R24 := 0x430000
0002a03d: R0 := 0x198
0002a043: R23 := R24 + 0x430
0002a048: R30 := 0x40BDDC
0002a04a: call @zmalloc with return %0002a04c

0002a04c:
0002a050: R20 := R0
0002a055: R3 := 1
0002a05d: mem := mem with [R0, el]:u32 <- 31:0[R3]
0002a061: R0 := R0 + 4
0002a067: R1 := R22
0002a06c: R2 := 0x40
0002a071: R30 := 0x40BDF4
0002a073: call @strlcpy with return %0002a075

0002a075:
0002a07b: mem := mem with [R20 + 0x44, el]:u32 <- 31:0[R21]
0002a082: R21 := pad:64[mem[R23 + 8, el]:u32]
0002a087: R0 := 0x18
0002a08e: R25 := mem[R24 + 0x430, el]:u64
0002a094: R21 := pad:64[31:0[R21] + 1]
0002a09b: mem := mem with [R20 + 0x188, el]:u64 <- 0
0002a0a2: mem := mem with [R20 + 0x190, el]:u32 <- 0
0002a0aa: mem := mem with [R23 + 8, el]:u32 <- 31:0[R21]
0002a0b0: R21 := extend:64[31:0[R21]]
0002a0b5: R30 := 0x40BE1C
0002a0b7: call @malloc with return %0002a0b9

0002a0b9:
0002a0bf: mem := mem with [R0, el]:u64 <- R21
0002a0c5: mem := mem with [R0 + 8, el]:u64 <- R20
0002a0cc: mem := mem with [R0 + 0x10, el]:u64 <- 0
0002a0d2: when R25 = 0 goto %0002a0d0
00034909: goto %0002a154

0002a0d0:
0002a0d9: R25 := R0
0002a0de: goto %0002a0dc

0002a154:
0002a158: R2 := R25
0003490a: goto %0002a15c

0002a15c:
0002a160: R3 := R2
0002a167: R2 := mem[R2 + 0x10, el]:u64
0002a16c: when R2 <> 0 goto %0002a15c
0003490b: goto %0002a170

0002a170:
0002a176: mem := mem with [R3 + 0x10, el]:u64 <- R0
0003490c: goto %0002a0dc

0002a0dc:
0002a0e3: R0 := R19
0002a0eb: mem := mem with [R24 + 0x430, el]:u64 <- R25
0002a0f0: R30 := 0x40BE4C
0002a0f2: call @free with return %0002a0f4

0002a0f4:
0002a0f8: R0 := R22
0002a0fd: R30 := 0x40BE54
0002a0ff: call @free with return %0002a101

0002a101:
0002a105: #1351 := R31 + 0x10
0002a10a: R19 := mem[#1351, el]:u64
0002a10f: R20 := mem[#1351 + 8, el]:u64
0002a115: #1352 := R31 + 0x20
0002a11a: R21 := mem[#1352, el]:u64
0002a11f: R22 := mem[#1352 + 8, el]:u64
0002a126: R25 := mem[R31 + 0x40, el]:u64
0002a12d: R0 := pad:64[mem[R23 + 8, el]:u32]
0002a133: #1353 := R31 + 0x30
0002a138: R23 := mem[#1353, el]:u64
0002a13d: R24 := mem[#1353 + 8, el]:u64
0002a144: R29 := mem[R31, el]:u64
0002a149: R30 := mem[R31 + 8, el]:u64
0002a14d: R31 := R31 + 0x50
0002a152: call R30 with noreturn

0003490d: sub parent_available(parent_available_result)
00034c26: parent_available_result :: out u32 = low:32[R0]

0001d0a0:
0001d0a3: R0 := 0x430000
0001d0aa: R0 := pad:64[mem[R0 + 0x438, el]:u32]
0001d0af: VF := 0
0001d0b2: CF := 1
0001d0b6: ZF := 31:0[R0] = 0
0001d0ba: NF := 31:31[R0]
0001d0c8: when ~(NF = VF & ~ZF) goto %0001d0c1
0001d0c9: goto %0001d0c4

0001d0c4:
0001d0c5: R0 := 1
0001d0cb: goto %0001d0c7

0001d0c1:
0001d0c2: R0 := 0
0001d0ca: goto %0001d0c7

0001d0c7:
0001d0d0: call R30 with noreturn

0003490e: sub parent_free(parent_free_result)
00034c27: parent_free_result :: out u32 = low:32[R0]

0001d0d2:
0001d0d6: #745 := R31 - 0x30
0001d0dc: mem := mem with [#745, el]:u64 <- R29
0001d0e2: mem := mem with [#745 + 8, el]:u64 <- R30
0001d0e6: R31 := #745
0001d0ec: R29 := R31
0001d0f2: #746 := R31 + 0x20
0001d0f8: mem := mem with [#746, el]:u64 <- R21
0001d0fe: mem := mem with [#746 + 8, el]:u64 <- R22
0001d103: R22 := 0x430000
0001d109: R0 := R22 + 0x430
0001d10f: #747 := R31 + 0x10
0001d115: mem := mem with [#747, el]:u64 <- R19
0001d11b: mem := mem with [#747 + 8, el]:u64 <- R20
0001d122: R20 := mem[R0 + 0x10, el]:u64
0001d128: when R20 = 0 goto %0001d126
0003490f: goto %00029f43

00029f43:
00034910: goto %00029f45

00029f45:
00029f49: R21 := R20
00029f50: R20 := mem[R20 + 0x20, el]:u64
00029f57: R19 := mem[R21 + 8, el]:u64
00029f5d: when R19 = 0 goto %00029f5b
00034911: goto %00029f74

00029f74:
00029f78: R0 := R19
00029f7f: R19 := mem[R19 + 0x10, el]:u64
00029f84: R30 := 0x40BF34
00029f86: call @free with return %00029f88

00029f88:
00029f8b: when R19 <> 0 goto %00029f74
00034912: goto %00029f5b

00029f5b:
00029f64: R0 := R21
00029f69: R30 := 0x40BF40
00029f6b: call @free with return %00029f6d

00029f6d:
00029f70: when R20 <> 0 goto %00029f45
00034913: goto %0001d126

0001d126:
0001d130: R19 := mem[R22 + 0x430, el]:u64
0001d136: when R19 = 0 goto %0001d134
00034914: goto %00029efe

00029efe:
00034915: goto %00029f00

00029f00:
00029f04: R20 := R19
00029f0b: R19 := mem[R19 + 0x10, el]:u64
00029f12: R21 := mem[R20 + 8, el]:u64
00029f19: R0 := mem[R21 + 0x188, el]:u64
00029f1e: R30 := 0x40BF64
00029f20: call @freeaddrinfo with return %00029f22

00029f22:
00029f26: R0 := R21
00029f2b: R30 := 0x40BF6C
00029f2d: call @free with return %00029f2f

00029f2f:
00029f33: R0 := R20
00029f38: R30 := 0x40BF74
00029f3a: call @free with return %00029f3c

00029f3c:
00029f3f: when R19 <> 0 goto %00029f00
00034916: goto %0001d134

0001d134:
0001d13d: #748 := R31 + 0x10
0001d142: R19 := mem[#748, el]:u64
0001d147: R20 := mem[#748 + 8, el]:u64
0001d14d: #749 := R31 + 0x20
0001d152: R21 := mem[#749, el]:u64
0001d157: R22 := mem[#749 + 8, el]:u64
0001d15e: R29 := mem[R31, el]:u64
0001d163: R30 := mem[R31 + 8, el]:u64
0001d167: R31 := R31 + 0x30
0001d16c: call R30 with noreturn

00034917: sub perror(perror_result)
00034c28: perror_result :: out u32 = low:32[R0]

0002c587:
0002fb80: R16 := 0x430000
0002fb87: R17 := mem[R16 + 0x48, el]:u64
0002fb8d: R16 := R16 + 0x48
0002fb92: call R17 with noreturn

00034918: sub plist_add(plist_add_result)
00034c29: plist_add_result :: out u32 = low:32[R0]

00019e2b:
00019e2f: #576 := R31 - 0x30
00019e35: mem := mem with [#576, el]:u64 <- R29
00019e3b: mem := mem with [#576 + 8, el]:u64 <- R30
00019e3f: R31 := #576
00019e45: R29 := R31
00019e4b: #577 := R31 + 0x10
00019e51: mem := mem with [#577, el]:u64 <- R19
00019e57: mem := mem with [#577 + 8, el]:u64 <- R20
00019e5d: R20 := R2
00019e63: R19 := R0
00019e68: R0 := 0x18
00019e70: mem := mem with [R31 + 0x20, el]:u64 <- R21
00019e76: R21 := R1
00019e7b: R30 := 0x40E3D4
00019e7d: call @malloc with return %00019e7f

00019e7f:
00019e85: mem := mem with [R0, el]:u64 <- R21
00019e8b: mem := mem with [R0 + 8, el]:u64 <- R20
00019e92: mem := mem with [R0 + 0x10, el]:u64 <- 0
00019e98: when R19 = 0 goto %00019e96
00034919: goto %0001a48b

0001a48b:
0001a48f: R1 := R19
0003491a: goto %0001a493

0001a493:
0001a497: R2 := R1
0001a49e: R1 := mem[R1 + 0x10, el]:u64
0001a4a3: when R1 <> 0 goto %0001a493
0003491b: goto %0001a4a7

0001a4a7:
0001a4ad: mem := mem with [R2 + 0x10, el]:u64 <- R0
0001a4b3: R0 := R19
0003491c: goto %00019e96

00019e96:
00019e9f: #578 := R31 + 0x10
00019ea4: R19 := mem[#578, el]:u64
00019ea9: R20 := mem[#578 + 8, el]:u64
00019eb0: R21 := mem[R31 + 0x20, el]:u64
00019eb7: R29 := mem[R31, el]:u64
00019ebc: R30 := mem[R31 + 8, el]:u64
00019ec0: R31 := R31 + 0x30
00019ec5: call R30 with noreturn

0003491d: sub plist_count(plist_count_result)
00034c2a: plist_count_result :: out u32 = low:32[R0]

0001a0b2:
0001a0b6: R1 := R0
0001a0bb: R0 := 0
0001a0c1: when R1 = 0 goto %0001a0bf
0003491e: goto %0001a1a7

0001a1a7:
0001a1ac: R1 := mem[R1 + 0x10, el]:u64
0001a1b2: R0 := pad:64[31:0[R0] + 1]
0001a1b7: when R1 <> 0 goto %0001a1a7
0003491f: goto %0001a0bf

0001a0bf:
0001a0c7: call R30 with noreturn

00034920: sub plist_del(plist_del_result)
00034c2b: plist_del_result :: out u32 = low:32[R0]

00019ec9:
00019ecd: #579 := R31 - 0x30
00019ed3: mem := mem with [#579, el]:u64 <- R29
00019ed9: mem := mem with [#579 + 8, el]:u64 <- R30
00019edd: R31 := #579
00019ee3: R29 := R31
00019ee9: #580 := R31 + 0x20
00019eef: mem := mem with [#580, el]:u64 <- R21
00019ef5: mem := mem with [#580 + 8, el]:u64 <- R22
00019efb: when R0 = 0 goto %00019ef9
00034921: goto %0001a3cd

00019ef9:
00019f01: R22 := 0
00019f06: goto %00019f04

0001a3cd:
0001a3d1: R21 := R0
0001a3d7: #608 := R31 + 0x10
0001a3dd: mem := mem with [#608, el]:u64 <- R19
0001a3e3: mem := mem with [#608 + 8, el]:u64 <- R20
0001a3e9: R19 := R0
0001a3ee: R20 := 0
0001a3f3: goto %0001a3f1

0001a3f1:
0001a3f9: R2 := mem[R19, el]:u64
0001a3ff: #609 := ~R1
0001a404: #610 := R2 + ~R1
0001a40a: VF := extend:128[#610 + 1] <> extend:128[R2] + extend:128[#609] + 1
0001a410: CF := pad:128[#610 + 1] <> pad:128[R2] + pad:128[#609] + 1
0001a414: ZF := #610 + 1 = 0
0001a418: NF := 63:63[#610 + 1]
0001a41e: when ZF <> 1 goto %0001a41c
00034922: goto %0001a451

0001a451:
0001a455: #612 := R19 + 8
0001a45a: R0 := mem[#612, el]:u64
0001a45f: R22 := mem[#612 + 8, el]:u64
0001a465: when R0 = 0 goto %0001a463
00034923: goto %0001a484

0001a484:
0001a487: R30 := 0x40E45C
0001a489: call @free with return %0001a463

0001a463:
0001a46c: R0 := R19
0001a471: R30 := 0x40E464
0001a473: call @free with return %0001a475

0001a475:
0001a478: when R20 = 0 goto %00019f32
00034924: goto %0001a47c

00019f32:
00019f36: #582 := R31 + 0x10
00019f3b: R19 := mem[#582, el]:u64
00019f40: R20 := mem[#582 + 8, el]:u64
00019f46: R0 := R22
00019f4c: #583 := R31 + 0x20
00019f51: R21 := mem[#583, el]:u64
00019f56: R22 := mem[#583 + 8, el]:u64
00019f5d: R29 := mem[R31, el]:u64
00019f62: R30 := mem[R31 + 8, el]:u64
00019f66: R31 := R31 + 0x30
00019f6b: call R30 with noreturn

0001a47c:
0001a482: mem := mem with [R20 + 0x10, el]:u64 <- R22
00034925: goto %0001a436

0001a41c:
0001a426: R2 := mem[R19 + 0x10, el]:u64
0001a42c: R20 := R19
0001a432: R19 := R2
0001a438: when R2 = 0 goto %0001a436
00034926: goto %0001a3f1

0001a436:
0001a43f: #611 := R31 + 0x10
0001a444: R19 := mem[#611, el]:u64
0001a449: R20 := mem[#611 + 8, el]:u64
0001a44f: R22 := R21
00034927: goto %00019f04

00019f04:
00019f0b: R0 := R22
00019f11: #581 := R31 + 0x20
00019f16: R21 := mem[#581, el]:u64
00019f1b: R22 := mem[#581 + 8, el]:u64
00019f22: R29 := mem[R31, el]:u64
00019f27: R30 := mem[R31 + 8, el]:u64
00019f2b: R31 := R31 + 0x30
00019f30: call R30 with noreturn

00034928: sub plist_dump(plist_dump_result)
00034c2c: plist_dump_result :: out u32 = low:32[R0]

00019fc0:
00019fc4: when R0 = 0 goto %00019fc2
00034929: goto %0001a337

00019fc2:
00019fca: call R30 with noreturn

0001a337:
0001a33b: #605 := R31 - 0x20
0001a341: mem := mem with [#605, el]:u64 <- R29
0001a347: mem := mem with [#605 + 8, el]:u64 <- R30
0001a34b: R31 := #605
0001a351: R29 := R31
0001a357: #606 := R31 + 0x10
0001a35d: mem := mem with [#606, el]:u64 <- R19
0001a363: mem := mem with [#606 + 8, el]:u64 <- R20
0001a368: R20 := 0x416000
0001a36e: R19 := R0
0001a374: R20 := R20 + 0x30
0003492a: goto %0001a378

0001a378:
0001a37d: R1 := mem[R19, el]:u64
0001a382: R2 := mem[R19 + 8, el]:u64
0001a388: R0 := R20
0001a38d: R30 := 0x40E4FC
0001a38f: call @printf with return %0001a391

0001a391:
0001a396: R19 := mem[R19 + 0x10, el]:u64
0001a39b: when R19 <> 0 goto %0001a378
0003492b: goto %0001a39f

0001a39f:
0001a3a3: #607 := R31 + 0x10
0001a3a8: R19 := mem[#607, el]:u64
0001a3ad: R20 := mem[#607 + 8, el]:u64
0001a3b4: R29 := mem[R31, el]:u64
0001a3b9: R30 := mem[R31 + 8, el]:u64
0001a3bd: R31 := R31 + 0x20
0001a3c2: call R30 with noreturn

0003492c: sub plist_free(plist_free_result)
00034c2d: plist_free_result :: out u32 = low:32[R0]

0001a0c9:
0001a0cd: when R0 = 0 goto %0001a0cb
0003492d: goto %0001a0da

0001a0cb:
0001a0d3: R0 := 0
0001a0d8: call R30 with noreturn

0001a0da:
0001a0de: #593 := R31 - 0x20
0001a0e4: mem := mem with [#593, el]:u64 <- R29
0001a0ea: mem := mem with [#593 + 8, el]:u64 <- R30
0001a0ee: R31 := #593
0001a0f4: R29 := R31
0001a0fa: #594 := R31 + 0x10
0001a100: mem := mem with [#594, el]:u64 <- R19
0001a106: mem := mem with [#594 + 8, el]:u64 <- R20
0001a10c: R19 := R0
0001a112: R0 := R19
0001a118: #595 := R19 + 8
0001a11d: R1 := mem[#595, el]:u64
0001a122: R20 := mem[#595 + 8, el]:u64
0001a128: when R1 = 0 goto %0001a126
0003492e: goto %0001a157

0001a157:
0001a160: R0 := R1
0001a165: R30 := 0x40E668
0001a167: call @free with return %0001a169

0001a169:
0001a16d: R0 := R19
0001a172: R30 := 0x40E670
0001a174: call @free with return %0001a176

0001a176:
0001a17a: when R20 = 0 goto %0001a178
0003492f: goto %0001a134

0001a134:
0001a13d: R19 := R20
0001a143: R0 := R19
0001a149: #596 := R19 + 8
0001a14e: R1 := mem[#596, el]:u64
0001a153: R20 := mem[#596 + 8, el]:u64
0001a159: when R1 <> 0 goto %0001a157
00034930: goto %0001a126

0001a126:
0001a12e: R30 := 0x40E688
0001a130: call @free with return %0001a132

0001a132:
0001a136: when R20 <> 0 goto %0001a134
00034931: goto %0001a178

0001a178:
0001a181: #597 := R31 + 0x10
0001a186: R19 := mem[#597, el]:u64
0001a18b: R20 := mem[#597 + 8, el]:u64
0001a190: R0 := 0
0001a197: R29 := mem[R31, el]:u64
0001a19c: R30 := mem[R31 + 8, el]:u64
0001a1a0: R31 := R31 + 0x20
0001a1a5: call R30 with noreturn

00034932: sub plist_get(plist_get_result)
00034c2e: plist_get_result :: out u32 = low:32[R0]

00019fcc:
00019fd0: when R0 <> 0 goto %00019fce
00034933: goto %0001a333

00019fce:
00019fd8: R2 := mem[R0, el]:u64
00019fde: #586 := ~R1
00019fe3: #587 := R2 + ~R1
00019fe9: VF := extend:128[#587 + 1] <> extend:128[R2] + extend:128[#586] + 1
00019fef: CF := pad:128[#587 + 1] <> pad:128[R2] + pad:128[#586] + 1
00019ff3: ZF := #587 + 1 = 0
00019ff7: NF := 63:63[#587 + 1]
00019ffd: when ZF <> 1 goto %00019ffb
00034934: goto %0001a32c

0001a32c:
0001a331: R0 := mem[R0 + 8, el]:u64
00034935: goto %0001a009

00019ffb:
0001a005: R0 := mem[R0 + 0x10, el]:u64
0001a00b: when R0 = 0 goto %0001a009
00034936: goto %00019fce

0001a009:
0001a011: call R30 with noreturn

0001a333:
0001a335: goto %0001a013

0001a013:
0001a016: R0 := 0
0001a01b: call R30 with noreturn

00034937: sub plist_in(plist_in_result)
00034c2f: plist_in_result :: out u32 = low:32[R0]

00019f6d:
00019f71: when R0 <> 0 goto %00019f6f
00034938: goto %0001a3c9

00019f6f:
00019f79: R2 := mem[R0, el]:u64
00019f7f: #584 := ~R1
00019f84: #585 := R2 + ~R1
00019f8a: VF := extend:128[#585 + 1] <> extend:128[R2] + extend:128[#584] + 1
00019f90: CF := pad:128[#585 + 1] <> pad:128[R2] + pad:128[#584] + 1
00019f94: ZF := #585 + 1 = 0
00019f98: NF := 63:63[#585 + 1]
00019f9e: when ZF <> 1 goto %00019f9c
00034939: goto %0001a3c4

0001a3c4:
0001a3c7: R0 := 1
0003493a: goto %00019faa

00019f9c:
00019fa6: R0 := mem[R0 + 0x10, el]:u64
00019fac: when R0 = 0 goto %00019faa
0003493b: goto %00019f6f

00019faa:
00019fb2: call R30 with noreturn

0001a3c9:
0001a3cb: goto %00019fb4

00019fb4:
00019fb7: R0 := 0
00019fbc: call R30 with noreturn

0003493c: sub plist_pop(plist_pop_result)
00034c30: plist_pop_result :: out u32 = low:32[R0]

0001a01d:
0001a021: #588 := R31 - 0x50
0001a027: mem := mem with [#588, el]:u64 <- R29
0001a02d: mem := mem with [#588 + 8, el]:u64 <- R30
0001a031: R31 := #588
0001a037: R29 := R31
0001a03d: #589 := R31 + 0x30
0001a043: mem := mem with [#589, el]:u64 <- R23
0001a049: mem := mem with [#589 + 8, el]:u64 <- R24
0001a04f: when R0 = 0 goto %0001a04d
0003493d: goto %0001a1bb

0001a1bb:
0001a1bf: #598 := R31 + 0x10
0001a1c5: mem := mem with [#598, el]:u64 <- R19
0001a1cb: mem := mem with [#598 + 8, el]:u64 <- R20
0001a1d1: R24 := R1
0001a1d8: R19 := mem[R0, el]:u64
0001a1de: #599 := R31 + 0x20
0001a1e4: mem := mem with [#599, el]:u64 <- R21
0001a1ea: mem := mem with [#599 + 8, el]:u64 <- R22
0001a1f0: R22 := R0
0001a1f8: mem := mem with [R31 + 0x40, el]:u64 <- R25
0001a1fd: when R19 = 0 goto %0001a082
0003493e: goto %0001a201

0001a082:
0001a086: #591 := R31 + 0x10
0001a08b: R19 := mem[#591, el]:u64
0001a090: R20 := mem[#591 + 8, el]:u64
0001a095: R23 := 0
0001a09b: #592 := R31 + 0x20
0001a0a0: R21 := mem[#592, el]:u64
0001a0a5: R22 := mem[#592 + 8, el]:u64
0001a0ac: R25 := mem[R31 + 0x40, el]:u64
0001a0b0: goto %0001a057

0001a201:
0001a206: R20 := mem[R19, el]:u64
0001a20b: R25 := mem[R19 + 8, el]:u64
0001a212: R21 := mem[R19 + 0x10, el]:u64
0001a218: R23 := pad:64[31:0[R20]]
0001a21e: R0 := pad:64[31:0[R20]]
0001a223: R30 := 0x40E580
0001a225: call @so_closed with return %0001a227

0001a227:
0001a22b: when 31:0[R0] <> 0 goto %0001a229
0003493f: goto %0001a2b6

0001a229:
0001a232: R0 := pad:64[31:0[R20]]
0001a237: R30 := 0x40E5BC
0001a239: call @close with return %0001a23b

0001a23b:
0001a240: R1 := mem[R19 + 8, el]:u64
0001a246: R0 := R19
0001a24c: when R1 = 0 goto %0001a24a
00034940: goto %0001a295

0001a24a:
0001a252: R30 := 0x40E5E8
0001a254: call @free with return %0001a256

0001a256:
0001a25a: when R21 <> 0 goto %0001a258
00034941: goto %0001a267

0001a295:
0001a299: R0 := R1
0001a29e: R30 := 0x40E5D0
0001a2a0: call @free with return %0001a2a2

0001a2a2:
0001a2a6: R0 := R19
0001a2ab: R30 := 0x40E5D8
0001a2ad: call @free with return %0001a2af

0001a2af:
0001a2b2: when R21 = 0 goto %0001a267
00034942: goto %0001a258

0001a267:
0001a26b: #600 := R31 + 0x10
0001a270: R19 := mem[#600, el]:u64
0001a275: R20 := mem[#600 + 8, el]:u64
0001a27c: R25 := mem[R31 + 0x40, el]:u64
0001a283: mem := mem with [R22, el]:u64 <- 0
0001a289: #601 := R31 + 0x20
0001a28e: R21 := mem[#601, el]:u64
0001a293: R22 := mem[#601 + 8, el]:u64
00034943: goto %0001a04d

0001a04d:
0001a055: R23 := 0
00034944: goto %0001a057

0001a057:
0001a05b: R0 := pad:64[31:0[R23]]
0001a061: #590 := R31 + 0x30
0001a066: R23 := mem[#590, el]:u64
0001a06b: R24 := mem[#590 + 8, el]:u64
0001a072: R29 := mem[R31, el]:u64
0001a077: R30 := mem[R31 + 8, el]:u64
0001a07b: R31 := R31 + 0x50
0001a080: call R30 with noreturn

0001a258:
0001a261: R19 := R21
0001a265: goto %0001a201

0001a2b6:
0001a2ba: R0 := R19
0001a2bf: R30 := 0x40E58C
0001a2c1: call @free with return %0001a2c3

0001a2c3:
0001a2c9: mem := mem with [R22, el]:u64 <- R21
0001a2cf: when R24 = 0 goto %0001a2cd
00034945: goto %0001a324

0001a324:
0001a32a: mem := mem with [R24, el]:u64 <- R25
00034946: goto %0001a2cd

0001a2cd:
0001a2d6: #602 := R31 + 0x10
0001a2db: R19 := mem[#602, el]:u64
0001a2e0: R20 := mem[#602 + 8, el]:u64
0001a2e6: R0 := pad:64[31:0[R23]]
0001a2ec: #603 := R31 + 0x20
0001a2f1: R21 := mem[#603, el]:u64
0001a2f6: R22 := mem[#603 + 8, el]:u64
0001a2fc: #604 := R31 + 0x30
0001a301: R23 := mem[#604, el]:u64
0001a306: R24 := mem[#604 + 8, el]:u64
0001a30d: R25 := mem[R31 + 0x40, el]:u64
0001a314: R29 := mem[R31, el]:u64
0001a319: R30 := mem[R31 + 8, el]:u64
0001a31d: R31 := R31 + 0x50
0001a322: call R30 with noreturn

00034947: sub prepare_http_connect(prepare_http_connect_result)
00034c31: prepare_http_connect_result :: out u32 = low:32[R0]

000256c4:
000256c8: #1134 := R31 - 0x50
000256ce: mem := mem with [#1134, el]:u64 <- R29
000256d4: mem := mem with [#1134 + 8, el]:u64 <- R30
000256d8: R31 := #1134
000256dd: VF := 0
000256e0: CF := 1
000256e4: ZF := 31:0[R0] = 0
000256e8: NF := 31:31[R0]
000256ee: #1135 := ZF <> 1
000256f1: VF := 0
000256f5: CF := #1135
000256fa: ZF := R2 = 0 | ~#1135
000256ff: NF := #1135 & 63:63[R2]
00025705: R29 := R31
0002570b: #1136 := R31 + 0x10
00025711: mem := mem with [#1136, el]:u64 <- R19
00025717: mem := mem with [#1136 + 8, el]:u64 <- R20
0002571c: R19 := 0
00025724: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
0002572a: when ZF goto %00025728
00034948: goto %00026f0c

00026f0c:
00026f10: #1211 := R31 + 0x20
00026f16: mem := mem with [#1211, el]:u64 <- R21
00026f1c: mem := mem with [#1211 + 8, el]:u64 <- R22
00026f21: R19 := 0
00026f27: R21 := R2
00026f2e: R0 := pad:64[mem[R2]]
00026f33: when 31:0[R0] <> 0 goto %00025758
00034949: goto %00026f37

00025758:
0002575c: R22 := R1
00025761: R30 := 0x407480
00025763: call @new_rr_data with return %00025765

00025765:
0002576b: mem := mem with [R31 + 0x40, el]:u64 <- R0
00025770: R30 := 0x407488
00025772: call @new_rr_data with return %00025774

00025774:
00025779: R19 := mem[R31 + 0x40, el]:u64
00025781: mem := mem with [R31 + 0x48, el]:u64 <- R0
00025786: R1 := 1
0002578b: R0 := 0x412000
00025791: R0 := R0 + 0xCB8
00025799: mem := mem with [R19, el]:u32 <- 31:0[R1]
0002579e: R30 := 0x4074A4
000257a0: call @strdup with return %000257a2

000257a2:
000257a8: mem := mem with [R19 + 0x28, el]:u64 <- R0
000257af: R19 := mem[R31 + 0x40, el]:u64
000257b5: R0 := R21
000257ba: R30 := 0x4074B4
000257bc: call @strdup with return %000257be

000257be:
000257c3: R20 := mem[R31 + 0x40, el]:u64
000257cb: mem := mem with [R19 + 0x30, el]:u64 <- R0
000257d1: R0 := R21
000257d6: R30 := 0x4074C4
000257d8: call @strdup with return %000257da

000257da:
000257df: R19 := mem[R31 + 0x40, el]:u64
000257e7: mem := mem with [R20 + 0x40, el]:u64 <- R0
000257ec: R1 := 0x3A
000257f3: R0 := mem[R19 + 0x40, el]:u64
000257f8: R30 := 0x4074D8
000257fa: call @strchr with return %000257fc

000257fc:
00025800: when R0 = 0 goto %000257fe
0003494a: goto %00026eda

00026eda:
00026edf: mem := mem with [R0] <- 0
00026ee3: R0 := R0 + 1
00026ee8: R2 := 0xA
00026eed: R1 := 0
00026ef4: R20 := mem[R31 + 0x40, el]:u64
00026ef9: R30 := 0x4074F0
00026efb: call @strtol with return %00026efd

00026efd:
00026f02: R19 := mem[R31 + 0x40, el]:u64
00026f0a: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0003494b: goto %000257fe

000257fe:
00025806: R0 := 0x413000
0002580c: R0 := R0 + 0x1A0
00025811: R30 := 0x407504
00025813: call @strdup with return %00025815

00025815:
0002581b: mem := mem with [R19 + 0x48, el]:u64 <- R0
00025822: R20 := mem[R31 + 0x40, el]:u64
00025827: R2 := 0x412000
0002582c: R1 := 0x412000
00025832: R2 := R2 + 0xA70
00025838: R1 := R1 + 0xE68
0002583d: R3 := 1
00025844: R0 := mem[R20 + 8, el]:u64
00025849: R30 := 0x407528
0002584b: call @hlist_mod with return %0002584d

0002584d:
00025853: mem := mem with [R20 + 8, el]:u64 <- R0
00025858: R1 := 0x430000
0002585f: R19 := mem[R1 + 0x3E8, el]:u64
00025865: when R19 = 0 goto %00025863
0003494c: goto %00026e9e

00026e9e:
00026ea3: R20 := mem[R31 + 0x40, el]:u64
00026ea8: R3 := 1
00026eaf: R1 := mem[R19, el]:u64
00026eb4: R2 := mem[R19 + 8, el]:u64
00026ebb: R0 := mem[R20 + 8, el]:u64
00026ec0: R30 := 0x40754C
00026ec2: call @hlist_mod with return %00026ec4

00026ec4:
00026ec9: R19 := mem[R19 + 0x18, el]:u64
00026ed1: mem := mem with [R20 + 8, el]:u64 <- R0
00026ed6: when R19 <> 0 goto %00026e9e
0003494d: goto %00025863

00025863:
0002586b: R19 := 0x430000
00025872: R0 := pad:64[mem[R19 + 0x374, el]:u32]
00025878: when 31:0[R0] <> 0 goto %00025876
0003494e: goto %0002588e

00025876:
0002587e: R0 := 0x413000
00025884: R0 := R0 + 0x1B0
00025889: R30 := 0x407644
0002588b: call @puts with return %0002588d

0002588d:
00025890: goto %0002588e

0002588e:
00025895: #1138 := R31 + 0x40
0002589a: R1 := mem[#1138, el]:u64
0002589f: R2 := mem[#1138 + 8, el]:u64
000258a5: R3 := R22
000258ab: R0 := R31 + 0x3C
000258b0: R30 := 0x407574
000258b2: call @proxy_authenticate with return %000258b4

000258b4:
000258b8: when 31:0[R0] = 0 goto %000258b6
0003494f: goto %00026e52

000258b6:
000258be: R1 := 0x413000
000258c3: R0 := 3
000258c9: R1 := R1 + 0x288
000258ce: R30 := 0x407634
000258d0: call @syslog with return %000258d2

000258d2:
000258d5: goto %000258d3

00026e52:
00026e57: R0 := mem[R31 + 0x48, el]:u64
00026e5e: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00026e64: #1209 := 31:0[R0] - 0x197
00026e69: VF := extend:64[#1209] <> extend:64[31:0[R0]] - 0x197
00026e6e: CF := pad:64[#1209] <> pad:64[31:0[R0]] + 0xFFFFFE69
00026e72: ZF := #1209 = 0
00026e76: NF := 31:31[#1209]
00026e7b: when ZF goto %00025930
00034950: goto %00026e7f

00025930:
00025935: R0 := pad:64[mem[R19 + 0x374, el]:u32]
0002593b: when 31:0[R0] <> 0 goto %00025939
00034951: goto %00025966

00025939:
00025941: R0 := 0x413000
00025947: R0 := R0 + 0x1D0
0002594c: R30 := 0x407688
0002594e: call @puts with return %00025950

00025950:
00025955: R0 := mem[R31 + 0x40, el]:u64
0002595c: R0 := mem[R0 + 8, el]:u64
00025961: R30 := 0x407694
00025963: call @hlist_dump with return %00025965

00025965:
00025968: goto %00025966

00025966:
0002596e: R1 := mem[R31 + 0x40, el]:u64
00025975: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0002597a: R30 := 0x4075E0
0002597c: call @headers_send with return %0002597e

0002597e:
00025982: when 31:0[R0] = 0 goto %00025980
00034952: goto %00026cdb

00025980:
00025988: R0 := 0x413000
0002598e: R0 := R0 + 0x1E8
00025993: R30 := 0x4076EC
00025995: call @puts with return %00025997

00025997:
00025999: goto %000258d3

00026cdb:
00026ce0: R0 := pad:64[mem[R19 + 0x374, el]:u32]
00026ce6: when 31:0[R0] <> 0 goto %00026ce4
00034953: goto %00026cfc

00026ce4:
00026cec: R0 := 0x413000
00026cf2: R0 := R0 + 0x200
00026cf7: R30 := 0x4076BC
00026cf9: call @puts with return %00026cfb

00026cfb:
00026cfe: goto %00026cfc

00026cfc:
00026d04: R0 := mem[R31 + 0x48, el]:u64
00026d09: R30 := 0x4075F4
00026d0b: call @reset_rr_data with return %00026d0d

00026d0d:
00026d12: R1 := mem[R31 + 0x48, el]:u64
00026d19: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00026d1e: R30 := 0x407600
00026d20: call @headers_recv with return %00026d22

00026d22:
00026d26: when 31:0[R0] = 0 goto %00026d24
00034954: goto %00026d4d

00026d24:
00026d2e: R0 := pad:64[mem[R19 + 0x374, el]:u32]
00026d33: when 31:0[R0] = 0 goto %000258d3
00034955: goto %00026d37

00026d37:
00026d3a: R0 := 0x413000
00026d40: R0 := R0 + 0x218
00026d45: R30 := 0x4076AC
00026d47: call @puts with return %00026d49

00026d49:
00026d4b: goto %000258d3

00026d4d:
00026d52: R0 := pad:64[mem[R19 + 0x374, el]:u32]
00026d59: R1 := mem[R31 + 0x48, el]:u64
00026d5f: when 31:0[R0] <> 0 goto %00026d5d
00034956: goto %00026e2c

00026d5d:
00026d67: R0 := mem[R1 + 8, el]:u64
00026d6c: R30 := 0x407650
00026d6e: call @hlist_dump with return %00026d70

00026d70:
00026d75: R0 := mem[R31 + 0x48, el]:u64
00026d7c: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00026d82: #1206 := 31:0[R0] - 0xC8
00026d87: VF := extend:64[#1206] <> extend:64[31:0[R0]] - 0xC8
00026d8c: CF := pad:64[#1206] <> pad:64[31:0[R0]] + 0xFFFFFF38
00026d90: ZF := #1206 = 0
00026d94: NF := 31:31[#1206]
00026d9a: when ZF <> 1 goto %00026d98
00034957: goto %00026dfa

00026e2c:
00026e31: R0 := pad:64[mem[R1 + 0x10, el]:u32]
00026e37: #1208 := 31:0[R0] - 0xC8
00026e3c: VF := extend:64[#1208] <> extend:64[31:0[R0]] - 0xC8
00026e41: CF := pad:64[#1208] <> pad:64[31:0[R0]] + 0xFFFFFF38
00026e45: ZF := #1208 = 0
00026e49: NF := 31:31[#1208]
00026e4e: when ZF <> 1 goto %00026d98
00034958: goto %00026e03

00026d98:
00026da1: #1207 := 31:0[R0] - 0x197
00026da6: VF := extend:64[#1207] <> extend:64[31:0[R0]] - 0x197
00026dab: CF := pad:64[#1207] <> pad:64[31:0[R0]] + 0xFFFFFE69
00026daf: ZF := #1207 = 0
00026db3: NF := 31:31[#1207]
00026db9: when ZF <> 1 goto %00026db7
00034959: goto %00026dd9

00026dd9:
00026ddd: R2 := R21
00026de2: R1 := 0x413000
00026de7: R0 := 3
00026ded: R1 := R1 + 0x238
00026df2: R30 := 0x4076DC
00026df4: call @syslog with return %00026df6

00026df6:
00026df8: goto %000258d3

00026e7f:
00026e83: #1210 := 31:0[R0] - 0xC8
00026e88: VF := extend:64[#1210] <> extend:64[31:0[R0]] - 0xC8
00026e8d: CF := pad:64[#1210] <> pad:64[31:0[R0]] + 0xFFFFFF38
00026e91: ZF := #1210 = 0
00026e95: NF := 31:31[#1210]
00026e9a: when ZF goto %00026dfa
0003495a: goto %00026db7

00026dfa:
00026dff: R0 := pad:64[mem[R19 + 0x374, el]:u32]
00026e05: when 31:0[R0] = 0 goto %00026e03
0003495b: goto %00026e11

00026e11:
00026e14: R0 := 0x413000
00026e19: R19 := 1
00026e1f: R0 := R0 + 0xD0
00026e24: R30 := 0x407678
00026e26: call @puts with return %00026e28

00026e28:
00026e2a: goto %000258db

00026e03:
00026e0b: R19 := 1
00026e0f: goto %000258db

00026db7:
00026dbf: R1 := 0x413000
00026dc5: R2 := R21
00026dcb: R1 := R1 + 0x260
00026dd0: R0 := 3
00026dd5: R30 := 0x4075A4
00026dd7: call @syslog with return %000258d3

000258d3:
000258d9: R19 := 0
0003495c: goto %000258db

000258db:
000258df: R0 := R31 + 0x40
000258e4: R30 := 0x4075B0
000258e6: call @free_rr_data with return %000258e8

000258e8:
000258ec: R0 := R31 + 0x48
000258f1: R30 := 0x4075B8
000258f3: call @free_rr_data with return %000258f5

000258f5:
000258f9: #1139 := R31 + 0x20
000258fe: R21 := mem[#1139, el]:u64
00025903: R22 := mem[#1139 + 8, el]:u64
00025909: R0 := pad:64[31:0[R19]]
0002590f: #1140 := R31 + 0x10
00025914: R19 := mem[#1140, el]:u64
00025919: R20 := mem[#1140 + 8, el]:u64
00025920: R29 := mem[R31, el]:u64
00025925: R30 := mem[R31 + 8, el]:u64
00025929: R31 := R31 + 0x50
0002592e: call R30 with noreturn

00026f37:
00026f3b: #1212 := R31 + 0x20
00026f40: R21 := mem[#1212, el]:u64
00026f45: R22 := mem[#1212 + 8, el]:u64
0003495d: goto %00025728

00025728:
00025731: R0 := pad:64[31:0[R19]]
00025737: #1137 := R31 + 0x10
0002573c: R19 := mem[#1137, el]:u64
00025741: R20 := mem[#1137 + 8, el]:u64
00025748: R29 := mem[R31, el]:u64
0002574d: R30 := mem[R31 + 8, el]:u64
00025751: R31 := R31 + 0x50
00025756: call R30 with noreturn

0003495e: sub printf(printf_format, printf_result)
00034c32: printf_format :: in u64 = R0
00034c33: printf_result :: out u32 = low:32[R0]

00010a70:
0003024a: R16 := 0x430000
00030251: R17 := mem[R16 + 0x2C0, el]:u64
00030257: R16 := R16 + 0x2C0
0003025c: call R17 with noreturn

0003495f: sub printmem(printmem_result)
00034c34: printmem_result :: out u32 = low:32[R0]

0001070b:
0001070f: #40 := R31 - 0x30
00010715: mem := mem with [#40, el]:u64 <- R29
0001071b: mem := mem with [#40 + 8, el]:u64 <- R30
0001071f: R31 := #40
00010725: R29 := R31
0001072b: #41 := R31 + 0x10
00010731: mem := mem with [#41, el]:u64 <- R19
00010737: mem := mem with [#41 + 8, el]:u64 <- R20
0001073d: R20 := 62:0[R1].0
00010743: R19 := R0
00010748: R0 := 1
0001074e: #42 := R31 + 0x20
00010754: mem := mem with [#42, el]:u64 <- R21
0001075a: mem := mem with [#42 + 8, el]:u64 <- R22
00010760: R21 := R1
00010766: R22 := pad:64[31:0[R2]]
0001076d: R1 := R20 + R0
00010772: R30 := 0x40F54C
00010774: call @calloc with return %00010776

00010776:
0001077a: when R21 = 0 goto %00010778
00034960: goto %00016dab

00016dab:
00016dae: R6 := 7
00016db5: R6 := pad:64[31:0[R6] + ~31:0[R22] + 1]
00016dba: R4 := 0x416000
00016dc0: R3 := R19
00016dc7: R7 := R20 + R0
00016dcd: R6 := pad:64[7:0[R6]]
00016dd3: R2 := R0
00016dd9: R4 := R4 + 0x3B0
00034961: goto %00016ddb

00016ddb:
00016de0: R1 := pad:64[mem[R3]]
00016de4: R3 := R3 + 1
00016dea: R2 := R2 + 2
00016df1: R1 := pad:64[31:0[R1] ^ 31:0[R6]]
00016df7: R5 := pad:64[3:0[R1]]
00016dfd: R1 := pad:64[31:4[R1]]
00016e05: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
00016e0d: R1 := pad:64[mem[R4 + extend:64[31:0[R1]]]]
00016e15: mem := mem with [R2 - 2] <- 7:0[R1]
00016e1d: mem := mem with [R2 - 1] <- 7:0[R5]
00016e23: #363 := ~R2
00016e28: #364 := R7 + ~R2
00016e2e: VF := extend:128[#364 + 1] <> extend:128[R7] + extend:128[#363] + 1
00016e34: CF := pad:128[#364 + 1] <> pad:128[R7] + pad:128[#363] + 1
00016e38: ZF := #364 + 1 = 0
00016e3c: NF := 63:63[#364 + 1]
00016e41: when ZF <> 1 goto %00016ddb
00034962: goto %00010778

00010778:
00010781: #43 := R31 + 0x10
00010786: R19 := mem[#43, el]:u64
0001078b: R20 := mem[#43 + 8, el]:u64
00010791: #44 := R31 + 0x20
00010796: R21 := mem[#44, el]:u64
0001079b: R22 := mem[#44 + 8, el]:u64
000107a2: R29 := mem[R31, el]:u64
000107a7: R30 := mem[R31 + 8, el]:u64
000107ab: R31 := R31 + 0x30
000107b0: call R30 with noreturn

00034963: sub proxy_authenticate(proxy_authenticate_result)
00034c35: proxy_authenticate_result :: out u32 = low:32[R0]

0001e02d:
0001e031: #804 := R31 - 0x80
0001e037: mem := mem with [#804, el]:u64 <- R29
0001e03d: mem := mem with [#804 + 8, el]:u64 <- R30
0001e041: R31 := #804
0001e047: R29 := R31
0001e04d: #805 := R31 + 0x10
0001e053: mem := mem with [#805, el]:u64 <- R19
0001e059: mem := mem with [#805 + 8, el]:u64 <- R20
0001e05f: R19 := R1
0001e065: R20 := R2
0001e06b: #806 := R31 + 0x20
0001e071: mem := mem with [#806, el]:u64 <- R21
0001e077: mem := mem with [#806 + 8, el]:u64 <- R22
0001e07d: R21 := R0
0001e082: R0 := 0x1000
0001e088: #807 := R31 + 0x30
0001e08e: mem := mem with [#807, el]:u64 <- R23
0001e094: mem := mem with [#807 + 8, el]:u64 <- R24
0001e09a: R24 := R3
0001e0a0: #808 := R31 + 0x40
0001e0a6: mem := mem with [#808, el]:u64 <- R25
0001e0ac: mem := mem with [#808 + 8, el]:u64 <- R26
0001e0b1: R25 := 0x412000
0001e0b7: R25 := R25 + 0xA68
0001e0bd: #809 := R31 + 0x50
0001e0c3: mem := mem with [#809, el]:u64 <- R27
0001e0c9: mem := mem with [#809 + 8, el]:u64 <- R28
0001e0ce: R30 := 0x40C81C
0001e0d0: call @zmalloc with return %0001e0d2

0001e0d2:
0001e0d5: R2 := 0x1000
0001e0db: R1 := R25
0001e0e1: R23 := R0
0001e0e6: R30 := 0x40C82C
0001e0e8: call @strlcpy with return %0001e0ea

0001e0ea:
0001e0ee: R0 := R31 + 0x70
0001e0f4: R1 := R24
0001e0f9: R30 := 0x40C838
0001e0fb: call @ntlm_request with return %0001e0fd

0001e0fd:
0001e101: when 31:0[R0] <> 0 goto %0001e0ff
00034964: goto %0001e132

0001e0ff:
0001e109: R1 := mem[R31 + 0x70, el]:u64
0001e10f: R2 := extend:64[31:0[R0]]
0001e114: R3 := 0xFFB
0001e11a: R0 := R23 + 5
0001e11f: R30 := 0x40CAE4
0001e121: call @to_base64 with return %0001e123

0001e123:
0001e128: R0 := mem[R31 + 0x70, el]:u64
0001e12d: R30 := 0x40CAEC
0001e12f: call @free with return %0001e131

0001e131:
0001e134: goto %0001e132

0001e132:
0001e139: R0 := R19
0001e13e: R30 := 0x40C844
0001e140: call @dup_rr_data with return %0001e142

0001e142:
0001e146: R22 := R0
0001e14b: R26 := 0x412000
0001e152: R0 := mem[R0 + 8, el]:u64
0001e158: R26 := R26 + 0xD38
0001e15e: R2 := R23
0001e164: R1 := R26
0001e169: R3 := 1
0001e171: mem := mem with [R31 + 0x78, el]:u64 <- R22
0001e176: R30 := 0x40C868
0001e178: call @hlist_mod with return %0001e17a

0001e17a:
0001e180: mem := mem with [R22 + 8, el]:u64 <- R0
0001e186: when R19 = 0 goto %0001e184
00034965: goto %00029ca4

0001e184:
0001e18d: R1 := R20
0001e192: R0 := 0
0001e197: R30 := 0x40CC04
0001e19a: call @http_has_body with return %0002959f

0002959f:
000295a3: when R0 <> 0 goto %000295a1
00034966: goto %00029c94

000295a1:
000295a9: R22 := 0x430000
000295b0: R0 := pad:64[mem[R22 + 0x374, el]:u32]
000295b6: when 31:0[R0] <> 0 goto %000295b4
00034967: goto %000295cc

000295b4:
000295bc: R0 := 0x415000
000295c2: R0 := R0 + 0x950
000295c7: R30 := 0x40CCD4
000295c9: call @puts with return %000295cb

000295cb:
000295ce: goto %000295cc

000295cc:
000295d2: R0 := 1
000295da: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
000295df: goto %000295dd

00029c94:
00029c97: R22 := 0x430000
00029c9e: mem := mem with [R31 + 0x6C, el]:u32 <- 0
00029ca2: goto %000295dd

00029ca4:
00029ca9: R0 := pad:64[mem[R19, el]:u32]
00029cae: when 31:0[R0] = 0 goto %000297e7
00034968: goto %00029cb2

00029cb2:
00029cb7: R1 := mem[R19 + 0x28, el]:u64
00029cbc: R0 := 0x412000
00029cc2: R0 := R0 + 0xEB0
00029cc7: R30 := 0x40C888
00029cc9: call @strcasecmp with return %00029ccb

00029ccb:
00029cce: when 31:0[R0] <> 0 goto %000297e7
00034969: goto %00029cd2

000297e7:
000297eb: R1 := R20
000297f1: R0 := R19
000297f6: R30 := 0x40C8D0
000297f8: call @http_has_body with return %000297fa

000297fa:
000297fd: when R0 <> 0 goto %00029757
0003496a: goto %00029801

00029757:
0002975a: R22 := 0x430000
00029761: R0 := pad:64[mem[R22 + 0x374, el]:u32]
00029767: when 31:0[R0] = 0 goto %00029765
0003496b: goto %00029c69

00029801:
00029804: R22 := 0x430000
0002980b: mem := mem with [R31 + 0x6C, el]:u32 <- 0
0003496c: goto %00029778

00029cd2:
00029cd5: R22 := 0x430000
00029cda: R0 := 1
00029ce2: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00029ce9: R0 := pad:64[mem[R22 + 0x374, el]:u32]
00029cee: when 31:0[R0] <> 0 goto %00029c69
0003496d: goto %000297aa

00029c69:
00029c6c: R0 := 0x415000
00029c72: R0 := R0 + 0x950
00029c77: R30 := 0x40CA48
00029c79: call @puts with return %00029765

00029765:
0002976d: R0 := 1
00029775: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0002977a: goto %00029778

00029778:
00029780: R0 := pad:64[mem[R19, el]:u32]
00029786: when 31:0[R0] <> 0 goto %00029784
0003496e: goto %000295dd

00029784:
0002978e: R1 := mem[R19 + 0x28, el]:u64
00029793: R0 := 0x412000
00029799: R0 := R0 + 0xEB0
0002979e: R30 := 0x40CB00
000297a0: call @strcasecmp with return %000297a2

000297a2:
000297a5: when 31:0[R0] <> 0 goto %000295dd
0003496f: goto %000297a9

000297a9:
000297ac: goto %000297aa

000297aa:
000297b2: R0 := mem[R31 + 0x78, el]:u64
000297b9: R0 := mem[R0 + 0x28, el]:u64
000297be: R30 := 0x40C8AC
000297c0: call @free with return %000297c2

000297c2:
000297c7: R27 := mem[R31 + 0x78, el]:u64
000297cc: R0 := 0x413000
000297d2: R0 := R0 + 0x338
000297d7: R30 := 0x40C8BC
000297d9: call @strdup with return %000297db

000297db:
000297e1: mem := mem with [R27 + 0x28, el]:u64 <- R0
000297e5: goto %000295dd

000295dd:
000295e5: R28 := mem[R31 + 0x78, el]:u64
000295ea: R3 := 1
000295ef: R2 := 0x412000
000295f4: R1 := 0x412000
000295fa: R2 := R2 + 0xAA0
00029600: R1 := R1 + 0xAA8
00029607: R0 := mem[R28 + 8, el]:u64
0002960c: R30 := 0x40C904
0002960e: call @hlist_mod with return %00029610

00029610:
00029616: mem := mem with [R28 + 8, el]:u64 <- R0
0002961d: R27 := mem[R31 + 0x78, el]:u64
00029622: R1 := 0x412000
00029628: R1 := R1 + 0xAB8
0002962f: R0 := mem[R27 + 8, el]:u64
00029634: R30 := 0x40C91C
00029636: call @hlist_del with return %00029638

00029638:
0002963e: mem := mem with [R27 + 8, el]:u64 <- R0
00029645: R1 := pad:64[mem[R22 + 0x374, el]:u32]
0002964b: when 31:0[R1] <> 0 goto %00029649
00034970: goto %000296a6

00029649:
00029651: R0 := 0x415000
00029657: R0 := R0 + 0x970
0002965c: R30 := 0x40CAA8
0002965e: call @puts with return %00029660

00029660:
00029665: R3 := mem[R31 + 0x78, el]:u64
0002966a: R0 := 0x412000
00029670: R0 := R0 + 0xEA0
00029676: #1333 := R3 + 0x28
0002967b: R1 := mem[#1333, el]:u64
00029680: R2 := mem[#1333 + 8, el]:u64
00029687: R3 := mem[R3 + 0x48, el]:u64
0002968c: R30 := 0x40CAC0
0002968e: call @printf with return %00029690

00029690:
00029695: R0 := mem[R31 + 0x78, el]:u64
0002969c: R0 := mem[R0 + 8, el]:u64
000296a1: R30 := 0x40CACC
000296a3: call @hlist_dump with return %000296a5

000296a5:
000296a8: goto %000296a6

000296a6:
000296ae: R1 := mem[R31 + 0x78, el]:u64
000296b5: R0 := pad:64[mem[R21, el]:u32]
000296ba: R30 := 0x40C934
000296bc: call @headers_send with return %000296be

000296be:
000296c2: when 31:0[R0] = 0 goto %000296c0
00034971: goto %00029c7b

00029c7b:
00029c80: R0 := pad:64[mem[R22 + 0x374, el]:u32]
00029c85: when 31:0[R0] <> 0 goto %00029bab
00034972: goto %00029c89

00029bab:
00029bae: R0 := 0x415000
00029bb4: R0 := R0 + 0x990
00029bb9: R30 := 0x40CA60
00029bbb: call @puts with return %00029bbd

00029bbd:
00029bc1: when R20 <> 0 goto %00029bbf
00034973: goto %00029c3d

00029c89:
00029c8c: when R20 = 0 goto %00029c3d
00034974: goto %00029bbf

00029c3d:
00029c42: R0 := mem[R31 + 0x78, el]:u64
00029c47: R30 := 0x40CA6C
00029c49: call @reset_rr_data with return %00029c4b

00029c4b:
00029c50: R1 := mem[R31 + 0x78, el]:u64
00029c57: R0 := pad:64[mem[R21, el]:u32]
00029c5c: R30 := 0x40CA78
00029c5e: call @headers_recv with return %00029c60

00029c60:
00029c63: when 31:0[R0] <> 0 goto %00029c02
00034975: goto %00029c67

00029c67:
00034976: goto %000296c0

00029bbf:
00029bc8: R0 := R31 + 0x78
00029bcd: R30 := 0x40C94C
00029bcf: call @free_rr_data with return %00029bd1

00029bd1:
00029bd5: R0 := R20
00029bdd: mem := mem with [R31 + 0x78, el]:u64 <- R20
00029be2: R30 := 0x40C958
00029be4: call @reset_rr_data with return %00029be6

00029be6:
00029beb: R1 := mem[R31 + 0x78, el]:u64
00029bf2: R0 := pad:64[mem[R21, el]:u32]
00029bf7: R30 := 0x40C964
00029bf9: call @headers_recv with return %00029bfb

00029bfb:
00029bfe: when 31:0[R0] = 0 goto %000296c0
00034977: goto %00029c02

00029c02:
00029c07: R0 := pad:64[mem[R22 + 0x374, el]:u32]
00029c0c: when 31:0[R0] <> 0 goto %0002980d
00034978: goto %00029c10

0002980d:
00029812: R0 := mem[R31 + 0x78, el]:u64
00029819: R0 := mem[R0 + 8, el]:u64
0002981e: R30 := 0x40CB14
00029820: call @hlist_dump with return %00029822

00029822:
00029827: R1 := mem[R31 + 0x78, el]:u64
0002982e: R0 := pad:64[mem[R1 + 0x10, el]:u32]
00029834: #1339 := 31:0[R0] - 0x197
00029839: VF := extend:64[#1339] <> extend:64[31:0[R0]] - 0x197
0002983e: CF := pad:64[#1339] <> pad:64[31:0[R0]] + 0xFFFFFE69
00029842: ZF := #1339 = 0
00029846: NF := 31:31[#1339]
0002984c: when ZF <> 1 goto %0002984a
00034979: goto %00029a1c

00029c10:
00029c15: R1 := mem[R31 + 0x78, el]:u64
00029c1c: R0 := pad:64[mem[R1 + 0x10, el]:u32]
00029c22: #1341 := 31:0[R0] - 0x197
00029c27: VF := extend:64[#1341] <> extend:64[31:0[R0]] - 0x197
00029c2c: CF := pad:64[#1341] <> pad:64[31:0[R0]] + 0xFFFFFE69
00029c30: ZF := #1341 = 0
00029c34: NF := 31:31[#1341]
00029c39: when ZF goto %00029a1c
0003497a: goto %0002984a

00029a1c:
00029a21: R0 := pad:64[mem[R21, el]:u32]
00029a26: R30 := 0x40CB2C
00029a28: call @http_body_drop with return %00029a2a

00029a2a:
00029a2d: when 31:0[R0] = 0 goto %000296c0
0003497b: goto %00029a31

00029a31:
00029a36: R0 := mem[R31 + 0x78, el]:u64
00029a3b: R1 := 0x413000
00029a41: R1 := R1 + 0x78
00029a48: R0 := mem[R0 + 8, el]:u64
00029a4d: R30 := 0x40CB44
00029a4f: call @hlist_get with return %00029a51

00029a51:
00029a57: mem := mem with [R31 + 0x70, el]:u64 <- R0
00029a5c: when R0 = 0 goto %00029929
0003497c: goto %00029a60

00029929:
0002992c: R1 := 0x415000
00029931: R0 := 4
00029937: R1 := R1 + 0x9D8
0002993c: R30 := 0x40CC94
0002993e: call @syslog with return %00029940

00029940:
00029942: goto %00029858

00029a60:
00029a63: R30 := 0x40CB50
00029a65: call @strlen with return %00029a67

00029a67:
00029a6b: R0 := R0 + 6
00029a70: R30 := 0x40CB58
00029a72: call @zmalloc with return %00029a74

00029a74:
00029a78: R27 := R0
00029a7f: R1 := mem[R31 + 0x70, el]:u64
00029a85: R1 := R1 + 5
00029a8a: R30 := 0x40CB68
00029a8c: call @from_base64 with return %00029a8e

00029a8e:
00029a92: R2 := pad:64[31:0[R0]]
00029a98: #1340 := 31:0[R0] - 0x28
00029a9d: VF := extend:64[#1340] <> extend:64[31:0[R0]] - 0x28
00029aa2: CF := pad:64[#1340] <> pad:64[31:0[R0]] + 0xFFFFFFD8
00029aa6: ZF := #1340 = 0
00029aaa: NF := 31:31[#1340]
00029ab2: when ~(NF = VF & ~ZF) goto %00029ab0
0003497d: goto %00029ae9

00029ab0:
00029ab8: R1 := 0x415000
00029abe: R1 := R1 + 0x9B0
00029ac3: R0 := 3
00029ac8: R30 := 0x40CC3C
00029aca: call @syslog with return %00029acc

00029acc:
00029ad0: R0 := R27
00029ad5: R30 := 0x40CC44
00029ad7: call @free with return %00029ad9

00029ad9:
00029ade: R0 := pad:64[mem[R21, el]:u32]
00029ae3: R30 := 0x40CC4C
00029ae5: call @close with return %00029ae7

00029ae7:
0003497e: goto %0002986d

00029ae9:
00029aed: R0 := R31 + 0x70
00029af3: R3 := R24
00029af9: R1 := R27
00029b00: mem := mem with [R31 + 0x70, el]:u64 <- 0
00029b05: R30 := 0x40CB88
00029b07: call @ntlm_response with return %00029b09

00029b09:
00029b0d: R28 := pad:64[31:0[R0]]
00029b12: VF := 0
00029b15: CF := 1
00029b19: ZF := 31:0[R0] = 0
00029b1d: NF := 31:31[R0]
00029b24: when ~(NF = VF & ~ZF) goto %00029944
0003497f: goto %00029b28

00029944:
00029947: R1 := 0x412000
0002994d: R1 := R1 + 0xB28
00029952: R0 := 3
00029957: R30 := 0x40CCA8
00029959: call @syslog with return %0002995b

0002995b:
0002995f: R0 := R27
00029964: R19 := 1
00029969: R30 := 0x40CCB4
0002996b: call @free with return %0002996d

0002996d:
00029972: R0 := mem[R31 + 0x70, el]:u64
00029977: R30 := 0x40CCBC
00029979: call @free with return %0002997b

0002997b:
00029980: R0 := pad:64[mem[R21, el]:u32]
00029985: R30 := 0x40CCC4
00029987: call @close with return %00029989

00029989:
0002998b: goto %00029878

00029b28:
00029b2c: R1 := R25
00029b32: R0 := R23
00029b37: R2 := 0x1000
00029b3c: R30 := 0x40CBA4
00029b3e: call @strlcpy with return %00029b40

00029b40:
00029b45: R1 := mem[R31 + 0x70, el]:u64
00029b4b: R2 := extend:64[31:0[R28]]
00029b51: R0 := R23 + 5
00029b56: R3 := 0xFFB
00029b5b: R30 := 0x40CBB8
00029b5d: call @to_base64 with return %00029b5f

00029b5f:
00029b64: R0 := mem[R19 + 8, el]:u64
00029b6a: R1 := R26
00029b70: R2 := R23
00029b75: R3 := 1
00029b7a: R30 := 0x40CBCC
00029b7c: call @hlist_mod with return %00029b7e

00029b7e:
00029b82: R1 := R0
00029b89: R0 := mem[R31 + 0x70, el]:u64
00029b91: mem := mem with [R19 + 8, el]:u64 <- R1
00029b96: R30 := 0x40CBDC
00029b98: call @free with return %00029b9a

00029b9a:
00029b9e: R0 := R27
00029ba3: R30 := 0x40CBE4
00029ba5: call @free with return %00029ba7

00029ba7:
00029ba9: goto %00029858

0002984a:
00029854: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002985a: when 31:0[R0] = 0 goto %00029858
00034980: goto %000299ee

000299ee:
000299f3: R0 := pad:64[mem[R22 + 0x374, el]:u32]
000299f8: when 31:0[R0] = 0 goto %00029900
00034981: goto %000299fc

000299fc:
00029a00: when R19 = 0 goto %000299fe
00034982: goto %00029a0e

00029a0e:
00029a13: R0 := pad:64[mem[R19, el]:u32]
00029a18: when 31:0[R0] <> 0 goto %00029893
00034983: goto %000299fe

00029893:
00029898: R1 := mem[R19 + 0x28, el]:u64
0002989d: R0 := 0x412000
000298a3: R0 := R0 + 0xEB0
000298a8: R30 := 0x40CC68
000298aa: call @strcasecmp with return %000298ac

000298ac:
000298af: VF := 0
000298b2: CF := 1
000298b6: ZF := 31:0[R0] = 0
000298ba: NF := 31:31[R0]
000298bf: R1 := 0x415000
000298c4: R0 := 0x415000
000298ca: R1 := R1 + 0x930
000298d0: R0 := R0 + 0x940
000298de: when ZF goto %000298d6
000298df: goto %000298da

000298da:
000298db: R1 := R0
000298e1: goto %000298dd

000298d6:
000298d7: R1 := R1
000298e0: goto %000298dd

000298dd:
000298e6: goto %000298e4

000299fe:
00029a06: R1 := 0x415000
00029a0c: R1 := R1 + 0x940
00034984: goto %000298e4

000298e4:
000298ea: R0 := 0x415000
000298f0: R0 := R0 + 0xA10
000298f5: R30 := 0x40C9B0
000298f7: call @printf with return %000298f9

000298f9:
000298fe: R1 := mem[R31 + 0x78, el]:u64
00034985: goto %00029900

00029900:
00029904: when R20 = 0 goto %00029902
00034986: goto %0002991c

0002991c:
0002991f: R0 := 0x197
00029927: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R0]
00034987: goto %00029902

00029902:
0002990c: R0 := pad:64[mem[R21, el]:u32]
00029911: R30 := 0x40C9C8
00029913: call @http_body_drop with return %00029915

00029915:
00029918: when 31:0[R0] = 0 goto %000296c0
00034988: goto %00029858

000296c0:
000296ca: R0 := pad:64[mem[R21, el]:u32]
000296cf: R19 := 0
000296d4: R30 := 0x40CA8C
000296d6: call @close with return %000296d8

000296d8:
000296dc: when R20 <> 0 goto %000296da
00034989: goto %0002987d

00029858:
00029862: R0 := pad:64[mem[R21, el]:u32]
00029867: R30 := 0x40C9D4
00029869: call @so_closed with return %0002986b

0002986b:
0002986f: when 31:0[R0] = 0 goto %0002986d
0003498a: goto %0002998d

0002986d:
00029875: R19 := 1
0002987a: goto %00029878

0002998d:
00029992: R0 := pad:64[mem[R22 + 0x374, el]:u32]
00029998: when 31:0[R0] <> 0 goto %00029996
0003498b: goto %000299ae

00029996:
0002999e: R0 := 0x415000
000299a4: R0 := R0 + 0xA38
000299a9: R30 := 0x40CBF4
000299ab: call @puts with return %000299ad

000299ad:
000299b0: goto %000299ae

000299ae:
000299b6: R0 := pad:64[mem[R21, el]:u32]
000299bb: R30 := 0x40C9E8
000299bd: call @close with return %000299bf

000299bf:
000299c4: R1 := mem[R19 + 0x30, el]:u64
000299ca: R0 := R24
000299d1: R2 := mem[R19 + 0x40, el]:u64
000299d6: R30 := 0x40C9F8
000299d8: call @proxy_connect with return %000299da

000299da:
000299e0: mem := mem with [R21, el]:u32 <- 31:0[R0]
000299e6: R0 := pad:64[~31:0[R0]]
000299ec: R19 := pad:64[31:31[R0]]
0003498c: goto %00029878

00029878:
0002987f: when R20 = 0 goto %0002987d
0003498d: goto %000296da

0002987d:
00029886: R0 := R31 + 0x78
0002988b: R30 := 0x40CA98
0002988d: call @free_rr_data with return %0002988f

0002988f:
00029891: goto %000296da

000296da:
000296e3: R0 := R23
000296e8: R30 := 0x40CA10
000296ea: call @free with return %000296ec

000296ec:
000296f0: #1334 := R31 + 0x20
000296f5: R21 := mem[#1334, el]:u64
000296fa: R22 := mem[#1334 + 8, el]:u64
00029700: R0 := pad:64[31:0[R19]]
00029706: #1335 := R31 + 0x10
0002970b: R19 := mem[#1335, el]:u64
00029710: R20 := mem[#1335 + 8, el]:u64
00029716: #1336 := R31 + 0x30
0002971b: R23 := mem[#1336, el]:u64
00029720: R24 := mem[#1336 + 8, el]:u64
00029726: #1337 := R31 + 0x40
0002972b: R25 := mem[#1337, el]:u64
00029730: R26 := mem[#1337 + 8, el]:u64
00029736: #1338 := R31 + 0x50
0002973b: R27 := mem[#1338, el]:u64
00029740: R28 := mem[#1338 + 8, el]:u64
00029747: R29 := mem[R31, el]:u64
0002974c: R30 := mem[R31 + 8, el]:u64
00029750: R31 := R31 + 0x80
00029755: call R30 with noreturn

0003498e: sub proxy_connect(proxy_connect_result)
00034c36: proxy_connect_result :: out u32 = low:32[R0]

0001da2b:
0001da2f: #771 := R31 - 0x70
0001da35: mem := mem with [#771, el]:u64 <- R29
0001da3b: mem := mem with [#771 + 8, el]:u64 <- R30
0001da3f: R31 := #771
0001da44: R1 := 0x430000
0001da4a: R29 := R31
0001da52: mem := mem with [R31 + 0x68, el]:u64 <- R0
0001da59: R0 := pad:64[mem[R1 + 0x428, el]:u32]
0001da5f: #772 := R31 + 0x10
0001da65: mem := mem with [#772, el]:u64 <- R19
0001da6b: mem := mem with [#772 + 8, el]:u64 <- R20
0001da71: #773 := R31 + 0x20
0001da77: mem := mem with [#773, el]:u64 <- R21
0001da7d: mem := mem with [#773 + 8, el]:u64 <- R22
0001da83: #774 := R31 + 0x30
0001da89: mem := mem with [#774, el]:u64 <- R23
0001da8f: mem := mem with [#774 + 8, el]:u64 <- R24
0001da95: #775 := R31 + 0x40
0001da9b: mem := mem with [#775, el]:u64 <- R25
0001daa1: mem := mem with [#775 + 8, el]:u64 <- R26
0001daa7: #776 := R31 + 0x50
0001daad: mem := mem with [#776, el]:u64 <- R27
0001dab3: mem := mem with [#776 + 8, el]:u64 <- R28
0001dab9: when 31:0[R0] <> 0 goto %0001dab7
0003498f: goto %00029d31

0001dab7:
0001dabf: R0 := 0x430000
0001dac4: R23 := 0
0001daca: R24 := R0 + 0x430
0001dacf: goto %0001dacd

00029d31:
00029d34: R0 := 0x430000
00029d3a: R24 := R0 + 0x430
00029d41: R19 := mem[R0 + 0x430, el]:u64
00029d48: R28 := mem[R24 + 0x48, el]:u64
00029d4f: R23 := pad:64[mem[R24 + 8, el]:u32]
00034990: goto %0001dacd

0001dacd:
0001dad3: VF := 0
0001dad6: CF := 1
0001dada: ZF := R28 = 0
0001dade: NF := 63:63[R28]
0001dae4: #777 := ZF
0001dae7: VF := 0
0001daeb: CF := #777
0001daf0: ZF := R19 = 0 | ~#777
0001daf5: NF := #777 & 63:63[R19]
0001dafb: when ZF goto %0001daf9
00034991: goto %00029d2a

00029d2a:
00029d2f: R28 := mem[R19, el]:u64
00034992: goto %0001daf9

0001daf9:
0001db01: R25 := 0x430000
0001db06: R22 := 0x415000
0001db0c: R25 := R25 + 0x374
0001db12: R22 := R22 + 0x8E0
0001db18: R21 := R24 + 0x18
0001db1d: R20 := 0
00034993: goto %0001db1f

0001db1f:
0001db23: R0 := R21
0001db28: R30 := 0x40C570
0001db2a: call @pthread_mutex_lock with return %0001db2c

0001db2c:
0001db30: R1 := R19
0001db36: when R19 <> 0 goto %0001db34
00034994: goto %00029d26

0001db34:
0001db3e: R0 := mem[R1, el]:u64
0001db44: #778 := ~R0
0001db49: #779 := R28 + ~R0
0001db4f: VF := extend:128[#779 + 1] <> extend:128[R28] + extend:128[#778] +
          1
0001db55: CF := pad:128[#779 + 1] <> pad:128[R28] + pad:128[#778] + 1
0001db59: ZF := #779 + 1 = 0
0001db5d: NF := 63:63[#779 + 1]
0001db63: when ZF <> 1 goto %0001db61
00034995: goto %00029cf2

00029cf2:
00029cf7: R26 := mem[R1 + 8, el]:u64
00029cfc: when R26 = 0 goto %0001db6f
00034996: goto %00029d00

00029d00:
00029d05: R0 := pad:64[mem[R26, el]:u32]
00029d0b: #1342 := 31:0[R0] - 1
00029d10: VF := extend:64[#1342] <> extend:64[31:0[R0]] - 1
00029d15: CF := pad:64[#1342] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00029d19: ZF := #1342 = 0
00029d1d: NF := 31:31[#1342]
00029d22: when ZF goto %0001dec0
00034997: goto %0001dec9

0001dec0:
0001dec5: R0 := pad:64[mem[R26 + 0x190, el]:u32]
0001decb: when 31:0[R0] <> 0 goto %0001dec9
00034998: goto %0001df82

0001df82:
0001df87: R0 := pad:64[mem[R25, el]:u32]
0001df8d: R27 := R26 + 4
0001df93: when 31:0[R0] <> 0 goto %0001df91
00034999: goto %0001dfaf

0001df91:
0001df9a: R1 := R27
0001df9f: R0 := 0x415000
0001dfa5: R0 := R0 + 0x8A8
0001dfaa: R30 := 0x40C7D4
0001dfac: call @printf with return %0001dfae

0001dfae:
0001dfb1: goto %0001dfaf

0001dfaf:
0001dfb7: R2 := pad:64[mem[R26 + 0x44, el]:u32]
0001dfbd: R1 := R27
0001dfc3: R0 := R26 + 0x188
0001dfc8: R30 := 0x40C744
0001dfca: call @so_resolv with return %0001dfcc

0001dfcc:
0001dfd0: when 31:0[R0] = 0 goto %0001dfce
0003499a: goto %0001e001

0001dfce:
0001dfd7: R2 := R27
0001dfdc: R1 := 0x415000
0001dfe2: R1 := R1 + 0x8C0
0001dfe7: R0 := 3
0001dfec: R30 := 0x40C7B8
0001dfee: call @syslog with return %0001dff0

0001dff0:
0001dff4: R0 := R24 + 0x18
0001dff9: R30 := 0x40C7C0
0001dffb: call @pthread_mutex_unlock with return %0001dffd

0001dffd:
0001dfff: goto %0001dedb

0001e001:
0001e004: R0 := 1
0001e00c: mem := mem with [R26 + 0x190, el]:u32 <- 31:0[R0]
0001e012: R0 := R24 + 0x18
0001e017: R30 := 0x40C758
0001e019: call @pthread_mutex_unlock with return %0001e01b

0001e01b:
0001e020: R0 := pad:64[mem[R26, el]:u32]
0001e025: when 31:0[R0] <> 0 goto %0001df6f
0003499b: goto %0001dee4

0001dec9:
0001ded2: R0 := R21
0001ded7: R30 := 0x40C5AC
0001ded9: call @pthread_mutex_unlock with return %0001dedb

0001dedb:
0001dee0: R0 := pad:64[mem[R26, el]:u32]
0001dee6: when 31:0[R0] = 0 goto %0001dee4
0003499c: goto %0001df6f

0001dee4:
0001deec: R27 := 0xFFFFFFFE
0001def2: R0 := pad:64[31:0[R27]]
0001def8: #799 := R31 + 0x10
0001defd: R19 := mem[#799, el]:u64
0001df02: R20 := mem[#799 + 8, el]:u64
0001df08: #800 := R31 + 0x20
0001df0d: R21 := mem[#800, el]:u64
0001df12: R22 := mem[#800 + 8, el]:u64
0001df18: #801 := R31 + 0x30
0001df1d: R23 := mem[#801, el]:u64
0001df22: R24 := mem[#801 + 8, el]:u64
0001df28: #802 := R31 + 0x40
0001df2d: R25 := mem[#802, el]:u64
0001df32: R26 := mem[#802 + 8, el]:u64
0001df38: #803 := R31 + 0x50
0001df3d: R27 := mem[#803, el]:u64
0001df42: R28 := mem[#803 + 8, el]:u64
0001df49: R29 := mem[R31, el]:u64
0001df4e: R30 := mem[R31 + 8, el]:u64
0001df52: R31 := R31 + 0x70
0001df57: call R30 with noreturn

0001df6f:
0001df74: R0 := pad:64[mem[R26 + 0x190, el]:u32]
0001df79: when 31:0[R0] <> 0 goto %0001de50
0003499d: goto %0001df7d

0001de50:
0001de55: R0 := mem[R26 + 0x188, el]:u64
0001de5a: R30 := 0x40C650
0001de5c: call @so_connect with return %0001de5e

0001de5e:
0001de62: R27 := pad:64[31:0[R0]]
0001de67: when 31:31[R0] goto %0001db87
0003499e: goto %0001de6b

0001de6b:
0001de70: R0 := mem[R24 + 0x48, el]:u64
0001de76: #797 := ~R28
0001de7b: #798 := R0 + ~R28
0001de81: VF := extend:128[#798 + 1] <> extend:128[R0] + extend:128[#797] + 1
0001de87: CF := pad:128[#798 + 1] <> pad:128[R0] + pad:128[#797] + 1
0001de8b: ZF := #798 + 1 = 0
0001de8f: NF := 63:63[#798 + 1]
0001de94: when ZF goto %0001dce3
0003499f: goto %0001dc71

0001df7d:
0001df80: R27 := 0xFFFFFFFF
000349a0: goto %0001db87

0001db61:
0001db6b: R1 := mem[R1 + 0x10, el]:u64
0001db71: when R1 = 0 goto %0001db6f
000349a1: goto %0001db34

0001db6f:
0001db78: R0 := R21
0001db7d: R27 := 0xFFFFFFFF
0001db82: R30 := 0x40C71C
0001db84: call @pthread_mutex_unlock with return %0001db86

0001db86:
0001db89: goto %0001db87

0001db87:
0001db8e: R1 := R19
0001db93: goto %0001db91

0001db91:
0001db99: R0 := mem[R1, el]:u64
0001db9f: #780 := ~R0
0001dba4: #781 := R28 + ~R0
0001dbaa: VF := extend:128[#781 + 1] <> extend:128[R28] + extend:128[#780] +
          1
0001dbb0: CF := pad:128[#781 + 1] <> pad:128[R28] + pad:128[#780] + 1
0001dbb4: ZF := #781 + 1 = 0
0001dbb8: NF := 63:63[#781 + 1]
0001dbbe: when ZF <> 1 goto %0001dbbc
000349a2: goto %0001de98

0001de98:
0001de9d: R0 := mem[R1 + 0x10, el]:u64
0001dea2: VF := 0
0001dea5: CF := 1
0001dea9: ZF := R0 = 0
0001dead: NF := 63:63[R0]
0001debb: when ZF <> 1 goto %0001deb3
0001debc: goto %0001deb7

0001deb7:
0001deb8: R0 := R19
0001debe: goto %0001deba

0001deb3:
0001deb4: R0 := R0
0001debd: goto %0001deba

0001deba:
000349a3: goto %0001dbd6

0001dbbc:
0001dbc6: R1 := mem[R1 + 0x10, el]:u64
0001dbcc: when R1 = 0 goto %0001dbca
000349a4: goto %0001db91

0001dbca:
0001dbd3: R0 := R19
0001dbd8: goto %0001dbd6

0001dbd6:
0001dbde: R28 := mem[R0, el]:u64
0001dbe3: R3 := mem[R0 + 8, el]:u64
0001dbe9: R1 := R22
0001dbee: R0 := 3
0001dbf4: R2 := R3 + 4
0001dbfb: R3 := pad:64[mem[R3 + 0x44, el]:u32]
0001dc00: R30 := 0x40C600
0001dc02: call @syslog with return %0001dc04

00029d26:
00029d28: goto %0001df59

0001df59:
0001df5d: R0 := R21
0001df62: R27 := 0xFFFFFFFF
0001df67: R30 := 0x40C790
0001df69: call @pthread_mutex_unlock with return %0001df6b

0001df6b:
0001df6d: goto %0001dc04

0001dc04:
0001dc08: R20 := pad:64[31:0[R20] + 1]
0001dc0e: #782 := ~31:0[R20]
0001dc13: #783 := 31:0[R23] + ~31:0[R20]
0001dc19: VF := extend:64[#783 + 1] <> extend:64[31:0[R23]] + extend:64[#782]
          + 1
0001dc1f: CF := pad:64[#783 + 1] <> pad:64[31:0[R23]] + pad:64[#782] + 1
0001dc23: ZF := #783 + 1 = 0
0001dc27: NF := 31:31[#783 + 1]
0001dc2e: when NF = VF & ~ZF goto %0001db1f
000349a5: goto %0001dc32

0001dc32:
0001dc35: R0 := 3
0001dc3a: R1 := 0x415000
0001dc40: R1 := R1 + 0x908
0001dc45: R30 := 0x40C61C
0001dc47: call @syslog with return %0001dc49

0001dc49:
0001dc4e: R0 := mem[R24 + 0x48, el]:u64
0001dc54: #784 := ~R0
0001dc59: #785 := R28 + ~R0
0001dc5f: VF := extend:128[#785 + 1] <> extend:128[R28] + extend:128[#784] +
          1
0001dc65: CF := pad:128[#785 + 1] <> pad:128[R28] + pad:128[#784] + 1
0001dc69: ZF := #785 + 1 = 0
0001dc6d: NF := 63:63[#785 + 1]
0001dc73: when ZF <> 1 goto %0001dc71
000349a6: goto %0001dde5

0001dc71:
0001dc79: R21 := 0x430000
0001dc7e: R20 := 0x430000
0001dc84: R20 := R20 + 0x3F0
0001dc8a: R0 := R20
0001dc8f: R30 := 0x40C678
0001dc91: call @pthread_mutex_lock with return %0001dc93

0001dc93:
0001dc98: R19 := mem[R21 + 0x420, el]:u64
0001dc9e: when R19 = 0 goto %0001dc9c
000349a7: goto %0001ddc2

0001ddc2:
0001ddc7: R0 := pad:64[mem[R19, el]:u32]
0001ddce: R19 := mem[R19 + 0x10, el]:u64
0001ddd3: R30 := 0x40C68C
0001ddd5: call @close with return %0001ddd7

0001ddd7:
0001ddda: when R19 <> 0 goto %0001ddc2
000349a8: goto %0001ddde

0001ddde:
0001dde3: R19 := mem[R21 + 0x420, el]:u64
000349a9: goto %0001dc9c

0001dc9c:
0001dca5: R0 := R19
0001dcaa: R30 := 0x40C69C
0001dcac: call @plist_free with return %0001dcae

0001dcae:
0001dcb2: R19 := R24 + 0x18
0001dcb8: R0 := R20
0001dcbd: R30 := 0x40C6A8
0001dcbf: call @pthread_mutex_unlock with return %0001dcc1

0001dcc1:
0001dcc5: R0 := R19
0001dcca: R30 := 0x40C6B0
0001dccc: call @pthread_mutex_lock with return %0001dcce

0001dcce:
0001dcd2: R0 := R19
0001dcda: mem := mem with [R24 + 0x48, el]:u64 <- R28
0001dcdf: R30 := 0x40C6BC
0001dce1: call @pthread_mutex_unlock with return %0001dce3

0001dce3:
0001dce8: R0 := mem[R31 + 0x68, el]:u64
0001dced: VF := 0
0001dcf0: CF := 1
0001dcf4: ZF := 31:0[R27] = 0
0001dcf8: NF := 31:31[R27]
0001dcff: #786 := NF = VF
0001dd02: VF := 0
0001dd06: CF := #786
0001dd0b: ZF := R0 = 0 | ~#786
0001dd10: NF := #786 & 63:63[R0]
0001dd16: when ZF goto %0001dd14
000349aa: goto %0001dd84

0001dd84:
0001dd87: R2 := 0x430000
0001dd8c: R1 := 0x430000
0001dd93: R2 := pad:64[mem[R2 + 0x3D0, el]:u32]
0001dd9a: R1 := mem[R1 + 0x3C8, el]:u64
0001dd9f: VF := 0
0001dda2: CF := 1
0001dda6: ZF := 31:0[R2] = 0
0001ddaa: NF := 31:31[R2]
0001ddb6: when ZF <> 1 goto %0001ddaf
0001ddb7: goto %0001ddb2

0001ddb2:
0001ddb3: R2 := 1
0001ddb9: goto %0001ddb5

0001ddaf:
0001ddb0: R2 := 0
0001ddb8: goto %0001ddb5

0001ddb5:
0001ddbe: R30 := 0x40C6E8
0001ddc0: call @copy_auth with return %0001dd14

0001dd14:
0001dd1d: #787 := R31 + 0x10
0001dd22: R19 := mem[#787, el]:u64
0001dd27: R20 := mem[#787 + 8, el]:u64
0001dd2d: R0 := pad:64[31:0[R27]]
0001dd33: #788 := R31 + 0x20
0001dd38: R21 := mem[#788, el]:u64
0001dd3d: R22 := mem[#788 + 8, el]:u64
0001dd43: #789 := R31 + 0x30
0001dd48: R23 := mem[#789, el]:u64
0001dd4d: R24 := mem[#789 + 8, el]:u64
0001dd53: #790 := R31 + 0x40
0001dd58: R25 := mem[#790, el]:u64
0001dd5d: R26 := mem[#790 + 8, el]:u64
0001dd63: #791 := R31 + 0x50
0001dd68: R27 := mem[#791, el]:u64
0001dd6d: R28 := mem[#791 + 8, el]:u64
0001dd74: R29 := mem[R31, el]:u64
0001dd79: R30 := mem[R31 + 8, el]:u64
0001dd7d: R31 := R31 + 0x70
0001dd82: call R30 with noreturn

0001dde5:
0001dde9: #792 := R31 + 0x10
0001ddee: R19 := mem[#792, el]:u64
0001ddf3: R20 := mem[#792 + 8, el]:u64
0001ddf9: R0 := pad:64[31:0[R27]]
0001ddff: #793 := R31 + 0x20
0001de04: R21 := mem[#793, el]:u64
0001de09: R22 := mem[#793 + 8, el]:u64
0001de0f: #794 := R31 + 0x30
0001de14: R23 := mem[#794, el]:u64
0001de19: R24 := mem[#794 + 8, el]:u64
0001de1f: #795 := R31 + 0x40
0001de24: R25 := mem[#795, el]:u64
0001de29: R26 := mem[#795 + 8, el]:u64
0001de2f: #796 := R31 + 0x50
0001de34: R27 := mem[#796, el]:u64
0001de39: R28 := mem[#796 + 8, el]:u64
0001de40: R29 := mem[R31, el]:u64
0001de45: R30 := mem[R31 + 8, el]:u64
0001de49: R31 := R31 + 0x70
0001de4e: call R30 with noreturn

000349ab: sub proxy_thread(proxy_thread_result)
00034c37: proxy_thread_result :: out u32 = low:32[R0]

000202d2:
000202d6: #943 := R31 - 0x70
000202dc: mem := mem with [#943, el]:u64 <- R29
000202e2: mem := mem with [#943 + 8, el]:u64 <- R30
000202e6: R31 := #943
000202ec: R29 := R31
000202f2: #944 := R31 + 0x40
000202f8: mem := mem with [#944, el]:u64 <- R25
000202fe: mem := mem with [#944 + 8, el]:u64 <- R26
00020303: R25 := 0x412000
0002030a: R26 := pad:64[mem[R0, el]:u32]
00020310: #945 := R31 + 0x20
00020316: mem := mem with [#945, el]:u64 <- R21
0002031c: mem := mem with [#945 + 8, el]:u64 <- R22
00020322: R22 := R0
00020328: #946 := R31 + 0x30
0002032e: mem := mem with [#946, el]:u64 <- R23
00020334: mem := mem with [#946 + 8, el]:u64 <- R24
00020339: R24 := 0x430000
0002033f: R24 := R24 + 0x370
00020345: #947 := R31 + 0x50
0002034b: mem := mem with [#947, el]:u64 <- R27
00020351: mem := mem with [#947 + 8, el]:u64 <- R28
00020356: R28 := 0x413000
0002035b: R27 := 0x412000
00020361: R28 := R28 + 0xC00
00020367: R27 := R27 + 0xCE8
0002036d: #948 := R31 + 0x10
00020373: mem := mem with [#948, el]:u64 <- R19
00020379: mem := mem with [#948 + 8, el]:u64 <- R20
000349ac: goto %0002037b

0002037b:
00020380: R0 := pad:64[mem[R24 + 4, el]:u32]
00020386: when 31:0[R0] <> 0 goto %00020384
000349ad: goto %000288c2

00020384:
0002038d: R1 := pad:64[31:0[R26]]
00020393: R0 := R28
00020398: R30 := 0x40A1F8
0002039a: call @printf with return %0002039c

0002039c:
000203a0: R1 := pad:64[31:0[R26]]
000203a6: R0 := R27
000203ab: R30 := 0x40A204
000203ad: call @printf with return %000203af

000203af:
000203b2: R30 := 0x40A208
000203b4: call @new_rr_data with return %000203b6

000203b6:
000203ba: R1 := R0
000203c0: R0 := pad:64[31:0[R26]]
000203c8: mem := mem with [R31 + 0x68, el]:u64 <- R1
000203cd: R30 := 0x40A218
000203d0: call @headers_recv with return %00021621

00021621:
00021625: when 31:0[R0] <> 0 goto %00021623
000349ae: goto %0002888d

000288c2:
000288c5: R30 := 0x40A0CC
000288c7: call @new_rr_data with return %000288c9

000288c9:
000288cd: R1 := R0
000288d3: R0 := pad:64[31:0[R26]]
000288db: mem := mem with [R31 + 0x68, el]:u64 <- R1
000288e0: R30 := 0x40A0DC
000288e2: call @headers_recv with return %000288e4

000288e4:
000288e7: when 31:0[R0] = 0 goto %0002888d
000349af: goto %00021623

0002888d:
00028891: R0 := R31 + 0x68
00028896: R30 := 0x40A224
00028898: call @free_rr_data with return %0002889a

0002889a:
0002889e: R0 := R22
000288a3: R30 := 0x40A22C
000288a5: call @free with return %000288a7

000288a7:
000288ab: R0 := pad:64[31:0[R26]]
000288b0: R30 := 0x40A234
000288b2: call @close with return %000288b4

000288b4:
000288b9: R0 := pad:64[mem[R24 + 0x10, el]:u32]
000288be: when 31:0[R0] <> 0 goto %0002878e
000349b0: goto %00027750

00021623:
0002162d: R19 := mem[R31 + 0x68, el]:u64
00021632: R21 := 0x412000
00021638: R23 := R25 + 0xA70
0002163e: R21 := R21 + 0xE68
00021643: goto %00021641

00021641:
00021649: R0 := mem[R19 + 8, el]:u64
0002164f: R2 := R23
00021655: R1 := R21
0002165a: R30 := 0x40A130
0002165c: call @hlist_subcmp with return %0002165e

0002165e:
00021662: R20 := pad:64[31:0[R0]]
00021669: R1 := mem[R31 + 0x68, el]:u64
00021670: R0 := mem[R1 + 0x40, el]:u64
00021675: R30 := 0x40A140
00021677: call @noproxy_match with return %00021679

00021679:
0002167d: R1 := pad:64[31:0[R0]]
00021683: R0 := R22
00021689: when 31:0[R1] <> 0 goto %00021687
000349b1: goto %00028832

00028832:
00028837: R1 := mem[R31 + 0x68, el]:u64
0002883c: R30 := 0x40A154
0002883e: call @forward_request with return %00028840

00028840:
00028844: R19 := R0
0002884a: #1290 := R0 + 2
0002884f: VF := extend:128[#1290] <> extend:128[R0] + 2
00028854: CF := pad:128[#1290] <> pad:128[R0] + 2
00028858: ZF := #1290 = 0
0002885c: NF := 63:63[#1290]
00028861: when ZF <> 1 goto %00027688
000349b2: goto %00028865

00028865:
0002886a: R1 := mem[R31 + 0x68, el]:u64
00028870: R0 := R22
00028875: R30 := 0x40A16C
00028877: call @direct_request with return %00028879

00028879:
0002887d: R19 := R0
00028884: R0 := pad:64[mem[R24 + 4, el]:u32]
00028889: when 31:0[R0] = 0 goto %00028806
000349b3: goto %00027691

00021687:
00021691: R1 := mem[R31 + 0x68, el]:u64
00021696: R30 := 0x40A0FC
00021699: call @direct_request with return %00027682

00027682:
00027686: R19 := R0
000349b4: goto %00027688

00027688:
0002768d: R0 := pad:64[mem[R24 + 4, el]:u32]
00027693: when 31:0[R0] <> 0 goto %00027691
000349b5: goto %00028806

00027691:
0002769a: R1 := R19
0002769f: R0 := 0x413000
000276a5: R0 := R0 + 0xC20
000276aa: R30 := 0x40A188
000276ac: call @printf with return %000276ae

000276ae:
000276b2: R1 := R19 - 1
000276b8: R0 := R31 + 0x68
000276be: #1222 := R1 + 3
000276c3: VF := extend:128[#1222] <> extend:128[R1] + 3
000276c8: CF := pad:128[#1222] <> pad:128[R1] + 3
000276cc: ZF := #1222 = 0
000276d0: NF := 63:63[#1222]
000276d7: when ~(CF & ~ZF) goto %000276d5
000349b6: goto %000276e9

00028806:
0002880a: R1 := R19 - 1
00028810: R0 := R31 + 0x68
00028816: #1289 := R1 + 3
0002881b: VF := extend:128[#1289] <> extend:128[R1] + 3
00028820: CF := pad:128[#1289] <> pad:128[R1] + 3
00028824: ZF := #1289 = 0
00028828: NF := 63:63[#1289]
0002882e: when CF & ~ZF goto %000276e9
000349b7: goto %000276d5

000276e9:
000276ed: R0 := R31 + 0x68
000276f2: R30 := 0x40A1A0
000276f4: call @free_rr_data with return %000276f6

000276f6:
000276f9: VF := 0
000276fc: CF := 1
00027700: ZF := 31:0[R20] = 0
00027704: NF := 31:31[R20]
0002770a: #1223 := R19 + 1
0002770e: #1224 := ZF <> 1
00027714: VF := #1224 & extend:128[#1223] <> extend:128[R19] + 1
0002771a: CF := #1224 & pad:128[#1223] <> pad:128[R19] + 1
0002771f: ZF := #1223 = 0 | ~#1224
00027724: NF := #1224 & 63:63[#1223]
0002772a: when ZF goto %00027728
000349b8: goto %000287f8

000287f8:
000287fd: R0 := pad:64[mem[R24 + 0x10, el]:u32]
00028802: when 31:0[R0] = 0 goto %0002037b
000349b9: goto %00027728

00027728:
00027731: R0 := R22
00027736: R30 := 0x40A1BC
00027738: call @free with return %0002773a

0002773a:
0002773e: R0 := pad:64[31:0[R26]]
00027743: R30 := 0x40A1C4
00027745: call @close with return %00027747

00027747:
0002774c: R0 := pad:64[mem[R24 + 0x10, el]:u32]
00027752: when 31:0[R0] = 0 goto %00027750
000349ba: goto %0002878e

00027750:
00027759: R19 := R24 + 0x18
0002775f: R0 := R19
00027764: R30 := 0x40A248
00027766: call @pthread_mutex_lock with return %00027768

00027768:
0002776b: R30 := 0x40A24C
0002776e: call @pthread_self with return %00027770

00027770:
00027774: R1 := R0
0002777b: R0 := mem[R24 + 0x48, el]:u64
00027780: R2 := 0
00027785: R30 := 0x40A25C
00027787: call @plist_add with return %00027789

00027789:
0002778d: R1 := R0
00027793: R0 := R19
0002779b: mem := mem with [R24 + 0x48, el]:u64 <- R1
000277a0: R30 := 0x40A26C
000277a2: call @pthread_mutex_unlock with return %000277a4

000277a4:
000277a8: #1225 := R31 + 0x10
000277ad: R19 := mem[#1225, el]:u64
000277b2: R20 := mem[#1225 + 8, el]:u64
000277b7: R0 := 0
000277bd: #1226 := R31 + 0x20
000277c2: R21 := mem[#1226, el]:u64
000277c7: R22 := mem[#1226 + 8, el]:u64
000277cd: #1227 := R31 + 0x30
000277d2: R23 := mem[#1227, el]:u64
000277d7: R24 := mem[#1227 + 8, el]:u64
000277dd: #1228 := R31 + 0x40
000277e2: R25 := mem[#1228, el]:u64
000277e7: R26 := mem[#1228 + 8, el]:u64
000277ed: #1229 := R31 + 0x50
000277f2: R27 := mem[#1229, el]:u64
000277f7: R28 := mem[#1229 + 8, el]:u64
000277fe: R29 := mem[R31, el]:u64
00027803: R30 := mem[R31 + 8, el]:u64
00027807: R31 := R31 + 0x70
0002780c: call R30 with noreturn

0002878e:
00028792: #1284 := R31 + 0x10
00028797: R19 := mem[#1284, el]:u64
0002879c: R20 := mem[#1284 + 8, el]:u64
000287a1: R0 := 0
000287a7: #1285 := R31 + 0x20
000287ac: R21 := mem[#1285, el]:u64
000287b1: R22 := mem[#1285 + 8, el]:u64
000287b7: #1286 := R31 + 0x30
000287bc: R23 := mem[#1286, el]:u64
000287c1: R24 := mem[#1286 + 8, el]:u64
000287c7: #1287 := R31 + 0x40
000287cc: R25 := mem[#1287, el]:u64
000287d1: R26 := mem[#1287 + 8, el]:u64
000287d7: #1288 := R31 + 0x50
000287dc: R27 := mem[#1288, el]:u64
000287e1: R28 := mem[#1288 + 8, el]:u64
000287e8: R29 := mem[R31, el]:u64
000287ed: R30 := mem[R31 + 8, el]:u64
000287f1: R31 := R31 + 0x70
000287f6: call R30 with noreturn

000276d5:
000276dd: R30 := 0x40A11C
000276df: call @free_rr_data with return %000276e1

000276e1:
000276e7: mem := mem with [R31 + 0x68, el]:u64 <- R19
000349bb: goto %00021641

000349bc: sub proxylist_add(proxylist_add_result)
00034c38: proxylist_add_result :: out u32 = low:32[R0]

0001ceb6:
0001ceba: #735 := R31 - 0x30
0001cec0: mem := mem with [#735, el]:u64 <- R29
0001cec6: mem := mem with [#735 + 8, el]:u64 <- R30
0001ceca: R31 := #735
0001ced0: R29 := R31
0001ced6: #736 := R31 + 0x10
0001cedc: mem := mem with [#736, el]:u64 <- R19
0001cee2: mem := mem with [#736 + 8, el]:u64 <- R20
0001cee8: R20 := R2
0001ceee: R19 := R0
0001cef3: R0 := 0x18
0001cefb: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001cf01: R21 := R1
0001cf06: R30 := 0x40BBA4
0001cf08: call @malloc with return %0001cf0a

0001cf0a:
0001cf10: mem := mem with [R0, el]:u64 <- R21
0001cf16: mem := mem with [R0 + 8, el]:u64 <- R20
0001cf1d: mem := mem with [R0 + 0x10, el]:u64 <- 0
0001cf23: when R19 = 0 goto %0001cf21
000349bd: goto %0002a462

0002a462:
0002a466: R1 := R19
000349be: goto %0002a46a

0002a46a:
0002a46e: R2 := R1
0002a475: R1 := mem[R1 + 0x10, el]:u64
0002a47a: when R1 <> 0 goto %0002a46a
000349bf: goto %0002a47e

0002a47e:
0002a484: mem := mem with [R2 + 0x10, el]:u64 <- R0
0002a48a: R0 := R19
000349c0: goto %0001cf21

0001cf21:
0001cf2a: #737 := R31 + 0x10
0001cf2f: R19 := mem[#737, el]:u64
0001cf34: R20 := mem[#737 + 8, el]:u64
0001cf3b: R21 := mem[R31 + 0x20, el]:u64
0001cf42: R29 := mem[R31, el]:u64
0001cf47: R30 := mem[R31 + 8, el]:u64
0001cf4b: R31 := R31 + 0x30
0001cf50: call R30 with noreturn

000349c1: sub proxylist_dump(proxylist_dump_result)
00034c39: proxylist_dump_result :: out u32 = low:32[R0]

0001cfb3:
0001cfb7: when R0 = 0 goto %0001cfb5
000349c2: goto %0002a2e3

0001cfb5:
0001cfbd: call R30 with noreturn

0002a2e3:
0002a2e7: #1359 := R31 - 0x30
0002a2ed: mem := mem with [#1359, el]:u64 <- R29
0002a2f3: mem := mem with [#1359 + 8, el]:u64 <- R30
0002a2f7: R31 := #1359
0002a2fd: R29 := R31
0002a303: #1360 := R31 + 0x10
0002a309: mem := mem with [#1360, el]:u64 <- R19
0002a30f: mem := mem with [#1360 + 8, el]:u64 <- R20
0002a314: R20 := 0x415000
0002a31a: R19 := R0
0002a320: R20 := R20 + 0x778
0002a328: mem := mem with [R31 + 0x20, el]:u64 <- R21
0002a32d: R21 := 0x415000
0002a333: R21 := R21 + 0x798
000349c3: goto %0002a335

0002a335:
0002a33a: R1 := mem[R19, el]:u64
0002a33f: R3 := mem[R19 + 8, el]:u64
0002a345: R0 := R20
0002a34c: R4 := pad:64[mem[R3, el]:u32]
0002a352: R2 := R3 + 4
0002a358: when 31:0[R4] <> 0 goto %0002a356
000349c4: goto %0002a3a9

0002a356:
0002a360: R3 := pad:64[mem[R3 + 0x44, el]:u32]
0002a366: R0 := R21
0002a36b: R30 := 0x40BCA4
0002a36d: call @printf with return %0002a36f

0002a36f:
0002a374: R19 := mem[R19 + 0x10, el]:u64
0002a379: when R19 <> 0 goto %0002a335
000349c5: goto %0002a37d

0002a37d:
0002a381: #1361 := R31 + 0x10
0002a386: R19 := mem[#1361, el]:u64
0002a38b: R20 := mem[#1361 + 8, el]:u64
0002a392: R21 := mem[R31 + 0x20, el]:u64
0002a399: R29 := mem[R31, el]:u64
0002a39e: R30 := mem[R31 + 8, el]:u64
0002a3a2: R31 := R31 + 0x30
0002a3a7: call R30 with noreturn

0002a3a9:
0002a3ac: R30 := 0x40BC80
0002a3ae: call @printf with return %0002a3b0

0002a3b0:
0002a3b5: R19 := mem[R19 + 0x10, el]:u64
0002a3ba: when R19 <> 0 goto %0002a335
000349c6: goto %0002a3be

0002a3be:
0002a3c2: #1362 := R31 + 0x10
0002a3c7: R19 := mem[#1362, el]:u64
0002a3cc: R20 := mem[#1362 + 8, el]:u64
0002a3d3: R21 := mem[R31 + 0x20, el]:u64
0002a3da: R29 := mem[R31, el]:u64
0002a3df: R30 := mem[R31 + 8, el]:u64
0002a3e3: R31 := R31 + 0x30
0002a3e8: call R30 with noreturn

000349c7: sub proxylist_free(proxylist_free_result)
00034c3a: proxylist_free_result :: out u32 = low:32[R0]

0001cfbf:
0001cfc3: when R0 = 0 goto %0001cfc1
000349c8: goto %0002a1f1

0001cfc1:
0001cfc9: call R30 with noreturn

0002a1f1:
0002a1f5: #1355 := R31 - 0x30
0002a1fb: mem := mem with [#1355, el]:u64 <- R29
0002a201: mem := mem with [#1355 + 8, el]:u64 <- R30
0002a205: R31 := #1355
0002a20b: R29 := R31
0002a211: #1356 := R31 + 0x10
0002a217: mem := mem with [#1356, el]:u64 <- R19
0002a21d: mem := mem with [#1356 + 8, el]:u64 <- R20
0002a223: R19 := R0
0002a229: when 31:0[R1] <> 0 goto %0002a227
000349c9: goto %0002a2a3

0002a227:
0002a232: mem := mem with [R31 + 0x20, el]:u64 <- R21
000349ca: goto %0002a234

0002a234:
0002a238: R20 := R19
0002a23f: R19 := mem[R19 + 0x10, el]:u64
0002a246: R21 := mem[R20 + 8, el]:u64
0002a24d: R0 := mem[R21 + 0x188, el]:u64
0002a252: R30 := 0x40BD0C
0002a254: call @freeaddrinfo with return %0002a256

0002a256:
0002a25a: R0 := R21
0002a25f: R30 := 0x40BD14
0002a261: call @free with return %0002a263

0002a263:
0002a267: R0 := R20
0002a26c: R30 := 0x40BD1C
0002a26e: call @free with return %0002a270

0002a270:
0002a273: when R19 <> 0 goto %0002a234
000349cb: goto %0002a277

0002a277:
0002a27b: #1357 := R31 + 0x10
0002a280: R19 := mem[#1357, el]:u64
0002a285: R20 := mem[#1357 + 8, el]:u64
0002a28c: R21 := mem[R31 + 0x20, el]:u64
0002a293: R29 := mem[R31, el]:u64
0002a298: R30 := mem[R31 + 8, el]:u64
0002a29c: R31 := R31 + 0x30
0002a2a1: call R30 with noreturn

0002a2a3:
0002a2a7: R0 := R19
0002a2ae: R19 := mem[R19 + 0x10, el]:u64
0002a2b3: R30 := 0x40BCE4
0002a2b5: call @free with return %0002a2b7

0002a2b7:
0002a2ba: when R19 <> 0 goto %0002a2a3
000349cc: goto %0002a2be

0002a2be:
0002a2c2: #1358 := R31 + 0x10
0002a2c7: R19 := mem[#1358, el]:u64
0002a2cc: R20 := mem[#1358 + 8, el]:u64
0002a2d3: R29 := mem[R31, el]:u64
0002a2d8: R30 := mem[R31 + 8, el]:u64
0002a2dc: R31 := R31 + 0x30
0002a2e1: call R30 with noreturn

000349cd: sub proxylist_get(proxylist_get_result)
00034c3b: proxylist_get_result :: out u32 = low:32[R0]

0001cf54:
0001cf58: when R0 <> 0 goto %0001cf56
000349ce: goto %0002a45e

0001cf56:
0001cf60: R2 := mem[R0, el]:u64
0001cf66: #738 := ~R1
0001cf6b: #739 := R2 + ~R1
0001cf71: VF := extend:128[#739 + 1] <> extend:128[R2] + extend:128[#738] + 1
0001cf77: CF := pad:128[#739 + 1] <> pad:128[R2] + pad:128[#738] + 1
0001cf7b: ZF := #739 + 1 = 0
0001cf7f: NF := 63:63[#739 + 1]
0001cf85: when ZF <> 1 goto %0001cf83
000349cf: goto %0002a457

0002a457:
0002a45c: R0 := mem[R0 + 8, el]:u64
000349d0: goto %0001cf91

0001cf83:
0001cf8d: R0 := mem[R0 + 0x10, el]:u64
0001cf93: when R0 = 0 goto %0001cf91
000349d1: goto %0001cf56

0001cf91:
0001cf99: call R30 with noreturn

0002a45e:
0002a460: goto %0001cf9b

0001cf9b:
0001cf9e: R0 := 0
0001cfa3: call R30 with noreturn

000349d2: sub proxylist_get_next(proxylist_get_next_result)
00034c3c: proxylist_get_next_result :: out u32 = low:32[R0]

0001cfa7:
0001cfab: when R0 = 0 goto %0001cfa9
000349d3: goto %0002a3ea

0002a3ea:
0002a3ee: R2 := R0
0002a3f3: goto %0002a3f1

0002a3f1:
0002a3f9: R3 := mem[R2, el]:u64
0002a3ff: #1363 := ~R1
0002a404: #1364 := R3 + ~R1
0002a40a: VF := extend:128[#1364 + 1] <> extend:128[R3] + extend:128[#1363] +
          1
0002a410: CF := pad:128[#1364 + 1] <> pad:128[R3] + pad:128[#1363] + 1
0002a414: ZF := #1364 + 1 = 0
0002a418: NF := 63:63[#1364 + 1]
0002a41e: when ZF <> 1 goto %0002a41c
000349d4: goto %0002a42f

0002a42f:
0002a434: R1 := mem[R2 + 0x10, el]:u64
0002a439: VF := 0
0002a43c: CF := 1
0002a440: ZF := R1 = 0
0002a444: NF := 63:63[R1]
0002a452: when ZF goto %0002a44a
0002a453: goto %0002a44e

0002a44e:
0002a44f: R0 := R1
0002a455: goto %0002a451

0002a44a:
0002a44b: R0 := R0
0002a454: goto %0002a451

0002a451:
000349d5: goto %0001cfa9

0002a41c:
0002a426: R2 := mem[R2 + 0x10, el]:u64
0002a42b: when R2 = 0 goto %0001cfa9
000349d6: goto %0002a3f1

0001cfa9:
0001cfb1: call R30 with noreturn

000349d7: sub pthread_attr_destroy(pthread_attr_destroy_result)
00034c3d: pthread_attr_destroy_result :: out u32 = low:32[R0]

0002d79d:
0002fd7a: R16 := 0x430000
0002fd81: R17 := mem[R16 + 0x100, el]:u64
0002fd87: R16 := R16 + 0x100
0002fd8c: call R17 with noreturn

000349d8: sub pthread_attr_init(pthread_attr_init_result)
00034c3e: pthread_attr_init_result :: out u32 = low:32[R0]

0002d9e6:
0002fc1a: R16 := 0x430000
0002fc21: R17 := mem[R16 + 0x80, el]:u64
0002fc27: R16 := R16 + 0x80
0002fc2c: call R17 with noreturn

000349d9: sub pthread_attr_setdetachstate(pthread_attr_setdetachstate_result)
00034c3f: pthread_attr_setdetachstate_result :: out u32 = low:32[R0]

0002da0c:
0002fdfe: R16 := 0x430000
0002fe05: R17 := mem[R16 + 0x130, el]:u64
0002fe0b: R16 := R16 + 0x130
0002fe10: call R17 with noreturn

000349da: sub pthread_attr_setguardsize(pthread_attr_setguardsize_result)
00034c40: pthread_attr_setguardsize_result :: out u32 = low:32[R0]

0002da1f:
0003000e: R16 := 0x430000
00030015: R17 := mem[R16 + 0x1F0, el]:u64
0003001b: R16 := R16 + 0x1F0
00030020: call R17 with noreturn

000349db: sub pthread_attr_setstacksize(pthread_attr_setstacksize_result)
00034c41: pthread_attr_setstacksize_result :: out u32 = low:32[R0]

0002d9f9:
00030326: R16 := 0x430000
0003032d: R17 := mem[R16 + 0x310, el]:u64
00030333: R16 := R16 + 0x310
00030338: call R17 with noreturn

000349dc: sub pthread_create(pthread_create_result)
00034c42: pthread_create_result :: out u32 = low:32[R0]

0002d82c:
000300d4: R16 := 0x430000
000300db: R17 := mem[R16 + 0x238, el]:u64
000300e1: R16 := R16 + 0x238
000300e6: call R17 with noreturn

000349dd: sub pthread_mutex_lock(pthread_mutex_lock_result)
00034c43: pthread_mutex_lock_result :: out u32 = low:32[R0]

0001d1d1:
0003028c: R16 := 0x430000
00030293: R17 := mem[R16 + 0x2D8, el]:u64
00030299: R16 := R16 + 0x2D8
0003029e: call R17 with noreturn

000349de: sub pthread_mutex_unlock(pthread_mutex_unlock_result)
00034c44: pthread_mutex_unlock_result :: out u32 = low:32[R0]

0001d27b:
000302a2: R16 := 0x430000
000302a9: R17 := mem[R16 + 0x2E0, el]:u64
000302af: R16 := R16 + 0x2E0
000302b4: call R17 with noreturn

000349df: sub pthread_self(pthread_self_result)
00034c45: pthread_self_result :: out u32 = low:32[R0]

0002776c:
00030208: R16 := 0x430000
0003020f: R17 := mem[R16 + 0x2A8, el]:u64
00030215: R16 := R16 + 0x2A8
0003021a: call R17 with noreturn

000349e0: sub putchar(putchar_c, putchar_result)
00034c46: putchar_c :: in u32 = low:32[R0]
00034c47: putchar_result :: out u32 = low:32[R0]

0002bc1d:
00030276: R16 := 0x430000
0003027d: R17 := mem[R16 + 0x2D0, el]:u64
00030283: R16 := R16 + 0x2D0
00030288: call R17 with noreturn

000349e1: sub puts(puts_s, puts_result)
00034c48: puts_s :: in u64 = R0
00034c49: puts_result :: out u32 = low:32[R0]

00010ac5:
0002ff5e: R16 := 0x430000
0002ff65: R17 := mem[R16 + 0x1B0, el]:u64
0002ff6b: R16 := R16 + 0x1B0
0002ff70: call R17 with noreturn

000349e2: sub random(random_result)
00034c4a: random_result :: out u64 = R0

00010a10:
0002fde8: R16 := 0x430000
0002fdef: R17 := mem[R16 + 0x128, el]:u64
0002fdf5: R16 := R16 + 0x128
0002fdfa: call R17 with noreturn

000349e3: sub read(read_fd, read_buf, read_nbytes, read_result)
00034c4b: read_fd :: in u32 = low:32[R0]
00034c4c: read_buf :: in out u64 = R1
00034c4d: read_nbytes :: in u64 = R2
00034c4e: read_result :: out u64 = R0

0001a514:
00030142: R16 := 0x430000
00030149: R17 := mem[R16 + 0x260, el]:u64
0003014f: R16 := R16 + 0x260
00030154: call R17 with noreturn

000349e4: sub realloc(realloc_ptr, realloc_size, realloc_result)
00034c4f: realloc_ptr :: in out u64 = R0
00034c50: realloc_size :: in u64 = R1
00034c51: realloc_result :: out u64 = R0

0001a641:
0002fe40: R16 := 0x430000
0002fe47: R17 := mem[R16 + 0x148, el]:u64
0002fe4d: R16 := R16 + 0x148
0002fe52: call R17 with noreturn

000349e5: sub recv(recv_fd, recv_buf, recv_n, recv_flags, recv_result)
00034c52: recv_fd :: in u32 = low:32[R0]
00034c53: recv_buf :: in out u64 = R1
00034c54: recv_n :: in u64 = R2
00034c55: recv_flags :: in u32 = low:32[R3]
00034c56: recv_result :: out u64 = R0

00019bc2:
0002fec4: R16 := 0x430000
0002fecb: R17 := mem[R16 + 0x178, el]:u64
0002fed1: R16 := R16 + 0x178
0002fed6: call R17 with noreturn

000349e6: sub register_tm_clones(register_tm_clones_result)
00034c57: register_tm_clones_result :: out u32 = low:32[R0]

0002cbe6:
0002cbe9: R0 := 0x430000
0002cbef: R0 := R0 + 0x328
0002cbf4: R1 := 0x430000
0002cbfa: R1 := R1 + 0x328
0002cc01: R1 := R1 + ~R0 + 1
0002cc07: R2 := pad:64[63:63[R1]]
0002cc0e: R1 := R2 + (R1 ~>> 3)
0002cc14: R1 := extend:64[63:1[R1]]
0002cc1a: when R1 = 0 goto %0002cc18
000349e7: goto %0002d2c3

0002d2c3:
0002d2c6: R2 := 0x42F000
0002d2cd: R2 := mem[R2 + 0xFE0, el]:u64
0002d2d2: when R2 = 0 goto %0002cc18
000349e8: goto %0002d2d6

0002cc18:
0002cc20: call R30 with noreturn

0002d2d6:
0002d2da: R16 := R2
0002d2df: call R16 with noreturn

000349e9: sub reset_rr_data(reset_rr_data_result)
00034c58: reset_rr_data_result :: out u32 = low:32[R0]

000180b9:
000180bd: #460 := R31 - 0x30
000180c3: mem := mem with [#460, el]:u64 <- R29
000180c9: mem := mem with [#460 + 8, el]:u64 <- R30
000180cd: R31 := #460
000180d3: R29 := R31
000180d9: #461 := R31 + 0x10
000180df: mem := mem with [#461, el]:u64 <- R19
000180e5: mem := mem with [#461 + 8, el]:u64 <- R20
000180eb: R19 := R0
000180f1: when R0 = 0 goto %000180ef
000349ea: goto %00018884

000180ef:
000180f7: R1 := 0x430000
000180fc: R0 := 0x416000
00018101: R2 := 0x36
00018107: R0 := R0 + 0x60
0001810e: R3 := mem[R1 + 0x330, el]:u64
00018113: R1 := 1
00018118: R30 := 0x40EF1C
0001811b: call @fwrite with return %0001811d

0001811d:
00018120: goto %0001811e

00018884:
00018887: R0 := 0x416000
0001888c: V0 := 0xFFFFFFFF00000000
00018893: R20 := mem[R19 + 8, el]:u64
0001889a: mem := mem with [R19, el]:u32 <- 0
000188a1: V1 := mem[R0 + 0x390, el]:u128
000188a9: mem := mem with [R19 + 0x20, el]:u64 <- 63:0[V0]
000188b1: mem := mem with [R19 + 0x10, el]:u128 <- V1
000188b7: when R20 = 0 goto %000188b5
000349eb: goto %0001897f

0001897f:
00018985: mem := mem with [R31 + 0x20, el]:u64 <- R21
000349ec: goto %00018989

00018989:
0001898d: R21 := R20
00018994: R20 := mem[R20 + 0x18, el]:u64
0001899b: R0 := mem[R21, el]:u64
000189a0: R30 := 0x40EE70
000189a2: call @free with return %000189a4

000189a4:
000189a9: R0 := mem[R21 + 8, el]:u64
000189ae: R30 := 0x40EE78
000189b0: call @free with return %000189b2

000189b2:
000189b6: R0 := R21
000189bb: R30 := 0x40EE80
000189bd: call @free with return %000189bf

000189bf:
000189c2: when R20 <> 0 goto %00018989
000349ed: goto %000189c6

000189c6:
000189cb: R21 := mem[R31 + 0x20, el]:u64
000349ee: goto %000188b5

000188b5:
000188bf: R0 := mem[R19 + 0x28, el]:u64
000188c5: when R0 = 0 goto %000188c3
000349ef: goto %00018978

00018978:
0001897b: R30 := 0x40EE94
0001897d: call @free with return %000188c3

000188c3:
000188cd: R0 := mem[R19 + 0x30, el]:u64
000188d3: when R0 = 0 goto %000188d1
000349f0: goto %00018971

00018971:
00018974: R30 := 0x40EEA0
00018976: call @free with return %000188d1

000188d1:
000188db: R0 := mem[R19 + 0x38, el]:u64
000188e1: when R0 = 0 goto %000188df
000349f1: goto %0001896a

0001896a:
0001896d: R30 := 0x40EEAC
0001896f: call @free with return %000188df

000188df:
000188e9: R0 := mem[R19 + 0x40, el]:u64
000188ef: when R0 = 0 goto %000188ed
000349f2: goto %00018963

00018963:
00018966: R30 := 0x40EEB8
00018968: call @free with return %000188ed

000188ed:
000188f7: R0 := mem[R19 + 0x48, el]:u64
000188fd: when R0 = 0 goto %000188fb
000349f3: goto %0001895c

0001895c:
0001895f: R30 := 0x40EEC4
00018961: call @free with return %000188fb

000188fb:
00018905: R0 := mem[R19 + 0x50, el]:u64
0001890b: when R0 = 0 goto %00018909
000349f4: goto %00018955

00018955:
00018958: R30 := 0x40EED0
0001895a: call @free with return %00018909

00018909:
00018913: R0 := mem[R19 + 0x58, el]:u64
00018919: when R0 = 0 goto %00018917
000349f5: goto %0001894e

0001894e:
00018951: R30 := 0x40EEDC
00018953: call @free with return %00018917

00018917:
0001891f: V0 := 0
00018925: R0 := R19 + 0x28
0001892c: mem := mem with [R19 + 8, el]:u64 <- 0
00018934: mem := mem with [R0, el]:u128 <- V0
0001893a: mem := mem with [R0 + 0x10, el]:u128 <- V0
00018940: #484 := R0 + 0x20
00018946: mem := mem with [#484, el]:u128 <- V0
0001894c: mem := mem with [#484 + 0x10, el]:u128 <- V0
000349f6: goto %0001811e

0001811e:
00018125: R0 := R19
0001812b: #462 := R31 + 0x10
00018130: R19 := mem[#462, el]:u64
00018135: R20 := mem[#462 + 8, el]:u64
0001813c: R29 := mem[R31, el]:u64
00018141: R30 := mem[R31 + 8, el]:u64
00018145: R31 := R31 + 0x30
0001814a: call R30 with noreturn

000349f7: sub scanmem(scanmem_result)
00034c59: scanmem_result :: out u32 = low:32[R0]

000107b4:
000107b8: #45 := R31 - 0x30
000107be: mem := mem with [#45, el]:u64 <- R29
000107c4: mem := mem with [#45 + 8, el]:u64 <- R30
000107c8: R31 := #45
000107ce: R29 := R31
000107d4: #46 := R31 + 0x10
000107da: mem := mem with [#46, el]:u64 <- R19
000107e0: mem := mem with [#46 + 8, el]:u64 <- R20
000107e6: R19 := R0
000107ec: #47 := R31 + 0x20
000107f2: mem := mem with [#47, el]:u64 <- R21
000107f8: mem := mem with [#47 + 8, el]:u64 <- R22
000107fe: R22 := pad:64[31:0[R1]]
00010803: R30 := 0x40F5CC
00010805: call @strlen with return %00010807

00010807:
0001080b: when 0:0[R0] goto %00010809
000349f8: goto %00016ce1

00016ce1:
00016ce5: R21 := pad:64[63:1[R0]]
00016ceb: R20 := pad:64[0:0[R0]]
00016cf0: R0 := 1
00016cf7: R1 := R21 + R0
00016cfc: R30 := 0x40F5E4
00016cfe: call @calloc with return %00016d00

00016d00:
00016d03: when R21 = 0 goto %0001088b
000349f9: goto %00016d07

0001088b:
0001088f: R21 := R0
00010896: mem := mem with [R21] <- 0
0001089a: goto %00010856

00016d07:
00016d0a: R5 := 0x416000
00016d10: R5 := R5 + 0x3B0
00016d15: R6 := 7
00016d1b: R3 := R19
00016d21: R5 := R5 + 0x20
00016d28: R6 := pad:64[31:0[R6] + ~31:0[R22] + 1]
00016d2d: goto %00016d2b

00016d2b:
00016d33: R1 := pad:64[mem[R3 + 1]]
00016d39: R3 := R3 + 2
00016d40: R2 := pad:64[mem[R3 - 2]]
00016d48: R4 := pad:64[mem[R5 + (61:0[R1].0), el]:u32]
00016d50: R2 := pad:64[mem[R5 + (61:0[R2].0), el]:u32]
00016d57: R1 := pad:64[31:0[R2] | 31:0[R4]]
00016d5d: when ~31:31[R1] goto %00016d5b
000349fa: goto %00016da3

00016da3:
00016da6: R30 := 0x40F63C
00016da9: call @free with return %00010809

00010809:
00010812: #48 := R31 + 0x10
00010817: R19 := mem[#48, el]:u64
0001081c: R20 := mem[#48 + 8, el]:u64
00010821: R0 := 0
00010827: #49 := R31 + 0x20
0001082c: R21 := mem[#49, el]:u64
00010831: R22 := mem[#49 + 8, el]:u64
00010838: R29 := mem[R31, el]:u64
0001083d: R30 := mem[R31 + 8, el]:u64
00010841: R31 := R31 + 0x30
00010846: call R30 with noreturn

00016d5b:
00016d65: R2 := pad:64[31:0[R4] + (27:0[R2].0)]
00016d6c: R2 := pad:64[31:0[R2] ^ 31:0[R6]]
00016d75: mem := mem with [R0 + R20] <- 7:0[R2]
00016d7b: R20 := R20 + 1
00016d81: #361 := ~R20
00016d86: #362 := R21 + ~R20
00016d8c: VF := extend:128[#362 + 1] <> extend:128[R21] + extend:128[#361] +
          1
00016d92: CF := pad:128[#362 + 1] <> pad:128[R21] + pad:128[#361] + 1
00016d96: ZF := #362 + 1 = 0
00016d9a: NF := 63:63[#362 + 1]
00016d9f: when ZF goto %00010848
000349fb: goto %00016d2b

00010848:
0001084d: R21 := R0 + R21
00010854: mem := mem with [R21] <- 0
000349fc: goto %00010856

00010856:
0001085a: #50 := R31 + 0x10
0001085f: R19 := mem[#50, el]:u64
00010864: R20 := mem[#50 + 8, el]:u64
0001086a: #51 := R31 + 0x20
0001086f: R21 := mem[#51, el]:u64
00010874: R22 := mem[#51 + 8, el]:u64
0001087b: R29 := mem[R31, el]:u64
00010880: R30 := mem[R31 + 8, el]:u64
00010884: R31 := R31 + 0x30
00010889: call R30 with noreturn

000349fd: sub scanner_hook(scanner_hook_result)
00034c5a: scanner_hook_result :: out u32 = low:32[R0]

000232c0:
000232c7: #1069 := R31 - 0xE0
000232cd: mem := mem with [#1069, el]:u64 <- R29
000232d3: mem := mem with [#1069 + 8, el]:u64 <- R30
000232d7: R31 := #1069
000232dd: R29 := R31
000232e3: #1070 := R31 + 0x20
000232e9: mem := mem with [#1070, el]:u64 <- R21
000232ef: mem := mem with [#1070 + 8, el]:u64 <- R22
000232f5: R22 := R2
000232fc: R2 := pad:64[mem[R0, el]:u32]
00023304: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R3]
0002330a: when 31:0[R2] = 0 goto %00023308
000349fe: goto %00024d4a

00024d4a:
00024d4f: R2 := pad:64[mem[R1 + 0x10, el]:u32]
00024d57: mem := mem with [R31 + 0x60, el]:u64 <- R1
00024d5d: #1119 := 31:0[R2] - 0xC8
00024d62: VF := extend:64[#1119] <> extend:64[31:0[R2]] - 0xC8
00024d67: CF := pad:64[#1119] <> pad:64[31:0[R2]] + 0xFFFFFF38
00024d6b: ZF := #1119 = 0
00024d6f: NF := 31:31[#1119]
00024d74: when ZF goto %0002333d
000349ff: goto %00023308

0002333d:
00023341: #1072 := R31 + 0x10
00023347: mem := mem with [#1072, el]:u64 <- R19
0002334d: mem := mem with [#1072 + 8, el]:u64 <- R20
00023353: R19 := R4
00023359: R20 := R5
0002335f: #1073 := R31 + 0x50
00023365: mem := mem with [#1073, el]:u64 <- R27
0002336b: mem := mem with [#1073 + 8, el]:u64 <- R28
00023371: R28 := R0
00023376: R30 := 0x40CD38
00023378: call @http_has_body with return %0002337a

0002337a:
0002337e: #1074 := R0 + 1
00023383: VF := extend:128[#1074] <> extend:128[R0] + 1
00023388: CF := pad:128[#1074] <> pad:128[R0] + 1
0002338c: ZF := #1074 = 0
00023390: NF := 63:63[#1074]
00023396: when ZF goto %00023394
00034a00: goto %000233c6

00023394:
0002339e: R8 := mem[R31 + 0x60, el]:u64
000233a3: R2 := 0x413000
000233a8: R1 := 0x412000
000233ae: R2 := R2 + 0x930
000233b4: R1 := R1 + 0xAB8
000233bb: R0 := mem[R8 + 8, el]:u64
000233c0: R30 := 0x40CD68
000233c2: call @hlist_subcmp with return %000233c4

000233c4:
000233c8: when 31:0[R0] <> 0 goto %000233c6
00034a01: goto %000233ef

000233ef:
000233f4: R8 := mem[R31 + 0x60, el]:u64
000233f9: R2 := 0x412000
000233fe: R1 := 0x412000
00023404: R2 := R2 + 0xDB0
0002340a: R1 := R1 + 0xE68
00023411: R0 := mem[R8 + 8, el]:u64
00023416: R30 := 0x40CD88
00023418: call @hlist_subcmp with return %0002341a

0002341a:
0002341d: when 31:0[R0] = 0 goto %000233c6
00034a02: goto %00023421

00023421:
00023426: R0 := mem[R28 + 8, el]:u64
0002342b: R1 := 0x415000
00023431: R1 := R1 + 0xA58
00023437: #1077 := R31 + 0x30
0002343d: mem := mem with [#1077, el]:u64 <- R23
00023443: mem := mem with [#1077 + 8, el]:u64 <- R24
00023449: #1078 := R31 + 0x40
0002344f: mem := mem with [#1078, el]:u64 <- R25
00023455: mem := mem with [#1078 + 8, el]:u64 <- R26
0002345a: R30 := 0x40CDA4
0002345c: call @hlist_get with return %0002345e

0002345e:
00023463: R8 := mem[R31 + 0x60, el]:u64
00023469: when R0 = 0 goto %00023467
00034a03: goto %00024c66

00023467:
0002346f: R0 := 0x430000
00023475: R24 := R0 + 0x374
0002347d: mem := mem with [R31 + 0x60, el]:u64 <- R0
00034a04: goto %0002347f

00024c66:
00024c6c: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024c71: R30 := 0x40CDB4
00024c73: call @strdup with return %00024c75

00024c75:
00024c78: R30 := 0x40CDB8
00024c7a: call @lowercase with return %00024c7c

00024c7c:
00024c80: R25 := R0
00024c85: R1 := 0x430000
00024c8a: R2 := 0x430000
00024c92: mem := mem with [R31 + 0x60, el]:u64 <- R2
00024c97: R0 := 0x415000
00024c9e: R26 := mem[R1 + 0x3E0, el]:u64
00024ca4: R24 := R2 + 0x374
00024cab: R8 := mem[R31 + 0x68, el]:u64
00024cb1: R21 := R0 + 0xA68
00024cb6: when R26 = 0 goto %000245ff
00034a05: goto %00024cba

00024cba:
00024cbe: R27 := R8
00024cc3: goto %00024cc1

00024cc1:
00024cc9: R0 := mem[R26 + 8, el]:u64
00024cce: R30 := 0x40CE18
00024cd0: call @strdup with return %00024cd2

00024cd2:
00024cd5: R30 := 0x40CE1C
00024cd7: call @lowercase with return %00024cd9

00024cd9:
00024cdd: R23 := R0
00024ce4: R1 := pad:64[mem[R24, el]:u32]
00024cea: when 31:0[R1] = 0 goto %00024ce8
00034a06: goto %00024d2d

00024d2d:
00024d31: R2 := R0
00024d37: R1 := R25
00024d3d: R0 := R21
00024d42: R30 := 0x40CE38
00024d44: call @printf with return %00024d46

00024d46:
00024d48: goto %00024ce8

00024ce8:
00024cf1: R1 := R25
00024cf7: R0 := R23
00024cfc: R2 := 0
00024d01: R30 := 0x40CDF8
00024d03: call @fnmatch with return %00024d05

00024d05:
00024d09: R1 := pad:64[31:0[R0]]
00024d0f: R0 := R23
00024d14: when 31:0[R1] = 0 goto %00024aba
00034a07: goto %00024d18

00024aba:
00024abf: R0 := mem[R31 + 0x60, el]:u64
00024ac5: R8 := R27
00024acc: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00024ad1: when 31:0[R0] <> 0 goto %000245b9
00034a08: goto %000245db

000245b9:
000245bc: R0 := 0x415000
000245c2: R0 := R0 + 0xA98
000245ca: mem := mem with [R31 + 0x68, el]:u64 <- R27
000245cf: R30 := 0x40D438
000245d1: call @puts with return %000245d3

000245d3:
000245d8: R8 := mem[R31 + 0x68, el]:u64
000245dd: goto %000245db

000245db:
000245e2: R0 := R23
000245ea: mem := mem with [R31 + 0x68, el]:u64 <- R8
000245ef: R30 := 0x40D2C8
000245f1: call @free with return %000245f3

000245f3:
000245f6: R20 := 0
000245fd: R8 := mem[R31 + 0x68, el]:u64
00034a09: goto %000245ff

00024d18:
00024d1b: R30 := 0x40CE08
00024d1d: call @free with return %00024d1f

00024d1f:
00024d24: R26 := mem[R26 + 0x10, el]:u64
00024d29: when R26 = 0 goto %000248f6
00034a0a: goto %00024cc1

000248f6:
000248fa: R8 := R27
000248fe: goto %000245ff

000245ff:
00024603: R0 := R25
0002460b: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024610: R30 := 0x40D2DC
00024612: call @free with return %00024614

00024614:
00024619: R8 := mem[R31 + 0x68, el]:u64
0002461d: goto %0002347f

0002347f:
00023482: R0 := 0x1000
0002348a: mem := mem with [R31 + 0x68, el]:u64 <- R8
0002348f: R30 := 0x40CE54
00023491: call @zmalloc with return %00023493

00023493:
00023496: R27 := 0
0002349c: R23 := R0
000234a2: R0 := R20
000234a7: R26 := 0x415000
000234ad: R20 := pad:64[31:0[R27]]
000234b3: R27 := R0
000234b9: R21 := R26 + 0xAB8
000234be: R25 := 0xFFF
000234c3: R26 := 0x1000
000234cb: mem := mem with [R31 + 0x70, el]:u64 <- R22
00034a0b: goto %000234cf

000234cf:
000234d4: R0 := pad:64[mem[R19, el]:u32]
000234db: R2 := pad:64[31:0[R25] + ~31:0[R20] + 1]
000234e2: R1 := R23 + extend:64[31:0[R20]]
000234e8: R2 := extend:64[31:0[R2]]
000234ed: R30 := 0x40CE94
000234ef: call @read with return %000234f1

000234f1:
000234f5: R22 := R0
000234fc: R1 := pad:64[mem[R24, el]:u32]
00023502: when 31:0[R1] <> 0 goto %00023500
00034a0c: goto %00023520

00023500:
00023509: R1 := pad:64[31:0[R0]]
00023510: R2 := pad:64[31:0[R26] + ~31:0[R20] + 1]
00023516: R0 := R21
0002351b: R30 := 0x40D1A8
0002351d: call @printf with return %0002351f

0002351f:
00023522: goto %00023520

00023520:
00023526: VF := 0
00023529: CF := 1
0002352d: ZF := 31:0[R22] = 0
00023531: NF := 31:31[R22]
00023539: when ~(NF = VF & ~ZF) goto %00023537
00034a0d: goto %00024c3c

00024c3c:
00024c41: R20 := pad:64[31:0[R20] + 31:0[R22]]
00024c47: #1118 := 31:0[R20] - 0xFFE
00024c4c: VF := extend:64[#1118] <> extend:64[31:0[R20]] - 0xFFE
00024c51: CF := pad:64[#1118] <> pad:64[31:0[R20]] + 0xFFFFF002
00024c55: ZF := #1118 = 0
00024c59: NF := 31:31[#1118]
00024c60: when ~(NF = VF & ~ZF) goto %000234cf
00034a0e: goto %00024c64

00024c64:
00034a0f: goto %00023537

00023537:
00023540: R0 := R27
00023545: R1 := 0x415000
0002354b: R27 := pad:64[31:0[R20]]
00023551: R1 := R1 + 0xAD8
00023557: R20 := R0
0002355d: R0 := R23
00023562: R30 := 0x40CED4
00023564: call @strstr with return %00023566

00023566:
0002356a: #1079 := R31 + 0x68
0002356f: R8 := mem[#1079, el]:u64
00023574: R22 := mem[#1079 + 8, el]:u64
0002357a: when R0 = 0 goto %00023578
00034a10: goto %00024b59

00024b59:
00024b5d: R0 := R23
00024b62: R1 := 0x415000
00024b68: R1 := R1 + 0xB00
00024b6d: R30 := 0x40CEEC
00024b6f: call @strstr with return %00024b71

00024b71:
00024b76: R8 := mem[R31 + 0x68, el]:u64
00024b7b: when R0 = 0 goto %00023578
00034a11: goto %00024b7f

00024b7f:
00024b82: R1 := 0x22
00024b8a: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024b8f: R30 := 0x40CF00
00024b91: call @strchr with return %00024b93

00024b93:
00024b97: R25 := R0
00024b9e: R8 := mem[R31 + 0x68, el]:u64
00024ba3: when R0 = 0 goto %00023578
00034a12: goto %00024ba7

00024ba7:
00024bab: R26 := R0 + 1
00024bb1: R0 := R26
00024bb6: R30 := 0x40CF18
00024bb8: call @strlen with return %00024bba

00024bba:
00024bbf: R8 := mem[R31 + 0x68, el]:u64
00024bc4: R1 := 1
00024bcb: R3 := pad:64[mem[R25 + 1]]
00024bd0: R2 := 0
00024bd6: when R0 <> 0 goto %00024bd4
00034a13: goto %00024c38

00024bd4:
00024bdf: R2 := pad:64[mem[R25 + R1]]
00024be5: R3 := R1 + 1
00024beb: #1115 := 31:0[R2] - 0x22
00024bf0: VF := extend:64[#1115] <> extend:64[31:0[R2]] - 0x22
00024bf5: CF := pad:64[#1115] <> pad:64[31:0[R2]] + 0xFFFFFFDE
00024bf9: ZF := #1115 = 0
00024bfd: NF := 31:31[#1115]
00024c03: when ZF <> 1 goto %00024c01
00034a14: goto %00024c32

00024c32:
00024c36: R2 := pad:64[31:0[R1] - 1]
00034a15: goto %00024647

00024c01:
00024c0a: #1116 := ~R1
00024c0f: #1117 := R0 + ~R1
00024c15: VF := extend:128[#1117 + 1] <> extend:128[R0] + extend:128[#1116] +
          1
00024c1b: CF := pad:128[#1117 + 1] <> pad:128[R0] + pad:128[#1116] + 1
00024c1f: ZF := #1117 + 1 = 0
00024c23: NF := 63:63[#1117 + 1]
00024c28: when ZF goto %0002461f
00034a16: goto %00024c2c

0002461f:
00024625: R3 := pad:64[mem[R26 + extend:64[31:0[R0]]]]
0002462b: R2 := pad:64[31:0[R0]]
00034a17: goto %0002462d

00024c2c:
00024c30: R1 := R3
00034a18: goto %00024bd4

00024c38:
00024c3a: goto %0002462d

0002462d:
00024631: #1102 := 31:0[R3] - 0x22
00024636: VF := extend:64[#1102] <> extend:64[31:0[R3]] - 0x22
0002463b: CF := pad:64[#1102] <> pad:64[31:0[R3]] + 0xFFFFFFDE
0002463f: ZF := #1102 = 0
00024643: NF := 31:31[#1102]
00024649: when ZF goto %00024647
00034a19: goto %000247ef

000247ef:
000247f4: R0 := mem[R31 + 0x60, el]:u64
000247fb: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00024800: when 31:0[R0] <> 0 goto %00024580
00034a1a: goto %00024804

00024580:
00024583: R0 := 0x415000
00024589: R0 := R0 + 0xD98
00024591: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024596: R30 := 0x40D350
00024598: call @puts with return %0002459a

0002459a:
0002459f: R8 := mem[R31 + 0x68, el]:u64
00034a1b: goto %00023578

00023578:
00023580: R22 := 1
00023585: goto %00023583

00024804:
00024807: R22 := 1
0002480c: when 31:0[R27] = 0 goto %0002359d
00034a1c: goto %00024810

00024810:
00024813: goto %00024811

00024647:
0002464f: R1 := 0
00024655: R0 := R26
0002465d: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024662: R30 := 0x40CF60
00024664: call @substr with return %00024666

00024666:
0002466a: #1103 := R31 + 0x60
0002466f: R1 := mem[#1103, el]:u64
00024674: R8 := mem[#1103 + 8, el]:u64
0002467c: mem := mem with [R31 + 0xB0, el]:u64 <- R0
00024682: R2 := R0
00024689: R1 := pad:64[mem[R1 + 0x374, el]:u32]
0002468f: when 31:0[R1] = 0 goto %0002468d
00034a1d: goto %000247d0

000247d0:
000247d4: R1 := R2
000247d9: R0 := 0x415000
000247df: R0 := R0 + 0xB18
000247e4: R30 := 0x40CF84
000247e6: call @printf with return %000247e8

000247e8:
000247ed: R8 := mem[R31 + 0x68, el]:u64
00034a1e: goto %0002468d

0002468d:
00024695: R25 := 0x1000
0002469a: R0 := 0x1000
000246a2: mem := mem with [R31 + 0x68, el]:u64 <- R8
000246aa: mem := mem with [R31 + 0xC0, el]:u32 <- 31:0[R25]
000246af: R30 := 0x40CF9C
000246b1: call @zmalloc with return %000246b3

000246b3:
000246b9: mem := mem with [R31 + 0xC8, el]:u64 <- R0
000246c0: R8 := mem[R31 + 0x68, el]:u64
000246c6: when R20 = 0 goto %000246c4
00034a1f: goto %00024746

000246c4:
000246cc: R0 := 0x415000
000246d2: R0 := R0 + 0xBE0
000246da: mem := mem with [R31 + 0xB8, el]:u64 <- R0
000246e0: R0 := R31 + 0xC0
000246e5: R1 := 0x415000
000246eb: R1 := R1 + 0xB38
000246f1: #1104 := R31 + 0x98
000246f7: mem := mem with [#1104, el]:u64 <- R28
000246fd: mem := mem with [#1104 + 8, el]:u64 <- R20
00024703: R28 := R0
00024708: R26 := 0x1000
00024710: mem := mem with [R31 + 0xA8, el]:u64 <- R22
00024716: R22 := pad:64[31:0[R25]]
0002471e: mem := mem with [R31 + 0x78, el]:u64 <- R8
00024725: mem := mem with [R31 + 0x84, el]:u32 <- 0
0002472b: #1105 := R31 + 0x88
00024731: mem := mem with [#1105, el]:u64 <- R1
00024736: mem := mem with [#1105 + 8, el]:u64 <- 0
0002473c: R1 := R31 + 0xC8
00024744: mem := mem with [R31 + 0x68, el]:u64 <- R1
00034a20: goto %00023cd7

00023cd7:
00023ce1: R1 := mem[R31 + 0x68, el]:u64
00023ce7: R2 := R28
00023cee: R0 := pad:64[mem[R19, el]:u32]
00023cf3: R30 := 0x40D4A0
00023cf5: call @so_recvln with return %00023cf7

00023cf7:
00023cfb: R20 := pad:64[31:0[R0]]
00023d02: R21 := mem[R31 + 0xC8, el]:u64
00023d08: R0 := R21
00023d0d: R30 := 0x40D4B0
00023d0f: call @strlen with return %00023d11

00023d11:
00023d15: R25 := R0
00023d1c: R0 := R0 + extend:64[31:0[R27]]
00023d22: #1090 := ~R26
00023d27: #1091 := R0 + ~R26
00023d2d: VF := extend:128[#1091 + 1] <> extend:128[R0] + extend:128[#1090] +
          1
00023d33: CF := pad:128[#1091 + 1] <> pad:128[R0] + pad:128[#1090] + 1
00023d37: ZF := #1091 + 1 = 0
00023d3b: NF := 63:63[#1091 + 1]
00023d42: when NF <> VF goto %00023d40
00034a21: goto %0002422c

0002422c:
00024230: R22 := pad:64[30:0[R22].0]
00024236: R0 := R23
0002423c: R26 := extend:64[31:0[R22]]
00024242: R1 := R26
00024247: R30 := 0x40D4D4
00024249: call @realloc with return %0002424b

0002424b:
0002424e: when R0 = 0 goto %00023c8c
00034a22: goto %00024252

00024252:
00024256: R23 := R0
00034a23: goto %00023d40

00023d40:
00023d49: R1 := R21
00023d4f: R2 := R26
00023d55: R0 := R23
00023d5c: R27 := pad:64[31:0[R27] + 31:0[R25]]
00023d61: R30 := 0x40D4F0
00023d63: call @strlcat with return %00023d65

00023d65:
00023d68: when 31:31[R20] goto %00023c8c
00034a24: goto %00023d6c

00023c8c:
00023c91: R8 := mem[R31 + 0x78, el]:u64
00023c98: R20 := mem[R31 + 0xC8, el]:u64
00023c9c: goto %00023700

00023d6c:
00023d71: R1 := mem[R31 + 0x88, el]:u64
00023d78: R21 := mem[R31 + 0xC8, el]:u64
00023d7e: R0 := R21
00023d83: R30 := 0x40D504
00023d85: call @strstr with return %00023d87

00023d87:
00023d8b: R25 := R0
00023d90: when R0 = 0 goto %00023c9e
00034a25: goto %00023d94

00023d94:
00023d97: R30 := 0x40D510
00023d99: call @__ctype_b_loc with return %00023d9b

00023d9b:
00023da0: R0 := mem[R0, el]:u64
00023da7: R1 := pad:64[mem[R25 + 0xB]]
00023daf: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
00023db4: when ~11:11[R0] goto %00023c9e
00034a26: goto %00023db8

00023c9e:
00023ca2: R0 := R21
00023ca7: R1 := 0x415000
00023cad: R1 := R1 + 0xB48
00023cb2: R30 := 0x40D848
00023cb4: call @strstr with return %00023cb6

00023cb6:
00023cba: R25 := R0
00023cc0: when R0 = 0 goto %00023cbe
00034a27: goto %00024293

00024293:
00024296: R30 := 0x40D854
00024298: call @__ctype_b_loc with return %0002429a

0002429a:
0002429f: R0 := mem[R0, el]:u64
000242a6: R1 := pad:64[mem[R25 + 0x11]]
000242ae: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
000242b3: when ~11:11[R0] goto %00023cbe
00034a28: goto %000242b7

000242b7:
000242ba: R0 := 1
000242c2: mem := mem with [R31 + 0x70, el]:u32 <- 31:0[R0]
000242c6: goto %00023dbf

00023db8:
00023dbd: mem := mem with [R31 + 0x70, el]:u32 <- 0
00034a29: goto %00023dbf

00023dbf:
00023dc4: R0 := pad:64[mem[R24, el]:u32]
00023dca: when 31:0[R0] <> 0 goto %00023dc8
00034a2a: goto %00023de9

00023dc8:
00023dd2: R0 := mem[R31 + 0xB8, el]:u64
00023dd8: R1 := R21
00023ddd: R30 := 0x40D948
00023ddf: call @printf with return %00023de1

00023de1:
00023de6: R21 := mem[R31 + 0xC8, el]:u64
00023deb: goto %00023de9

00023de9:
00023def: R1 := 0x415000
00023df5: R0 := R21
00023dfb: R1 := R1 + 0xB60
00023e00: R30 := 0x40D53C
00023e02: call @strstr with return %00023e04

00023e04:
00023e08: when R0 = 0 goto %00023e06
00034a2b: goto %00023f2e

00023e06:
00023e10: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00023e16: when 31:0[R0] <> 0 goto %00023e14
00034a2c: goto %00023f0a

00023f0a:
00023f0e: #1093 := R31 + 0x98
00023f13: R28 := mem[#1093, el]:u64
00023f18: R20 := mem[#1093 + 8, el]:u64
00023f1e: R1 := R21
00023f25: R8 := mem[R31 + 0x78, el]:u64
00023f2c: R22 := mem[R31 + 0xA8, el]:u64
00034a2d: goto %0002380d

00023f2e:
00023f31: R1 := 0
00023f37: R0 := R0 + 0x10
00023f3c: R2 := 0xA
00023f41: R30 := 0x40D550
00023f43: call @strtol with return %00023f45

00023f45:
00023f4a: R1 := pad:64[mem[R24, el]:u32]
00023f52: mem := mem with [R31 + 0x90, el]:u64 <- R0
00023f58: when 31:0[R1] = 0 goto %00023f56
00034a2e: goto %00023fc6

00023fc6:
00023fca: R1 := R0
00023fcf: VF := 0
00023fd2: CF := 1
00023fd6: ZF := R0 = 0
00023fda: NF := 63:63[R0]
00023fe2: when ~(NF = VF & ~ZF) goto %00023fe0
00034a2f: goto %000241e1

00023fe0:
00023fea: R8 := mem[R31 + 0x78, el]:u64
00023ff0: #1094 := R31 + 0x98
00023ff5: R28 := mem[#1094, el]:u64
00023ffa: R20 := mem[#1094 + 8, el]:u64
00024001: R22 := mem[R31 + 0xA8, el]:u64
00024006: goto %00024004

000241e1:
000241e4: R0 := 0x415000
000241ea: R1 := extend:64[63:10[R1]]
000241f0: R0 := R0 + 0xBA8
000241f5: R2 := 0
000241fa: R30 := 0x40D57C
000241fc: call @printf with return %00023f56

00023f56:
00023f5e: R0 := 0x32
00023f63: R30 := 0x40D584
00023f65: call @zmalloc with return %00023f67

00023f67:
00023f6c: R1 := mem[R31 + 0x98, el]:u64
00023f71: R2 := 0x415000
00023f77: R2 := R2 + 0xB98
00023f7d: R21 := R0
00023f84: R3 := mem[R1 + 0x48, el]:u64
00023f89: R1 := 0x32
00023f8e: R30 := 0x40D5A0
00023f90: call @snprintf with return %00023f92

00023f92:
00023f96: R0 := R21
00023f9b: R30 := 0x40D5A8
00023f9d: call @strlen with return %00023f9f

00023f9f:
00023fa3: R2 := R0
00023faa: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00023fb0: R1 := R21
00023fb5: R30 := 0x40D5B8
00023fb7: call @write_wrapper with return %00023fb9

00023fb9:
00023fbd: R0 := R21
00023fc2: R30 := 0x40D5C0
00023fc4: call @free with return %00023e14

00023e14:
00023e1e: R0 := pad:64[mem[R31 + 0x70, el]:u32]
00023e24: when 31:0[R0] = 0 goto %00023e22
00034a30: goto %00023eca

00023e22:
00023e2a: R0 := 0x32
00023e2f: R30 := 0x40D878
00023e31: call @zmalloc with return %00023e33

00023e33:
00023e38: R3 := mem[R31 + 0xC8, el]:u64
00023e3e: R21 := R0
00023e43: R2 := 0xA
00023e48: R1 := 0
00023e4e: R0 := R3 + 0xC
00023e53: R30 := 0x40D890
00023e55: call @strtol with return %00023e57

00023e57:
00023e5b: R3 := R0
00023e62: R4 := mem[R31 + 0x90, el]:u64
00023e67: R2 := 0x415000
00023e6d: R2 := R2 + 0xB78
00023e72: R1 := 0x32
00023e78: R0 := R21
00023e80: mem := mem with [R31 + 0xA0, el]:u64 <- R3
00023e85: R30 := 0x40D8B0
00023e87: call @snprintf with return %00023e89

00023e89:
00023e8d: R0 := R21
00023e92: R30 := 0x40D8B8
00023e94: call @strlen with return %00023e96

00023e96:
00023e9a: R2 := R0
00023ea1: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00023ea7: R1 := R21
00023eac: R30 := 0x40D8C8
00023eae: call @write_wrapper with return %00023eb0

00023eb0:
00023eb4: R0 := R21
00023eb9: R30 := 0x40D8D0
00023ebb: call @free with return %00023ebd

00023ebd:
00023ec0: R0 := 1
00023ec8: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
00034a31: goto %00023cbe

00023cbe:
00023cc6: VF := 0
00023cc9: CF := 1
00023ccd: ZF := 31:0[R20] = 0
00023cd1: NF := 31:31[R20]
00023cd9: when NF = VF & ~ZF goto %00023cd7
00034a32: goto %00024258

00024258:
0002425c: #1096 := R31 + 0x98
00024261: R28 := mem[#1096, el]:u64
00024266: R20 := mem[#1096 + 8, el]:u64
0002426d: mem := mem with [R31 + 0x70, el]:u32 <- 0
00024274: R8 := mem[R31 + 0x78, el]:u64
0002427b: R22 := mem[R31 + 0xA8, el]:u64
00034a33: goto %0002427d

00023eca:
00023ece: #1092 := R31 + 0x98
00023ed3: R28 := mem[#1092, el]:u64
00023ed8: R20 := mem[#1092 + 8, el]:u64
00023edf: R8 := mem[R31 + 0x78, el]:u64
00023ee6: R22 := mem[R31 + 0xA8, el]:u64
00023eed: R1 := mem[R31 + 0xC8, el]:u64
00034a34: goto %00023eef

00024746:
00024749: R0 := 0x415000
0002474f: R0 := R0 + 0xB60
00024755: #1106 := R31 + 0x98
0002475b: mem := mem with [#1106, el]:u64 <- R0
00024760: mem := mem with [#1106 + 8, el]:u64 <- 0
00024766: R0 := R31 + 0xC0
0002476b: R1 := 0x415000
00024773: mem := mem with [R31 + 0x70, el]:u64 <- R0
00024779: R0 := R31 + 0xC8
00024781: mem := mem with [R31 + 0x68, el]:u64 <- R0
00024786: R0 := 0
0002478e: mem := mem with [R31 + 0xB8, el]:u64 <- R22
00024794: R22 := pad:64[31:0[R25]]
0002479a: R25 := R0
000247a0: R1 := R1 + 0xB38
000247a5: R26 := 0x1000
000247ad: mem := mem with [R31 + 0x78, el]:u64 <- R1
000247b4: mem := mem with [R31 + 0x84, el]:u32 <- 0
000247ba: #1107 := R31 + 0x88
000247c0: mem := mem with [#1107, el]:u64 <- R8
000247c6: mem := mem with [#1107 + 8, el]:u64 <- R20
000247ce: mem := mem with [R31 + 0xA8, el]:u64 <- R28
00034a35: goto %0002365a

0002365a:
00023663: #1085 := R31 + 0x68
00023668: R1 := mem[#1085, el]:u64
0002366d: R2 := mem[#1085 + 8, el]:u64
00023674: R0 := pad:64[mem[R19, el]:u32]
00023679: R30 := 0x40CFFC
0002367b: call @so_recvln with return %0002367d

0002367d:
00023681: R20 := pad:64[31:0[R0]]
00023688: R21 := mem[R31 + 0xC8, el]:u64
0002368e: R0 := R21
00023693: R30 := 0x40D00C
00023695: call @strlen with return %00023697

00023697:
0002369b: R28 := R0
000236a2: R0 := R0 + extend:64[31:0[R27]]
000236a8: #1086 := ~R26
000236ad: #1087 := R0 + ~R26
000236b3: VF := extend:128[#1087 + 1] <> extend:128[R0] + extend:128[#1086] +
          1
000236b9: CF := pad:128[#1087 + 1] <> pad:128[R0] + pad:128[#1086] + 1
000236bd: ZF := #1087 + 1 = 0
000236c1: NF := 63:63[#1087 + 1]
000236c8: when NF <> VF goto %000236c6
00034a36: goto %00024a5e

00024a5e:
00024a62: R22 := pad:64[30:0[R22].0]
00024a68: R0 := R23
00024a6e: R26 := extend:64[31:0[R22]]
00024a74: R1 := R26
00024a79: R30 := 0x40D030
00024a7b: call @realloc with return %00024a7d

00024a7d:
00024a80: when R0 = 0 goto %000236ed
00034a37: goto %00024a84

00024a84:
00024a88: R23 := R0
00034a38: goto %000236c6

000236c6:
000236cf: R1 := R21
000236d5: R2 := R26
000236db: R0 := R23
000236e2: R27 := pad:64[31:0[R27] + 31:0[R28]]
000236e7: R30 := 0x40D04C
000236e9: call @strlcat with return %000236eb

000236eb:
000236ef: when 31:31[R20] goto %000236ed
00034a39: goto %0002372f

000236ed:
000236f7: R8 := mem[R31 + 0x88, el]:u64
000236fe: R20 := mem[R31 + 0xC8, el]:u64
00034a3a: goto %00023700

0002372f:
00023734: R1 := mem[R31 + 0x78, el]:u64
0002373b: R21 := mem[R31 + 0xC8, el]:u64
00023741: R0 := R21
00023746: R30 := 0x40D060
00023748: call @strstr with return %0002374a

0002374a:
0002374e: R28 := R0
00023753: when R0 = 0 goto %000235fc
00034a3b: goto %00023757

00023757:
0002375a: R30 := 0x40D06C
0002375c: call @__ctype_b_loc with return %0002375e

0002375e:
00023763: R0 := mem[R0, el]:u64
0002376a: R1 := pad:64[mem[R28 + 0xB]]
00023772: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
00023777: when ~11:11[R0] goto %000235fc
00034a3c: goto %0002377b

000235fc:
00023600: R0 := R21
00023605: R1 := 0x415000
0002360b: R1 := R1 + 0xB48
00023610: R30 := 0x40D280
00023612: call @strstr with return %00023614

00023614:
00023618: R28 := R0
0002361e: when R0 = 0 goto %0002361c
00034a3d: goto %00024ad5

00024ad5:
00024ad8: R30 := 0x40D28C
00024ada: call @__ctype_b_loc with return %00024adc

00024adc:
00024ae1: R0 := mem[R0, el]:u64
00024ae8: R1 := pad:64[mem[R28 + 0x11]]
00024aed: R28 := 1
00024af5: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
00024afa: when 11:11[R0] goto %00023780
00034a3e: goto %0002361c

0002361c:
00023624: R28 := 0
00023629: R0 := 1
0002362e: goto %0002362c

0002377b:
0002377e: R28 := 0
00034a3f: goto %00023780

00023780:
00023785: R0 := pad:64[mem[R24, el]:u32]
0002378b: when 31:0[R0] <> 0 goto %00023789
00034a40: goto %000237ae

00023789:
00023792: R1 := R21
00023797: R0 := 0x415000
0002379d: R0 := R0 + 0xBE0
000237a2: R30 := 0x40D39C
000237a4: call @printf with return %000237a6

000237a6:
000237ab: R21 := mem[R31 + 0xC8, el]:u64
000237b0: goto %000237ae

000237ae:
000237b6: R1 := mem[R31 + 0x98, el]:u64
000237bc: R0 := R21
000237c1: R30 := 0x40D094
000237c3: call @strstr with return %000237c5

000237c5:
000237c9: when R0 = 0 goto %000237c7
00034a41: goto %00024907

000237c7:
000237d1: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000237d7: when 31:0[R0] = 0 goto %000237d5
00034a42: goto %000243fb

000237d5:
000237df: R8 := mem[R31 + 0x88, el]:u64
000237e5: R1 := R21
000237ec: R20 := mem[R31 + 0xA0, el]:u64
000237f4: mem := mem with [R31 + 0x70, el]:u32 <- 31:0[R28]
000237fb: R28 := mem[R31 + 0xA8, el]:u64
00023803: mem := mem with [R31 + 0x90, el]:u64 <- R25
0002380a: R22 := mem[R31 + 0xB8, el]:u64
0002380f: goto %0002380d

0002380d:
00023815: R0 := mem[R31 + 0x60, el]:u64
0002381c: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00023822: when 31:0[R0] <> 0 goto %00023820
00034a43: goto %0002384e

00023820:
00023828: R0 := 0x415000
0002382e: R0 := R0 + 0xC28
00023836: mem := mem with [R31 + 0x68, el]:u64 <- R8
0002383b: R30 := 0x40DAF4
0002383d: call @puts with return %0002383f

0002383f:
00023844: R8 := mem[R31 + 0x68, el]:u64
0002384b: R1 := mem[R31 + 0xC8, el]:u64
00023850: goto %0002384e

0002384e:
00023856: R0 := pad:64[mem[R31 + 0x70, el]:u32]
0002385d: mem := mem with [R31 + 0x84, el]:u32 <- 0
00023865: mem := mem with [R31 + 0xA0, el]:u64 <- R20
0002386a: goto %00023868

000243fb:
000243ff: when 31:0[R28] = 0 goto %000243fd
00034a44: goto %00024900

00024900:
00024903: when R25 <> 0 goto %0002439f
00034a45: goto %000244c7

0002439f:
000243a4: R8 := mem[R31 + 0x88, el]:u64
000243aa: R1 := R21
000243b0: #1098 := R31 + 0xA0
000243b5: R20 := mem[#1098, el]:u64
000243ba: R28 := mem[#1098 + 8, el]:u64
000243c2: mem := mem with [R31 + 0x90, el]:u64 <- R25
000243c9: R22 := mem[R31 + 0xB8, el]:u64
000243cd: goto %00023eef

00024907:
0002490a: R1 := 0
00024910: R0 := R0 + 0x10
00024915: R2 := 0xA
0002491a: R30 := 0x40D0A8
0002491c: call @strtol with return %0002491e

0002491e:
00024923: R1 := pad:64[mem[R24, el]:u32]
00024929: R25 := R0
0002492f: when 31:0[R1] = 0 goto %0002492d
00034a46: goto %00024a26

00024a26:
00024a29: VF := 0
00024a2c: CF := 1
00024a30: ZF := R0 = 0
00024a34: NF := 63:63[R0]
00024a3b: when ~(NF = VF & ~ZF) goto %000243cf
00034a47: goto %00024a3f

000243cf:
000243d4: R8 := mem[R31 + 0x88, el]:u64
000243dc: mem := mem with [R31 + 0x70, el]:u32 <- 31:0[R28]
000243e3: R20 := mem[R31 + 0xA0, el]:u64
000243eb: mem := mem with [R31 + 0x90, el]:u64 <- R0
000243f2: R28 := mem[R31 + 0xA8, el]:u64
000243f9: R22 := mem[R31 + 0xB8, el]:u64
00034a48: goto %00024004

00024004:
0002400a: R0 := 0x415000
00024010: R0 := R0 + 0xBF8
00024018: mem := mem with [R31 + 0x68, el]:u64 <- R8
0002401d: R30 := 0x40DAB8
0002401f: call @puts with return %00024021

00024021:
00024027: mem := mem with [R31 + 0xA0, el]:u64 <- R20
0002402e: R8 := mem[R31 + 0x68, el]:u64
00024035: R1 := mem[R31 + 0xC8, el]:u64
0002403c: R0 := pad:64[mem[R31 + 0x70, el]:u32]
00024040: goto %00023868

00024a3f:
00024a44: R2 := mem[R31 + 0x90, el]:u64
00024a49: R0 := 0x415000
00024a4f: R1 := extend:64[63:10[R25]]
00024a55: R0 := R0 + 0xBA8
00024a5a: R30 := 0x40D0D0
00024a5c: call @printf with return %0002492d

0002492d:
00024937: R0 := mem[R31 + 0x90, el]:u64
0002493d: #1112 := R0 - 1
00024942: VF := extend:128[#1112] <> extend:128[R0] - 1
00024947: CF := pad:128[#1112] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
0002494b: ZF := #1112 = 0
0002494f: NF := 63:63[#1112]
00024954: when ZF goto %000241fe
00034a49: goto %00024958

00024958:
0002495c: R1 := R0
00024961: VF := 0
00024964: CF := 1
00024968: ZF := R25 = 0
0002496c: NF := 63:63[R25]
00024972: R0 := R25 + 0x3FF
00024981: when NF <> VF goto %00024979
00024982: goto %0002497d

0002497d:
0002497e: R0 := R25
00024984: goto %00024980

00024979:
0002497a: R0 := R0
00024983: goto %00024980

00024980:
0002498a: #1113 := R0 ~>> 0xA
0002498f: #1114 := R1 + ~(R0 ~>> 0xA)
00024995: VF := extend:128[#1114 + 1] <> extend:128[R1] + extend:128[~#1113]
          + 1
0002499b: CF := pad:128[#1114 + 1] <> pad:128[R1] + pad:128[~#1113] + 1
0002499f: ZF := #1114 + 1 = 0
000249a3: NF := 63:63[#1114 + 1]
000249a9: when NF <> VF goto %000241fe
00034a4a: goto %000249ad

000241fe:
00024203: R8 := mem[R31 + 0x88, el]:u64
00024209: R0 := pad:64[31:0[R28]]
00024210: R28 := mem[R31 + 0xA8, el]:u64
00024218: mem := mem with [R31 + 0x90, el]:u64 <- R25
0002421f: R22 := mem[R31 + 0xB8, el]:u64
00024226: R1 := mem[R31 + 0xC8, el]:u64
0002422a: goto %00023868

000249ad:
000249b0: R0 := 0x32
000249b5: R30 := 0x40D0FC
000249b7: call @zmalloc with return %000249b9

000249b9:
000249be: R1 := mem[R31 + 0xA8, el]:u64
000249c3: R2 := 0x415000
000249c9: R2 := R2 + 0xB98
000249cf: R21 := R0
000249d6: R3 := mem[R1 + 0x48, el]:u64
000249db: R1 := 0x32
000249e0: R30 := 0x40D118
000249e2: call @snprintf with return %000249e4

000249e4:
000249e8: R0 := R21
000249ed: R30 := 0x40D120
000249ef: call @strlen with return %000249f1

000249f1:
000249f5: R2 := R0
000249fc: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00024a02: R1 := R21
00024a07: R30 := 0x40D130
00024a09: call @write_wrapper with return %00024a0b

00024a0b:
00024a0f: R0 := R21
00024a14: R30 := 0x40D138
00024a16: call @free with return %00024a18

00024a18:
00024a1b: when 31:0[R28] = 0 goto %000243fd
00034a4b: goto %00024a1f

000243fd:
00024405: VF := 0
00024408: CF := 1
0002440c: ZF := R25 = 0
00024410: NF := 63:63[R25]
00024415: R0 := 0x32
00024421: when ZF <> 1 goto %0002441a
00024422: goto %0002441d

0002441d:
0002441e: R5 := 1
00024424: goto %00024420

0002441a:
0002441b: R5 := 0
00024423: goto %00024420

00024420:
0002442c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R5]
00024431: R30 := 0x40D3B8
00024433: call @zmalloc with return %00024435

00024435:
00024439: R21 := R0
00024440: R3 := mem[R31 + 0xC8, el]:u64
00024445: R2 := 0xA
0002444a: R1 := 0
00024450: R0 := R3 + 0xC
00024455: R30 := 0x40D3D0
00024457: call @strtol with return %00024459

00024459:
0002445d: R3 := R0
00024463: R4 := R25
00024468: R2 := 0x415000
0002446e: R2 := R2 + 0xB78
00024473: R1 := 0x32
00024479: R0 := R21
00024481: mem := mem with [R31 + 0xA0, el]:u64 <- R3
00024486: R30 := 0x40D3F0
00024488: call @snprintf with return %0002448a

0002448a:
0002448e: R0 := R21
00024493: R30 := 0x40D3F8
00024495: call @strlen with return %00024497

00024497:
0002449b: R2 := R0
000244a2: R0 := pad:64[mem[R31 + 0x80, el]:u32]
000244a8: R1 := R21
000244ad: R30 := 0x40D408
000244af: call @write_wrapper with return %000244b1

000244b1:
000244b5: R0 := R21
000244ba: R30 := 0x40D410
000244bc: call @free with return %000244be

000244be:
000244c3: R5 := pad:64[mem[R31 + 0x84, el]:u32]
000244c9: when 31:0[R5] <> 0 goto %000244c7
00034a4c: goto %000245a3

000245a3:
000245a6: R0 := 1
000245ab: R28 := 0
000245b3: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
000245b7: goto %0002362c

000244c7:
000244d1: R1 := mem[R31 + 0x90, el]:u64
000244d7: #1099 := R1 - 1
000244dc: VF := extend:128[#1099] <> extend:128[R1] - 1
000244e1: CF := pad:128[#1099] <> pad:128[R1] + 0xFFFFFFFFFFFFFFFF
000244e5: ZF := #1099 = 0
000244e9: NF := 63:63[#1099]
000244ef: when ZF <> 1 goto %000244ed
00034a4d: goto %00024569

00024569:
0002456d: R0 := pad:64[31:0[R28] ^ 1]
00024572: R25 := 0
0002457a: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
0002457e: goto %0002362c

00024a1f:
00024a22: when R25 <> 0 goto %00024042
00034a4e: goto %000244ed

00024042:
00024047: R8 := mem[R31 + 0x88, el]:u64
0002404f: mem := mem with [R31 + 0x90, el]:u64 <- R25
00024055: #1095 := R31 + 0xA0
0002405a: R20 := mem[#1095, el]:u64
0002405f: R28 := mem[#1095 + 8, el]:u64
00024066: R22 := mem[R31 + 0xB8, el]:u64
0002406d: R1 := mem[R31 + 0xC8, el]:u64
00024071: goto %00023eef

00023eef:
00023ef5: mem := mem with [R31 + 0xA0, el]:u64 <- R20
00023efb: R20 := R1
00023f00: R0 := 1
00023f08: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
00034a4f: goto %00023873

000244ed:
000244f7: R1 := mem[R31 + 0xA0, el]:u64
000244fc: VF := 0
000244ff: CF := 1
00024503: ZF := R1 = 0
00024507: NF := 63:63[R1]
0002450d: R0 := R1 + 0x3FF
0002451c: when NF <> VF goto %00024514
0002451d: goto %00024518

00024518:
00024519: R0 := R1
0002451f: goto %0002451b

00024514:
00024515: R0 := R0
0002451e: goto %0002451b

0002451b:
00024526: R1 := mem[R31 + 0x90, el]:u64
0002452c: #1100 := R0 ~>> 0xA
00024531: #1101 := R1 + ~(R0 ~>> 0xA)
00024537: VF := extend:128[#1101 + 1] <> extend:128[R1] + extend:128[~#1100]
          + 1
0002453d: CF := pad:128[#1101 + 1] <> pad:128[R1] + pad:128[~#1100] + 1
00024541: ZF := #1101 + 1 = 0
00024545: NF := 63:63[#1101 + 1]
0002454b: when NF <> VF goto %00024169
00034a50: goto %0002454f

00024169:
0002416e: R8 := mem[R31 + 0x88, el]:u64
00024174: R0 := pad:64[31:0[R28]]
0002417b: R28 := mem[R31 + 0xA8, el]:u64
00024180: R2 := 1
00024187: R22 := mem[R31 + 0xB8, el]:u64
0002418f: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R2]
00024196: R1 := mem[R31 + 0xC8, el]:u64
0002419d: mem := mem with [R31 + 0x90, el]:u64 <- 0
000241a1: goto %00023868

0002454f:
00024553: R0 := pad:64[31:0[R28] ^ 1]
00024558: R1 := 1
0002455d: R25 := 0
00024565: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
00034a51: goto %0002362c

0002362c:
00023632: VF := 0
00023635: CF := 1
00023639: ZF := 31:0[R20] = 0
0002363d: NF := 31:31[R20]
00023645: #1084 := NF = VF & ~ZF
00023648: VF := 0
0002364c: CF := #1084
00023651: ZF := 31:0[R0] = 0 | ~#1084
00023656: NF := #1084 & 31:31[R0]
0002365c: when ZF <> 1 goto %0002365a
00034a52: goto %00024a8a

00024a8a:
00024a8f: R8 := mem[R31 + 0x88, el]:u64
00024a97: mem := mem with [R31 + 0x70, el]:u32 <- 31:0[R28]
00024a9e: R20 := mem[R31 + 0xA0, el]:u64
00024aa6: mem := mem with [R31 + 0x90, el]:u64 <- R25
00024aad: R28 := mem[R31 + 0xA8, el]:u64
00024ab4: R22 := mem[R31 + 0xB8, el]:u64
00024ab8: goto %0002427d

0002427d:
00024283: mem := mem with [R31 + 0xA0, el]:u64 <- R20
0002428a: R1 := mem[R31 + 0xC8, el]:u64
00024291: R0 := pad:64[mem[R31 + 0x70, el]:u32]
00034a53: goto %00023868

00023868:
0002386f: R20 := R1
00023875: when 31:0[R0] <> 0 goto %00023873
00034a54: goto %0002439b

0002439b:
0002439d: goto %00023700

00023873:
0002387c: R0 := R1
00023881: R1 := 0x415000
00023887: R1 := R1 + 0xC68
0002388f: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023894: R30 := 0x40D5FC
00023896: call @strstr with return %00023898

00023898:
0002389c: R24 := R0 + 3
000238a2: R0 := R24
000238a7: R1 := 0x22
000238ac: R30 := 0x40D60C
000238ae: call @strchr with return %000238b0

000238b0:
000238b5: R2 := R0 + ~R24 + 1
000238bc: R8 := mem[R31 + 0x68, el]:u64
000238c1: VF := 0
000238c4: CF := 1
000238c8: ZF := R2 = 0
000238cc: NF := 63:63[R2]
000238d3: when ~(NF = VF & ~ZF) goto %00023700
00034a55: goto %000238d7

000238d7:
000238da: R1 := 0
000238e0: R0 := R24
000238e8: mem := mem with [R31 + 0x68, el]:u64 <- R8
000238ed: R30 := 0x40D62C
000238ef: call @substr with return %000238f1

000238f1:
000238f5: R20 := R0
000238fa: R30 := 0x40D634
000238fc: call @urlencode with return %000238fe

000238fe:
00023902: R24 := R0
00023908: R0 := R20
0002390d: R30 := 0x40D640
0002390f: call @free with return %00023911

00023911:
00023916: R0 := mem[R28 + 0x30, el]:u64
0002391b: R30 := 0x40D648
0002391d: call @urlencode with return %0002391f

0002391f:
00023923: R26 := R0
00023928: R0 := 0x1000
0002392d: R30 := 0x40D654
0002392f: call @zmalloc with return %00023931

00023931:
00023936: R3 := mem[R31 + 0xB0, el]:u64
0002393c: R7 := R26
00023942: R4 := R24
00023947: R2 := 0x415000
0002394d: R6 := R3
00023953: R2 := R2 + 0xC70
00023959: R5 := R3
0002395e: R1 := 0xFFF
00023964: R20 := R0
00023969: R30 := 0x40D67C
0002396b: call @snprintf with return %0002396d

0002396d:
00023971: R0 := R24
00023976: R30 := 0x40D684
00023978: call @free with return %0002397a

0002397a:
0002397e: #1088 := R31 + 0x60
00023983: R0 := mem[#1088, el]:u64
00023988: R8 := mem[#1088 + 8, el]:u64
0002398f: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00023995: when 31:0[R0] <> 0 goto %00023993
00034a56: goto %000239b9

00023993:
0002399d: R1 := mem[R28 + 0x30, el]:u64
000239a2: R0 := 0x415000
000239a8: R0 := R0 + 0xC98
000239ad: R30 := 0x40D994
000239af: call @printf with return %000239b1

000239b1:
000239b6: R8 := mem[R31 + 0x68, el]:u64
000239bb: goto %000239b9

000239b9:
000239bf: R0 := 0x32
000239c7: mem := mem with [R31 + 0x68, el]:u64 <- R8
000239cc: R30 := 0x40D69C
000239ce: call @zmalloc with return %000239d0

000239d0:
000239d4: R24 := R0
000239da: R0 := R20
000239df: R30 := 0x40D6A8
000239e1: call @strlen with return %000239e3

000239e3:
000239e6: R2 := 0x413000
000239ec: R3 := pad:64[31:0[R0]]
000239f2: R2 := R2 + 0xCB8
000239f7: R1 := 0x32
000239fd: R0 := R24
00023a02: R30 := 0x40D6C0
00023a04: call @snprintf with return %00023a06

00023a06:
00023a09: R30 := 0x40D6C4
00023a0b: call @new_rr_data with return %00023a0d

00023a0d:
00023a11: R1 := R0
00023a17: R0 := R28
00023a1f: mem := mem with [R31 + 0xD8, el]:u64 <- R1
00023a24: R30 := 0x40D6D4
00023a26: call @dup_rr_data with return %00023a28

00023a28:
00023a2e: mem := mem with [R31 + 0xD0, el]:u64 <- R0
00023a35: R0 := mem[R0 + 0x28, el]:u64
00023a3a: R30 := 0x40D6E0
00023a3c: call @free with return %00023a3e

00023a3e:
00023a43: R25 := mem[R31 + 0xD0, el]:u64
00023a48: R0 := 0x415000
00023a4e: R0 := R0 + 0xCC8
00023a53: R30 := 0x40D6F0
00023a55: call @strdup with return %00023a57

00023a57:
00023a5c: R2 := mem[R28 + 0x30, el]:u64
00023a64: mem := mem with [R25 + 0x28, el]:u64 <- R0
00023a6b: R0 := mem[R31 + 0xD0, el]:u64
00023a70: R3 := 1
00023a75: R1 := 0x415000
00023a7b: R1 := R1 + 0xCD0
00023a82: R0 := mem[R0 + 8, el]:u64
00023a87: R30 := 0x40D710
00023a89: call @hlist_mod with return %00023a8b

00023a8b:
00023a90: R0 := mem[R31 + 0xD0, el]:u64
00023a95: R3 := 1
00023a9a: R2 := 0x415000
00023a9f: R1 := 0x413000
00023aa5: R2 := R2 + 0xCD8
00023aab: R1 := R1 + 0x920
00023ab2: R0 := mem[R0 + 8, el]:u64
00023ab7: R30 := 0x40D730
00023ab9: call @hlist_mod with return %00023abb

00023abb:
00023ac0: R0 := mem[R31 + 0xD0, el]:u64
00023ac5: R1 := 0x412000
00023acb: R25 := R1 + 0xAA8
00023ad1: R2 := R24
00023ad7: R1 := R25
00023adc: R3 := 1
00023ae3: R0 := mem[R0 + 8, el]:u64
00023ae8: R30 := 0x40D750
00023aea: call @hlist_mod with return %00023aec

00023aec:
00023af0: R0 := R24
00023af5: R30 := 0x40D758
00023af7: call @free with return %00023af9

00023af9:
00023afe: R2 := mem[R31 + 0xD0, el]:u64
00023b04: R0 := R22
00023b0b: R1 := mem[R2 + 0x30, el]:u64
00023b12: R2 := mem[R2 + 0x40, el]:u64
00023b17: R30 := 0x40D76C
00023b19: call @proxy_connect with return %00023b1b

00023b1b:
00023b1f: R4 := pad:64[31:0[R0]]
00023b25: #1089 := R31 + 0xD0
00023b2a: R1 := mem[#1089, el]:u64
00023b2f: R2 := mem[#1089 + 8, el]:u64
00023b35: R3 := R22
00023b3b: R0 := R31 + 0xC4
00023b43: mem := mem with [R31 + 0xC4, el]:u32 <- 31:0[R4]
00023b48: R30 := 0x40D784
00023b4a: call @proxy_authenticate with return %00023b4c

00023b4c:
00023b51: R8 := mem[R31 + 0x68, el]:u64
00023b57: when 31:0[R0] = 0 goto %00023b55
00034a57: goto %00024335

00024335:
0002433a: R0 := mem[R31 + 0xD8, el]:u64
00024341: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00024347: #1097 := 31:0[R1] - 0x197
0002434c: VF := extend:64[#1097] <> extend:64[31:0[R1]] - 0x197
00024351: CF := pad:64[#1097] <> pad:64[31:0[R1]] + 0xFFFFFE69
00024355: ZF := #1097 = 0
00024359: NF := 31:31[#1097]
0002435f: when ZF goto %0002435d
00034a58: goto %00023b55

0002435d:
00024367: R1 := mem[R31 + 0x60, el]:u64
0002436e: R1 := pad:64[mem[R1 + 0x374, el]:u32]
00024373: when 31:0[R1] = 0 goto %00023bbf
00034a59: goto %00024377

00024377:
0002437a: R0 := 0x415000
00024380: R0 := R0 + 0xD00
00024385: R30 := 0x40DB18
00024387: call @puts with return %00024389

00024389:
0002438e: R8 := mem[R31 + 0x68, el]:u64
00024395: R0 := mem[R31 + 0xD8, el]:u64
00024399: goto %00023bbf

00023b55:
00023b5f: R0 := mem[R31 + 0x60, el]:u64
00023b66: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00023b6c: when 31:0[R0] <> 0 goto %00023b6a
00034a5a: goto %00023b91

00023b6a:
00023b72: R0 := 0x415000
00023b78: R0 := R0 + 0xD38
00023b80: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023b85: R30 := 0x40D97C
00023b87: call @puts with return %00023b89

00023b89:
00023b8e: R8 := mem[R31 + 0x68, el]:u64
00023b93: goto %00023b91

00023b91:
00023b99: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
00023ba1: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023ba6: R30 := 0x40D7B4
00023ba8: call @close with return %00023baa

00023baa:
00023baf: mem := mem with [R31 + 0xC4, el]:u32 <- 0
00023bb6: R8 := mem[R31 + 0x68, el]:u64
00023bbd: R0 := mem[R31 + 0xD8, el]:u64
00034a5b: goto %00023bbf

00023bbf:
00023bc5: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023bca: R30 := 0x40D7C8
00023bcc: call @reset_rr_data with return %00023bce

00023bce:
00023bd3: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
00023bda: R8 := mem[R31 + 0x68, el]:u64
00023be0: when 31:0[R0] <> 0 goto %00023bde
00034a5c: goto %00023bfa

00023bde:
00023be8: R1 := mem[R31 + 0xD0, el]:u64
00023bed: R30 := 0x40D9A4
00023bef: call @headers_send with return %00023bf1

00023bf1:
00023bf6: R8 := mem[R31 + 0x68, el]:u64
00023bfc: when 31:0[R0] = 0 goto %00023bfa
00034a5d: goto %000242c8

000242c8:
000242cc: R0 := R20
000242d1: R30 := 0x40D9B4
000242d3: call @strlen with return %000242d5

000242d5:
000242d9: R2 := R0
000242e0: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
000242e6: R1 := R20
000242eb: R30 := 0x40D9C4
000242ed: call @write_wrapper with return %000242ef

000242ef:
000242f4: R8 := mem[R31 + 0x68, el]:u64
000242f9: when R0 = 0 goto %00023bfa
00034a5e: goto %000242fd

000242fd:
00024302: R1 := mem[R31 + 0xD8, el]:u64
00024309: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002430e: R30 := 0x40D9D8
00024310: call @headers_recv with return %00024312

00024312:
00024317: R8 := mem[R31 + 0x68, el]:u64
0002431c: when 31:0[R0] = 0 goto %00023bfa
00034a5f: goto %00024320

00024320:
00024325: R0 := mem[R31 + 0x60, el]:u64
0002432c: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00024331: when 31:0[R0] <> 0 goto %000241a3
00034a60: goto %000241c0

000241a3:
000241a8: R0 := mem[R31 + 0xD8, el]:u64
000241af: R0 := mem[R0 + 8, el]:u64
000241b4: R30 := 0x40DB94
000241b6: call @hlist_dump with return %000241b8

000241b8:
000241bd: R8 := mem[R31 + 0x68, el]:u64
000241c2: goto %000241c0

000241c0:
000241c8: R1 := mem[R31 + 0x90, el]:u64
000241cf: R0 := mem[R31 + 0xA0, el]:u64
000241d6: R0 := R0 | R1
000241db: when R0 <> 0 goto %00024073
00034a61: goto %00024109

00024073:
00024076: R0 := 0x14
0002407e: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024083: R30 := 0x40DB40
00024085: call @zmalloc with return %00024087

00024087:
0002408b: R22 := R0
00024092: R1 := mem[R31 + 0x90, el]:u64
00024099: R2 := mem[R31 + 0xA0, el]:u64
0002409e: VF := 0
000240a1: CF := 1
000240a5: ZF := R1 = 0
000240a9: NF := 63:63[R1]
000240b7: when ZF goto %000240af
000240b8: goto %000240b3

000240b3:
000240b4: R3 := R1
000240ba: goto %000240b6

000240af:
000240b0: R3 := R2
000240b9: goto %000240b6

000240b6:
000240bf: R1 := 0x14
000240c4: R2 := 0x415000
000240ca: R2 := R2 + 0xD68
000240cf: R30 := 0x40DB64
000240d1: call @snprintf with return %000240d3

000240d3:
000240d8: R24 := mem[R31 + 0xD8, el]:u64
000240de: R2 := R22
000240e4: R1 := R25
000240e9: R3 := 1
000240f0: R0 := mem[R24 + 8, el]:u64
000240f5: R30 := 0x40DB7C
000240f7: call @hlist_mod with return %000240f9

000240f9:
000240ff: mem := mem with [R24 + 8, el]:u64 <- R0
00024106: R8 := mem[R31 + 0x68, el]:u64
0002410b: goto %00024109

00024109:
00024111: R1 := mem[R31 + 0xD8, el]:u64
00024117: R0 := R8
0002411e: R2 := pad:64[mem[R31 + 0x84, el]:u32]
00024123: R27 := 0
0002412b: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024130: R22 := 3
00024138: mem := mem with [R1 + 0x14, el]:u32 <- 31:0[R2]
0002413d: R30 := 0x40DA1C
0002413f: call @copy_rr_data with return %00024141

00024141:
00024146: R0 := pad:64[mem[R19, el]:u32]
0002414b: R30 := 0x40DA24
0002414d: call @close with return %0002414f

0002414f:
00024154: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002415b: R8 := mem[R31 + 0x68, el]:u64
00024163: mem := mem with [R19, el]:u32 <- 31:0[R0]
00024167: goto %00023c3e

00023bfa:
00023c04: R0 := mem[R31 + 0x60, el]:u64
00023c0b: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00023c11: when 31:0[R0] <> 0 goto %00023c0f
00034a62: goto %00023c36

00023c0f:
00023c17: R0 := 0x415000
00023c1d: R0 := R0 + 0xD70
00023c25: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023c2a: R30 := 0x40D824
00023c2c: call @puts with return %00023c2e

00023c2e:
00023c33: R8 := mem[R31 + 0x68, el]:u64
00023c38: goto %00023c36

00023c36:
00023c3c: R22 := 1
00034a63: goto %00023c3e

00023c3e:
00023c42: R0 := R31 + 0xD0
00023c4a: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023c4f: R30 := 0x40D7F0
00023c51: call @free_rr_data with return %00023c53

00023c53:
00023c57: R0 := R31 + 0xD8
00023c5c: R30 := 0x40D7F8
00023c5e: call @free_rr_data with return %00023c60

00023c60:
00023c64: R0 := R20
00023c69: R30 := 0x40D800
00023c6b: call @free with return %00023c6d

00023c6d:
00023c71: R0 := R26
00023c76: R30 := 0x40D808
00023c78: call @free with return %00023c7a

00023c7a:
00023c7f: R8 := mem[R31 + 0x68, el]:u64
00023c86: R20 := mem[R31 + 0xC8, el]:u64
00023c8a: goto %00023705

00023700:
00023703: R22 := 1
00034a64: goto %00023705

00023705:
00023709: R0 := R20
00023711: mem := mem with [R31 + 0x68, el]:u64 <- R8
00023716: R30 := 0x40D1C4
00023718: call @free with return %0002371a

0002371a:
0002371f: R0 := mem[R31 + 0xB0, el]:u64
00023724: R30 := 0x40D1CC
00023726: call @free with return %00023728

00023728:
0002372d: R8 := mem[R31 + 0x68, el]:u64
00034a65: goto %00023583

00023583:
0002358b: R0 := mem[R31 + 0x60, el]:u64
00023592: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00023598: when 31:0[R27] = 0 goto %00023596
00034a66: goto %00024b16

00024b16:
00024b19: when 31:0[R0] = 0 goto %00024811
00034a67: goto %00024b1d

00024b1d:
00024b21: R1 := pad:64[31:0[R27]]
00024b26: R0 := 0x415000
00024b2c: R0 := R0 + 0xDB8
00024b34: mem := mem with [R31 + 0x68, el]:u64 <- R8
00024b39: R30 := 0x40D1F4
00024b3b: call @printf with return %00024b3d

00024b3d:
00024b42: R8 := mem[R31 + 0x68, el]:u64
00024b49: R0 := mem[R8 + 8, el]:u64
00024b4e: R30 := 0x40D200
00024b50: call @hlist_dump with return %00024b52

00024b52:
00024b57: R8 := mem[R31 + 0x68, el]:u64
00034a68: goto %00024811

00024811:
00024818: R1 := R8
0002481f: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00024824: R30 := 0x40D210
00024826: call @headers_send with return %00024828

00024828:
0002482c: when 31:0[R0] = 0 goto %0002482a
00034a69: goto %000248b0

0002482a:
00024834: R0 := mem[R31 + 0x60, el]:u64
0002483b: R0 := pad:64[mem[R0 + 0x374, el]:u32]
00024841: when 31:0[R0] <> 0 goto %0002483f
00034a6a: goto %00024857

0002483f:
00024847: R0 := 0x415000
0002484d: R0 := R0 + 0xDE8
00024852: R30 := 0x40D44C
00024854: call @puts with return %00024856

00024856:
00024859: goto %00024857

00024857:
0002485e: R0 := R23
00024863: R22 := 0x8000
00024868: R30 := 0x40D378
0002486a: call @free with return %0002486c

0002486c:
00024870: #1108 := R31 + 0x10
00024875: R19 := mem[#1108, el]:u64
0002487a: R20 := mem[#1108 + 8, el]:u64
00024880: #1109 := R31 + 0x30
00024885: R23 := mem[#1109, el]:u64
0002488a: R24 := mem[#1109 + 8, el]:u64
00024890: #1110 := R31 + 0x40
00024895: R25 := mem[#1110, el]:u64
0002489a: R26 := mem[#1110 + 8, el]:u64
000248a0: #1111 := R31 + 0x50
000248a5: R27 := mem[#1111, el]:u64
000248aa: R28 := mem[#1111 + 8, el]:u64
000248ae: goto %00023312

000248b0:
000248b5: R0 := pad:64[mem[R31 + 0x80, el]:u32]
000248bb: R2 := extend:64[31:0[R27]]
000248c1: R1 := R23
000248c6: R22 := 2
000248cb: R30 := 0x40D228
000248cd: call @write_wrapper with return %000248cf

000248cf:
000248d2: VF := 0
000248d5: CF := 1
000248d9: ZF := 31:0[R0] = 0
000248dd: NF := 31:31[R0]
000248e4: R0 := mem[R31 + 0x60, el]:u64
000248eb: R0 := pad:64[mem[R0 + 0x374, el]:u32]
000248f2: when ~(NF = VF & ~ZF) goto %000235f3
00034a6b: goto %00023596

000235f3:
000235f6: R22 := 0x8000
000235fa: goto %00023596

00023596:
0002359f: when 31:0[R0] = 0 goto %0002359d
00034a6c: goto %00024afe

00024afe:
00024b01: R0 := 0x415000
00024b07: R1 := pad:64[31:0[R22]]
00024b0d: R0 := R0 + 0xE10
00024b12: R30 := 0x40D24C
00024b14: call @printf with return %0002359d

0002359d:
000235a6: R0 := R23
000235ab: R30 := 0x40D254
000235ad: call @free with return %000235af

000235af:
000235b3: #1080 := R31 + 0x10
000235b8: R19 := mem[#1080, el]:u64
000235bd: R20 := mem[#1080 + 8, el]:u64
000235c3: #1081 := R31 + 0x30
000235c8: R23 := mem[#1081, el]:u64
000235cd: R24 := mem[#1081 + 8, el]:u64
000235d3: #1082 := R31 + 0x40
000235d8: R25 := mem[#1082, el]:u64
000235dd: R26 := mem[#1082 + 8, el]:u64
000235e3: #1083 := R31 + 0x50
000235e8: R27 := mem[#1083, el]:u64
000235ed: R28 := mem[#1083 + 8, el]:u64
000235f1: goto %00023312

000233c6:
000233cf: #1075 := R31 + 0x10
000233d4: R19 := mem[#1075, el]:u64
000233d9: R20 := mem[#1075 + 8, el]:u64
000233df: #1076 := R31 + 0x50
000233e4: R27 := mem[#1076, el]:u64
000233e9: R28 := mem[#1076 + 8, el]:u64
000233ed: goto %00023308

00023308:
00023310: R22 := 3
00034a6d: goto %00023312

00023312:
00023316: R0 := pad:64[31:0[R22]]
0002331c: #1071 := R31 + 0x20
00023321: R21 := mem[#1071, el]:u64
00023326: R22 := mem[#1071 + 8, el]:u64
0002332d: R29 := mem[R31, el]:u64
00023332: R30 := mem[R31 + 8, el]:u64
00023336: R31 := R31 + 0xE0
0002333b: call R30 with noreturn

00034a6e: sub select(select_result)
00034c5b: select_result :: out u32 = low:32[R0]

0001eeeb:
00030184: R16 := 0x430000
0003018b: R17 := mem[R16 + 0x278, el]:u64
00030191: R16 := R16 + 0x278
00030196: call R17 with noreturn

00034a6f: sub setgid(setgid_arg1, setgid_result)
00034c5c: setgid_arg1 :: in u32 = low:32[R0]
00034c5d: setgid_result :: out u32 = low:32[R0]

0002d327:
0002ff32: R16 := 0x430000
0002ff39: R17 := mem[R16 + 0x1A0, el]:u64
0002ff3f: R16 := R16 + 0x1A0
0002ff44: call R17 with noreturn

00034a70: sub setlogmask(setlogmask_result)
00034c5e: setlogmask_result :: out u32 = low:32[R0]

0002c46e:
0002fbac: R16 := 0x430000
0002fbb3: R17 := mem[R16 + 0x58, el]:u64
0002fbb9: R16 := R16 + 0x58
0002fbbe: call R17 with noreturn

00034a71: sub setsid(setsid_result)
00034c5f: setsid_result :: out u32 = low:32[R0]

0002dfa9:
0003019a: R16 := 0x430000
000301a1: R17 := mem[R16 + 0x280, el]:u64
000301a7: R16 := R16 + 0x280
000301ac: call R17 with noreturn

00034a72: sub setsockopt(setsockopt_fd, setsockopt_level, setsockopt_optnmae, setsockopt_optval, setsockopt_len, setsockopt_result)
00034c60: setsockopt_fd :: in u32 = low:32[R0]
00034c61: setsockopt_level :: in u32 = low:32[R1]
00034c62: setsockopt_optnmae :: in u32 = low:32[R2]
00034c63: setsockopt_optval :: in out u64 = R3
00034c64: setsockopt_len :: in u64 = R4
00034c65: setsockopt_result :: out u32 = low:32[R0]

0001a865:
0002fd4e: R16 := 0x430000
0002fd55: R17 := mem[R16 + 0xF0, el]:u64
0002fd5b: R16 := R16 + 0xF0
0002fd60: call R17 with noreturn

00034a73: sub setuid(setuid_arg1, setuid_result)
00034c66: setuid_arg1 :: in u32 = low:32[R0]
00034c67: setuid_result :: out u32 = low:32[R0]

0002d33c:
0002fafc: R16 := 0x430000
0002fb03: R17 := mem[R16 + 0x18, el]:u64
0002fb09: R16 := R16 + 0x18
0002fb0e: call R17 with noreturn

00034a74: sub sighandler(sighandler_result)
00034c68: sighandler_result :: out u32 = low:32[R0]

0001fdd3:
0001fdd7: #925 := R31 - 0x20
0001fddd: mem := mem with [#925, el]:u64 <- R29
0001fde3: mem := mem with [#925 + 8, el]:u64 <- R30
0001fde7: R31 := #925
0001fded: R2 := pad:64[31:0[R0]]
0001fdf3: R29 := R31
0001fdfb: mem := mem with [R31 + 0x10, el]:u64 <- R19
0001fe00: R19 := 0x430000
0001fe07: R0 := pad:64[mem[R19 + 0x370, el]:u32]
0001fe0d: when 31:0[R0] <> 0 goto %0001fe0b
00034a75: goto %00028eb8

0001fe0b:
0001fe13: R1 := 0x413000
0001fe18: R0 := 6
0001fe1e: R1 := R1 + 0xA68
0001fe23: R30 := 0x409B38
0001fe25: call @syslog with return %0001fe27

0001fe27:
0001fe2a: goto %0001fe28

00028eb8:
00028ebb: R1 := 0x413000
00028ec0: R0 := 6
00028ec6: R1 := R1 + 0xA38
00028ecb: R30 := 0x409AFC
00028ecd: call @syslog with return %0001fe28

0001fe28:
0001fe2f: R1 := R19 + 0x370
0001fe36: R0 := pad:64[mem[R19 + 0x370, el]:u32]
0001fe3c: R2 := pad:64[31:0[R0] + 2]
0001fe43: R1 := pad:64[mem[R1 + 4, el]:u32]
0001fe4a: R1 := pad:64[31:0[R0] | 31:0[R1]]
0001fe4f: VF := 0
0001fe52: CF := 1
0001fe56: ZF := 31:0[R1] = 0
0001fe5a: NF := 31:31[R1]
0001fe68: when ZF <> 1 goto %0001fe60
0001fe69: goto %0001fe64

0001fe64:
0001fe65: R0 := pad:64[31:0[R0] + 1]
0001fe6b: goto %0001fe67

0001fe60:
0001fe61: R0 := pad:64[31:0[R2]]
0001fe6a: goto %0001fe67

0001fe67:
0001fe73: mem := mem with [R19 + 0x370, el]:u32 <- 31:0[R0]
0001fe7a: R19 := mem[R31 + 0x10, el]:u64
0001fe81: R29 := mem[R31, el]:u64
0001fe86: R30 := mem[R31 + 8, el]:u64
0001fe8a: R31 := R31 + 0x20
0001fe8f: call R30 with noreturn

00034a76: sub signal(signal_result)
00034c69: signal_result :: out u32 = low:32[R0]

0002d3b3:
0002fcb4: R16 := 0x430000
0002fcbb: R17 := mem[R16 + 0xB8, el]:u64
0002fcc1: R16 := R16 + 0xB8
0002fcc6: call R17 with noreturn

00034a77: sub snprintf(snprintf_str, snprintf_size, snprintf_format, snprintf_result)
00034c6a: snprintf_str :: in out u64 = R0
00034c6b: snprintf_size :: in u64 = R1
00034c6c: snprintf_format :: in u64 = R2
00034c6d: snprintf_result :: out u32 = low:32[R0]

000105d6:
0002fc88: R16 := 0x430000
0002fc8f: R17 := mem[R16 + 0xA8, el]:u64
0002fc95: R16 := R16 + 0xA8
0002fc9a: call R17 with noreturn

00034a78: sub so_closed(so_closed_result)
00034c6e: so_closed_result :: out u32 = low:32[R0]

00019c46:
00019c4a: #566 := 31:0[R0] + 1
00019c4f: VF := extend:64[#566] <> extend:64[31:0[R0]] + 1
00019c54: CF := pad:64[#566] <> pad:64[31:0[R0]] + 1
00019c58: ZF := #566 = 0
00019c5c: NF := 31:31[#566]
00019c62: when ZF goto %00019c60
00034a79: goto %0001a6c3

00019c60:
00019c68: R0 := 1
00019c6d: call R30 with noreturn

0001a6c3:
0001a6c7: #625 := R31 - 0x20
0001a6cd: mem := mem with [#625, el]:u64 <- R29
0001a6d3: mem := mem with [#625 + 8, el]:u64 <- R30
0001a6d7: R31 := #625
0001a6dc: R3 := 0x42
0001a6e1: R2 := 1
0001a6e7: R29 := R31
0001a6ed: R1 := R31 + 0x1F
0001a6f2: R30 := 0x40E1B0
0001a6f4: call @recv with return %0001a6f6

0001a6f6:
0001a6fa: R1 := R0
0001a6ff: R0 := 1
0001a705: when 31:0[R1] <> 0 goto %0001a703
00034a7a: goto %0001a727

0001a703:
0001a70b: R0 := 0
0001a711: #626 := 31:0[R1] + 1
0001a716: VF := extend:64[#626] <> extend:64[31:0[R1]] + 1
0001a71b: CF := pad:64[#626] <> pad:64[31:0[R1]] + 1
0001a71f: ZF := #626 = 0
0001a723: NF := 31:31[#626]
0001a729: when ZF <> 1 goto %0001a727
00034a7b: goto %0001a741

0001a741:
0001a744: R30 := 0x40E1D4
0001a746: call @__errno_location with return %0001a748

0001a748:
0001a74d: R0 := pad:64[mem[R0, el]:u32]
0001a754: R29 := mem[R31, el]:u64
0001a759: R30 := mem[R31 + 8, el]:u64
0001a75d: R31 := R31 + 0x20
0001a763: #627 := 31:0[R0] - 2
0001a768: VF := extend:64[#627] <> extend:64[31:0[R0]] - 2
0001a76d: CF := pad:64[#627] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0001a771: ZF := #627 = 0
0001a775: NF := 31:31[#627]
0001a77b: #628 := 31:0[R0] - 0xB
0001a77f: #629 := ZF <> 1
0001a785: VF := #629 & extend:64[#628] <> extend:64[31:0[R0]] - 0xB
0001a78b: CF := #629 & pad:64[#628] <> pad:64[31:0[R0]] + 0xFFFFFFF5
0001a790: ZF := #628 = 0 | ~#629
0001a795: NF := #629 & 31:31[#628]
0001a7a1: when ZF goto %0001a79a
0001a7a2: goto %0001a79d

0001a79d:
0001a79e: R0 := 1
0001a7a4: goto %0001a7a0

0001a79a:
0001a79b: R0 := 0
0001a7a3: goto %0001a7a0

0001a7a0:
0001a7a9: call R30 with noreturn

0001a727:
0001a731: R29 := mem[R31, el]:u64
0001a736: R30 := mem[R31 + 8, el]:u64
0001a73a: R31 := R31 + 0x20
0001a73f: call R30 with noreturn

00034a7c: sub so_connect(so_connect_result)
00034c6f: so_connect_result :: out u32 = low:32[R0]

00019871:
00019874: V0 := 0
0001987a: #552 := R31 - 0x70
00019880: mem := mem with [#552, el]:u64 <- R29
00019886: mem := mem with [#552 + 8, el]:u64 <- R30
0001988a: R31 := #552
00019890: R29 := R31
00019896: #553 := R31 + 0x10
0001989c: mem := mem with [#553, el]:u64 <- R19
000198a2: mem := mem with [#553 + 8, el]:u64 <- R20
000198a8: #554 := R31 + 0x40
000198ae: mem := mem with [#554, el]:u128 <- V0
000198b4: mem := mem with [#554 + 0x10, el]:u128 <- V0
000198bc: mem := mem with [R31 + 0x5E, el]:u128 <- V0
000198c2: when R0 = 0 goto %000198c0
00034a7d: goto %0001ac08

0001ac08:
0001ac0c: #643 := R31 + 0x20
0001ac12: mem := mem with [#643, el]:u64 <- R21
0001ac18: mem := mem with [#643 + 8, el]:u64 <- R22
0001ac1e: R21 := R0
0001ac23: R2 := 0
0001ac28: R1 := 1
0001ac2e: #644 := R31 + 0x30
0001ac34: mem := mem with [#644, el]:u64 <- R23
0001ac3a: mem := mem with [#644 + 8, el]:u64 <- R24
0001ac41: R0 := pad:64[mem[R21 + 4, el]:u32]
0001ac46: R24 := 0x430000
0001ac4b: R23 := 0x415000
0001ac51: R22 := R24 + 0x374
0001ac57: R23 := R23 + 0xE88
0001ac5c: R30 := 0x40DD78
0001ac5e: call @socket with return %0001ac60

0001ac60:
0001ac64: R19 := pad:64[31:0[R0]]
0001ac69: when 31:31[R0] goto %0001abda
00034a7e: goto %00019995

00019995:
0001999f: R0 := pad:64[mem[R22, el]:u32]
000199a5: when 31:0[R0] = 0 goto %000199a3
00034a7f: goto %0001ab57

0001ab57:
0001ab5c: R1 := mem[R21 + 0x18, el]:u64
0001ab62: R2 := R31 + 0x40
0001ab67: R3 := 0x2E
0001ab6d: R4 := R1 + 8
0001ab74: R0 := pad:64[mem[R1, el]:u16]
0001ab78: R1 := R1 + 4
0001ab7e: #640 := 31:0[R0] - 2
0001ab83: VF := extend:64[#640] <> extend:64[31:0[R0]] - 2
0001ab88: CF := pad:64[#640] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0001ab8c: ZF := #640 = 0
0001ab90: NF := 31:31[#640]
0001ab9e: when ZF <> 1 goto %0001ab96
0001ab9f: goto %0001ab9a

0001ab9a:
0001ab9b: R1 := R1
0001aba1: goto %0001ab9d

0001ab96:
0001ab97: R1 := R4
0001aba0: goto %0001ab9d

0001ab9d:
0001aba6: R30 := 0x40DDA8
0001aba8: call @inet_ntop with return %0001abaa

0001abaa:
0001abaf: R0 := mem[R21 + 0x18, el]:u64
0001abb5: R1 := R31 + 0x40
0001abbc: R2 := pad:64[mem[R0 + 2, el]:u16]
0001abc2: R0 := R23
0001abcb: R2 := pad:64[23:16[R2].31:24[R2].7:0[R2].15:8[R2]]
0001abd1: R2 := pad:64[15:0[R2]]
0001abd6: R30 := 0x40DDC4
0001abd8: call @printf with return %000199a3

000199a3:
000199ac: R0 := pad:64[31:0[R19]]
000199b1: R2 := 0
000199b6: R1 := 3
000199bb: R30 := 0x40DDD4
000199be: call @fcntl with return %000199c0

000199c0:
000199c4: R20 := pad:64[31:0[R0]]
000199c9: when 31:31[R0] goto %000198f9
00034a80: goto %000199cd

000198f9:
000198fe: R0 := pad:64[mem[R22, el]:u32]
00019904: when 31:0[R0] <> 0 goto %00019902
00034a81: goto %00019935

00019902:
0001990a: R30 := 0x40DEAC
0001990c: call @__errno_location with return %0001990e

0001990e:
00019913: R0 := pad:64[mem[R0, el]:u32]
00019918: R30 := 0x40DEB4
0001991a: call @strerror with return %0001991c

0001991c:
00019920: R1 := R0
00019925: R0 := 0x415000
0001992b: R0 := R0 + 0xEA0
00019930: R30 := 0x40DEC4
00019932: call @printf with return %00019934

00019934:
00019937: goto %00019935

00019935:
0001993c: R0 := pad:64[31:0[R19]]
00019941: R30 := 0x40DE2C
00019944: call @close with return %00019946

000199cd:
000199d2: R1 := mem[R21 + 0x18, el]:u64
000199d8: R0 := pad:64[31:0[R19]]
000199df: R2 := pad:64[mem[R21 + 0x10, el]:u32]
000199e4: R30 := 0x40DDEC
000199e7: call @connect with return %000199e9

000199e9:
000199ed: when 31:31[R0] goto %000199eb
00034a82: goto %00019a57

000199eb:
000199f5: R0 := pad:64[mem[R22, el]:u32]
000199fb: when 31:0[R0] <> 0 goto %000199f9
00034a83: goto %00019a41

000199f9:
00019a01: R30 := 0x40DE80
00019a03: call @__errno_location with return %00019a05

00019a05:
00019a0a: R0 := pad:64[mem[R0, el]:u32]
00019a0f: R30 := 0x40DE88
00019a11: call @strerror with return %00019a13

00019a13:
00019a17: R1 := R0
00019a1c: R0 := 0x415000
00019a22: R0 := R0 + 0xEC0
00019a27: R30 := 0x40DE98
00019a29: call @printf with return %00019a2b

00019a2b:
00019a2f: R0 := pad:64[31:0[R19]]
00019a34: R19 := 0xFFFFFFFF
00019a39: R30 := 0x40DEA4
00019a3b: call @close with return %00019a3d

00019a3d:
00019a3f: goto %00019946

00019a57:
00019a5c: R2 := pad:64[31:12[R20].pad:12[10:0[R20]]]
00019a62: R0 := pad:64[31:0[R19]]
00019a67: R1 := 4
00019a6c: R30 := 0x40DE00
00019a6e: call @fcntl with return %00019a70

00019a70:
00019a74: when 31:31[R0] goto %00019a72
00034a84: goto %0001994f

00019a72:
00019a7c: R0 := pad:64[mem[R22, el]:u32]
00019a81: when 31:0[R0] = 0 goto %00019a41
00034a85: goto %00019a85

00019a85:
00019a88: R30 := 0x40DED4
00019a8a: call @__errno_location with return %00019a8c

00019a8c:
00019a91: R0 := pad:64[mem[R0, el]:u32]
00019a96: R30 := 0x40DEDC
00019a98: call @strerror with return %00019a9a

00019a9a:
00019a9e: R1 := R0
00019aa3: R0 := 0x415000
00019aa9: R0 := R0 + 0xED0
00019aae: R30 := 0x40DEEC
00019ab0: call @printf with return %00019ab2

00019ab2:
00019ab4: goto %00019a41

00019a41:
00019a45: R0 := pad:64[31:0[R19]]
00019a4a: R19 := 0xFFFFFFFF
00019a4f: R30 := 0x40DE78
00019a51: call @close with return %00019a53

00019a53:
00019a55: goto %00019946

00019946:
0001994b: R21 := mem[R21 + 0x28, el]:u64
00019951: when R21 = 0 goto %0001994f
00034a86: goto %00019974

00019974:
00019979: R0 := pad:64[mem[R21 + 4, el]:u32]
0001997e: R2 := 0
00019983: R1 := 1
00019988: R30 := 0x40DE44
0001998b: call @socket with return %0001998d

0001998d:
00019991: R19 := pad:64[31:0[R0]]
00019997: when ~31:31[R0] goto %00019995
00034a87: goto %0001abda

0001abda:
0001abdf: R0 := pad:64[mem[R24 + 0x374, el]:u32]
0001abe4: when 31:0[R0] <> 0 goto %00019ab6
00034a88: goto %0001abe8

00019ab6:
00019ab9: R30 := 0x40DEF4
00019abb: call @__errno_location with return %00019abd

00019abd:
00019ac2: R0 := pad:64[mem[R0, el]:u32]
00019ac7: R19 := 0xFFFFFFFF
00019acc: R30 := 0x40DF00
00019ace: call @strerror with return %00019ad0

00019ad0:
00019ad4: R1 := R0
00019ad9: R0 := 0x415000
00019adf: R0 := R0 + 0xE70
00019ae4: R30 := 0x40DF10
00019ae6: call @printf with return %00019ae8

00019ae8:
00019aec: #558 := R31 + 0x20
00019af1: R21 := mem[#558, el]:u64
00019af6: R22 := mem[#558 + 8, el]:u64
00019afc: #559 := R31 + 0x30
00019b01: R23 := mem[#559, el]:u64
00019b06: R24 := mem[#559 + 8, el]:u64
00019b0a: goto %000198cb

0001abe8:
0001abec: #641 := R31 + 0x20
0001abf1: R21 := mem[#641, el]:u64
0001abf6: R22 := mem[#641 + 8, el]:u64
0001abfc: #642 := R31 + 0x30
0001ac01: R23 := mem[#642, el]:u64
0001ac06: R24 := mem[#642 + 8, el]:u64
00034a89: goto %000198c0

000198c0:
000198c8: R19 := 0xFFFFFFFF
000198cd: goto %000198cb

0001994f:
00019958: #556 := R31 + 0x20
0001995d: R21 := mem[#556, el]:u64
00019962: R22 := mem[#556 + 8, el]:u64
00019968: #557 := R31 + 0x30
0001996d: R23 := mem[#557, el]:u64
00019972: R24 := mem[#557 + 8, el]:u64
00034a8a: goto %000198cb

000198cb:
000198d2: R0 := pad:64[31:0[R19]]
000198d8: #555 := R31 + 0x10
000198dd: R19 := mem[#555, el]:u64
000198e2: R20 := mem[#555 + 8, el]:u64
000198e9: R29 := mem[R31, el]:u64
000198ee: R30 := mem[R31 + 8, el]:u64
000198f2: R31 := R31 + 0x70
000198f7: call R30 with noreturn

00034a8b: sub so_dataready(so_dataready_result)
00034c70: so_dataready_result :: out u32 = low:32[R0]

00019bdb:
00019bdf: #565 := R31 - 0x20
00019be5: mem := mem with [#565, el]:u64 <- R29
00019beb: mem := mem with [#565 + 8, el]:u64 <- R30
00019bef: R31 := #565
00019bf4: R3 := 0x42
00019bf9: R2 := 1
00019bff: R29 := R31
00019c05: R1 := R31 + 0x1F
00019c0a: R30 := 0x40E17C
00019c0c: call @recv with return %00019c0e

00019c0e:
00019c11: VF := 0
00019c14: CF := 1
00019c18: ZF := 31:0[R0] = 0
00019c1c: NF := 31:31[R0]
00019c2a: when ~(NF = VF & ~ZF) goto %00019c23
00019c2b: goto %00019c26

00019c26:
00019c27: R0 := 1
00019c2d: goto %00019c29

00019c23:
00019c24: R0 := 0
00019c2c: goto %00019c29

00019c29:
00019c34: R29 := mem[R31, el]:u64
00019c39: R30 := mem[R31 + 8, el]:u64
00019c3d: R31 := R31 + 0x20
00019c42: call R30 with noreturn

00034a8c: sub so_listen(so_listen_result)
00034c71: so_listen_result :: out u32 = low:32[R0]

00019b0e:
00019b11: V0 := 0
00019b17: #560 := R31 - 0xA0
00019b1d: mem := mem with [#560, el]:u64 <- R29
00019b23: mem := mem with [#560 + 8, el]:u64 <- R30
00019b27: R31 := #560
00019b2d: R29 := R31
00019b33: #561 := R31 + 0x30
00019b39: mem := mem with [#561, el]:u64 <- R23
00019b3f: mem := mem with [#561 + 8, el]:u64 <- R24
00019b45: #562 := R31 + 0x70
00019b4b: mem := mem with [#562, el]:u128 <- V0
00019b51: mem := mem with [#562 + 0x10, el]:u128 <- V0
00019b59: mem := mem with [R31 + 0x8E, el]:u128 <- V0
00019b5f: when R1 = 0 goto %00019b5d
00034a8d: goto %0001a7ab

00019b5d:
00019b65: R23 := 0
00019b6b: R0 := pad:64[31:0[R23]]
00019b71: #563 := R31 + 0x30
00019b76: R23 := mem[#563, el]:u64
00019b7b: R24 := mem[#563 + 8, el]:u64
00019b82: R29 := mem[R31, el]:u64
00019b87: R30 := mem[R31 + 8, el]:u64
00019b8b: R31 := R31 + 0xA0
00019b90: call R30 with noreturn

0001a7ab:
0001a7af: R24 := R2
0001a7b4: R23 := 0
0001a7ba: #630 := R31 + 0x10
0001a7c0: mem := mem with [#630, el]:u64 <- R19
0001a7c6: mem := mem with [#630 + 8, el]:u64 <- R20
0001a7cc: R19 := R1
0001a7d2: #631 := R31 + 0x20
0001a7d8: mem := mem with [#631, el]:u64 <- R21
0001a7de: mem := mem with [#631 + 8, el]:u64 <- R22
0001a7e4: R21 := R0
0001a7e9: R22 := 1
0001a7ef: #632 := R31 + 0x40
0001a7f5: mem := mem with [#632, el]:u64 <- R25
0001a7fb: mem := mem with [#632 + 8, el]:u64 <- R26
0001a800: R25 := 0x415000
0001a805: R26 := 0x415000
0001a80b: R25 := R25 + 0xFB8
0001a811: R26 := R26 + 0xF90
0001a819: mem := mem with [R31 + 0x50, el]:u64 <- R27
0001a81e: goto %0001a81c

0001a81c:
0001a824: R0 := pad:64[mem[R19 + 4, el]:u32]
0001a829: R2 := 0
0001a82e: R1 := 1
0001a833: R30 := 0x40E02C
0001a835: call @socket with return %0001a837

0001a837:
0001a83b: R20 := pad:64[31:0[R0]]
0001a841: when ~31:31[R0] goto %0001a83f
00034a8e: goto %0001ab44

0001ab44:
0001ab47: R0 := 0x430000
0001ab4e: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001ab53: when 31:0[R0] <> 0 goto %0001aa0f
00034a8f: goto %0001a98f

0001aa0f:
0001aa12: R30 := 0x40E114
0001aa14: call @__errno_location with return %0001aa16

0001aa16:
0001aa1b: R0 := pad:64[mem[R0, el]:u32]
0001aa20: R30 := 0x40E11C
0001aa22: call @strerror with return %0001aa24

0001aa24:
0001aa28: R1 := R0
0001aa2d: R0 := 0x415000
0001aa33: R0 := R0 + 0xEF0
0001aa38: R30 := 0x40E12C
0001aa3a: call @printf with return %0001aa3c

0001aa3c:
0001aa3e: goto %0001a98f

0001a83f:
0001a848: R3 := R31 + 0x6C
0001a84d: R4 := 4
0001a852: R2 := 2
0001a857: R1 := 1
0001a85f: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R22]
0001a864: R30 := 0x40DF8C
0001a867: call @setsockopt with return %0001a869

0001a869:
0001a86d: when 31:0[R0] <> 0 goto %0001a86b
00034a90: goto %0001ab1e

0001a86b:
0001a873: R30 := 0x40E074
0001a875: call @__errno_location with return %0001a877

0001a877:
0001a87c: R0 := pad:64[mem[R0, el]:u32]
0001a881: R30 := 0x40E07C
0001a883: call @strerror with return %0001a885

0001a885:
0001a889: R2 := R0
0001a88e: R1 := 0x415000
0001a893: R0 := 4
0001a899: R1 := R1 + 0xF10
0001a89e: R30 := 0x40E090
0001a8a0: call @syslog with return %0001a8a2

0001a8a2:
0001a8a7: R0 := pad:64[mem[R19 + 4, el]:u32]
0001a8ad: #633 := 31:0[R0] - 0xA
0001a8b2: VF := extend:64[#633] <> extend:64[31:0[R0]] - 0xA
0001a8b7: CF := pad:64[#633] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0001a8bb: ZF := #633 = 0
0001a8bf: NF := 31:31[#633]
0001a8c5: when ZF <> 1 goto %0001a8c3
00034a91: goto %0001aab7

0001ab1e:
0001ab23: R0 := pad:64[mem[R19 + 4, el]:u32]
0001ab29: #639 := 31:0[R0] - 0xA
0001ab2e: VF := extend:64[#639] <> extend:64[31:0[R0]] - 0xA
0001ab33: CF := pad:64[#639] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0001ab37: ZF := #639 = 0
0001ab3b: NF := 31:31[#639]
0001ab40: when ZF goto %0001aab7
00034a92: goto %0001a8c3

0001aab7:
0001aabb: R3 := R31 + 0x6C
0001aac1: R0 := pad:64[31:0[R20]]
0001aac6: R4 := 4
0001aacb: R2 := 0x1A
0001aad0: R1 := 0x29
0001aad8: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R22]
0001aadd: R30 := 0x40E0B8
0001aadf: call @setsockopt with return %0001aae1

0001aae1:
0001aae4: when 31:0[R0] = 0 goto %0001a8c3
00034a93: goto %0001aae8

0001aae8:
0001aaeb: R30 := 0x40E0C0
0001aaed: call @__errno_location with return %0001aaef

0001aaef:
0001aaf4: R0 := pad:64[mem[R0, el]:u32]
0001aaf9: R30 := 0x40E0C8
0001aafb: call @strerror with return %0001aafd

0001aafd:
0001ab01: R2 := R0
0001ab06: R1 := 0x415000
0001ab0b: R0 := 4
0001ab11: R1 := R1 + 0xF50
0001ab16: R30 := 0x40E0DC
0001ab18: call @syslog with return %0001ab1a

0001ab1a:
0001ab1c: goto %0001a8c3

0001a8c3:
0001a8cd: R1 := mem[R19 + 0x18, el]:u64
0001a8d3: R2 := R31 + 0x70
0001a8d8: R3 := 0x2E
0001a8de: R4 := R1 + 8
0001a8e5: R0 := pad:64[mem[R1, el]:u16]
0001a8e9: R1 := R1 + 4
0001a8ef: #634 := 31:0[R0] - 2
0001a8f4: VF := extend:64[#634] <> extend:64[31:0[R0]] - 2
0001a8f9: CF := pad:64[#634] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0001a8fd: ZF := #634 = 0
0001a901: NF := 31:31[#634]
0001a90f: when ZF <> 1 goto %0001a907
0001a910: goto %0001a90b

0001a90b:
0001a90c: R1 := R1
0001a912: goto %0001a90e

0001a907:
0001a908: R1 := R4
0001a911: goto %0001a90e

0001a90e:
0001a917: R30 := 0x40DFBC
0001a91a: call @inet_ntop with return %0001a91c

0001a91c:
0001a921: R1 := mem[R19 + 0x18, el]:u64
0001a927: R0 := pad:64[31:0[R20]]
0001a92e: R2 := pad:64[mem[R19 + 0x10, el]:u32]
0001a935: R27 := pad:64[mem[R1 + 2, el]:u16]
0001a93a: R30 := 0x40DFD0
0001a93d: call @bind with return %0001a93f

0001a93f:
0001a943: when 31:0[R0] <> 0 goto %0001a941
00034a94: goto %0001aa40

0001a941:
0001a949: R30 := 0x40E0E4
0001a94b: call @__errno_location with return %0001a94d

0001a94d:
0001a952: R0 := pad:64[mem[R0, el]:u32]
0001a95b: R27 := pad:64[23:16[R27].31:24[R27].7:0[R27].15:8[R27]]
0001a961: R27 := pad:64[15:0[R27]]
0001a966: R30 := 0x40E0F4
0001a968: call @strerror with return %0001a96a

0001a96a:
0001a96e: R4 := R0
0001a974: R3 := pad:64[31:0[R27]]
0001a97a: R2 := R31 + 0x70
0001a980: R1 := R26
0001a985: R0 := 3
0001a98a: R30 := 0x40E10C
0001a98c: call @syslog with return %0001a98e

0001a98e:
0001a991: goto %0001a98f

0001aa40:
0001aa44: R0 := pad:64[31:0[R20]]
0001aa49: R1 := 0x1000
0001aa4e: R30 := 0x40DFE0
0001aa51: call @listen with return %0001aa53

0001aa53:
0001aa56: when 31:0[R0] <> 0 goto %0001a98f
00034a95: goto %0001aa5a

0001a98f:
0001a996: R0 := pad:64[31:0[R20]]
0001a99b: R30 := 0x40E048
0001a99d: call @close with return %0001a99f

0001a99f:
0001a9a4: R19 := mem[R19 + 0x28, el]:u64
0001a9a9: when R19 <> 0 goto %0001a81c
00034a96: goto %0001a9ad

0001aa5a:
0001aa5f: R0 := mem[R21, el]:u64
0001aa65: R1 := extend:64[31:0[R20]]
0001aa6b: R2 := R24
0001aa71: R23 := pad:64[31:0[R23] + 1]
0001aa76: R30 := 0x40DFF8
0001aa78: call @plist_add with return %0001aa7a

0001aa7a:
0001aa80: mem := mem with [R21, el]:u64 <- R0
0001aa89: R3 := pad:64[23:16[R27].31:24[R27].7:0[R27].15:8[R27]]
0001aa8f: R2 := R31 + 0x70
0001aa95: R3 := pad:64[15:0[R3]]
0001aa9b: R1 := R25
0001aaa0: R0 := 6
0001aaa5: R30 := 0x40E014
0001aaa7: call @syslog with return %0001aaa9

0001aaa9:
0001aaae: R19 := mem[R19 + 0x28, el]:u64
0001aab3: when R19 = 0 goto %0001a9ad
00034a97: goto %0001a81c

0001a9ad:
0001a9b1: #635 := R31 + 0x10
0001a9b6: R19 := mem[#635, el]:u64
0001a9bb: R20 := mem[#635 + 8, el]:u64
0001a9c1: R0 := pad:64[31:0[R23]]
0001a9c7: #636 := R31 + 0x20
0001a9cc: R21 := mem[#636, el]:u64
0001a9d1: R22 := mem[#636 + 8, el]:u64
0001a9d7: #637 := R31 + 0x30
0001a9dc: R23 := mem[#637, el]:u64
0001a9e1: R24 := mem[#637 + 8, el]:u64
0001a9e7: #638 := R31 + 0x40
0001a9ec: R25 := mem[#638, el]:u64
0001a9f1: R26 := mem[#638 + 8, el]:u64
0001a9f8: R27 := mem[R31 + 0x50, el]:u64
0001a9ff: R29 := mem[R31, el]:u64
0001aa04: R30 := mem[R31 + 8, el]:u64
0001aa08: R31 := R31 + 0xA0
0001aa0d: call R30 with noreturn

00034a98: sub so_recvln(so_recvln_result)
00034c72: so_recvln_result :: out u32 = low:32[R0]

00019c6f:
00019c73: #567 := R31 - 0x60
00019c79: mem := mem with [#567, el]:u64 <- R29
00019c7f: mem := mem with [#567 + 8, el]:u64 <- R30
00019c83: R31 := #567
00019c89: R29 := R31
00019c8f: #568 := R31 + 0x20
00019c95: mem := mem with [#568, el]:u64 <- R21
00019c9b: mem := mem with [#568 + 8, el]:u64 <- R22
00019ca1: R22 := pad:64[31:0[R0]]
00019ca8: R0 := pad:64[mem[R2, el]:u32]
00019cae: #569 := R31 + 0x10
00019cb4: mem := mem with [#569, el]:u64 <- R19
00019cba: mem := mem with [#569 + 8, el]:u64 <- R20
00019cc0: R21 := R1
00019cc8: mem := mem with [R31 + 0x40, el]:u64 <- R25
00019ccf: mem := mem with [R31 + 0x5F] <- 0
00019cd5: #570 := 31:0[R0] - 1
00019cda: VF := extend:64[#570] <> extend:64[31:0[R0]] - 1
00019cdf: CF := pad:64[#570] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00019ce3: ZF := #570 = 0
00019ce7: NF := 31:31[#570]
00019cef: when ~(NF = VF & ~ZF) goto %00019ced
00034a99: goto %0001a4cd

00019ced:
00019cf5: R19 := 0
00019cfa: R25 := 1
00019cff: goto %00019cfd

0001a4cd:
0001a4d1: R20 := R2
0001a4d6: R19 := 0
0001a4dc: #613 := R31 + 0x30
0001a4e2: mem := mem with [#613, el]:u64 <- R23
0001a4e8: mem := mem with [#613 + 8, el]:u64 <- R24
0001a4ed: R23 := 0x430000
0001a4f3: R23 := R23 + 0x374
0001a4f8: goto %0001a4f6

0001a4f6:
0001a4fd: R1 := R31 + 0x5F
0001a503: R0 := pad:64[31:0[R22]]
0001a508: R2 := 1
0001a50e: R24 := pad:64[31:0[R19] + 1]
0001a513: R30 := 0x40E264
0001a516: call @read with return %0001a518

0001a518:
0001a51c: R25 := pad:64[31:0[R0]]
0001a521: VF := 0
0001a524: CF := 1
0001a528: ZF := 31:0[R0] = 0
0001a52c: NF := 31:31[R0]
0001a534: when ~(NF = VF & ~ZF) goto %0001a532
00034a9a: goto %0001a547

0001a547:
0001a54c: R1 := mem[R21, el]:u64
0001a553: R0 := pad:64[mem[R31 + 0x5F]]
0001a55c: mem := mem with [R1 + R19] <- 7:0[R0]
0001a562: #615 := 31:0[R0] - 0xA
0001a567: VF := extend:64[#615] <> extend:64[31:0[R0]] - 0xA
0001a56c: CF := pad:64[#615] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0001a570: ZF := #615 = 0
0001a574: NF := 31:31[#615]
0001a57b: R1 := pad:64[mem[R20, el]:u32]
0001a581: R3 := pad:64[31:0[R1] - 1]
0001a587: #616 := ~31:0[R24]
0001a58c: #617 := 31:0[R3] + ~31:0[R24]
0001a590: #618 := ZF <> 1
0001a597: VF := #618 & extend:64[#617 + 1] <> extend:64[31:0[R3]] +
          extend:64[#616] + 1
0001a59e: CF := #618 & pad:64[#617 + 1] <> pad:64[31:0[R3]] + pad:64[#616] +
          1
0001a5a3: ZF := #618 & #617 + 1 = 0
0001a5a8: NF := #618 & 31:31[#617 + 1]
0001a5ae: when ZF <> 1 goto %0001a5ac
00034a9b: goto %0001a6b5

0001a6b5:
0001a6ba: R0 := pad:64[mem[R23, el]:u32]
0001a6bf: when 31:0[R0] <> 0 goto %0001a5f9
00034a9c: goto %0001a61f

0001a5f9:
0001a5fd: R2 := pad:64[30:0[R1].0]
0001a602: R0 := 0x415000
0001a608: R1 := pad:64[31:0[R22]]
0001a60e: R0 := R0 + 0xFD8
0001a613: R30 := 0x40E2E8
0001a615: call @printf with return %0001a617

0001a617:
0001a61c: R1 := pad:64[mem[R20, el]:u32]
0001a621: goto %0001a61f

0001a61f:
0001a627: R0 := mem[R21, el]:u64
0001a62d: R1 := pad:64[30:0[R1].0]
0001a635: mem := mem with [R20, el]:u32 <- 31:0[R1]
0001a63b: R1 := extend:64[31:0[R1]]
0001a640: R30 := 0x40E2AC
0001a643: call @realloc with return %0001a645

0001a645:
0001a648: when R0 = 0 goto %00019d51
00034a9d: goto %0001a64c

00019d51:
00019d55: #573 := R31 + 0x30
00019d5a: R23 := mem[#573, el]:u64
00019d5f: R24 := mem[#573 + 8, el]:u64
00019d64: R25 := 0xFFFFFFFF
00019d68: goto %00019d0f

0001a64c:
0001a651: R3 := pad:64[mem[R20, el]:u32]
0001a657: R19 := R19 + 1
0001a65f: mem := mem with [R21, el]:u64 <- R0
0001a665: R3 := pad:64[31:0[R3] - 1]
0001a66b: #622 := ~31:0[R19]
0001a670: #623 := 31:0[R3] + ~31:0[R19]
0001a676: VF := extend:64[#623 + 1] <> extend:64[31:0[R3]] + extend:64[#622]
          + 1
0001a67c: CF := pad:64[#623 + 1] <> pad:64[31:0[R3]] + pad:64[#622] + 1
0001a680: ZF := #623 + 1 = 0
0001a684: NF := 31:31[#623 + 1]
0001a68c: when NF = VF & ~ZF goto %0001a68a
00034a9e: goto %0001a5da

0001a5ac:
0001a5b5: R19 := R19 + 1
0001a5bb: #619 := ~31:0[R19]
0001a5c0: #620 := 31:0[R3] + ~31:0[R19]
0001a5c6: VF := extend:64[#620 + 1] <> extend:64[31:0[R3]] + extend:64[#619]
          + 1
0001a5cc: CF := pad:64[#620 + 1] <> pad:64[31:0[R3]] + pad:64[#619] + 1
0001a5d0: ZF := #620 + 1 = 0
0001a5d4: NF := 31:31[#620 + 1]
0001a5dc: when ~(NF = VF & ~ZF) goto %0001a5da
00034a9f: goto %0001a68a

0001a5da:
0001a5e3: R19 := extend:64[31:0[R24]]
0001a5e9: #621 := R31 + 0x30
0001a5ee: R23 := mem[#621, el]:u64
0001a5f3: R24 := mem[#621 + 8, el]:u64
0001a5f7: goto %00019cfd

0001a68a:
0001a694: R0 := pad:64[mem[R31 + 0x5F]]
0001a69a: #624 := 31:0[R0] - 0xA
0001a69f: VF := extend:64[#624] <> extend:64[31:0[R0]] - 0xA
0001a6a4: CF := pad:64[#624] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0001a6a8: ZF := #624 = 0
0001a6ac: NF := 31:31[#624]
0001a6b1: when ZF goto %0001a532
00034aa0: goto %0001a4f6

0001a532:
0001a53b: #614 := R31 + 0x30
0001a540: R23 := mem[#614, el]:u64
0001a545: R24 := mem[#614 + 8, el]:u64
00034aa1: goto %00019cfd

00019cfd:
00019d05: R0 := mem[R21, el]:u64
00019d0d: mem := mem with [R0 + R19] <- 0
00034aa2: goto %00019d0f

00019d0f:
00019d13: #571 := R31 + 0x10
00019d18: R19 := mem[#571, el]:u64
00019d1d: R20 := mem[#571 + 8, el]:u64
00019d23: R0 := pad:64[31:0[R25]]
00019d29: #572 := R31 + 0x20
00019d2e: R21 := mem[#572, el]:u64
00019d33: R22 := mem[#572 + 8, el]:u64
00019d3a: R25 := mem[R31 + 0x40, el]:u64
00019d41: R29 := mem[R31, el]:u64
00019d46: R30 := mem[R31 + 8, el]:u64
00019d4a: R31 := R31 + 0x60
00019d4f: call R30 with noreturn

00034aa3: sub so_recvtest(so_recvtest_result)
00034c73: so_recvtest_result :: out u32 = low:32[R0]

00019b92:
00019b96: #564 := R31 - 0x20
00019b9c: mem := mem with [#564, el]:u64 <- R29
00019ba2: mem := mem with [#564 + 8, el]:u64 <- R30
00019ba6: R31 := #564
00019bab: R3 := 0x42
00019bb0: R2 := 1
00019bb6: R29 := R31
00019bbc: R1 := R31 + 0x1F
00019bc1: R30 := 0x40E15C
00019bc4: call @recv with return %00019bc6

00019bc6:
00019bcb: R29 := mem[R31, el]:u64
00019bd0: R30 := mem[R31 + 8, el]:u64
00019bd4: R31 := R31 + 0x20
00019bd9: call R30 with noreturn

00034aa4: sub so_resolv(so_resolv_result)
00034c74: so_resolv_result :: out u32 = low:32[R0]

00019645:
0001964c: #540 := R31 - 0xA0
00019652: mem := mem with [#540, el]:u64 <- R29
00019658: mem := mem with [#540 + 8, el]:u64 <- R30
0001965c: R31 := #540
00019661: R4 := 1
00019667: R3 := pad:64[31:0[R2]]
0001966d: R29 := R31
00019673: #541 := R31 + 0x70
00019678: mem := mem with [#541, el]:u64 <- 0
0001967d: mem := mem with [#541 + 8, el]:u64 <- 0
00019682: R2 := 0x413000
00019688: R2 := R2 + 0xCB8
0001968e: #542 := R31 + 0x10
00019694: mem := mem with [#542, el]:u64 <- R19
0001969a: mem := mem with [#542 + 8, el]:u64 <- R20
000196a0: R20 := R0
000196a6: R19 := R1
000196ac: R0 := R31 + 0x38
000196b1: R1 := 6
000196b9: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R4]
000196bf: #543 := R31 + 0x80
000196c4: mem := mem with [#543, el]:u64 <- 0
000196c9: mem := mem with [#543 + 8, el]:u64 <- 0
000196cf: #544 := R31 + 0x90
000196d4: mem := mem with [#544, el]:u64 <- 0
000196d9: mem := mem with [#544 + 8, el]:u64 <- 0
000196de: R30 := 0x40DBE0
000196e0: call @snprintf with return %000196e2

000196e2:
000196e6: R3 := R20
000196ec: R2 := R31 + 0x70
000196f2: R1 := R31 + 0x38
000196f8: R0 := R19
000196fd: R30 := 0x40DBF4
00019700: call @getaddrinfo with return %00019702

00019702:
00019706: when 31:0[R0] <> 0 goto %00019704
00034aa5: goto %0001ac7a

00019704:
0001970c: R1 := 0x430000
00019713: R1 := pad:64[mem[R1 + 0x374, el]:u32]
00019719: when 31:0[R1] <> 0 goto %00019717
00034aa6: goto %0001ac75

00019717:
00019722: mem := mem with [R31 + 0x20, el]:u64 <- R21
00019728: R21 := pad:64[31:0[R0]]
0001972d: R30 := 0x40DCA0
00019730: call @gai_strerror with return %00019732

00019732:
00019736: R2 := R0
0001973c: R3 := pad:64[31:0[R21]]
00019742: R1 := R19
00019747: R0 := 0x415000
0001974d: R0 := R0 + 0xE30
00019752: R30 := 0x40DCB8
00019754: call @printf with return %00019756

00019756:
0001975b: R21 := mem[R31 + 0x20, el]:u64
00019760: R0 := 0
00019765: goto %00019763

0001ac75:
0001ac78: R0 := 0
00034aa7: goto %00019763

00019763:
0001976a: #545 := R31 + 0x10
0001976f: R19 := mem[#545, el]:u64
00019774: R20 := mem[#545 + 8, el]:u64
0001977b: R29 := mem[R31, el]:u64
00019780: R30 := mem[R31 + 8, el]:u64
00019784: R31 := R31 + 0xA0
00019789: call R30 with noreturn

0001ac7a:
0001ac7d: R0 := 0x430000
0001ac84: R0 := pad:64[mem[R0 + 0x374, el]:u32]
0001ac8a: when 31:0[R0] <> 0 goto %0001ac88
00034aa8: goto %0001accd

0001ac88:
0001ac90: V0 := 0
0001ac96: R1 := R19
0001ac9b: R0 := 0x415000
0001aca1: R0 := R0 + 0xE50
0001aca7: #645 := R31 + 0x40
0001acad: mem := mem with [#645, el]:u128 <- V0
0001acb3: mem := mem with [#645 + 0x10, el]:u128 <- V0
0001acbb: mem := mem with [R31 + 0x5E, el]:u128 <- V0
0001acc0: R30 := 0x40DC30
0001acc2: call @printf with return %0001acc4

0001acc4:
0001acc9: R19 := mem[R20, el]:u64
0001accf: when R19 = 0 goto %0001accd
00034aa9: goto %0001acfc

0001acfc:
0001acff: R20 := 0x415000
0001ad05: R20 := R20 + 0xE60
00034aaa: goto %0001ad07

0001ad07:
0001ad0c: R1 := mem[R19 + 0x18, el]:u64
0001ad12: R2 := R31 + 0x40
0001ad17: R3 := 0x2E
0001ad1d: R4 := R1 + 8
0001ad24: R0 := pad:64[mem[R1, el]:u16]
0001ad28: R1 := R1 + 4
0001ad2e: #647 := 31:0[R0] - 2
0001ad33: VF := extend:64[#647] <> extend:64[31:0[R0]] - 2
0001ad38: CF := pad:64[#647] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0001ad3c: ZF := #647 = 0
0001ad40: NF := 31:31[#647]
0001ad4e: when ZF <> 1 goto %0001ad46
0001ad4f: goto %0001ad4a

0001ad4a:
0001ad4b: R1 := R1
0001ad51: goto %0001ad4d

0001ad46:
0001ad47: R1 := R4
0001ad50: goto %0001ad4d

0001ad4d:
0001ad56: R30 := 0x40DC60
0001ad58: call @inet_ntop with return %0001ad5a

0001ad5a:
0001ad5e: R1 := R31 + 0x40
0001ad64: R0 := R20
0001ad69: R30 := 0x40DC6C
0001ad6b: call @printf with return %0001ad6d

0001ad6d:
0001ad72: R19 := mem[R19 + 0x28, el]:u64
0001ad77: when R19 <> 0 goto %0001ad07
00034aab: goto %0001ad7b

0001ad7b:
0001ad7d: goto %0001accd

0001accd:
0001acd6: #646 := R31 + 0x10
0001acdb: R19 := mem[#646, el]:u64
0001ace0: R20 := mem[#646 + 8, el]:u64
0001ace5: R0 := 1
0001acec: R29 := mem[R31, el]:u64
0001acf1: R30 := mem[R31 + 8, el]:u64
0001acf5: R31 := R31 + 0xA0
0001acfa: call R30 with noreturn

00034aac: sub so_resolv_wildcard(so_resolv_wildcard_result)
00034c75: so_resolv_wildcard_result :: out u32 = low:32[R0]

0001978b:
0001978f: #546 := R31 - 0x60
00019795: mem := mem with [#546, el]:u64 <- R29
0001979b: mem := mem with [#546 + 8, el]:u64 <- R30
0001979f: R31 := #546
000197a5: R3 := pad:64[31:0[R1]]
000197aa: R1 := 6
000197b0: R29 := R31
000197b6: #547 := R31 + 0x10
000197bc: mem := mem with [#547, el]:u64 <- R19
000197c2: mem := mem with [#547 + 8, el]:u64 <- R20
000197c8: R19 := R0
000197ce: R20 := pad:64[31:0[R2]]
000197d4: R0 := R31 + 0x28
000197d9: R2 := 0x413000
000197df: R2 := R2 + 0xCB8
000197e4: R30 := 0x40DCF0
000197e6: call @snprintf with return %000197e8

000197e8:
000197ec: #548 := R31 + 0x30
000197f1: mem := mem with [#548, el]:u64 <- 0
000197f6: mem := mem with [#548 + 8, el]:u64 <- 0
000197fb: R0 := 1
00019803: mem := mem with [R31 + 0x38, el]:u32 <- 31:0[R0]
00019809: #549 := R31 + 0x40
0001980e: mem := mem with [#549, el]:u64 <- 0
00019813: mem := mem with [#549 + 8, el]:u64 <- 0
00019819: #550 := R31 + 0x50
0001981e: mem := mem with [#550, el]:u64 <- 0
00019823: mem := mem with [#550 + 8, el]:u64 <- 0
00019829: when 31:0[R20] = 0 goto %00019827
00034aad: goto %0001ac6d

0001ac6d:
0001ac73: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00034aae: goto %00019827

00019827:
00019830: R3 := R19
00019836: R2 := R31 + 0x30
0001983c: R1 := R31 + 0x28
00019841: R0 := 0
00019846: R30 := 0x40DD20
00019848: call @getaddrinfo with return %0001984a

0001984a:
0001984e: #551 := R31 + 0x10
00019853: R19 := mem[#551, el]:u64
00019858: R20 := mem[#551 + 8, el]:u64
0001985f: R29 := mem[R31, el]:u64
00019864: R30 := mem[R31 + 8, el]:u64
00019868: R31 := R31 + 0x60
0001986d: call R30 with noreturn

00034aaf: sub socket(socket_domain, socket_type, socket_protocol, socket_result)
00034c76: socket_domain :: in u32 = low:32[R0]
00034c77: socket_type :: in u32 = low:32[R1]
00034c78: socket_protocol :: in u32 = low:32[R2]
00034c79: socket_result :: out u32 = low:32[R0]

00019989:
00030116: R16 := 0x430000
0003011d: R17 := mem[R16 + 0x250, el]:u64
00030123: R16 := R16 + 0x250
00030128: call R17 with noreturn

00034ab0: sub socks5_thread(socks5_thread_result)
00034c7a: socks5_thread_result :: out u32 = low:32[R0]

00027961:
00027965: #1234 := R31 - 0xB0
0002796b: mem := mem with [#1234, el]:u64 <- R29
00027971: mem := mem with [#1234 + 8, el]:u64 <- R30
00027975: R31 := #1234
0002797b: R29 := R31
00027981: #1235 := R31 + 0x10
00027987: mem := mem with [#1235, el]:u64 <- R19
0002798d: mem := mem with [#1235 + 8, el]:u64 <- R20
00027992: R20 := 0x430000
00027998: R20 := R20 + 0x370
0002799e: R19 := R0
000279a4: #1236 := R31 + 0x20
000279aa: mem := mem with [#1236, el]:u64 <- R21
000279b0: mem := mem with [#1236 + 8, el]:u64 <- R22
000279b7: R0 := mem[R20 + 0x50, el]:u64
000279bd: #1237 := R31 + 0x30
000279c3: mem := mem with [#1237, el]:u64 <- R23
000279c9: mem := mem with [#1237 + 8, el]:u64 <- R24
000279cf: #1238 := R31 + 0x40
000279d5: mem := mem with [#1238, el]:u64 <- R25
000279db: mem := mem with [#1238 + 8, el]:u64 <- R26
000279e0: R30 := 0x40A39C
000279e2: call @hlist_count with return %000279e4

000279e4:
000279e7: V0 := 0
000279ed: R24 := pad:64[31:0[R0]]
000279f4: R0 := pad:64[mem[R19 + 0x10, el]:u16]
000279fa: R2 := R19 + 0x18
00027a00: R1 := R19 + 0x14
00027a05: R3 := 0x2E
00027a0b: #1239 := 31:0[R0] - 2
00027a10: VF := extend:64[#1239] <> extend:64[31:0[R0]] - 2
00027a15: CF := pad:64[#1239] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00027a19: ZF := #1239 = 0
00027a1d: NF := 31:31[#1239]
00027a24: R23 := pad:64[mem[R19, el]:u32]
00027a32: when ZF <> 1 goto %00027a2a
00027a33: goto %00027a2e

00027a2e:
00027a2f: R1 := R1
00027a35: goto %00027a31

00027a2a:
00027a2b: R1 := R2
00027a34: goto %00027a31

00027a31:
00027a3b: R2 := R31 + 0x80
00027a41: #1240 := R31 + 0x80
00027a47: mem := mem with [#1240, el]:u128 <- V0
00027a4d: mem := mem with [#1240 + 0x10, el]:u128 <- V0
00027a55: mem := mem with [R31 + 0x9E, el]:u128 <- V0
00027a5a: R30 := 0x40A3D0
00027a5c: call @inet_ntop with return %00027a5e

00027a5e:
00027a62: R0 := R19
00027a67: R30 := 0x40A3D8
00027a69: call @free with return %00027a6b

00027a6b:
00027a6e: R0 := 0xA
00027a73: R30 := 0x40A3E0
00027a75: call @zmalloc with return %00027a77

00027a77:
00027a7b: R19 := R0
00027a80: R0 := 0x104
00027a85: R30 := 0x40A3EC
00027a87: call @zmalloc with return %00027a89

00027a89:
00027a8d: R21 := R0
00027a92: R0 := 0x32
00027a97: R30 := 0x40A3F8
00027a99: call @zmalloc with return %00027a9b

00027a9b:
00027a9f: R1 := R19
00027aa5: R22 := R0
00027aaa: R2 := 2
00027ab0: R0 := pad:64[31:0[R23]]
00027ab5: R30 := 0x40A40C
00027ab7: call @read with return %00027ab9

00027ab9:
00027abd: #1241 := 31:0[R0] - 2
00027ac2: VF := extend:64[#1241] <> extend:64[31:0[R0]] - 2
00027ac7: CF := pad:64[#1241] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00027acb: ZF := #1241 = 0
00027acf: NF := 31:31[#1241]
00027ad5: when ZF goto %00027ad3
00034ab1: goto %00028721

00027ad3:
00027add: R0 := pad:64[mem[R19]]
00027ae3: #1242 := 31:0[R0] - 5
00027ae8: VF := extend:64[#1242] <> extend:64[31:0[R0]] - 5
00027aed: CF := pad:64[#1242] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00027af1: ZF := #1242 = 0
00027af5: NF := 31:31[#1242]
00027afb: when ZF goto %00027af9
00034ab2: goto %000286d0

00027af9:
00027b03: R25 := pad:64[mem[R19 + 1]]
00027b09: R0 := pad:64[31:0[R25] + 1]
00027b0f: R0 := pad:64[8:0[R0]]
00027b14: R30 := 0x40A500
00027b16: call @zmalloc with return %00027b18

00027b18:
00027b1c: R26 := R0
00027b22: R2 := pad:64[7:0[R25]]
00027b28: R0 := pad:64[31:0[R23]]
00027b2e: R1 := R26
00027b33: R30 := 0x40A514
00027b35: call @read with return %00027b37

00027b37:
00027b3b: #1243 := ~31:0[R0]
00027b40: #1244 := 31:0[R25] + ~31:0[R0]
00027b46: VF := extend:64[#1244 + 1] <> extend:64[31:0[R25]] +
          extend:64[#1243] + 1
00027b4c: CF := pad:64[#1244 + 1] <> pad:64[31:0[R25]] + pad:64[#1243] + 1
00027b50: ZF := #1244 + 1 = 0
00027b54: NF := 31:31[#1244 + 1]
00027b5a: when ZF goto %00027b58
00034ab3: goto %00027b96

00027b58:
00027b61: when 31:0[R24] <> 0 goto %00027b5f
00034ab4: goto %000286c2

00027b5f:
00027b67: R0 := 0
00027b6d: when 31:0[R25] = 0 goto %00027b6b
00034ab5: goto %0002859b

000286c2:
000286c5: when 31:0[R25] = 0 goto %00027b6b
00034ab6: goto %000286c9

000286c9:
000286cc: R0 := 0
00034ab7: goto %00027d79

00027d79:
00027d84: R1 := pad:64[mem[R26 + R0]]
00027d8a: R0 := R0 + 1
00027d8f: when 31:0[R1] <> 0 goto %00027d56
00034ab8: goto %00027d93

00027d56:
00027d5a: #1253 := ~31:0[R0]
00027d5f: #1254 := 31:0[R25] + ~31:0[R0]
00027d65: VF := extend:64[#1254 + 1] <> extend:64[31:0[R25]] +
          extend:64[#1253] + 1
00027d6b: CF := pad:64[#1254 + 1] <> pad:64[31:0[R25]] + pad:64[#1253] + 1
00027d6f: ZF := #1254 + 1 = 0
00027d73: NF := 31:31[#1254 + 1]
00027d7b: when NF = VF & ~ZF goto %00027d79
00034ab9: goto %00028595

00028595:
00028598: R0 := 0
0002859d: goto %0002859b

0002859b:
000285a4: R1 := pad:64[mem[R26 + R0]]
000285aa: R0 := R0 + 1
000285b0: #1278 := 31:0[R1] - 2
000285b5: VF := extend:64[#1278] <> extend:64[31:0[R1]] - 2
000285ba: CF := pad:64[#1278] <> pad:64[31:0[R1]] + 0xFFFFFFFE
000285be: ZF := #1278 = 0
000285c2: NF := 31:31[#1278]
000285c8: when ZF goto %000285c6
00034aba: goto %00028682

000285c6:
000285ce: R3 := 0x205
000285d6: mem := mem with [R19, el]:u16 <- 15:0[R3]
000285dc: R1 := R19
000285e2: R0 := pad:64[31:0[R23]]
000285e7: R2 := 2
000285ec: R30 := 0x40A6E8
000285ee: call @write_wrapper with return %000285f0

000285f0:
000285f4: #1279 := 31:0[R0] - 2
000285f9: VF := extend:64[#1279] <> extend:64[31:0[R0]] - 2
000285fe: CF := pad:64[#1279] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00028602: ZF := #1279 = 0
00028606: NF := 31:31[#1279]
0002860c: when ZF goto %0002860a
00034abb: goto %0002866b

0002866b:
0002866e: R1 := 0x413000
00028673: R0 := 3
00028679: R1 := R1 + 0xC40
0002867e: R30 := 0x40A700
00028680: call @syslog with return %0002860a

0002860a:
00028613: R1 := R19
00028619: R0 := pad:64[31:0[R23]]
0002861e: R2 := 2
00028623: R30 := 0x40A710
00028625: call @read with return %00028627

00028627:
0002862b: #1280 := 31:0[R0] - 2
00028630: VF := extend:64[#1280] <> extend:64[31:0[R0]] - 2
00028635: CF := pad:64[#1280] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00028639: ZF := #1280 = 0
0002863d: NF := 31:31[#1280]
00028642: when ZF goto %00027f4d
00034abc: goto %00028646

00027f4d:
00027f51: #1260 := R31 + 0x50
00027f57: mem := mem with [#1260, el]:u64 <- R27
00027f5d: mem := mem with [#1260 + 8, el]:u64 <- R28
00027f64: R25 := pad:64[mem[R19 + 1]]
00027f6a: R27 := pad:64[31:0[R25] + 1]
00027f70: R28 := extend:64[31:0[R27]]
00027f76: R0 := R28
00027f7b: R30 := 0x40A754
00027f7d: call @zmalloc with return %00027f7f

00027f7f:
00027f83: R24 := R0
00027f89: R2 := R28
00027f8f: R0 := pad:64[31:0[R23]]
00027f95: R1 := R24
00027f9a: R30 := 0x40A768
00027f9c: call @read with return %00027f9e

00027f9e:
00027fa2: #1261 := ~31:0[R0]
00027fa7: #1262 := 31:0[R27] + ~31:0[R0]
00027fad: VF := extend:64[#1262 + 1] <> extend:64[31:0[R27]] +
          extend:64[#1261] + 1
00027fb3: CF := pad:64[#1262 + 1] <> pad:64[31:0[R27]] + pad:64[#1261] + 1
00027fb7: ZF := #1262 + 1 = 0
00027fbb: NF := 31:31[#1262 + 1]
00027fc1: when ZF <> 1 goto %00027fbf
00034abd: goto %00027fe5

00027fe5:
00027feb: R27 := pad:64[mem[R24 + pad:64[31:0[R25]]]]
00027ff3: mem := mem with [R24 + pad:64[31:0[R25]]] <- 0
00027ff9: R0 := pad:64[31:0[R27] + 1]
00027fff: R0 := pad:64[8:0[R0]]
00028004: R30 := 0x40A784
00028006: call @zmalloc with return %00028008

00028008:
0002800c: R25 := R0
00028012: R2 := pad:64[7:0[R27]]
00028018: R0 := pad:64[31:0[R23]]
0002801e: R1 := R25
00028023: R30 := 0x40A798
00028025: call @read with return %00028027

00028027:
0002802b: #1264 := ~31:0[R0]
00028030: #1265 := 31:0[R27] + ~31:0[R0]
00028036: VF := extend:64[#1265 + 1] <> extend:64[31:0[R27]] +
          extend:64[#1264] + 1
0002803c: CF := pad:64[#1265 + 1] <> pad:64[31:0[R27]] + pad:64[#1264] + 1
00028040: ZF := #1265 + 1 = 0
00028044: NF := 31:31[#1265 + 1]
00028049: when ZF goto %00027e7b
00034abe: goto %0002804d

00027e7b:
00027e80: R0 := mem[R20 + 0x50, el]:u64
00027e88: mem := mem with [R25 + pad:64[31:0[R27]]] <- 0
00027e8e: R1 := R24
00027e93: R30 := 0x40A7F4
00027e95: call @hlist_get with return %00027e97

00027e97:
00027e9b: R27 := R0
00027ea2: R0 := mem[R20 + 0x50, el]:u64
00027ea7: R30 := 0x40A800
00027ea9: call @hlist_count with return %00027eab

00027eab:
00027eae: R3 := 0
00027eb4: when 31:0[R0] = 0 goto %00027eb2
00034abf: goto %00028420

00028420:
00028423: R3 := 0xFF
00028428: when R27 = 0 goto %00027eb2
00034ac0: goto %0002842c

0002842c:
00028430: R0 := R27
00028436: R1 := R25
0002843b: R30 := 0x40A81C
0002843d: call @strcmp with return %0002843f

0002843f:
00028442: VF := 0
00028445: CF := 1
00028449: ZF := 31:0[R0] = 0
0002844d: NF := 31:31[R0]
00028459: when ZF goto %00028452
0002845a: goto %00028455

00028455:
00028456: R3 := 0xFFFFFFFF
0002845c: goto %00028458

00028452:
00028453: R3 := 0
0002845b: goto %00028458

00028458:
00028462: R3 := pad:64[7:0[R3]]
00034ac1: goto %00027eb2

00027eb2:
00027eba: R4 := 1
00027ec2: mem := mem with [R19] <- 7:0[R4]
00027eca: mem := mem with [R19 + 1] <- 7:0[R3]
00027ed0: R1 := R19
00027ed6: R0 := pad:64[31:0[R23]]
00027edb: R2 := 2
00027ee0: R30 := 0x40A844
00027ee2: call @write_wrapper with return %00027ee4

00027ee4:
00027ee8: #1258 := 31:0[R0] - 2
00027eed: VF := extend:64[#1258] <> extend:64[31:0[R0]] - 2
00027ef2: CF := pad:64[#1258] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00027ef6: ZF := #1258 = 0
00027efa: NF := 31:31[#1258]
00027f00: when ZF goto %00027efe
00034ac2: goto %00028409

00028409:
0002840c: R1 := 0x413000
00028411: R0 := 3
00028417: R1 := R1 + 0xC78
0002841c: R30 := 0x40A85C
0002841e: call @syslog with return %00027efe

00027efe:
00027f07: R0 := R25
00027f0c: R30 := 0x40A864
00027f0e: call @free with return %00027f10

00027f10:
00027f14: R0 := R24
00027f19: R30 := 0x40A86C
00027f1b: call @free with return %00027f1d

00027f1d:
00027f22: R0 := pad:64[mem[R19 + 1]]
00027f28: #1259 := R31 + 0x50
00027f2d: R27 := mem[#1259, el]:u64
00027f32: R28 := mem[#1259 + 8, el]:u64
00027f37: when 31:0[R0] = 0 goto %00027dd2
00034ac3: goto %00027f3b

00027f3b:
00027f3e: goto %00027f3c

0002804d:
00028051: R0 := R25
00028056: R30 := 0x40A7A8
00028058: call @free with return %00027fbf

00027fbf:
00027fc8: R0 := R24
00027fcd: R30 := 0x40A7B0
00027fcf: call @free with return %00027fd1

00027fd1:
00027fd5: #1263 := R31 + 0x50
00027fda: R27 := mem[#1263, el]:u64
00027fdf: R28 := mem[#1263 + 8, el]:u64
00027fe3: goto %00027f3c

00028646:
00028649: R3 := 0xFFFFFF01
00028651: mem := mem with [R19, el]:u16 <- 15:0[R3]
00028657: R1 := R19
0002865d: R0 := pad:64[31:0[R23]]
00028662: R2 := 2
00028667: R30 := 0x40A730
00028669: call @write_wrapper with return %00027f3c

00027f3c:
00027f42: R25 := 0xFFFFFFFF
00027f47: R24 := 0
00027f4b: goto %00027d2a

00028682:
00028686: #1281 := ~31:0[R0]
0002868b: #1282 := 31:0[R25] + ~31:0[R0]
00028691: VF := extend:64[#1282 + 1] <> extend:64[31:0[R25]] +
          extend:64[#1281] + 1
00028697: CF := pad:64[#1282 + 1] <> pad:64[31:0[R25]] + pad:64[#1281] + 1
0002869b: ZF := #1282 + 1 = 0
0002869f: NF := 31:31[#1282 + 1]
000286a6: when NF = VF & ~ZF goto %0002859b
00034ac4: goto %00027b6b

00027b6b:
00027b73: R3 := 0xFFFFFF05
00027b7b: mem := mem with [R19, el]:u16 <- 15:0[R3]
00027b81: R1 := R19
00027b87: R0 := pad:64[31:0[R23]]
00027b8c: R2 := 2
00027b91: R30 := 0x40A6A0
00027b93: call @write_wrapper with return %00027b95

00027b95:
00027b98: goto %00027b96

00027d93:
00027d96: R3 := 5
00027d9e: mem := mem with [R19, el]:u16 <- 15:0[R3]
00027da4: R1 := R19
00027daa: R0 := pad:64[31:0[R23]]
00027daf: R2 := 2
00027db4: R30 := 0x40A584
00027db6: call @write_wrapper with return %00027db8

00027db8:
00027dbc: #1255 := 31:0[R0] - 2
00027dc1: VF := extend:64[#1255] <> extend:64[31:0[R0]] - 2
00027dc6: CF := pad:64[#1255] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00027dca: ZF := #1255 = 0
00027dce: NF := 31:31[#1255]
00027dd4: when ZF goto %00027dd2
00034ac5: goto %0002857e

0002857e:
00028581: R1 := 0x413000
00028586: R0 := 3
0002858c: R1 := R1 + 0xC40
00028591: R30 := 0x40A59C
00028593: call @syslog with return %00027dd2

00027dd2:
00027ddb: R1 := R19
00027de1: R0 := pad:64[31:0[R23]]
00027de6: R2 := 4
00027deb: R30 := 0x40A5AC
00027ded: call @read with return %00027def

00027def:
00027df3: #1256 := 31:0[R0] - 4
00027df8: VF := extend:64[#1256] <> extend:64[31:0[R0]] - 4
00027dfd: CF := pad:64[#1256] <> pad:64[31:0[R0]] + 0xFFFFFFFC
00027e01: ZF := #1256 = 0
00027e05: NF := 31:31[#1256]
00027e0a: when ZF <> 1 goto %00027b96
00034ac6: goto %00027e0e

00027e0e:
00027e13: R0 := pad:64[mem[R19 + 1]]
00027e19: #1257 := 31:0[R0] - 1
00027e1e: VF := extend:64[#1257] <> extend:64[31:0[R0]] - 1
00027e23: CF := pad:64[#1257] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00027e27: ZF := #1257 = 0
00027e2b: NF := 31:31[#1257]
00027e31: when ZF <> 1 goto %00027e2f
00034ac7: goto %00028464

00028464:
00028469: R0 := pad:64[mem[R19 + 3]]
00028470: R1 := pad:64[31:2[R0].pad:2[0:0[R0]]]
00028476: #1272 := 31:0[R1] - 1
0002847b: VF := extend:64[#1272] <> extend:64[31:0[R1]] - 1
00028480: CF := pad:64[#1272] <> pad:64[31:0[R1]] + 0xFFFFFFFF
00028484: ZF := #1272 = 0
00028488: NF := 31:31[#1272]
0002848d: when ZF <> 1 goto %00027e2f
00034ac8: goto %00028491

00027e2f:
00027e38: R3 := R19
00027e3d: R4 := 0x205
00027e43: R4 := pad:64[0x100.15:0[R4]]
00027e49: R1 := R19
00027e4f: R0 := pad:64[31:0[R23]]
00027e54: R2 := 0xA
00027e5c: mem := mem with [R3, el]:u32 <- 31:0[R4]
00027e60: R3 := R3 + 4
00027e67: mem := mem with [R19 + 4, el]:u32 <- 0
00027e6e: mem := mem with [R3 + 4, el]:u16 <- 0
00027e73: R30 := 0x40A7E0
00027e75: call @write_wrapper with return %00027e77

00027e77:
00027e79: goto %00027b96

00028491:
00028495: #1273 := R31 + 0x50
0002849b: mem := mem with [#1273, el]:u64 <- R27
000284a1: mem := mem with [#1273 + 8, el]:u64 <- R28
000284a7: #1274 := 31:0[R0] - 1
000284ac: VF := extend:64[#1274] <> extend:64[31:0[R0]] - 1
000284b1: CF := pad:64[#1274] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000284b5: ZF := #1274 = 0
000284b9: NF := 31:31[#1274]
000284be: when ZF goto %0002805a
00034ac9: goto %000284c2

0002805a:
0002805d: R0 := 0xF
00028062: R30 := 0x40A884
00028064: call @zmalloc with return %00028066

00028066:
0002806a: R27 := R0
0002806f: R2 := 4
00028075: R0 := pad:64[31:0[R23]]
0002807b: R1 := R27
00028080: R30 := 0x40A898
00028082: call @read with return %00028084

00028084:
00028088: #1266 := 31:0[R0] - 4
0002808d: VF := extend:64[#1266] <> extend:64[31:0[R0]] - 4
00028092: CF := pad:64[#1266] <> pad:64[31:0[R0]] + 0xFFFFFFFC
00028096: ZF := #1266 = 0
0002809a: NF := 31:31[#1266]
000280a0: when ZF goto %0002809e
00034aca: goto %000283f4

0002809e:
000280a8: R6 := pad:64[mem[R27 + 3]]
000280ae: R0 := R21
000280b5: R5 := pad:64[mem[R27 + 2]]
000280ba: R2 := 0x413000
000280c1: R4 := pad:64[mem[R27 + 1]]
000280c7: R2 := R2 + 0xD10
000280ce: R3 := pad:64[mem[R27]]
000280d3: R1 := 0x104
000280da: mem := mem with [R27 + 4] <- 0
000280e0: R24 := R31 + 0x7E
000280e5: R30 := 0x40A8DC
000280e7: call @snprintf with return %000280e9

000280e9:
000280ec: goto %000280ea

000284c2:
000284c6: R24 := R31 + 0x7E
000284cc: R0 := pad:64[31:0[R23]]
000284d2: R1 := R24
000284d7: R2 := 1
000284dc: R30 := 0x40A5F0
000284de: call @read with return %000284e0

000284e0:
000284e4: #1275 := 31:0[R0] - 1
000284e9: VF := extend:64[#1275] <> extend:64[31:0[R0]] - 1
000284ee: CF := pad:64[#1275] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000284f2: ZF := #1275 = 0
000284f6: NF := 31:31[#1275]
000284fb: when ZF <> 1 goto %000283e0
00034acb: goto %000284ff

000284ff:
00028504: R25 := pad:64[mem[R31 + 0x7E]]
0002850a: R0 := pad:64[31:0[R25] + 0xB]
00028510: R0 := pad:64[8:0[R0]]
00028515: R30 := 0x40A608
00028517: call @zmalloc with return %00028519

00028519:
0002851d: R27 := R0
00028523: R2 := pad:64[7:0[R25]]
00028529: R0 := pad:64[31:0[R23]]
0002852f: R1 := R27
00028534: R30 := 0x40A61C
00028536: call @read with return %00028538

00028538:
0002853c: #1276 := ~31:0[R0]
00028541: #1277 := 31:0[R25] + ~31:0[R0]
00028547: VF := extend:64[#1277 + 1] <> extend:64[31:0[R25]] +
          extend:64[#1276] + 1
0002854d: CF := pad:64[#1277 + 1] <> pad:64[31:0[R25]] + pad:64[#1276] + 1
00028551: ZF := #1277 + 1 = 0
00028555: NF := 31:31[#1277 + 1]
0002855a: when ZF <> 1 goto %000283f4
00034acc: goto %0002855e

000283f4:
000283f7: when R27 = 0 goto %000283e0
00034acd: goto %000283fb

000283e0:
000283e4: #1271 := R31 + 0x50
000283e9: R27 := mem[#1271, el]:u64
000283ee: R28 := mem[#1271 + 8, el]:u64
000283f2: goto %00027b96

000283fb:
000283fe: R25 := 0xFFFFFFFF
00028403: R24 := 0
00028407: goto %000282f7

0002855e:
00028564: mem := mem with [R27 + pad:64[31:0[R25]]] <- 0
0002856a: R1 := R27
00028570: R0 := R21
00028575: R2 := 0x104
0002857a: R30 := 0x40A638
0002857c: call @strlcpy with return %000280ea

000280ea:
000280f1: R1 := R24
000280f7: R0 := pad:64[31:0[R23]]
000280fc: R2 := 2
00028101: R25 := 0xFFFFFFFF
00028106: R24 := 0
0002810b: R30 := 0x40A650
0002810d: call @read with return %0002810f

0002810f:
00028113: #1267 := 31:0[R0] - 2
00028118: VF := extend:64[#1267] <> extend:64[31:0[R0]] - 2
0002811d: CF := pad:64[#1267] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00028121: ZF := #1267 = 0
00028125: NF := 31:31[#1267]
0002812b: when ZF goto %00028129
00034ace: goto %000282f7

00028129:
00028132: R0 := R21
00028137: R30 := 0x40A8F0
00028139: call @noproxy_match with return %0002813b

0002813b:
0002813f: when 31:0[R0] = 0 goto %0002813d
00034acf: goto %000283b0

0002813d:
00028147: R3 := pad:64[mem[R31 + 0x7E, el]:u16]
0002814c: R2 := 0x413000
00028152: R2 := R2 + 0xCB8
00028157: R1 := 0x32
00028160: R3 := pad:64[23:16[R3].31:24[R3].7:0[R3].15:8[R3]]
00028166: R0 := R22
0002816c: R3 := pad:64[15:0[R3]]
00028171: R30 := 0x40A998
00028173: call @snprintf with return %00028175

00028175:
00028179: R0 := R21
0002817e: R30 := 0x40A9A0
00028180: call @strdup with return %00028182

00028182:
00028186: R28 := R0
0002818b: R2 := 0x104
00028191: R0 := R21
00028196: R1 := 0x413000
0002819c: R1 := R1 + 0x640
000281a1: R30 := 0x40A9B8
000281a3: call @strlcat with return %000281a5

000281a5:
000281a9: R1 := R22
000281ae: R2 := 0x104
000281b4: R0 := R21
000281b9: R30 := 0x40A9C8
000281bb: call @strlcat with return %000281bd

000281bd:
000281c0: R30 := 0x40A9CC
000281c2: call @new_auth with return %000281c4

000281c4:
000281c8: R24 := R0
000281ce: R2 := R28
000281d4: R1 := R21
000281d9: R30 := 0x40A9DC
000281db: call @proxy_connect with return %000281dd

000281dd:
000281e1: R25 := pad:64[31:0[R0]]
000281e7: #1268 := 31:0[R0] + 2
000281ec: VF := extend:64[#1268] <> extend:64[31:0[R0]] + 2
000281f1: CF := pad:64[#1268] <> pad:64[31:0[R0]] + 2
000281f5: ZF := #1268 = 0
000281f9: NF := 31:31[#1268]
000281ff: when ZF goto %000281fd
00034ad0: goto %00028383

000281fd:
00028207: R1 := pad:64[mem[R31 + 0x7E, el]:u16]
0002820d: R0 := R28
00028216: R1 := pad:64[23:16[R1].31:24[R1].7:0[R1].15:8[R1]]
0002821c: R1 := pad:64[15:0[R1]]
00028221: R30 := 0x40AA64
00028223: call @host_connect with return %00028225

00028225:
00028229: R1 := pad:64[~31:0[R0]]
0002822f: R25 := pad:64[31:0[R0]]
00028235: R1 := pad:64[31:31[R1]]
0002823a: goto %00028238

00028383:
00028387: when ~31:31[R0] goto %00028385
00034ad1: goto %000283a3

00028385:
0002838e: R1 := R24
00028394: R2 := R21
00028399: R30 := 0x40AA34
0002839b: call @prepare_http_connect with return %0002839d

0002839d:
000283a1: R1 := pad:64[31:0[R0]]
00034ad2: goto %00028238

00028238:
0002823f: R0 := R28
00028247: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R1]
0002824c: R30 := 0x40AA44
0002824e: call @free with return %00028250

00028250:
00028255: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
0002825b: when 31:0[R1] <> 0 goto %00028259
00034ad3: goto %00028332

00028332:
00028335: goto %00028333

000283a3:
000283a7: R0 := R28
000283ac: R30 := 0x40A9F4
000283ae: call @free with return %00028333

000283b0:
000283b5: R1 := pad:64[mem[R31 + 0x7E, el]:u16]
000283bb: R0 := R21
000283c4: R1 := pad:64[23:16[R1].31:24[R1].7:0[R1].15:8[R1]]
000283ca: R1 := pad:64[15:0[R1]]
000283cf: R30 := 0x40A908
000283d1: call @host_connect with return %000283d3

000283d3:
000283d7: R25 := pad:64[31:0[R0]]
000283dc: when 31:31[R0] goto %00028333
00034ad4: goto %00028259

00028333:
0002833a: R3 := R19
0002833f: R4 := 0x105
00028345: R4 := pad:64[0x100.15:0[R4]]
0002834b: R1 := R19
00028351: R0 := pad:64[31:0[R23]]
00028356: R2 := 0xA
0002835e: mem := mem with [R3, el]:u32 <- 31:0[R4]
00028362: R3 := R3 + 4
00028369: mem := mem with [R19 + 4, el]:u32 <- 0
00028370: mem := mem with [R3 + 4, el]:u16 <- 0
00028375: R30 := 0x40AA1C
00028377: call @write_wrapper with return %00028379

00028379:
0002837b: goto %000282f7

00028259:
00028262: R3 := R19
00028267: R4 := 5
0002826d: R4 := pad:64[0x100.15:0[R4]]
00028273: R1 := R19
00028279: R0 := pad:64[31:0[R23]]
0002827e: R2 := 0xA
00028286: mem := mem with [R3, el]:u32 <- 31:0[R4]
0002828a: R3 := R3 + 4
00028291: mem := mem with [R19 + 4, el]:u32 <- 0
00028298: mem := mem with [R3 + 4, el]:u16 <- 0
0002829d: R30 := 0x40A938
0002829f: call @write_wrapper with return %000282a1

000282a1:
000282a5: #1269 := 31:0[R0] - 0xA
000282aa: VF := extend:64[#1269] <> extend:64[31:0[R0]] - 0xA
000282af: CF := pad:64[#1269] <> pad:64[31:0[R0]] + 0xFFFFFFF6
000282b3: ZF := #1269 = 0
000282b7: NF := 31:31[#1269]
000282bd: when ZF goto %000282bb
00034ad5: goto %0002831b

0002831b:
0002831e: R1 := 0x413000
00028323: R0 := 3
00028329: R1 := R1 + 0xCC0
0002832e: R30 := 0x40A950
00028330: call @syslog with return %000282bb

000282bb:
000282c4: R2 := R31 + 0x80
000282ca: R3 := R21
000282cf: R0 := 7
000282d4: R1 := 0x413000
000282da: R1 := R1 + 0xD00
000282df: R30 := 0x40A968
000282e1: call @syslog with return %000282e3

000282e3:
000282e7: R1 := pad:64[31:0[R25]]
000282ed: R0 := pad:64[31:0[R23]]
000282f2: R30 := 0x40A974
000282f4: call @tunnel with return %000282f6

000282f6:
000282f9: goto %000282f7

000282f7:
000282fe: R0 := R27
00028303: R30 := 0x40A660
00028305: call @free with return %00028307

00028307:
0002830b: #1270 := R31 + 0x50
00028310: R27 := mem[#1270, el]:u64
00028315: R28 := mem[#1270 + 8, el]:u64
00028319: goto %00027ba5

00027b96:
00027b9c: R25 := 0xFFFFFFFF
00027ba1: R24 := 0
00034ad6: goto %00027ba5

00027ba5:
00027ba9: when R26 = 0 goto %00027ba7
00034ad7: goto %00027d2a

00027d2a:
00027d2e: R0 := R26
00027d33: R30 := 0x40A534
00027d35: call @free with return %00027ba7

00027ba7:
00027bb0: when R21 = 0 goto %00027bae
00034ad8: goto %00027d1d

00027d1d:
00027d21: R0 := R21
00027d26: R30 := 0x40A540
00027d28: call @free with return %00027bae

00027bae:
00027bb7: when R22 = 0 goto %00027bb5
00034ad9: goto %00027d0c

00027d0c:
00027d10: R0 := R22
00027d15: R30 := 0x40A54C
00027d17: call @free with return %00027d19

00027d19:
00027d1b: goto %00027bb5

000286d0:
000286d4: when R21 <> 0 goto %000286d2
00034ada: goto %00028709

00028709:
0002870c: when R22 = 0 goto %00027d40
00034adb: goto %00028710

00028710:
00028714: R0 := R22
00028719: R30 := 0x40A4A0
0002871b: call @free with return %0002871d

0002871d:
0002871f: goto %00027d40

00028721:
00028724: when R21 = 0 goto %00027d37
00034adc: goto %000286d2

00027d37:
00027d3b: when R22 = 0 goto %00027d39
00034add: goto %000286ae

000286ae:
000286b2: R0 := R22
000286b7: R30 := 0x40A6B0
000286b9: call @free with return %000286bb

000286bb:
000286be: when R19 = 0 goto %00027bd0
00034ade: goto %00027d40

000286d2:
000286db: R0 := R21
000286e0: R30 := 0x40A420
000286e2: call @free with return %000286e4

000286e4:
000286e7: when R22 = 0 goto %00027d39
00034adf: goto %000286eb

00027d39:
00027d42: when R19 <> 0 goto %00027d40
00034ae0: goto %000286aa

000286aa:
000286ac: goto %00027bd0

00027d40:
00027d49: R0 := R19
00027d4e: R30 := 0x40A6BC
00027d50: call @free with return %00027d52

00027d52:
00027d54: goto %00027bd0

000286eb:
000286ef: R0 := R22
000286f4: R30 := 0x40A42C
000286f6: call @free with return %000286f8

000286f8:
000286fb: when R19 = 0 goto %00027bd0
00034ae1: goto %000286ff

000286ff:
00028702: R25 := 0xFFFFFFFF
00028707: R24 := 0
00034ae2: goto %00027bb5

00027bb5:
00027bbe: R0 := R19
00027bc3: R30 := 0x40A440
00027bc5: call @free with return %00027bc7

00027bc7:
00027bcb: when R24 = 0 goto %00027bc9
00034ae3: goto %00027cff

00027cff:
00027d03: R0 := R24
00027d08: R30 := 0x40A44C
00027d0a: call @free with return %00027bc9

00027bc9:
00027bd2: when 31:31[R25] goto %00027bd0
00034ae4: goto %00027cf2

00027cf2:
00027cf6: R0 := pad:64[31:0[R25]]
00027cfb: R30 := 0x40A458
00027cfd: call @close with return %00027bd0

00027bd0:
00027bd9: R0 := pad:64[31:0[R23]]
00027bde: R30 := 0x40A460
00027be0: call @close with return %00027be2

00027be2:
00027be7: R0 := pad:64[mem[R20 + 0x10, el]:u32]
00027bed: when 31:0[R0] = 0 goto %00027beb
00034ae5: goto %00027c98

00027beb:
00027bf4: R19 := R20 + 0x18
00027bfa: R0 := R19
00027bff: R30 := 0x40A4B0
00027c01: call @pthread_mutex_lock with return %00027c03

00027c03:
00027c06: R30 := 0x40A4B4
00027c08: call @pthread_self with return %00027c0a

00027c0a:
00027c0e: R1 := R0
00027c15: R0 := mem[R20 + 0x48, el]:u64
00027c1a: R2 := 0
00027c1f: R30 := 0x40A4C4
00027c21: call @plist_add with return %00027c23

00027c23:
00027c27: R1 := R0
00027c2d: R0 := R19
00027c35: mem := mem with [R20 + 0x48, el]:u64 <- R1
00027c3a: R30 := 0x40A4D4
00027c3c: call @pthread_mutex_unlock with return %00027c3e

00027c3e:
00027c42: #1245 := R31 + 0x10
00027c47: R19 := mem[#1245, el]:u64
00027c4c: R20 := mem[#1245 + 8, el]:u64
00027c51: R0 := 0
00027c57: #1246 := R31 + 0x20
00027c5c: R21 := mem[#1246, el]:u64
00027c61: R22 := mem[#1246 + 8, el]:u64
00027c67: #1247 := R31 + 0x30
00027c6c: R23 := mem[#1247, el]:u64
00027c71: R24 := mem[#1247 + 8, el]:u64
00027c77: #1248 := R31 + 0x40
00027c7c: R25 := mem[#1248, el]:u64
00027c81: R26 := mem[#1248 + 8, el]:u64
00027c88: R29 := mem[R31, el]:u64
00027c8d: R30 := mem[R31 + 8, el]:u64
00027c91: R31 := R31 + 0xB0
00027c96: call R30 with noreturn

00027c98:
00027c9c: #1249 := R31 + 0x10
00027ca1: R19 := mem[#1249, el]:u64
00027ca6: R20 := mem[#1249 + 8, el]:u64
00027cab: R0 := 0
00027cb1: #1250 := R31 + 0x20
00027cb6: R21 := mem[#1250, el]:u64
00027cbb: R22 := mem[#1250 + 8, el]:u64
00027cc1: #1251 := R31 + 0x30
00027cc6: R23 := mem[#1251, el]:u64
00027ccb: R24 := mem[#1251 + 8, el]:u64
00027cd1: #1252 := R31 + 0x40
00027cd6: R25 := mem[#1252, el]:u64
00027cdb: R26 := mem[#1252 + 8, el]:u64
00027ce2: R29 := mem[R31, el]:u64
00027ce7: R30 := mem[R31 + 8, el]:u64
00027ceb: R31 := R31 + 0xB0
00027cf0: call R30 with noreturn

00034ae6: sub srandom(srandom_arg1)
00034c7b: srandom_arg1 :: in u32 = low:32[R0]

0002d418:
000301c6: R16 := 0x430000
000301cd: R17 := mem[R16 + 0x290, el]:u64
000301d3: R16 := R16 + 0x290
000301d8: call R17 with noreturn

00034ae7: sub strcasecmp(strcasecmp_s1, strcasecmp_s2, strcasecmp_result)
00034c7c: strcasecmp_s1 :: in u64 = R0
00034c7d: strcasecmp_s2 :: in u64 = R1
00034c7e: strcasecmp_result :: out u32 = low:32[R0]

00017d61:
0002fe2a: R16 := 0x430000
0002fe31: R17 := mem[R16 + 0x140, el]:u64
0002fe37: R16 := R16 + 0x140
0002fe3c: call R17 with noreturn

00034ae8: sub strchr(strchr_s, strchr_c, strchr_result)
00034c7f: strchr_s :: in u64 = R0
00034c80: strchr_c :: in u32 = low:32[R1]
00034c81: strchr_result :: out u64 = R0

0001fd77:
000300a8: R16 := 0x430000
000300af: R17 := mem[R16 + 0x228, el]:u64
000300b5: R16 := R16 + 0x228
000300ba: call R17 with noreturn

00034ae9: sub strcmp(strcmp_s1, strcmp_s2, strcmp_result)
00034c82: strcmp_s1 :: in u64 = R0
00034c83: strcmp_s2 :: in u64 = R1
00034c84: strcmp_result :: out u32 = low:32[R0]

0001d2f1:
0002ffb6: R16 := 0x430000
0002ffbd: R17 := mem[R16 + 0x1D0, el]:u64
0002ffc3: R16 := R16 + 0x1D0
0002ffc8: call R17 with noreturn

00034aea: sub strcspn(strcspn_s, strcspn_reject, strcspn_result)
00034c85: strcspn_s :: in u64 = R0
00034c86: strcspn_reject :: in u64 = R1
00034c87: strcspn_result :: out u64 = R0

00019407:
00030234: R16 := 0x430000
0003023b: R17 := mem[R16 + 0x2B8, el]:u64
00030241: R16 := R16 + 0x2B8
00030246: call R17 with noreturn

00034aeb: sub strdup(strdup_s, strdup_result)
00034c88: strdup_s :: in u64 = R0
00034c89: strdup_result :: out u64 = R0

00017953:
0002fe6c: R16 := 0x430000
0002fe73: R17 := mem[R16 + 0x158, el]:u64
0002fe79: R16 := R16 + 0x158
0002fe7e: call R17 with noreturn

00034aec: sub strerror(strerror_result)
00034c8a: strerror_result :: out u32 = low:32[R0]

00010a57:
0002fe82: R16 := 0x430000
0002fe89: R17 := mem[R16 + 0x160, el]:u64
0002fe8f: R16 := R16 + 0x160
0002fe94: call R17 with noreturn

00034aed: sub strlcat(strlcat_result)
00034c8b: strlcat_result :: out u32 = low:32[R0]

0001baee:
0002ff74: R16 := 0x430000
0002ff7b: R17 := mem[R16 + 0x1B8, el]:u64
0002ff81: R16 := R16 + 0x1B8
0002ff86: call R17 with noreturn

00034aee: sub strlcpy(strlcpy_result)
00034c8c: strlcpy_result :: out u32 = low:32[R0]

00017080:
00030066: R16 := 0x430000
0003006d: R17 := mem[R16 + 0x210, el]:u64
00030073: R16 := R16 + 0x210
00030078: call R17 with noreturn

00034aef: sub strlen(strlen_s, strlen_result)
00034c8d: strlen_s :: in u64 = R0
00034c8e: strlen_result :: out u64 = R0

000102da:
0002fb28: R16 := 0x430000
0002fb2f: R17 := mem[R16 + 0x28, el]:u64
0002fb35: R16 := R16 + 0x28
0002fb3a: call R17 with noreturn

00034af0: sub strncasecmp(strncasecmp_s1, strncasecmp_s2, strncasecmp_n, strncasecmp_result)
00034c8f: strncasecmp_s1 :: in u64 = R0
00034c90: strncasecmp_s2 :: in u64 = R1
00034c91: strncasecmp_n :: in u64 = R2
00034c92: strncasecmp_result :: out u32 = low:32[R0]

00020c1b:
0003007c: R16 := 0x430000
00030083: R17 := mem[R16 + 0x218, el]:u64
00030089: R16 := R16 + 0x218
0003008e: call R17 with noreturn

00034af1: sub strncpy(strncpy_dst, strncpy_src, strncpy_n, strncpy_result)
00034c93: strncpy_dst :: in out u64 = R0
00034c94: strncpy_src :: in u64 = R1
00034c95: strncpy_n :: in u64 = R2
00034c96: strncpy_result :: out u64 = R0

0001b834:
000301f2: R16 := 0x430000
000301f9: R17 := mem[R16 + 0x2A0, el]:u64
000301ff: R16 := R16 + 0x2A0
00030204: call R17 with noreturn

00034af2: sub strrchr(strrchr_s, strrchr_c, strrchr_result)
00034c97: strrchr_s :: in u64 = R0
00034c98: strrchr_c :: in u32 = low:32[R1]
00034c99: strrchr_result :: out u64 = R0

0001d041:
0002feae: R16 := 0x430000
0002feb5: R17 := mem[R16 + 0x170, el]:u64
0002febb: R16 := R16 + 0x170
0002fec0: call R17 with noreturn

00034af3: sub strsep(strsep_stringp, strsep_delim, strsep_result)
00034c9a: strsep_stringp :: in out u64 = R0
00034c9b: strsep_delim :: in u64 = R1
00034c9c: strsep_result :: out u64 = R0

0001d28f:
0002ffa0: R16 := 0x430000
0002ffa7: R17 := mem[R16 + 0x1C8, el]:u64
0002ffad: R16 := R16 + 0x1C8
0002ffb2: call R17 with noreturn

00034af4: sub strstr(strstr_haystack, strstr_needle, strstr_result)
00034c9d: strstr_haystack :: in u64 = R0
00034c9e: strstr_needle :: in u64 = R1
00034c9f: strstr_result :: out u64 = R0

00018c8a:
000301b0: R16 := 0x430000
000301b7: R17 := mem[R16 + 0x288, el]:u64
000301bd: R16 := R16 + 0x288
000301c2: call R17 with noreturn

00034af5: sub strtok_r(strtok_r_str, strtok_r_delim, strtok_r_saveptr, strtok_r_result)
00034ca0: strtok_r_str :: in out u64 = R0
00034ca1: strtok_r_delim :: in u64 = R1
00034ca2: strtok_r_saveptr :: in out u64 = R2
00034ca3: strtok_r_result :: out u64 = R0

00020147:
0002fcf6: R16 := 0x430000
0002fcfd: R17 := mem[R16 + 0xD0, el]:u64
0002fd03: R16 := R16 + 0xD0
0002fd08: call R17 with noreturn

00034af6: sub strtol(strtol_nptr, strtol_endptr, strtol_base, strtol_result)
00034ca4: strtol_nptr :: in u64 = R0
00034ca5: strtol_endptr :: in out u64 = R1
00034ca6: strtol_base :: in u32 = low:32[R2]
00034ca7: strtol_result :: out u64 = R0

0001d346:
0002ffe2: R16 := 0x430000
0002ffe9: R17 := mem[R16 + 0x1E0, el]:u64
0002ffef: R16 := R16 + 0x1E0
0002fff4: call R17 with noreturn

00034af7: sub strtoll(strtoll_nptr, strtoll_endptr, strtoll_base, strtoll_result)
00034ca8: strtoll_nptr :: in u64 = R0
00034ca9: strtoll_endptr :: in out u64 = R1
00034caa: strtoll_base :: in u32 = low:32[R2]
00034cab: strtoll_result :: out u64 = R0

0001f8e5:
0002fbc2: R16 := 0x430000
0002fbc9: R17 := mem[R16 + 0x60, el]:u64
0002fbcf: R16 := R16 + 0x60
0002fbd4: call R17 with noreturn

00034af8: sub strtoul(strtoul_nptr, strtoul_endptr, strtoul_base, strtoul_result)
00034cac: strtoul_nptr :: in u64 = R0
00034cad: strtoul_endptr :: in out u64 = R1
00034cae: strtoul_base :: in u32 = low:32[R2]
00034caf: strtoul_result :: out u64 = R0

0002c126:
0002fb12: R16 := 0x430000
0002fb19: R17 := mem[R16 + 0x20, el]:u64
0002fb1f: R16 := R16 + 0x20
0002fb24: call R17 with noreturn

00034af9: sub substr(substr_result)
00034cb0: substr_result :: out u32 = low:32[R0]

00017f2a:
00017f2e: #453 := R31 - 0x30
00017f34: mem := mem with [#453, el]:u64 <- R29
00017f3a: mem := mem with [#453 + 8, el]:u64 <- R30
00017f3e: R31 := #453
00017f44: R29 := R31
00017f4a: #454 := R31 + 0x10
00017f50: mem := mem with [#454, el]:u64 <- R19
00017f56: mem := mem with [#454 + 8, el]:u64 <- R20
00017f5c: R19 := pad:64[31:0[R2]]
00017f62: R20 := pad:64[31:0[R1]]
00017f6a: mem := mem with [R31 + 0x20, el]:u64 <- R21
00017f70: R21 := R0
00017f75: R30 := 0x40ED74
00017f77: call @strlen with return %00017f79

00017f79:
00017f7e: R3 := pad:64[31:0[R0] + ~31:0[R20] + 1]
00017f83: VF := 0
00017f86: CF := 1
00017f8a: ZF := 31:0[R19] = 0
00017f8e: NF := 31:31[R19]
00017f9c: when ZF <> 1 goto %00017f94
00017f9d: goto %00017f98

00017f98:
00017f99: R19 := pad:64[31:0[R0]]
00017f9f: goto %00017f9b

00017f94:
00017f95: R19 := pad:64[31:0[R19]]
00017f9e: goto %00017f9b

00017f9b:
00017fa5: #455 := ~31:0[R19]
00017faa: #456 := 31:0[R3] + ~31:0[R19]
00017fb0: VF := extend:64[#456 + 1] <> extend:64[31:0[R3]] + extend:64[#455]
          + 1
00017fb6: CF := pad:64[#456 + 1] <> pad:64[31:0[R3]] + pad:64[#455] + 1
00017fba: ZF := #456 + 1 = 0
00017fbe: NF := 31:31[#456 + 1]
00017fce: when ~(NF = VF & ~ZF) goto %00017fc6
00017fcf: goto %00017fca

00017fca:
00017fcb: R3 := pad:64[31:0[R19]]
00017fd1: goto %00017fcd

00017fc6:
00017fc7: R3 := pad:64[31:0[R3]]
00017fd0: goto %00017fcd

00017fcd:
00017fd6: VF := 0
00017fd9: CF := 1
00017fdd: ZF := 31:0[R3] = 0
00017fe1: NF := 31:31[R3]
00017fe9: when ~(NF = VF & ~ZF) goto %00017fe7
00034afa: goto %000189cd

00017fe7:
00017ff0: #457 := R31 + 0x10
00017ff5: R19 := mem[#457, el]:u64
00017ffa: R20 := mem[#457 + 8, el]:u64
00017fff: R1 := 1
00018006: R21 := mem[R31 + 0x20, el]:u64
0001800c: R0 := R1
00018013: R29 := mem[R31, el]:u64
00018018: R30 := mem[R31 + 8, el]:u64
0001801c: R31 := R31 + 0x30
00018020: call @calloc with noreturn

000189cd:
000189d1: R3 := pad:64[31:0[R3] + 1]
000189d6: R0 := 1
000189dc: R19 := extend:64[31:0[R3]]
000189e2: R1 := R19
000189e7: R30 := 0x40EDA4
000189e9: call @calloc with return %000189eb

000189eb:
000189f0: R1 := R21 + extend:64[31:0[R20]]
000189f6: R2 := R19
000189fc: R19 := R0
00018a01: R30 := 0x40EDB4
00018a03: call @strlcpy with return %00018a05

00018a05:
00018a0a: R21 := mem[R31 + 0x20, el]:u64
00018a10: R0 := R19
00018a16: #485 := R31 + 0x10
00018a1b: R19 := mem[#485, el]:u64
00018a20: R20 := mem[#485 + 8, el]:u64
00018a27: R29 := mem[R31, el]:u64
00018a2c: R30 := mem[R31 + 8, el]:u64
00018a30: R31 := R31 + 0x30
00018a35: call R30 with noreturn

00034afb: sub syslog(syslog_result)
00034cb1: syslog_result :: out u32 = low:32[R0]

00010bda:
0002fb3e: R16 := 0x430000
0002fb45: R17 := mem[R16 + 0x30, el]:u64
0002fb4b: R16 := R16 + 0x30
0002fb50: call R17 with noreturn

00034afc: sub tcgetattr(tcgetattr_result)
00034cb2: tcgetattr_result :: out u32 = low:32[R0]

0002bad5:
0002fc9e: R16 := 0x430000
0002fca5: R17 := mem[R16 + 0xB0, el]:u64
0002fcab: R16 := R16 + 0xB0
0002fcb0: call R17 with noreturn

00034afd: sub tcsetattr(tcsetattr_result)
00034cb3: tcsetattr_result :: out u32 = low:32[R0]

0002bb4a:
00030158: R16 := 0x430000
0003015f: R17 := mem[R16 + 0x268, el]:u64
00030165: R16 := R16 + 0x268
0003016a: call R17 with noreturn

00034afe: sub time(time_result)
00034cb4: time_result :: out u32 = low:32[R0]

0001b35b:
0002fd22: R16 := 0x430000
0002fd29: R17 := mem[R16 + 0xE0, el]:u64
0002fd2f: R16 := R16 + 0xE0
0002fd34: call R17 with noreturn

00034aff: sub to_base64(to_base64_result)
00034cb5: to_base64_result :: out u32 = low:32[R0]

000108ad:
000108b1: #52 := R2 - 2
000108b6: VF := extend:128[#52] <> extend:128[R2] - 2
000108bb: CF := pad:128[#52] <> pad:128[R2] + 0xFFFFFFFFFFFFFFFE
000108bf: ZF := #52 = 0
000108c3: NF := 63:63[#52]
000108c9: #53 := R3 - 0xA
000108ce: #54 := CF & ~ZF
000108d4: VF := #54 & extend:128[#53] <> extend:128[R3] - 0xA
000108da: CF := #54 & pad:128[#53] <> pad:128[R3] + 0xFFFFFFFFFFFFFFF6
000108df: ZF := #54 & #53 = 0
000108e4: NF := #54 & 63:63[#53]
000108eb: when ~(CF & ~ZF) goto %000108e9
00034b00: goto %00016b96

00016b96:
00016b99: R4 := 0x416000
00016b9f: R4 := R4 + 0x3B0
00016ba5: R4 := R4 + 0x220
00034b01: goto %00016ba9

00016ba9:
00016bae: R5 := pad:64[mem[R1]]
00016bb4: R0 := R0 + 4
00016bba: R2 := R2 - 3
00016bc0: R3 := R3 - 4
00016bc6: #356 := R2 - 2
00016bcb: VF := extend:128[#356] <> extend:128[R2] - 2
00016bd0: CF := pad:128[#356] <> pad:128[R2] + 0xFFFFFFFFFFFFFFFE
00016bd4: ZF := #356 = 0
00016bd8: NF := 63:63[#356]
00016bde: R1 := R1 + 3
00016be4: R5 := pad:64[31:2[R5]]
00016bea: #357 := R3 - 0xA
00016bef: #358 := CF & ~ZF
00016bf5: VF := #358 & extend:128[#357] <> extend:128[R3] - 0xA
00016bfb: CF := #358 & pad:128[#357] <> pad:128[R3] + 0xFFFFFFFFFFFFFFF6
00016c00: ZF := #358 & #357 = 0
00016c05: NF := #358 & 63:63[#357]
00016c0d: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
00016c15: mem := mem with [R0 - 4] <- 7:0[R5]
00016c1c: R6 := pad:64[mem[R1 - 3]]
00016c23: R5 := pad:64[mem[R1 - 2]]
00016c29: R6 := pad:64[1:0[R6].0]
00016c30: R5 := pad:64[31:0[R6] | pad:32[31:4[R5]]]
00016c38: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
00016c40: mem := mem with [R0 - 3] <- 7:0[R5]
00016c47: R6 := pad:64[mem[R1 - 2]]
00016c4e: R5 := pad:64[mem[R1 - 1]]
00016c54: R6 := pad:64[3:0[R6].0]
00016c5b: R5 := pad:64[31:0[R6] | pad:32[31:6[R5]]]
00016c63: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
00016c6b: mem := mem with [R0 - 2] <- 7:0[R5]
00016c72: R5 := pad:64[mem[R1 - 1]]
00016c78: R5 := pad:64[5:0[R5]]
00016c80: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
00016c88: mem := mem with [R0 - 1] <- 7:0[R5]
00016c8e: when CF & ~ZF goto %00016ba9
00034b02: goto %000108e9

000108e9:
000108f1: VF := 0
000108f4: CF := 1
000108f8: ZF := R2 = 0
000108fc: NF := 63:63[R2]
00010902: #55 := R3 - 4
00010906: #56 := ZF <> 1
0001090c: VF := #56 & extend:128[#55] <> extend:128[R3] - 4
00010912: CF := #56 & pad:128[#55] <> pad:128[R3] + 0xFFFFFFFFFFFFFFFC
00010917: ZF := #56 & #55 = 0
0001091c: NF := #56 & 63:63[#55]
00010923: when ~(CF & ~ZF) goto %00010921
00034b03: goto %00016b09

00016b09:
00016b0e: R4 := pad:64[mem[R1]]
00016b13: R3 := 0x416000
00016b19: R3 := R3 + 0x3B0
00016b1f: R3 := R3 + 0x220
00016b25: R4 := pad:64[31:2[R4]]
00016b2d: R4 := pad:64[mem[R3 + extend:64[31:0[R4]]]]
00016b35: mem := mem with [R0] <- 7:0[R4]
00016b3c: R4 := pad:64[mem[R1]]
00016b42: R4 := pad:64[1:0[R4].0]
00016b48: #355 := R2 - 1
00016b4d: VF := extend:128[#355] <> extend:128[R2] - 1
00016b52: CF := pad:128[#355] <> pad:128[R2] + 0xFFFFFFFFFFFFFFFF
00016b56: ZF := #355 = 0
00016b5a: NF := 63:63[#355]
00016b5f: when ZF goto %00010932
00034b04: goto %00016b63

00010932:
00010938: R1 := pad:64[mem[R3 + extend:64[31:0[R4]]]]
0001093d: R2 := 0x3D
00010945: mem := mem with [R0 + 1] <- 7:0[R1]
0001094a: goto %00010948

00016b63:
00016b68: R2 := pad:64[mem[R1 + 1]]
00016b6f: R2 := pad:64[31:0[R4] | pad:32[31:4[R2]]]
00016b77: R2 := pad:64[mem[R3 + extend:64[31:0[R2]]]]
00016b7f: mem := mem with [R0 + 1] <- 7:0[R2]
00016b86: R1 := pad:64[mem[R1 + 1]]
00016b8c: R1 := pad:64[3:0[R1].0]
00016b94: R2 := pad:64[mem[R3 + extend:64[31:0[R1]]]]
00034b05: goto %00010948

00010948:
0001094e: R1 := 0x3D
00010954: R0 := R0 + 4
0001095c: mem := mem with [R0 - 2] <- 7:0[R2]
00010964: mem := mem with [R0 - 1] <- 7:0[R1]
00034b06: goto %00010921

00010921:
0001092b: mem := mem with [R0] <- 0
00010930: call R30 with noreturn

00034b07: sub trimr(trimr_result)
00034cb6: trimr_result :: out u32 = low:32[R0]

000184af:
000184b3: #470 := R31 - 0x20
000184b9: mem := mem with [#470, el]:u64 <- R29
000184bf: mem := mem with [#470 + 8, el]:u64 <- R30
000184c3: R31 := #470
000184c9: R29 := R31
000184cf: #471 := R31 + 0x10
000184d5: mem := mem with [#471, el]:u64 <- R19
000184db: mem := mem with [#471 + 8, el]:u64 <- R20
000184e1: R20 := R0
000184e6: R30 := 0x40F254
000184e8: call @strlen with return %000184ea

000184ea:
000184ee: #472 := 31:0[R0] - 1
000184f2: #473 := pad:64[31:0[R0] - 1]
000184f7: VF := extend:64[#472] <> extend:64[31:0[R0]] - 1
000184fc: CF := #473 <> pad:64[31:0[R0]] + 0xFFFFFFFF
00018500: ZF := #472 = 0
00018504: NF := 31:31[#472]
00018508: R19 := #473
0001850e: when NF goto %0001850c
00034b08: goto %00018592

0001850c:
00018515: R1 := extend:64[31:0[R19]]
0001851a: goto %00018518

00018592:
00018595: R30 := 0x40F260
00018597: call @__ctype_b_loc with return %00018599

00018599:
0001859e: R0 := mem[R0, el]:u64
000185a4: R1 := pad:64[31:0[R19]]
000185a9: goto %000185a7

000185a7:
000185b0: R2 := pad:64[mem[R20 + R1]]
000185b8: R2 := pad:64[mem[R0 + (62:0[R2].0), el]:u16]
000185be: when 13:13[R2] goto %000185bc
00034b09: goto %00018518

00018518:
00018520: R1 := R20 + R1
00018526: R0 := R20
0001852d: mem := mem with [R1 + 1] <- 0
00018533: #474 := R31 + 0x10
00018538: R19 := mem[#474, el]:u64
0001853d: R20 := mem[#474 + 8, el]:u64
00018544: R29 := mem[R31, el]:u64
00018549: R30 := mem[R31 + 8, el]:u64
0001854d: R31 := R31 + 0x20
00018552: call R30 with noreturn

000185bc:
000185c5: R1 := R1 - 1
000185cb: #476 := 31:0[R1] + 1
000185d0: VF := extend:64[#476] <> extend:64[31:0[R1]] + 1
000185d5: CF := pad:64[#476] <> pad:64[31:0[R1]] + 1
000185d9: ZF := #476 = 0
000185dd: NF := 31:31[#476]
000185e2: when ZF goto %00018554
00034b0a: goto %000185a7

00018554:
00018557: R1 := 0xFFFFFFFFFFFFFFFF
0001855e: R1 := R20 + R1
00018564: R0 := R20
0001856b: mem := mem with [R1 + 1] <- 0
00018571: #475 := R31 + 0x10
00018576: R19 := mem[#475, el]:u64
0001857b: R20 := mem[#475 + 8, el]:u64
00018582: R29 := mem[R31, el]:u64
00018587: R30 := mem[R31 + 8, el]:u64
0001858b: R31 := R31 + 0x20
00018590: call R30 with noreturn

00034b0b: sub tunnel(tunnel_result)
00034cb7: tunnel_result :: out u32 = low:32[R0]

0001ed06:
0001ed0a: #852 := R31 - 0xE0
0001ed10: mem := mem with [#852, el]:u64 <- R29
0001ed16: mem := mem with [#852 + 8, el]:u64 <- R30
0001ed1a: R31 := #852
0001ed20: R29 := R31
0001ed26: #853 := R31 + 0x10
0001ed2c: mem := mem with [#853, el]:u64 <- R19
0001ed32: mem := mem with [#853 + 8, el]:u64 <- R20
0001ed38: #854 := R31 + 0x20
0001ed3e: mem := mem with [#854, el]:u64 <- R21
0001ed44: mem := mem with [#854 + 8, el]:u64 <- R22
0001ed4a: #855 := R31 + 0x30
0001ed50: mem := mem with [#855, el]:u64 <- R23
0001ed56: mem := mem with [#855 + 8, el]:u64 <- R24
0001ed5c: R24 := pad:64[31:0[R1]]
0001ed62: #856 := R31 + 0x40
0001ed68: mem := mem with [#856, el]:u64 <- R25
0001ed6e: mem := mem with [#856 + 8, el]:u64 <- R26
0001ed74: R25 := pad:64[31:0[R0]]
0001ed79: R0 := 0x1000
0001ed7f: #857 := R31 + 0x50
0001ed85: mem := mem with [#857, el]:u64 <- R27
0001ed8b: mem := mem with [#857 + 8, el]:u64 <- R28
0001ed90: R30 := 0x4090CC
0001ed92: call @zmalloc with return %0001ed94

0001ed94:
0001ed97: R1 := 0x430000
0001ed9d: R23 := R0
0001eda4: R0 := pad:64[mem[R1 + 0x374, el]:u32]
0001edaa: when 31:0[R0] <> 0 goto %0001eda8
00034b0c: goto %0001edcc

0001eda8:
0001edb1: R2 := pad:64[31:0[R24]]
0001edb7: R1 := pad:64[31:0[R25]]
0001edbc: R0 := 0x413000
0001edc2: R0 := R0 + 0x878
0001edc7: R30 := 0x40921C
0001edc9: call @printf with return %0001edcb

0001edcb:
0001edce: goto %0001edcc

0001edcc:
0001edd2: VF := 0
0001edd5: CF := 1
0001edd9: ZF := 31:0[R25] = 0
0001eddd: NF := 31:31[R25]
0001ede3: R20 := pad:64[31:0[R25] + 0x3F]
0001edf2: when NF <> VF goto %0001edea
0001edf3: goto %0001edee

0001edee:
0001edef: R20 := pad:64[31:0[R25]]
0001edf5: goto %0001edf1

0001edea:
0001edeb: R20 := pad:64[31:0[R20]]
0001edf4: goto %0001edf1

0001edf1:
0001edfb: R21 := pad:64[31:0[R24] + 0x3F]
0001ee00: VF := 0
0001ee03: CF := 1
0001ee07: ZF := 31:0[R24] = 0
0001ee0b: NF := 31:31[R24]
0001ee10: R26 := 1
0001ee1f: when NF <> VF goto %0001ee17
0001ee20: goto %0001ee1b

0001ee1b:
0001ee1c: R21 := pad:64[31:0[R24]]
0001ee22: goto %0001ee1e

0001ee17:
0001ee18: R21 := pad:64[31:0[R21]]
0001ee21: goto %0001ee1e

0001ee1e:
0001ee28: R20 := pad:64[extend:32[31:6[R20]]]
0001ee2d: V0 := 0
0001ee33: R19 := R31 + 0x60
0001ee39: R21 := pad:64[extend:32[31:6[R21]]]
0001ee3f: R20 := extend:64[31:0[R20].0]
0001ee46: R22 := R26 << pad:12[5:0[R25]]
0001ee4c: R21 := extend:64[31:0[R21].0]
0001ee53: R26 := R26 << pad:12[5:0[R24]]
00034b0d: goto %0001ee55

0001ee55:
0001ee59: #858 := R31 + 0x60
0001ee5f: mem := mem with [#858, el]:u128 <- V0
0001ee65: mem := mem with [#858 + 0x10, el]:u128 <- V0
0001ee6b: R1 := R19
0001ee70: R4 := 0
0001ee76: #859 := R31 + 0x80
0001ee7c: mem := mem with [#859, el]:u128 <- V0
0001ee82: mem := mem with [#859 + 0x10, el]:u128 <- V0
0001ee87: R3 := 0
0001ee8c: R2 := 0
0001ee92: #860 := R31 + 0xA0
0001ee98: mem := mem with [#860, el]:u128 <- V0
0001ee9e: mem := mem with [#860 + 0x10, el]:u128 <- V0
0001eea3: R0 := 0x400
0001eea9: #861 := R31 + 0xC0
0001eeaf: mem := mem with [#861, el]:u128 <- V0
0001eeb5: mem := mem with [#861 + 0x10, el]:u128 <- V0
0001eebd: R5 := mem[R19 + R20, el]:u64
0001eec4: R5 := R5 | R22
0001eecd: mem := mem with [R19 + R20, el]:u64 <- R5
0001eed5: R5 := mem[R19 + R21, el]:u64
0001eedc: R5 := R5 | R26
0001eee5: mem := mem with [R19 + R21, el]:u64 <- R5
0001eeea: R30 := 0x409158
0001eeed: call @select with return %0001eeef

0001eeef:
0001eef2: VF := 0
0001eef5: CF := 1
0001eef9: ZF := 31:0[R0] = 0
0001eefd: NF := 31:31[R0]
0001ef02: V0 := 0
0001ef0a: when ~(NF = VF & ~ZF) goto %0001ef08
00034b0e: goto %0001f01c

0001ef08:
0001ef10: when ZF goto %0001ee55
00034b0f: goto %0001ef14

0001ef14:
0001ef18: R0 := R23
0001ef1d: R30 := 0x4091BC
0001ef1f: call @free with return %0001ef21

0001ef21:
0001ef25: #862 := R31 + 0x10
0001ef2a: R19 := mem[#862, el]:u64
0001ef2f: R20 := mem[#862 + 8, el]:u64
0001ef34: R0 := 0
0001ef3a: #863 := R31 + 0x20
0001ef3f: R21 := mem[#863, el]:u64
0001ef44: R22 := mem[#863 + 8, el]:u64
0001ef4a: #864 := R31 + 0x30
0001ef4f: R23 := mem[#864, el]:u64
0001ef54: R24 := mem[#864 + 8, el]:u64
0001ef5a: #865 := R31 + 0x40
0001ef5f: R25 := mem[#865, el]:u64
0001ef64: R26 := mem[#865 + 8, el]:u64
0001ef6a: #866 := R31 + 0x50
0001ef6f: R27 := mem[#866, el]:u64
0001ef74: R28 := mem[#866 + 8, el]:u64
0001ef7b: R29 := mem[R31, el]:u64
0001ef80: R30 := mem[R31 + 8, el]:u64
0001ef84: R31 := R31 + 0xE0
0001ef89: call R30 with noreturn

0001f01c:
0001f022: R1 := mem[R19 + R20, el]:u64
0001f028: R0 := pad:64[31:0[R24]]
0001f02e: R27 := pad:64[31:0[R25]]
0001f033: VF := 0
0001f036: CF := 0
0001f03b: ZF := (R22 & R1) = 0
0001f040: NF := 63:63[R22] & 63:63[R1]
0001f046: when ZF goto %0001f044
00034b10: goto %0001f09c

0001f09c:
0001f0a0: R27 := pad:64[31:0[R24]]
0001f0a6: R0 := pad:64[31:0[R25]]
00034b11: goto %0001f044

0001f044:
0001f04d: R1 := R23
0001f052: R2 := 0x1000
0001f057: R30 := 0x40918C
0001f059: call @read with return %0001f05b

0001f05b:
0001f05f: R28 := R0
0001f065: R1 := R23
0001f06b: R0 := pad:64[31:0[R27]]
0001f070: VF := 0
0001f073: CF := 1
0001f077: ZF := 31:0[R28] = 0
0001f07b: NF := 31:31[R28]
0001f082: when ~(NF = VF & ~ZF) goto %0001ef8b
00034b12: goto %0001f086

0001ef8b:
0001ef8f: R0 := R23
0001ef94: R30 := 0x4091E4
0001ef96: call @free with return %0001ef98

0001ef98:
0001ef9b: VF := 0
0001ef9e: CF := 1
0001efa2: ZF := 31:0[R28] = 0
0001efa6: NF := 31:31[R28]
0001efac: #867 := R31 + 0x10
0001efb1: R19 := mem[#867, el]:u64
0001efb6: R20 := mem[#867 + 8, el]:u64
0001efc2: when ZF <> 1 goto %0001efbb
0001efc3: goto %0001efbe

0001efbe:
0001efbf: R0 := 1
0001efc5: goto %0001efc1

0001efbb:
0001efbc: R0 := 0
0001efc4: goto %0001efc1

0001efc1:
0001efcb: #868 := R31 + 0x20
0001efd0: R21 := mem[#868, el]:u64
0001efd5: R22 := mem[#868 + 8, el]:u64
0001efdb: #869 := R31 + 0x30
0001efe0: R23 := mem[#869, el]:u64
0001efe5: R24 := mem[#869 + 8, el]:u64
0001efeb: #870 := R31 + 0x40
0001eff0: R25 := mem[#870, el]:u64
0001eff5: R26 := mem[#870 + 8, el]:u64
0001effb: #871 := R31 + 0x50
0001f000: R27 := mem[#871, el]:u64
0001f005: R28 := mem[#871 + 8, el]:u64
0001f00c: R29 := mem[R31, el]:u64
0001f011: R30 := mem[R31 + 8, el]:u64
0001f015: R31 := R31 + 0xE0
0001f01a: call R30 with noreturn

0001f086:
0001f08a: R2 := extend:64[31:0[R28]]
0001f08f: R30 := 0x4091A8
0001f091: call @write_wrapper with return %0001f093

0001f093:
0001f096: V0 := 0
0001f09a: goto %0001ee55

00034b13: sub tunnel_add(tunnel_add_result)
00034cb8: tunnel_add_result :: out u32 = low:32[R0]

0001ff5d:
0001ff61: #929 := R31 - 0x70
0001ff67: mem := mem with [#929, el]:u64 <- R29
0001ff6d: mem := mem with [#929 + 8, el]:u64 <- R30
0001ff71: R31 := #929
0001ff77: R29 := R31
0001ff7d: #930 := R31 + 0x10
0001ff83: mem := mem with [#930, el]:u64 <- R19
0001ff89: mem := mem with [#930 + 8, el]:u64 <- R20
0001ff8f: #931 := R31 + 0x20
0001ff95: mem := mem with [#931, el]:u64 <- R21
0001ff9b: mem := mem with [#931 + 8, el]:u64 <- R22
0001ffa1: R22 := pad:64[31:0[R2]]
0001ffa7: R21 := R0
0001ffad: R0 := R1
0001ffb3: #932 := R31 + 0x30
0001ffb9: mem := mem with [#932, el]:u64 <- R23
0001ffbf: mem := mem with [#932 + 8, el]:u64 <- R24
0001ffc4: R30 := 0x409CB4
0001ffc6: call @strdup with return %0001ffc8

0001ffc8:
0001ffcc: R20 := R0
0001ffd1: R30 := 0x409CBC
0001ffd3: call @strlen with return %0001ffd5

0001ffd5:
0001ffdb: mem := mem with [R31 + 0x50, el]:u64 <- R20
0001ffe0: VF := 0
0001ffe3: CF := 1
0001ffe7: ZF := 31:0[R0] = 0
0001ffeb: NF := 31:31[R0]
0001fff3: when ~(NF = VF & ~ZF) goto %0001fff1
00034b14: goto %000289cc

0001fff1:
0001fffa: R0 := R20
0001ffff: R2 := 0xA
00020004: R1 := 0
00020009: R30 := 0x409E7C
0002000b: call @strtol with return %0002000d

0002000d:
00020011: when 31:0[R0] <> 0 goto %0002000f
00034b15: goto %00020081

000289cc:
000289d0: R1 := R20 + 1
000289d6: R2 := pad:64[31:0[R0]]
000289db: R19 := 1
000289e1: R23 := R31 + 0x50
000289e8: R0 := pad:64[31:0[R19] + ~31:0[R1] + 1]
00034b16: goto %000289ec

000289ec:
000289f1: R3 := pad:64[mem[R1 - 1]]
000289f7: #1293 := 31:0[R3] - 0x3A
000289fc: VF := extend:64[#1293] <> extend:64[31:0[R3]] - 0x3A
00028a01: CF := pad:64[#1293] <> pad:64[31:0[R3]] + 0xFFFFFFC6
00028a05: ZF := #1293 = 0
00028a09: NF := 31:31[#1293]
00028a0f: when ZF <> 1 goto %00028a0d
00034b17: goto %00028cf8

00028cf8:
00028cff: mem := mem with [R23 + extend:64[31:0[R19].0], el]:u64 <- R1
00028d05: R19 := pad:64[31:0[R19] + 1]
00028d0c: mem := mem with [R1 - 1] <- 0
00034b18: goto %00028a0d

00028a0d:
00028a17: R3 := pad:64[31:0[R0] + 31:0[R1]]
00028a1d: R1 := R1 + 1
00028a23: #1294 := ~31:0[R3]
00028a28: #1295 := 31:0[R2] + ~31:0[R3]
00028a2e: VF := extend:64[#1295 + 1] <> extend:64[31:0[R2]] +
          extend:64[#1294] + 1
00028a34: CF := pad:64[#1295 + 1] <> pad:64[31:0[R2]] + pad:64[#1294] + 1
00028a38: ZF := #1295 + 1 = 0
00028a3c: NF := 31:31[#1295 + 1]
00028a4a: when ~(NF = VF & ~ZF) goto %00028a43
00028a4b: goto %00028a46

00028a46:
00028a47: R4 := 1
00028a4d: goto %00028a49

00028a43:
00028a44: R4 := 0
00028a4c: goto %00028a49

00028a49:
00028a53: #1296 := 31:0[R19] - 3
00028a58: VF := extend:64[#1296] <> extend:64[31:0[R19]] - 3
00028a5d: CF := pad:64[#1296] <> pad:64[31:0[R19]] + 0xFFFFFFFD
00028a61: ZF := #1296 = 0
00028a65: NF := 31:31[#1296]
00028a73: when NF = VF & ~ZF goto %00028a6c
00028a74: goto %00028a6f

00028a6f:
00028a70: R3 := 1
00028a76: goto %00028a72

00028a6c:
00028a6d: R3 := 0
00028a75: goto %00028a72

00028a72:
00028a7b: VF := 0
00028a7e: CF := 0
00028a83: ZF := (31:0[R4] & 31:0[R3]) = 0
00028a88: NF := 31:31[R4] & 31:31[R3]
00028a8d: when ZF <> 1 goto %000289ec
00034b19: goto %00028a91

00028a91:
00028a96: R24 := mem[R31 + 0x50, el]:u64
00028a9c: #1297 := 31:0[R19] - 4
00028aa1: VF := extend:64[#1297] <> extend:64[31:0[R19]] - 4
00028aa6: CF := pad:64[#1297] <> pad:64[31:0[R19]] + 0xFFFFFFFC
00028aaa: ZF := #1297 = 0
00028aae: NF := 31:31[#1297]
00028ab4: when ZF goto %00028ab2
00034b1a: goto %00028c98

00028ab2:
00028abc: R19 := mem[R23 + 8, el]:u64
00028ac1: R2 := 0xA
00028ac6: R1 := 0
00028acc: R0 := R19
00028ad1: R30 := 0x409E48
00028ad3: call @strtol with return %00028ad5

00028ad5:
00028ad9: R2 := R0
00028ade: when 31:0[R0] = 0 goto %000200ad
00034b1b: goto %00028ae2

00028ae2:
00028ae6: R1 := R24
00028aec: R0 := R31 + 0x48
00028af1: R30 := 0x409E5C
00028af3: call @so_resolv with return %00028af5

00028af5:
00028af8: when 31:0[R0] = 0 goto %000200ad
00034b1c: goto %00028afc

000200ad:
000200b1: R3 := R19
000200b7: R2 := R24
000200bc: R1 := 0x413000
000200c2: R1 := R1 + 0xAD0
000200c7: R0 := 3
000200cc: R30 := 0x409F00
000200ce: call @syslog with return %000200d0

000200d0:
000200d3: R0 := 1
000200d8: R30 := 0x409F08
000200da: call @myexit with return %000200dc

000200dc:
00034b1d: call @noproxy_add with noreturn

00028afc:
00028aff: R0 := 3
00028b04: R1 := 2
00028b09: goto %00028b07

00028c98:
00028c9b: R1 := 0
00028ca1: R0 := R24
00028ca6: R2 := 0xA
00028cab: R30 := 0x409D34
00028cad: call @strtol with return %00028caf

00028caf:
00028cb3: R1 := R0
00028cb8: when 31:0[R0] = 0 goto %0002007a
00034b1e: goto %00028cbc

00028cbc:
00028cc0: R2 := pad:64[31:0[R22]]
00028cc6: R0 := R31 + 0x48
00028ccb: R30 := 0x409D48
00028ccd: call @so_resolv_wildcard with return %00028ccf

00028ccf:
00028cd3: #1301 := 31:0[R19] - 3
00028cd8: VF := extend:64[#1301] <> extend:64[31:0[R19]] - 3
00028cdd: CF := pad:64[#1301] <> pad:64[31:0[R19]] + 0xFFFFFFFD
00028ce1: ZF := #1301 = 0
00028ce5: NF := 31:31[#1301]
00028cea: when ZF <> 1 goto %0002002d
00034b1f: goto %00028cee

00028cee:
00028cf1: R0 := 2
00028cf6: R1 := 1
00034b20: goto %00028b07

00028b07:
00028b10: R22 := mem[R23 + (60:0[R1].0), el]:u64
00028b18: R23 := mem[R23 + (60:0[R0].0), el]:u64
00028b1f: R0 := pad:64[mem[R22]]
00028b24: when 31:0[R0] = 0 goto %0002004b
00034b21: goto %00028b28

00028b28:
00028b2d: R0 := pad:64[mem[R23]]
00028b32: when 31:0[R0] = 0 goto %0002004b
00034b22: goto %00028b36

0002004b:
0002004f: R3 := R23
00020055: R2 := R22
0002005a: R1 := 0x413000
00020060: R1 := R1 + 0xB20
00020065: R0 := 3
0002006a: R30 := 0x409ED8
0002006c: call @syslog with return %0002006e

0002006e:
00020071: R0 := 1
00020076: R30 := 0x409EE0
00020078: call @myexit with return %0002007a

0002007a:
0002007e: R20 := R24
00020083: goto %00020081

00020081:
00020088: R2 := R20
0002008d: R1 := 0x413000
00020093: R1 := R1 + 0xB00
00020098: R0 := 3
0002009d: R30 := 0x409E94
0002009f: call @syslog with return %000200a1

000200a1:
000200a4: R0 := 1
000200a9: R30 := 0x409E9C
000200ab: call @myexit with return %0002000f

0002000f:
00020018: R1 := pad:64[31:0[R0]]
0002001e: R2 := pad:64[31:0[R22]]
00020024: R0 := R31 + 0x48
00020029: R30 := 0x409EAC
0002002b: call @so_resolv_wildcard with return %0002002d

0002002d:
00020030: R0 := 0x413000
00020036: R0 := R0 + 0xB70
0002003b: R30 := 0x409EB8
0002003d: call @puts with return %0002003f

0002003f:
00020042: R0 := 1
00020047: R30 := 0x409EC0
00020049: call @myexit with return %0002004b

00028b36:
00028b3a: R0 := R22
00028b3f: R30 := 0x409D78
00028b41: call @strlen with return %00028b43

00028b43:
00028b47: R19 := R0
00028b4d: R0 := R23
00028b52: R30 := 0x409D84
00028b54: call @strlen with return %00028b56

00028b56:
00028b5b: R19 := R19 + R0
00028b61: R19 := R19 + 3
00028b67: R0 := R19
00028b6c: R30 := 0x409D94
00028b6e: call @zmalloc with return %00028b70

00028b70:
00028b74: R1 := R22
00028b7a: R2 := R19
00028b80: R22 := R0
00028b85: R30 := 0x409DA4
00028b87: call @strlcpy with return %00028b89

00028b89:
00028b8d: R2 := R19
00028b93: R0 := R22
00028b98: R1 := 0x413000
00028b9e: R1 := R1 + 0x640
00028ba3: R30 := 0x409DB8
00028ba5: call @strlcat with return %00028ba7

00028ba7:
00028bab: R2 := R19
00028bb1: R1 := R23
00028bb7: R0 := R22
00028bbc: R30 := 0x409DC8
00028bbe: call @strlcat with return %00028bc0

00028bc0:
00028bc5: R1 := mem[R31 + 0x48, el]:u64
00028bcb: R2 := R22
00028bd1: R0 := R21
00028bd6: R30 := 0x409DD8
00028bd8: call @so_listen with return %00028bda

00028bda:
00028bdd: VF := 0
00028be0: CF := 1
00028be4: ZF := 31:0[R0] = 0
00028be8: NF := 31:31[R0]
00028bf0: when ~(NF = VF & ~ZF) goto %00028bee
00034b23: goto %00028c7b

00028bee:
00028bf6: R1 := 0x413000
00028bfc: R1 := R1 + 0xB58
00028c01: R0 := 3
00028c06: R30 := 0x409E28
00028c08: call @syslog with return %00028c0a

00028c0a:
00028c0e: R0 := R22
00028c13: R30 := 0x409E30
00028c15: call @free with return %00028c17

00028c17:
00028c1a: goto %00028c18

00028c7b:
00028c7e: R1 := 0x413000
00028c84: R2 := R22
00028c8a: R1 := R1 + 0xB40
00028c8f: R0 := 6
00028c94: R30 := 0x409DF4
00028c96: call @syslog with return %00028c18

00028c18:
00028c1f: R0 := R20
00028c24: R30 := 0x409DFC
00028c26: call @free with return %00028c28

00028c28:
00028c2d: R0 := mem[R31 + 0x48, el]:u64
00028c32: R30 := 0x409E04
00028c34: call @freeaddrinfo with return %00028c36

00028c36:
00028c3a: #1298 := R31 + 0x10
00028c3f: R19 := mem[#1298, el]:u64
00028c44: R20 := mem[#1298 + 8, el]:u64
00028c4a: #1299 := R31 + 0x20
00028c4f: R21 := mem[#1299, el]:u64
00028c54: R22 := mem[#1299 + 8, el]:u64
00028c5a: #1300 := R31 + 0x30
00028c5f: R23 := mem[#1300, el]:u64
00028c64: R24 := mem[#1300 + 8, el]:u64
00028c6b: R29 := mem[R31, el]:u64
00028c70: R30 := mem[R31 + 8, el]:u64
00028c74: R31 := R31 + 0x70
00028c79: call R30 with noreturn

00034b24: sub tunnel_thread(tunnel_thread_result)
00034cb9: tunnel_thread_result :: out u32 = low:32[R0]

00027810:
00027814: #1230 := R31 - 0x20
0002781a: mem := mem with [#1230, el]:u64 <- R29
00027820: mem := mem with [#1230 + 8, el]:u64 <- R30
00027824: R31 := #1230
0002782a: R29 := R31
00027830: #1231 := R31 + 0x10
00027836: mem := mem with [#1231, el]:u64 <- R19
0002783c: mem := mem with [#1231 + 8, el]:u64 <- R20
00027842: R19 := R0
00027849: R0 := mem[R0 + 8, el]:u64
0002784e: R30 := 0x40A2A8
00027850: call @strdup with return %00027852

00027852:
00027856: R20 := R0
0002785b: R1 := 0x3A
00027860: R30 := 0x40A2B4
00027862: call @strchr with return %00027864

00027864:
00027868: when R0 = 0 goto %00027866
00034b25: goto %00028787

00028787:
0002878c: mem := mem with [R0] <- 0
00034b26: goto %00027866

00027866:
0002786f: R0 := R20
00027874: R30 := 0x40A2C4
00027876: call @noproxy_match with return %00027878

00027878:
0002787c: when 31:0[R0] <> 0 goto %0002787a
00034b27: goto %00028728

00028728:
0002872c: R0 := R19
00028731: R30 := 0x40A2D0
00028733: call @forward_tunnel with return %00028735

00028735:
00028739: #1283 := 31:0[R0] + 2
0002873e: VF := extend:64[#1283] <> extend:64[31:0[R0]] + 2
00028743: CF := pad:64[#1283] <> pad:64[31:0[R0]] + 2
00028747: ZF := #1283 = 0
0002874b: NF := 31:31[#1283]
00028750: when ZF goto %0002787a
00034b28: goto %00028754

0002787a:
00027883: R0 := R19
00027888: R30 := 0x40A310
0002788a: call @direct_tunnel with return %0002788c

0002788c:
00027890: R0 := R20
00027895: R30 := 0x40A318
00027897: call @free with return %00027899

00027899:
0002789d: R0 := R19
000278a2: R19 := 0x430000
000278a8: R19 := R19 + 0x370
000278ad: R30 := 0x40A328
000278af: call @free with return %000278b1

000278b1:
000278b6: R0 := pad:64[mem[R19 + 0x10, el]:u32]
000278bc: when 31:0[R0] <> 0 goto %000278ba
00034b29: goto %000278e9

00028754:
00028758: R0 := R20
0002875d: R30 := 0x40A2E0
0002875f: call @free with return %00028761

00028761:
00028765: R0 := R19
0002876a: R19 := 0x430000
00028770: R19 := R19 + 0x370
00028775: R30 := 0x40A2F0
00028777: call @free with return %00028779

00028779:
0002877e: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00028783: when 31:0[R0] = 0 goto %000278e9
00034b2a: goto %000278ba

000278e9:
000278ed: R20 := R19 + 0x18
000278f3: R0 := R20
000278f8: R30 := 0x40A33C
000278fa: call @pthread_mutex_lock with return %000278fc

000278fc:
000278ff: R30 := 0x40A340
00027901: call @pthread_self with return %00027903

00027903:
00027907: R1 := R0
0002790e: R0 := mem[R19 + 0x48, el]:u64
00027913: R2 := 0
00027918: R30 := 0x40A350
0002791a: call @plist_add with return %0002791c

0002791c:
00027920: R1 := R0
00027926: R0 := R20
0002792e: mem := mem with [R19 + 0x48, el]:u64 <- R1
00027933: R30 := 0x40A360
00027935: call @pthread_mutex_unlock with return %00027937

00027937:
0002793b: #1233 := R31 + 0x10
00027940: R19 := mem[#1233, el]:u64
00027945: R20 := mem[#1233 + 8, el]:u64
0002794a: R0 := 0
00027951: R29 := mem[R31, el]:u64
00027956: R30 := mem[R31 + 8, el]:u64
0002795a: R31 := R31 + 0x20
0002795f: call R30 with noreturn

000278ba:
000278c3: #1232 := R31 + 0x10
000278c8: R19 := mem[#1232, el]:u64
000278cd: R20 := mem[#1232 + 8, el]:u64
000278d2: R0 := 0
000278d9: R29 := mem[R31, el]:u64
000278de: R30 := mem[R31 + 8, el]:u64
000278e2: R31 := R31 + 0x20
000278e7: call R30 with noreturn

00034b2b: sub umask(umask_result)
00034cba: umask_result :: out u32 = low:32[R0]

0002dbd0:
0003021e: R16 := 0x430000
00030225: R17 := mem[R16 + 0x2B0, el]:u64
0003022b: R16 := R16 + 0x2B0
00030230: call R17 with noreturn

00034b2c: sub unicode(unicode_result)
00034cbb: unicode_result :: out u32 = low:32[R0]

00010426:
0001042a: #18 := R31 - 0x40
00010430: mem := mem with [#18, el]:u64 <- R29
00010436: mem := mem with [#18 + 8, el]:u64 <- R30
0001043a: R31 := #18
00010440: R29 := R31
00010446: #19 := R31 + 0x20
0001044c: mem := mem with [#19, el]:u64 <- R21
00010452: mem := mem with [#19 + 8, el]:u64 <- R22
00010458: R22 := R0
00010460: mem := mem with [R31 + 0x30, el]:u64 <- R23
00010466: when R1 = 0 goto %00010464
00034b2d: goto %00016e76

00010464:
0001046c: R23 := 0
00010471: R1 := 0
00010477: R0 := pad:64[31:0[R23]]
0001047e: R23 := mem[R31 + 0x30, el]:u64
00010486: mem := mem with [R22, el]:u64 <- R1
0001048c: #20 := R31 + 0x20
00010491: R21 := mem[#20, el]:u64
00010496: R22 := mem[#20 + 8, el]:u64
0001049d: R29 := mem[R31, el]:u64
000104a2: R30 := mem[R31 + 8, el]:u64
000104a6: R31 := R31 + 0x40
000104ab: call R30 with noreturn

00016e76:
00016e7a: R0 := R1
00016e80: #366 := R31 + 0x10
00016e86: mem := mem with [#366, el]:u64 <- R19
00016e8c: mem := mem with [#366 + 8, el]:u64 <- R20
00016e92: R19 := R1
00016e97: R30 := 0x40F398
00016e99: call @strlen with return %00016e9b

00016e9b:
00016e9f: R21 := R0
00016ea4: R1 := 0x40
00016eaa: #367 := ~R1
00016eaf: #368 := R21 + ~R1
00016eb5: VF := extend:128[#368 + 1] <> extend:128[R21] + extend:128[#367] +
          1
00016ebb: CF := pad:128[#368 + 1] <> pad:128[R21] + pad:128[#367] + 1
00016ebf: ZF := #368 + 1 = 0
00016ec3: NF := 63:63[#368 + 1]
00016ed2: when ~(CF & ~ZF) goto %00016eca
00016ed3: goto %00016ece

00016ece:
00016ecf: R21 := R1
00016ed5: goto %00016ed1

00016eca:
00016ecb: R21 := R21
00016ed4: goto %00016ed1

00016ed1:
00016eda: R0 := 1
00016ee0: R20 := pad:64[31:0[R21]]
00016ee6: R23 := pad:64[30:0[R21].0]
00016eec: R1 := extend:64[31:0[R23]]
00016ef1: R30 := 0x40F3BC
00016ef3: call @calloc with return %00016ef5

00016ef5:
00016ef9: R1 := R0
00016eff: when 31:0[R21] = 0 goto %00016efd
00034b2e: goto %00016f4c

00016f4c:
00016f4f: R2 := 0
00034b2f: goto %00016f51

00016f51:
00016f55: R3 := 62:0[R2].0
00016f5d: R4 := pad:64[mem[R19 + R2]]
00016f63: R2 := R2 + 1
00016f6c: mem := mem with [R1 + R3] <- 7:0[R4]
00016f72: #371 := ~31:0[R2]
00016f77: #372 := 31:0[R20] + ~31:0[R2]
00016f7d: VF := extend:64[#372 + 1] <> extend:64[31:0[R20]] + extend:64[#371]
          + 1
00016f83: CF := pad:64[#372 + 1] <> pad:64[31:0[R20]] + pad:64[#371] + 1
00016f87: ZF := #372 + 1 = 0
00016f8b: NF := 31:31[#372 + 1]
00016f92: when NF = VF & ~ZF goto %00016f51
00034b30: goto %00016efd

00016efd:
00016f06: #369 := R31 + 0x10
00016f0b: R19 := mem[#369, el]:u64
00016f10: R20 := mem[#369 + 8, el]:u64
00016f16: R0 := pad:64[31:0[R23]]
00016f1d: R23 := mem[R31 + 0x30, el]:u64
00016f25: mem := mem with [R22, el]:u64 <- R1
00016f2b: #370 := R31 + 0x20
00016f30: R21 := mem[#370, el]:u64
00016f35: R22 := mem[#370 + 8, el]:u64
00016f3c: R29 := mem[R31, el]:u64
00016f41: R30 := mem[R31 + 8, el]:u64
00016f45: R31 := R31 + 0x40
00016f4a: call R30 with noreturn

00034b31: sub unlink(unlink_name, unlink_result)
00034cbc: unlink_name :: in u64 = R0
00034cbd: unlink_result :: out u32 = low:32[R0]

0002bf0b:
000302b8: R16 := 0x430000
000302bf: R17 := mem[R16 + 0x2E8, el]:u64
000302c5: R16 := R16 + 0x2E8
000302ca: call R17 with noreturn

00034b32: sub uppercase(uppercase_result)
00034cbe: uppercase_result :: out u32 = low:32[R0]

0001035d:
00010361: #13 := R31 - 0x20
00010367: mem := mem with [#13, el]:u64 <- R29
0001036d: mem := mem with [#13 + 8, el]:u64 <- R30
00010371: R31 := #13
00010377: R29 := R31
0001037d: #14 := R31 + 0x10
00010383: mem := mem with [#14, el]:u64 <- R19
00010389: mem := mem with [#14 + 8, el]:u64 <- R20
0001038f: R20 := R0
00010394: R19 := 0
00010399: goto %00010397

00010397:
0001039e: R0 := R20
000103a3: R30 := 0x40F358
000103a5: call @strlen with return %000103a7

000103a7:
000103ab: #15 := ~R0
000103b0: #16 := R19 + ~R0
000103b6: VF := extend:128[#16 + 1] <> extend:128[R19] + extend:128[#15] + 1
000103bc: CF := pad:128[#16 + 1] <> pad:128[R19] + pad:128[#15] + 1
000103c0: ZF := #16 + 1 = 0
000103c4: NF := 63:63[#16 + 1]
000103ca: when CF <> 1 goto %000103c8
00034b33: goto %000103fb

000103fb:
000103ff: R0 := R20
00010405: #17 := R31 + 0x10
0001040a: R19 := mem[#17, el]:u64
0001040f: R20 := mem[#17 + 8, el]:u64
00010416: R29 := mem[R31, el]:u64
0001041b: R30 := mem[R31 + 8, el]:u64
0001041f: R31 := R31 + 0x20
00010424: call R30 with noreturn

000103c8:
000103d0: R30 := 0x40F33C
000103d3: call @__ctype_toupper_loc with return %000103d5

000103d5:
000103da: R0 := mem[R0, el]:u64
000103e2: R1 := pad:64[mem[R20 + R19]]
000103ea: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000103f3: mem := mem with [R20 + R19] <- 7:0[R0]
000103f9: R19 := R19 + 1
00034b34: goto %00010397

00034b35: sub urlencode(urlencode_result)
00034cbf: urlencode_result :: out u32 = low:32[R0]

000104af:
000104b3: #21 := R31 - 0x60
000104b9: mem := mem with [#21, el]:u64 <- R29
000104bf: mem := mem with [#21 + 8, el]:u64 <- R30
000104c3: R31 := #21
000104c9: R29 := R31
000104cf: #22 := R31 + 0x10
000104d5: mem := mem with [#22, el]:u64 <- R19
000104db: mem := mem with [#22 + 8, el]:u64 <- R20
000104e1: R20 := R0
000104e7: #23 := R31 + 0x20
000104ed: mem := mem with [#23, el]:u64 <- R21
000104f3: mem := mem with [#23 + 8, el]:u64 <- R22
000104f9: #24 := R31 + 0x30
000104ff: mem := mem with [#24, el]:u64 <- R23
00010505: mem := mem with [#24 + 8, el]:u64 <- R24
0001050b: #25 := R31 + 0x40
00010511: mem := mem with [#25, el]:u64 <- R25
00010517: mem := mem with [#25 + 8, el]:u64 <- R26
0001051c: R30 := 0x40F440
0001051e: call @strlen with return %00010520

00010520:
00010524: R26 := R0
00010529: R0 := 1
00010530: R23 := R26 + (62:0[R26].0)
00010537: R23 := R23 + R0
0001053d: R1 := R23
00010542: R30 := 0x40F458
00010544: call @calloc with return %00010546

00010546:
0001054a: R22 := R0
00010550: when R26 = 0 goto %0001054e
00034b36: goto %00016e45

00016e45:
00016e4a: R26 := R20 + R26
00016e50: #365 := R31 + 0x50
00016e56: mem := mem with [#365, el]:u64 <- R27
00016e5c: mem := mem with [#365 + 8, el]:u64 <- R28
00016e61: R30 := 0x40F46C
00016e64: call @__ctype_b_loc with return %00016e66

00016e66:
00016e6a: R28 := R0
00016e6f: R21 := 0
00016e74: R24 := 0x7E
00034b37: goto %00010605

00010605:
0001060f: R27 := pad:64[mem[R20]]
00010616: R25 := R22 + R21
0001061d: R2 := mem[R28, el]:u64
00010623: R19 := R27
00010629: R1 := pad:64[7:0[R27].0]
00010631: R1 := pad:64[mem[R2 + R1, el]:u16]
00010637: when 11:11[R1] goto %00010635
00034b38: goto %00010648

00010648:
0001064b: R30 := 0x40F498
0001064d: call @__ctype_tolower_loc with return %0001064f

0001064f:
00010654: R0 := mem[R0, el]:u64
0001065a: R1 := pad:64[31:0[R27] - 0x2D]
00010660: R2 := pad:64[7:0[R1]]
00010668: R1 := pad:64[mem[R0 + (61:0[R27].0), el]:u32]
0001066e: R1 := pad:64[31:0[R1] - 0x61]
00010674: #32 := 31:0[R1] - 0x19
00010679: VF := extend:64[#32] <> extend:64[31:0[R1]] - 0x19
0001067e: CF := pad:64[#32] <> pad:64[31:0[R1]] + 0xFFFFFFE7
00010682: ZF := #32 = 0
00010686: NF := 31:31[#32]
0001068c: when ~(CF & ~ZF) goto %00010635
00034b39: goto %00010690

00010690:
00010694: #33 := 31:0[R27] - 0x5F
00010699: VF := extend:64[#33] <> extend:64[31:0[R27]] - 0x5F
0001069e: CF := pad:64[#33] <> pad:64[31:0[R27]] + 0xFFFFFFA1
000106a2: ZF := #33 = 0
000106a6: NF := 31:31[#33]
000106ac: #34 := 31:0[R2] - 1
000106b0: #35 := ZF <> 1
000106b6: VF := #35 & extend:64[#34] <> extend:64[31:0[R2]] - 1
000106bc: CF := #35 & pad:64[#34] <> pad:64[31:0[R2]] + 0xFFFFFFFF
000106c1: ZF := #35 & #34 = 0
000106c6: NF := #35 & 31:31[#34]
000106cc: #36 := ~31:0[R24]
000106d1: #37 := 31:0[R27] + ~31:0[R24]
000106d6: #38 := CF & ~ZF
000106dd: VF := #38 & extend:64[#37 + 1] <> extend:64[31:0[R27]] +
          extend:64[#36] + 1
000106e4: CF := #38 & pad:64[#37 + 1] <> pad:64[31:0[R27]] + pad:64[#36] + 1
000106e9: ZF := #37 + 1 = 0 | ~#38
000106ee: NF := #38 & 31:31[#37 + 1]
000106f3: when ZF <> 1 goto %000105ae
00034b3a: goto %00010635

000105ae:
000105b3: R1 := R23 + ~R21 + 1
000105b9: R3 := pad:64[31:0[R27]]
000105bf: R0 := R25
000105c4: R2 := 0x416000
000105ca: R21 := R21 + 3
000105d0: R2 := R2 + 0x178
000105d5: R30 := 0x40F514
000105d8: call @snprintf with return %000105da

000105da:
000105dd: goto %000105db

00010635:
0001063e: R21 := R21 + 1
00010646: mem := mem with [R25] <- 7:0[R19]
00034b3b: goto %000105db

000105db:
000105e2: R20 := R20 + 1
000105e8: #30 := ~R26
000105ed: #31 := R20 + ~R26
000105f3: VF := extend:128[#31 + 1] <> extend:128[R20] + extend:128[#30] + 1
000105f9: CF := pad:128[#31 + 1] <> pad:128[R20] + pad:128[#30] + 1
000105fd: ZF := #31 + 1 = 0
00010601: NF := 63:63[#31 + 1]
00010607: when ZF <> 1 goto %00010605
00034b3c: goto %000106f7

000106f7:
000106fb: #39 := R31 + 0x50
00010700: R27 := mem[#39, el]:u64
00010705: R28 := mem[#39 + 8, el]:u64
00034b3d: goto %0001054e

0001054e:
00010557: R0 := R22
0001055d: #26 := R31 + 0x10
00010562: R19 := mem[#26, el]:u64
00010567: R20 := mem[#26 + 8, el]:u64
0001056d: #27 := R31 + 0x20
00010572: R21 := mem[#27, el]:u64
00010577: R22 := mem[#27 + 8, el]:u64
0001057d: #28 := R31 + 0x30
00010582: R23 := mem[#28, el]:u64
00010587: R24 := mem[#28 + 8, el]:u64
0001058d: #29 := R31 + 0x40
00010592: R25 := mem[#29, el]:u64
00010597: R26 := mem[#29 + 8, el]:u64
0001059e: R29 := mem[R31, el]:u64
000105a3: R30 := mem[R31 + 8, el]:u64
000105a7: R31 := R31 + 0x60
000105ac: call R30 with noreturn

00034b3e: sub write(write_arg1, write_arg2, write_arg3, write_result)
00034cc0: write_arg1 :: in u32 = low:32[R0]
00034cc1: write_arg2 :: in out u64 = R1
00034cc2: write_arg3 :: in u64 = R2
00034cc3: write_result :: out u64 = R0

00010b8e:
0002fef0: R16 := 0x430000
0002fef7: R17 := mem[R16 + 0x188, el]:u64
0002fefd: R16 := R16 + 0x188
0002ff02: call R17 with noreturn

00034b3f: sub write_wrapper(write_wrapper_result)
00034cc4: write_wrapper_result :: out u32 = low:32[R0]

00010acf:
00010ad3: #58 := R31 - 0x40
00010ad9: mem := mem with [#58, el]:u64 <- R29
00010adf: mem := mem with [#58 + 8, el]:u64 <- R30
00010ae3: R31 := #58
00010ae8: VF := 0
00010aeb: CF := 1
00010aef: ZF := R1 = 0
00010af3: NF := 63:63[R1]
00010af9: #59 := ZF <> 1
00010afc: VF := 0
00010b00: CF := #59
00010b05: ZF := R2 = 0 | ~#59
00010b0a: NF := #59 & 63:63[R2]
00010b10: R29 := R31
00010b16: #60 := R31 + 0x10
00010b1c: mem := mem with [#60, el]:u64 <- R19
00010b22: mem := mem with [#60 + 8, el]:u64 <- R20
00010b27: R19 := 0
00010b2d: when ZF <> 1 goto %00010b2b
00034b40: goto %00010bff

00010b2b:
00010b34: #61 := R31 + 0x20
00010b3a: mem := mem with [#61, el]:u64 <- R21
00010b40: mem := mem with [#61 + 8, el]:u64 <- R22
00010b46: R21 := R2
00010b4b: R22 := 0
00010b51: #62 := R31 + 0x30
00010b57: mem := mem with [#62, el]:u64 <- R23
00010b5d: mem := mem with [#62 + 8, el]:u64 <- R24
00010b63: R23 := R1
00010b69: R24 := pad:64[31:0[R0]]
00010b6e: R20 := 0
00034b41: goto %00010b70

00010b70:
00010b75: R2 := R21 + ~R20 + 1
00010b7c: R1 := R23 + R20
00010b82: R0 := pad:64[31:0[R24]]
00010b88: R22 := R22 + 1
00010b8d: R30 := 0x40F9DC
00010b90: call @write with return %00010b92

00010b92:
00010b96: R19 := R0
00010b9c: when 63:63[R0] goto %00010b9a
00034b42: goto %000167d6

00010b9a:
00010ba2: R30 := 0x40FA30
00010ba4: call @__errno_location with return %00010ba6

00010ba6:
00010bab: R20 := pad:64[mem[R0, el]:u32]
00010bb1: R0 := pad:64[31:0[R20]]
00010bb6: R30 := 0x40FA3C
00010bb8: call @strerror with return %00010bba

00010bba:
00010bbe: R2 := pad:64[31:0[R20]]
00010bc4: R3 := R0
00010bc9: R1 := 0x416000
00010bce: R0 := 3
00010bd4: R1 := R1 + 0x1F0
00010bd9: R30 := 0x40FA54
00010bdc: call @syslog with return %00010bde

00010bde:
00010be2: #63 := R31 + 0x20
00010be7: R21 := mem[#63, el]:u64
00010bec: R22 := mem[#63 + 8, el]:u64
00010bf2: #64 := R31 + 0x30
00010bf7: R23 := mem[#64, el]:u64
00010bfc: R24 := mem[#64 + 8, el]:u64
00010c01: goto %00010bff

000167d6:
000167db: R20 := R20 + R0
000167e1: #336 := R22 - 0x31
000167e6: VF := extend:128[#336] <> extend:128[R22] - 0x31
000167eb: CF := pad:128[#336] <> pad:128[R22] + 0xFFFFFFFFFFFFFFCF
000167ef: ZF := #336 = 0
000167f3: NF := 63:63[#336]
000167f9: #337 := ~R20
000167fe: #338 := R21 + ~R20
00016803: #339 := ~(CF & ~ZF)
0001680a: VF := #339 & extend:128[#338 + 1] <> extend:128[R21] +
          extend:128[#337] + 1
00016811: CF := #339 & pad:128[#338 + 1] <> pad:128[R21] + pad:128[#337] + 1
00016816: ZF := #339 & #338 + 1 = 0
0001681b: NF := #339 & 63:63[#338 + 1]
00016821: when CF & ~ZF goto %00010b70
00034b43: goto %00016825

00016825:
00016829: #340 := ~R20
0001682e: #341 := R21 + ~R20
00016834: VF := extend:128[#341 + 1] <> extend:128[R21] + extend:128[#340] +
          1
0001683a: CF := pad:128[#341 + 1] <> pad:128[R21] + pad:128[#340] + 1
0001683e: ZF := #341 + 1 = 0
00016842: NF := 63:63[#341 + 1]
00016849: when CF & ~ZF goto %00016847
00034b44: goto %00016875

00016847:
00016850: R3 := R21
00016856: R2 := R20
0001685b: R1 := 0x416000
00016860: R4 := 0x32
00016866: R1 := R1 + 0x218
0001686b: R0 := 3
00016870: R30 := 0x40FA28
00016872: call @syslog with return %00016874

00016874:
00016877: goto %00016875

00016875:
0001687c: #342 := R31 + 0x20
00016881: R21 := mem[#342, el]:u64
00016886: R22 := mem[#342 + 8, el]:u64
0001688c: R19 := R20
00016892: #343 := R31 + 0x30
00016897: R23 := mem[#343, el]:u64
0001689c: R24 := mem[#343 + 8, el]:u64
000168a0: goto %00010bff

00010bff:
00010c06: R0 := R19
00010c0c: #65 := R31 + 0x10
00010c11: R19 := mem[#65, el]:u64
00010c16: R20 := mem[#65 + 8, el]:u64
00010c1d: R29 := mem[R31, el]:u64
00010c22: R30 := mem[R31 + 8, el]:u64
00010c26: R31 := R31 + 0x40
00010c2b: call R30 with noreturn

00034b45: sub www_authenticate(www_authenticate_result)
00034cc5: www_authenticate_result :: out u32 = low:32[R0]

0001adba:
0001adbe: #649 := R31 - 0x80
0001adc4: mem := mem with [#649, el]:u64 <- R29
0001adca: mem := mem with [#649 + 8, el]:u64 <- R30
0001adce: R31 := #649
0001add4: R29 := R31
0001adda: #650 := R31 + 0x10
0001ade0: mem := mem with [#650, el]:u64 <- R19
0001ade6: mem := mem with [#650 + 8, el]:u64 <- R20
0001adec: R20 := pad:64[31:0[R0]]
0001adf1: R0 := 0x1000
0001adf7: #651 := R31 + 0x20
0001adfd: mem := mem with [#651, el]:u64 <- R21
0001ae03: mem := mem with [#651 + 8, el]:u64 <- R22
0001ae09: R22 := R4
0001ae0f: R21 := R2
0001ae15: #652 := R31 + 0x30
0001ae1b: mem := mem with [#652, el]:u64 <- R23
0001ae21: mem := mem with [#652 + 8, el]:u64 <- R24
0001ae26: R24 := 0x412000
0001ae2c: R24 := R24 + 0xA68
0001ae32: #653 := R31 + 0x40
0001ae38: mem := mem with [#653, el]:u64 <- R25
0001ae3e: mem := mem with [#653 + 8, el]:u64 <- R26
0001ae44: R26 := R3
0001ae4a: R25 := pad:64[31:0[R5]]
0001ae50: #654 := R31 + 0x50
0001ae56: mem := mem with [#654, el]:u64 <- R27
0001ae5c: mem := mem with [#654 + 8, el]:u64 <- R28
0001ae64: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R1]
0001ae69: R30 := 0x405814
0001ae6b: call @zmalloc with return %0001ae6d

0001ae6d:
0001ae70: R2 := 0x1000
0001ae76: R1 := R24
0001ae7c: R19 := R0
0001ae81: R30 := 0x405824
0001ae83: call @strlcpy with return %0001ae85

0001ae85:
0001ae89: R0 := R31 + 0x70
0001ae8f: R1 := R22
0001ae94: R30 := 0x405830
0001ae97: call @ntlm_request with return %0002a54f

0002a54f:
0002a553: when 31:0[R0] <> 0 goto %0002a551
00034b46: goto %0002a584

0002a551:
0002a55b: R1 := mem[R31 + 0x70, el]:u64
0002a561: R2 := extend:64[31:0[R0]]
0002a566: R3 := 0xFFB
0002a56c: R0 := R19 + 5
0002a571: R30 := 0x40599C
0002a573: call @to_base64 with return %0002a575

0002a575:
0002a57a: R0 := mem[R31 + 0x70, el]:u64
0002a57f: R30 := 0x4059A4
0002a581: call @free with return %0002a583

0002a583:
0002a586: goto %0002a584

0002a584:
0002a58b: R0 := R21
0002a590: R30 := 0x40583C
0002a592: call @dup_rr_data with return %0002a594

0002a594:
0002a598: R23 := R0
0002a59d: R3 := 1
0002a5a4: R0 := mem[R0 + 8, el]:u64
0002a5a9: R2 := 0x412000
0002a5ae: R1 := 0x412000
0002a5b4: R2 := R2 + 0xA70
0002a5ba: R1 := R1 + 0xA80
0002a5c2: mem := mem with [R31 + 0x78, el]:u64 <- R23
0002a5c7: R30 := 0x405860
0002a5c9: call @hlist_mod with return %0002a5cb

0002a5cb:
0002a5d1: mem := mem with [R23 + 8, el]:u64 <- R0
0002a5d8: R28 := mem[R31 + 0x78, el]:u64
0002a5dd: R23 := 0x412000
0002a5e3: R23 := R23 + 0xA90
0002a5e9: R2 := R19
0002a5ef: R1 := R23
0002a5f4: R3 := 1
0002a5fb: R0 := mem[R28 + 8, el]:u64
0002a600: R30 := 0x405884
0002a602: call @hlist_mod with return %0002a604

0002a604:
0002a60a: mem := mem with [R28 + 8, el]:u64 <- R0
0002a611: R27 := mem[R31 + 0x78, el]:u64
0002a616: R3 := 1
0002a61b: R2 := 0x412000
0002a620: R1 := 0x412000
0002a626: R2 := R2 + 0xAA0
0002a62c: R1 := R1 + 0xAA8
0002a633: R0 := mem[R27 + 8, el]:u64
0002a638: R30 := 0x4058A8
0002a63a: call @hlist_mod with return %0002a63c

0002a63c:
0002a642: mem := mem with [R27 + 8, el]:u64 <- R0
0002a649: R28 := mem[R31 + 0x78, el]:u64
0002a64e: R1 := 0x412000
0002a654: R1 := R1 + 0xAB8
0002a65b: R0 := mem[R28 + 8, el]:u64
0002a660: R30 := 0x4058C0
0002a662: call @hlist_del with return %0002a664

0002a664:
0002a66a: mem := mem with [R28 + 8, el]:u64 <- R0
0002a670: when 31:0[R25] = 0 goto %0002a66e
00034b47: goto %0002ab64

0002a66e:
0002a677: R1 := R26
0002a67d: R0 := pad:64[31:0[R20]]
0002a682: R30 := 0x40595C
0002a684: call @http_body_drop with return %0002a686

0002a686:
0002a68a: when 31:0[R0] = 0 goto %0002a688
00034b48: goto %0002a717

0002a717:
0002a71a: R28 := 0x430000
0002a721: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002a727: when 31:0[R0] = 0 goto %0002a725
00034b49: goto %0002ab39

0002ab64:
0002ab67: R28 := 0x430000
0002ab6e: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002ab73: when 31:0[R0] <> 0 goto %0002ab39
00034b4a: goto %0002a725

0002ab39:
0002ab3c: R0 := 0x412000
0002ab42: R0 := R0 + 0xAD0
0002ab47: R30 := 0x405978
0002ab49: call @puts with return %0002ab4b

0002ab4b:
0002ab50: R0 := mem[R31 + 0x78, el]:u64
0002ab57: R0 := mem[R0 + 8, el]:u64
0002ab5c: R30 := 0x405984
0002ab5e: call @hlist_dump with return %0002ab60

0002ab60:
0002ab62: goto %0002a725

0002a725:
0002a72f: R1 := mem[R31 + 0x78, el]:u64
0002a735: R0 := pad:64[31:0[R20]]
0002a73a: R30 := 0x4058E0
0002a73c: call @headers_send with return %0002a73e

0002a73e:
0002a741: when 31:0[R0] = 0 goto %0002a688
00034b4b: goto %0002a745

0002a745:
0002a74a: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002a750: when 31:0[R0] <> 0 goto %0002a74e
00034b4c: goto %0002ab10

0002a74e:
0002a756: R0 := 0x412000
0002a75c: R0 := R0 + 0xAF0
0002a761: R30 := 0x4059B4
0002a763: call @puts with return %0002a765

0002a765:
0002a76a: R0 := mem[R31 + 0x78, el]:u64
0002a76f: R30 := 0x4059BC
0002a771: call @reset_rr_data with return %0002a773

0002a773:
0002a778: R1 := mem[R31 + 0x78, el]:u64
0002a77e: R0 := pad:64[31:0[R20]]
0002a783: R30 := 0x4059C8
0002a785: call @headers_recv with return %0002a787

0002a787:
0002a78b: when 31:0[R0] <> 0 goto %0002a789
00034b4d: goto %0002ab0c

0002ab0c:
0002ab0e: goto %0002a688

0002ab10:
0002ab15: R0 := mem[R31 + 0x78, el]:u64
0002ab1a: R30 := 0x4058F4
0002ab1c: call @reset_rr_data with return %0002ab1e

0002ab1e:
0002ab23: R1 := mem[R31 + 0x78, el]:u64
0002ab29: R0 := pad:64[31:0[R20]]
0002ab2e: R30 := 0x405900
0002ab30: call @headers_recv with return %0002ab32

0002ab32:
0002ab35: when 31:0[R0] = 0 goto %0002a688
00034b4e: goto %0002a789

0002a789:
0002a793: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002a799: when 31:0[R0] <> 0 goto %0002a797
00034b4f: goto %0002a7b2

0002a797:
0002a7a1: R0 := mem[R31 + 0x78, el]:u64
0002a7a8: R0 := mem[R0 + 8, el]:u64
0002a7ad: R30 := 0x405A30
0002a7af: call @hlist_dump with return %0002a7b1

0002a7b1:
0002a7b4: goto %0002a7b2

0002a7b2:
0002a7ba: R1 := mem[R31 + 0x78, el]:u64
0002a7c1: R0 := pad:64[mem[R1 + 0x10, el]:u32]
0002a7c7: #1372 := 31:0[R0] - 0x191
0002a7cc: VF := extend:64[#1372] <> extend:64[31:0[R0]] - 0x191
0002a7d1: CF := pad:64[#1372] <> pad:64[31:0[R0]] + 0xFFFFFE6F
0002a7d5: ZF := #1372 = 0
0002a7d9: NF := 31:31[#1372]
0002a7df: when ZF goto %0002a7dd
00034b50: goto %0002a688

0002a7dd:
0002a7e6: R0 := pad:64[31:0[R20]]
0002a7eb: R30 := 0x4059D8
0002a7ed: call @http_body_drop with return %0002a7ef

0002a7ef:
0002a7f2: when 31:0[R0] = 0 goto %0002a688
00034b51: goto %0002a7f6

0002a7f6:
0002a7fb: R0 := mem[R31 + 0x78, el]:u64
0002a800: R1 := 0x412000
0002a806: R1 := R1 + 0xB10
0002a80d: R0 := mem[R0 + 8, el]:u64
0002a812: R30 := 0x4059F0
0002a814: call @hlist_get with return %0002a816

0002a816:
0002a81c: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a822: when R0 = 0 goto %0002a820
00034b52: goto %0002a853

0002a853:
0002a856: R30 := 0x4059FC
0002a858: call @strlen with return %0002a85a

0002a85a:
0002a85e: #1373 := R0 - 0xE
0002a863: VF := extend:128[#1373] <> extend:128[R0] - 0xE
0002a868: CF := pad:128[#1373] <> pad:128[R0] + 0xFFFFFFFFFFFFFFF2
0002a86c: ZF := #1373 = 0
0002a870: NF := 63:63[#1373]
0002a877: when CF & ~ZF goto %0002a875
00034b53: goto %0002a820

0002a875:
0002a87e: R0 := R0 + 6
0002a883: R30 := 0x405A3C
0002a885: call @zmalloc with return %0002a887

0002a887:
0002a88c: R1 := mem[R31 + 0x70, el]:u64
0002a892: R27 := R0
0002a898: R1 := R1 + 5
0002a89d: R30 := 0x405A4C
0002a89f: call @from_base64 with return %0002a8a1

0002a8a1:
0002a8a5: R2 := pad:64[31:0[R0]]
0002a8ab: #1374 := 31:0[R0] - 0x28
0002a8b0: VF := extend:64[#1374] <> extend:64[31:0[R0]] - 0x28
0002a8b5: CF := pad:64[#1374] <> pad:64[31:0[R0]] + 0xFFFFFFD8
0002a8b9: ZF := #1374 = 0
0002a8bd: NF := 31:31[#1374]
0002a8c5: when ~(NF = VF & ~ZF) goto %0002a8c3
00034b54: goto %0002aa40

0002a8c3:
0002a8cb: R0 := 3
0002a8d0: R1 := 0x412000
0002a8d6: R1 := R1 + 0xB80
0002a8db: R30 := 0x405B30
0002a8dd: call @syslog with return %0002a8df

0002a8df:
0002a8e2: R0 := 0x412000
0002a8e8: R0 := R0 + 0xB58
0002a8f0: mem := mem with [R26 + 0x60, el]:u64 <- R0
0002a8f6: R0 := R27
0002a8fb: R30 := 0x405B44
0002a8fd: call @free with return %0002a8ff

0002a8ff:
0002a901: goto %0002a688

0002aa40:
0002aa44: R3 := R22
0002aa4a: R0 := R31 + 0x70
0002aa50: R1 := R27
0002aa57: mem := mem with [R31 + 0x70, el]:u64 <- 0
0002aa5c: R30 := 0x405A6C
0002aa5e: call @ntlm_response with return %0002aa60

0002aa60:
0002aa64: R22 := pad:64[31:0[R0]]
0002aa69: VF := 0
0002aa6c: CF := 1
0002aa70: ZF := 31:0[R0] = 0
0002aa74: NF := 31:31[R0]
0002aa7b: when ~(NF = VF & ~ZF) goto %0002a903
00034b55: goto %0002aa7f

0002a903:
0002a906: R0 := 3
0002a90b: R1 := 0x412000
0002a911: R1 := R1 + 0xB28
0002a916: R30 := 0x405B58
0002a918: call @syslog with return %0002a91a

0002a91a:
0002a91d: R0 := 0x412000
0002a923: R0 := R0 + 0xB58
0002a92b: mem := mem with [R26 + 0x60, el]:u64 <- R0
0002a931: R0 := R27
0002a936: R30 := 0x405B6C
0002a938: call @free with return %0002a93a

0002a93a:
0002a93f: R0 := mem[R31 + 0x70, el]:u64
0002a944: R30 := 0x405B74
0002a946: call @free with return %0002a948

0002a948:
0002a94a: goto %0002a688

0002aa7f:
0002aa83: R1 := R24
0002aa88: R2 := 0x1000
0002aa8e: R0 := R19
0002aa93: R30 := 0x405A88
0002aa95: call @strlcpy with return %0002aa97

0002aa97:
0002aa9c: R1 := mem[R31 + 0x70, el]:u64
0002aaa2: R2 := extend:64[31:0[R22]]
0002aaa8: R0 := R19 + 5
0002aaad: R3 := 0xFFB
0002aab2: R30 := 0x405A9C
0002aab4: call @to_base64 with return %0002aab6

0002aab6:
0002aabb: R0 := mem[R21 + 8, el]:u64
0002aac1: R2 := R19
0002aac6: R3 := 1
0002aacc: R1 := R23
0002aad1: R30 := 0x405AB0
0002aad3: call @hlist_mod with return %0002aad5

0002aad5:
0002aad9: R1 := R0
0002aae0: R0 := mem[R31 + 0x70, el]:u64
0002aae8: mem := mem with [R21 + 8, el]:u64 <- R1
0002aaed: R30 := 0x405AC0
0002aaef: call @free with return %0002aaf1

0002aaf1:
0002aaf5: R0 := R27
0002aafa: R30 := 0x405AC8
0002aafc: call @free with return %0002aafe

0002aafe:
0002ab03: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002ab08: when 31:0[R0] <> 0 goto %0002a94c
00034b56: goto %0002a95f

0002a94c:
0002a94f: R0 := 0x412000
0002a955: R0 := R0 + 0xBF8
0002a95a: R30 := 0x405B84
0002a95c: call @puts with return %0002a95e

0002a95e:
0002a961: goto %0002a95f

0002a95f:
0002a966: R1 := R21
0002a96c: R0 := pad:64[31:0[R20]]
0002a971: R30 := 0x405ADC
0002a973: call @headers_send with return %0002a975

0002a975:
0002a978: when 31:0[R0] = 0 goto %0002a688
00034b57: goto %0002a97c

0002a97c:
0002a981: R0 := mem[R31 + 0x78, el]:u64
0002a986: R30 := 0x405AE8
0002a988: call @reset_rr_data with return %0002a98a

0002a98a:
0002a98e: when 31:0[R25] <> 0 goto %0002a98c
00034b58: goto %0002a9b4

0002a98c:
0002a996: R3 := mem[R31 + 0x78, el]:u64
0002a99c: R2 := R21
0002a9a3: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
0002a9a9: R0 := pad:64[31:0[R20]]
0002a9ae: R30 := 0x405B9C
0002a9b0: call @http_body_send with return %0002a9b2

0002a9b2:
0002a9b6: when 31:0[R0] <> 0 goto %0002a9b4
00034b59: goto %0002aa3c

0002aa3c:
0002aa3e: goto %0002a688

0002a9b4:
0002a9be: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002a9c4: when 31:0[R0] <> 0 goto %0002a9c2
00034b5a: goto %0002a9da

0002a9c2:
0002a9ca: R0 := 0x412000
0002a9d0: R0 := R0 + 0xC10
0002a9d5: R30 := 0x405BB0
0002a9d7: call @puts with return %0002a9d9

0002a9d9:
0002a9dc: goto %0002a9da

0002a9da:
0002a9e2: R1 := mem[R31 + 0x78, el]:u64
0002a9e8: R0 := pad:64[31:0[R20]]
0002a9ed: R30 := 0x405B00
0002a9ef: call @headers_recv with return %0002a9f1

0002a9f1:
0002a9f4: when 31:0[R0] = 0 goto %0002a688
00034b5b: goto %0002a9f8

0002a9f8:
0002a9fd: R0 := pad:64[mem[R28 + 0x374, el]:u32]
0002aa03: when 31:0[R0] <> 0 goto %0002aa01
00034b5c: goto %0002aa1c

0002aa01:
0002aa0b: R0 := mem[R31 + 0x78, el]:u64
0002aa12: R0 := mem[R0 + 8, el]:u64
0002aa17: R30 := 0x405BC0
0002aa19: call @hlist_dump with return %0002aa1b

0002aa1b:
0002aa1e: goto %0002aa1c

0002aa1c:
0002aa24: R1 := mem[R31 + 0x78, el]:u64
0002aa2a: R0 := R26
0002aa2f: R20 := 1
0002aa34: R30 := 0x405B1C
0002aa36: call @copy_rr_data with return %0002aa38

0002aa38:
0002aa3a: goto %0002a692

0002a820:
0002a828: R0 := 4
0002a82d: R1 := 0x412000
0002a833: R1 := R1 + 0xBA8
0002a838: R30 := 0x405A14
0002a83a: call @syslog with return %0002a83c

0002a83c:
0002a83f: R0 := 0x412000
0002a845: R0 := R0 + 0xBD0
0002a84d: mem := mem with [R26 + 0x60, el]:u64 <- R0
0002a851: goto %0002a688

0002a688:
0002a690: R20 := 0
00034b5d: goto %0002a692

0002a692:
0002a696: R0 := R31 + 0x78
0002a69b: R30 := 0x405928
0002a69d: call @free_rr_data with return %0002a69f

0002a69f:
0002a6a3: R0 := R19
0002a6a8: R30 := 0x405930
0002a6aa: call @free with return %0002a6ac

0002a6ac:
0002a6b0: #1367 := R31 + 0x20
0002a6b5: R21 := mem[#1367, el]:u64
0002a6ba: R22 := mem[#1367 + 8, el]:u64
0002a6c0: R0 := pad:64[31:0[R20]]
0002a6c6: #1368 := R31 + 0x10
0002a6cb: R19 := mem[#1368, el]:u64
0002a6d0: R20 := mem[#1368 + 8, el]:u64
0002a6d6: #1369 := R31 + 0x30
0002a6db: R23 := mem[#1369, el]:u64
0002a6e0: R24 := mem[#1369 + 8, el]:u64
0002a6e6: #1370 := R31 + 0x40
0002a6eb: R25 := mem[#1370, el]:u64
0002a6f0: R26 := mem[#1370 + 8, el]:u64
0002a6f6: #1371 := R31 + 0x50
0002a6fb: R27 := mem[#1371, el]:u64
0002a700: R28 := mem[#1371 + 8, el]:u64
0002a707: R29 := mem[R31, el]:u64
0002a70c: R30 := mem[R31 + 8, el]:u64
0002a710: R31 := R31 + 0x80
0002a715: call R30 with noreturn

00034b5e: sub zmalloc(zmalloc_result)
00034cc6: zmalloc_result :: out u32 = low:32[R0]

0001027e:
00010285: R1 := R0
0001028a: R0 := 1
0001028f: call @calloc with noreturn
